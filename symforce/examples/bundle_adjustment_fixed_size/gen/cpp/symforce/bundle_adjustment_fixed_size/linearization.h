// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     cpp_templates/function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>
#include <Eigen/Sparse>

#include <sym/pose3.h>

namespace bundle_adjustment_fixed_size {

/**
 * This function was autogenerated. Do not modify by hand.
 *
 * Computes the linearization of the residual around the given state,
 * and returns the relevant information about the resulting linear system.
 *
 * Input args: The state to linearize around
 *
 * Output args:
 *     residual (Eigen::Matrix*): The residual vector
 *     jacobian: (72x26) jacobian of residual wrt args views_1_pose (6), landmarks_0_ (1),
 *               landmarks_1_ (1), landmarks_2_ (1), landmarks_3_ (1), landmarks_4_ (1),
 *               landmarks_5_ (1), landmarks_6_ (1), landmarks_7_ (1), landmarks_8_ (1),
 *               landmarks_9_ (1), landmarks_10_ (1), landmarks_11_ (1), landmarks_12_ (1),
 *               landmarks_13_ (1), landmarks_14_ (1), landmarks_15_ (1), landmarks_16_ (1),
 *               landmarks_17_ (1), landmarks_18_ (1), landmarks_19_ (1)
 *     hessian: (26x26) Gauss-Newton hessian for args views_1_pose (6), landmarks_0_ (1),
 *              landmarks_1_ (1), landmarks_2_ (1), landmarks_3_ (1), landmarks_4_ (1), landmarks_5_
 *              (1), landmarks_6_ (1), landmarks_7_ (1), landmarks_8_ (1), landmarks_9_ (1),
 *              landmarks_10_ (1), landmarks_11_ (1), landmarks_12_ (1), landmarks_13_ (1),
 *              landmarks_14_ (1), landmarks_15_ (1), landmarks_16_ (1), landmarks_17_ (1),
 *              landmarks_18_ (1), landmarks_19_ (1)
 *     rhs: (26x1) Gauss-Newton rhs for args views_1_pose (6), landmarks_0_ (1), landmarks_1_ (1),
 *          landmarks_2_ (1), landmarks_3_ (1), landmarks_4_ (1), landmarks_5_ (1), landmarks_6_
 *          (1), landmarks_7_ (1), landmarks_8_ (1), landmarks_9_ (1), landmarks_10_ (1),
 *          landmarks_11_ (1), landmarks_12_ (1), landmarks_13_ (1), landmarks_14_ (1),
 *          landmarks_15_ (1), landmarks_16_ (1), landmarks_17_ (1), landmarks_18_ (1),
 *          landmarks_19_ (1)
 */
template <typename Scalar>
void Linearization(
    const Eigen::Matrix<Scalar, 4, 1>& views_0_calibration, const sym::Pose3<Scalar>& views_0_pose,
    const Eigen::Matrix<Scalar, 4, 1>& views_1_calibration, const sym::Pose3<Scalar>& views_1_pose,
    const sym::Pose3<Scalar>& priors_0_0_target_T_src,
    const Eigen::Matrix<Scalar, 6, 6>& priors_0_0_sqrt_info,
    const sym::Pose3<Scalar>& priors_0_1_target_T_src,
    const Eigen::Matrix<Scalar, 6, 6>& priors_0_1_sqrt_info,
    const sym::Pose3<Scalar>& priors_1_0_target_T_src,
    const Eigen::Matrix<Scalar, 6, 6>& priors_1_0_sqrt_info,
    const sym::Pose3<Scalar>& priors_1_1_target_T_src,
    const Eigen::Matrix<Scalar, 6, 6>& priors_1_1_sqrt_info,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_0_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_0_target_coords, const Scalar matches_0_0_weight,
    const Scalar matches_0_0_inverse_range_prior,
    const Scalar matches_0_0_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_1_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_1_target_coords, const Scalar matches_0_1_weight,
    const Scalar matches_0_1_inverse_range_prior,
    const Scalar matches_0_1_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_2_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_2_target_coords, const Scalar matches_0_2_weight,
    const Scalar matches_0_2_inverse_range_prior,
    const Scalar matches_0_2_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_3_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_3_target_coords, const Scalar matches_0_3_weight,
    const Scalar matches_0_3_inverse_range_prior,
    const Scalar matches_0_3_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_4_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_4_target_coords, const Scalar matches_0_4_weight,
    const Scalar matches_0_4_inverse_range_prior,
    const Scalar matches_0_4_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_5_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_5_target_coords, const Scalar matches_0_5_weight,
    const Scalar matches_0_5_inverse_range_prior,
    const Scalar matches_0_5_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_6_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_6_target_coords, const Scalar matches_0_6_weight,
    const Scalar matches_0_6_inverse_range_prior,
    const Scalar matches_0_6_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_7_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_7_target_coords, const Scalar matches_0_7_weight,
    const Scalar matches_0_7_inverse_range_prior,
    const Scalar matches_0_7_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_8_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_8_target_coords, const Scalar matches_0_8_weight,
    const Scalar matches_0_8_inverse_range_prior,
    const Scalar matches_0_8_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_9_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_9_target_coords, const Scalar matches_0_9_weight,
    const Scalar matches_0_9_inverse_range_prior,
    const Scalar matches_0_9_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_10_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_10_target_coords, const Scalar matches_0_10_weight,
    const Scalar matches_0_10_inverse_range_prior,
    const Scalar matches_0_10_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_11_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_11_target_coords, const Scalar matches_0_11_weight,
    const Scalar matches_0_11_inverse_range_prior,
    const Scalar matches_0_11_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_12_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_12_target_coords, const Scalar matches_0_12_weight,
    const Scalar matches_0_12_inverse_range_prior,
    const Scalar matches_0_12_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_13_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_13_target_coords, const Scalar matches_0_13_weight,
    const Scalar matches_0_13_inverse_range_prior,
    const Scalar matches_0_13_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_14_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_14_target_coords, const Scalar matches_0_14_weight,
    const Scalar matches_0_14_inverse_range_prior,
    const Scalar matches_0_14_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_15_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_15_target_coords, const Scalar matches_0_15_weight,
    const Scalar matches_0_15_inverse_range_prior,
    const Scalar matches_0_15_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_16_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_16_target_coords, const Scalar matches_0_16_weight,
    const Scalar matches_0_16_inverse_range_prior,
    const Scalar matches_0_16_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_17_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_17_target_coords, const Scalar matches_0_17_weight,
    const Scalar matches_0_17_inverse_range_prior,
    const Scalar matches_0_17_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_18_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_18_target_coords, const Scalar matches_0_18_weight,
    const Scalar matches_0_18_inverse_range_prior,
    const Scalar matches_0_18_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_19_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_19_target_coords, const Scalar matches_0_19_weight,
    const Scalar matches_0_19_inverse_range_prior,
    const Scalar matches_0_19_inverse_range_prior_sigma, const Scalar landmarks_0_,
    const Scalar landmarks_1_, const Scalar landmarks_2_, const Scalar landmarks_3_,
    const Scalar landmarks_4_, const Scalar landmarks_5_, const Scalar landmarks_6_,
    const Scalar landmarks_7_, const Scalar landmarks_8_, const Scalar landmarks_9_,
    const Scalar landmarks_10_, const Scalar landmarks_11_, const Scalar landmarks_12_,
    const Scalar landmarks_13_, const Scalar landmarks_14_, const Scalar landmarks_15_,
    const Scalar landmarks_16_, const Scalar landmarks_17_, const Scalar landmarks_18_,
    const Scalar landmarks_19_, const Scalar costs_reprojection_error_gnc_scale,
    const Scalar costs_reprojection_error_gnc_mu, const Scalar epsilon,
    Eigen::Matrix<Scalar, 72, 1>* const residual = nullptr,
    Eigen::SparseMatrix<Scalar>* const jacobian = nullptr,
    Eigen::SparseMatrix<Scalar>* const hessian = nullptr,
    Eigen::Matrix<Scalar, 26, 1>* const rhs = nullptr) {
  // Total ops: 11260

  // Input arrays
  const Eigen::Matrix<Scalar, 7, 1>& _views_0_pose = views_0_pose.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _views_1_pose = views_1_pose.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _priors_0_0_target_T_src = priors_0_0_target_T_src.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _priors_0_1_target_T_src = priors_0_1_target_T_src.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _priors_1_0_target_T_src = priors_1_0_target_T_src.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _priors_1_1_target_T_src = priors_1_1_target_T_src.Data();

  // Intermediate terms (2302)
  const Scalar _tmp0 = 2 * _views_0_pose[3];
  const Scalar _tmp1 = _tmp0 * _views_0_pose[2];
  const Scalar _tmp2 = 2 * _views_0_pose[0];
  const Scalar _tmp3 = _tmp2 * _views_0_pose[1];
  const Scalar _tmp4 = -_tmp1 + _tmp3;
  const Scalar _tmp5 = -2 * std::pow(_views_0_pose[0], Scalar(2));
  const Scalar _tmp6 = 1 - 2 * std::pow(_views_0_pose[2], Scalar(2));
  const Scalar _tmp7 = _tmp5 + _tmp6;
  const Scalar _tmp8 = 2 * _views_0_pose[1] * _views_0_pose[2];
  const Scalar _tmp9 = _tmp2 * _views_0_pose[3];
  const Scalar _tmp10 = _tmp8 + _tmp9;
  const Scalar _tmp11 = -_priors_0_1_target_T_src[5] - _tmp10 * _views_0_pose[6] +
                        _tmp10 * _views_1_pose[6] - _tmp4 * _views_0_pose[4] +
                        _tmp4 * _views_1_pose[4] - _tmp7 * _views_0_pose[5] +
                        _tmp7 * _views_1_pose[5];
  const Scalar _tmp12 = _views_0_pose[0] * _views_1_pose[0];
  const Scalar _tmp13 = _views_0_pose[2] * _views_1_pose[2];
  const Scalar _tmp14 = _views_0_pose[1] * _views_1_pose[1];
  const Scalar _tmp15 = _views_0_pose[3] * _views_1_pose[3];
  const Scalar _tmp16 = _tmp12 + _tmp13 + _tmp14 + _tmp15;
  const Scalar _tmp17 = _views_0_pose[0] * _views_1_pose[3];
  const Scalar _tmp18 = _views_0_pose[3] * _views_1_pose[0];
  const Scalar _tmp19 = _views_0_pose[1] * _views_1_pose[2];
  const Scalar _tmp20 = _views_0_pose[2] * _views_1_pose[1];
  const Scalar _tmp21 = -_tmp17 + _tmp18 - _tmp19 + _tmp20;
  const Scalar _tmp22 = _views_0_pose[1] * _views_1_pose[3];
  const Scalar _tmp23 = _views_0_pose[2] * _views_1_pose[0];
  const Scalar _tmp24 = _views_0_pose[0] * _views_1_pose[2];
  const Scalar _tmp25 = _views_0_pose[3] * _views_1_pose[1];
  const Scalar _tmp26 = -_tmp22 - _tmp23 + _tmp24 + _tmp25;
  const Scalar _tmp27 = _views_0_pose[2] * _views_1_pose[3];
  const Scalar _tmp28 = _views_0_pose[1] * _views_1_pose[0];
  const Scalar _tmp29 = _views_0_pose[3] * _views_1_pose[2];
  const Scalar _tmp30 = _views_0_pose[0] * _views_1_pose[1];
  const Scalar _tmp31 = -_tmp27 + _tmp28 + _tmp29 - _tmp30;
  const Scalar _tmp32 = _priors_0_1_target_T_src[0] * _tmp31 -
                        _priors_0_1_target_T_src[1] * _tmp16 -
                        _priors_0_1_target_T_src[2] * _tmp21 + _priors_0_1_target_T_src[3] * _tmp26;
  const Scalar _tmp33 = _priors_0_1_target_T_src[3] * _tmp16;
  const Scalar _tmp34 = _priors_0_1_target_T_src[0] * _tmp21;
  const Scalar _tmp35 = _priors_0_1_target_T_src[1] * _tmp26;
  const Scalar _tmp36 = _priors_0_1_target_T_src[2] * _tmp31;
  const Scalar _tmp37 = -_tmp34 - _tmp35 - _tmp36;
  const Scalar _tmp38 = _tmp33 - _tmp37;
  const Scalar _tmp39 = 2 * std::min<Scalar>(0, (((_tmp38) > 0) - ((_tmp38) < 0))) + 1;
  const Scalar _tmp40 = 2 * _tmp39;
  const Scalar _tmp41 = -epsilon;
  const Scalar _tmp42 = _tmp41 + 1;
  const Scalar _tmp43 = std::min<Scalar>(_tmp42, std::fabs(_tmp38));
  const Scalar _tmp44 = std::acos(_tmp43) / std::sqrt(1 - std::pow(_tmp43, Scalar(2)));
  const Scalar _tmp45 = _tmp40 * _tmp44;
  const Scalar _tmp46 = _tmp32 * _tmp45;
  const Scalar _tmp47 = -2 * std::pow(_views_0_pose[1], Scalar(2));
  const Scalar _tmp48 = _tmp47 + _tmp5 + 1;
  const Scalar _tmp49 = _tmp2 * _views_0_pose[2];
  const Scalar _tmp50 = _tmp0 * _views_0_pose[1];
  const Scalar _tmp51 = _tmp49 + _tmp50;
  const Scalar _tmp52 = _tmp8 - _tmp9;
  const Scalar _tmp53 = -_priors_0_1_target_T_src[6] - _tmp48 * _views_0_pose[6] +
                        _tmp48 * _views_1_pose[6] - _tmp51 * _views_0_pose[4] +
                        _tmp51 * _views_1_pose[4] - _tmp52 * _views_0_pose[5] +
                        _tmp52 * _views_1_pose[5];
  const Scalar _tmp54 = -_priors_0_1_target_T_src[0] * _tmp16 -
                        _priors_0_1_target_T_src[1] * _tmp31 +
                        _priors_0_1_target_T_src[2] * _tmp26 + _priors_0_1_target_T_src[3] * _tmp21;
  const Scalar _tmp55 = _tmp45 * _tmp54;
  const Scalar _tmp56 = -_priors_0_1_target_T_src[0] * _tmp26 +
                        _priors_0_1_target_T_src[1] * _tmp21 -
                        _priors_0_1_target_T_src[2] * _tmp16 + _priors_0_1_target_T_src[3] * _tmp31;
  const Scalar _tmp57 = _tmp45 * _tmp56;
  const Scalar _tmp58 = _tmp1 + _tmp3;
  const Scalar _tmp59 = _tmp47 + _tmp6;
  const Scalar _tmp60 = _tmp49 - _tmp50;
  const Scalar _tmp61 = -_priors_0_1_target_T_src[4] - _tmp58 * _views_0_pose[5] +
                        _tmp58 * _views_1_pose[5] - _tmp59 * _views_0_pose[4] +
                        _tmp59 * _views_1_pose[4] - _tmp60 * _views_0_pose[6] +
                        _tmp60 * _views_1_pose[6];
  const Scalar _tmp62 = _tmp11 * priors_0_1_sqrt_info(0, 4) + _tmp46 * priors_0_1_sqrt_info(0, 1) +
                        _tmp53 * priors_0_1_sqrt_info(0, 5) + _tmp55 * priors_0_1_sqrt_info(0, 0) +
                        _tmp57 * priors_0_1_sqrt_info(0, 2) + _tmp61 * priors_0_1_sqrt_info(0, 3);
  const Scalar _tmp63 = _tmp56 * priors_0_1_sqrt_info(1, 2);
  const Scalar _tmp64 = _tmp11 * priors_0_1_sqrt_info(1, 4) + _tmp45 * _tmp63 +
                        _tmp46 * priors_0_1_sqrt_info(1, 1) + _tmp53 * priors_0_1_sqrt_info(1, 5) +
                        _tmp55 * priors_0_1_sqrt_info(1, 0) + _tmp61 * priors_0_1_sqrt_info(1, 3);
  const Scalar _tmp65 = _tmp40 * priors_0_1_sqrt_info(2, 0);
  const Scalar _tmp66 = _tmp11 * priors_0_1_sqrt_info(2, 4) + _tmp44 * _tmp54 * _tmp65 +
                        _tmp46 * priors_0_1_sqrt_info(2, 1) + _tmp53 * priors_0_1_sqrt_info(2, 5) +
                        _tmp57 * priors_0_1_sqrt_info(2, 2) + _tmp61 * priors_0_1_sqrt_info(2, 3);
  const Scalar _tmp67 = _tmp11 * priors_0_1_sqrt_info(3, 4) + _tmp46 * priors_0_1_sqrt_info(3, 1) +
                        _tmp53 * priors_0_1_sqrt_info(3, 5) + _tmp55 * priors_0_1_sqrt_info(3, 0) +
                        _tmp57 * priors_0_1_sqrt_info(3, 2) + _tmp61 * priors_0_1_sqrt_info(3, 3);
  const Scalar _tmp68 = _tmp11 * priors_0_1_sqrt_info(4, 4) + _tmp46 * priors_0_1_sqrt_info(4, 1) +
                        _tmp53 * priors_0_1_sqrt_info(4, 5) + _tmp55 * priors_0_1_sqrt_info(4, 0) +
                        _tmp57 * priors_0_1_sqrt_info(4, 2) + _tmp61 * priors_0_1_sqrt_info(4, 3);
  const Scalar _tmp69 = _tmp11 * priors_0_1_sqrt_info(5, 4) + _tmp46 * priors_0_1_sqrt_info(5, 1) +
                        _tmp53 * priors_0_1_sqrt_info(5, 5) + _tmp55 * priors_0_1_sqrt_info(5, 0) +
                        _tmp57 * priors_0_1_sqrt_info(5, 2) + _tmp61 * priors_0_1_sqrt_info(5, 3);
  const Scalar _tmp70 = std::pow(_views_1_pose[2], Scalar(2));
  const Scalar _tmp71 = 2 * _tmp70;
  const Scalar _tmp72 = -_tmp71;
  const Scalar _tmp73 = std::pow(_views_1_pose[1], Scalar(2));
  const Scalar _tmp74 = 2 * _tmp73;
  const Scalar _tmp75 = -_tmp74;
  const Scalar _tmp76 = _tmp72 + _tmp75 + 1;
  const Scalar _tmp77 = 2 * _views_1_pose[0];
  const Scalar _tmp78 = _tmp77 * _views_1_pose[2];
  const Scalar _tmp79 = 2 * _views_1_pose[3];
  const Scalar _tmp80 = _tmp79 * _views_1_pose[1];
  const Scalar _tmp81 = -_tmp80;
  const Scalar _tmp82 = _tmp78 + _tmp81;
  const Scalar _tmp83 = _tmp82 * _views_1_pose[6];
  const Scalar _tmp84 = _tmp77 * _views_1_pose[1];
  const Scalar _tmp85 = _tmp79 * _views_1_pose[2];
  const Scalar _tmp86 = _tmp84 + _tmp85;
  const Scalar _tmp87 = _tmp86 * _views_1_pose[5];
  const Scalar _tmp88 = _tmp82 * _views_0_pose[6] + _tmp86 * _views_0_pose[5];
  const Scalar _tmp89 = -_priors_1_0_target_T_src[4] + _tmp76 * _views_0_pose[4] -
                        _tmp76 * _views_1_pose[4] - _tmp83 - _tmp87 + _tmp88;
  const Scalar _tmp90 = std::pow(_views_1_pose[0], Scalar(2));
  const Scalar _tmp91 = 2 * _tmp90;
  const Scalar _tmp92 = 1 - _tmp91;
  const Scalar _tmp93 = _tmp72 + _tmp92;
  const Scalar _tmp94 = _tmp79 * _views_1_pose[0];
  const Scalar _tmp95 = 2 * _views_1_pose[1] * _views_1_pose[2];
  const Scalar _tmp96 = _tmp94 + _tmp95;
  const Scalar _tmp97 = _tmp96 * _views_1_pose[6];
  const Scalar _tmp98 = -_tmp85;
  const Scalar _tmp99 = _tmp84 + _tmp98;
  const Scalar _tmp100 = _tmp99 * _views_1_pose[4];
  const Scalar _tmp101 = _tmp96 * _views_0_pose[6] + _tmp99 * _views_0_pose[4];
  const Scalar _tmp102 = -_priors_1_0_target_T_src[5] - _tmp100 + _tmp101 +
                         _tmp93 * _views_0_pose[5] - _tmp93 * _views_1_pose[5] - _tmp97;
  const Scalar _tmp103 = _tmp75 + _tmp92;
  const Scalar _tmp104 = -_tmp94;
  const Scalar _tmp105 = _tmp104 + _tmp95;
  const Scalar _tmp106 = _tmp105 * _views_1_pose[5];
  const Scalar _tmp107 = _tmp78 + _tmp80;
  const Scalar _tmp108 = _tmp107 * _views_1_pose[4];
  const Scalar _tmp109 = _tmp105 * _views_0_pose[5] + _tmp107 * _views_0_pose[4];
  const Scalar _tmp110 = -_priors_1_0_target_T_src[6] + _tmp103 * _views_0_pose[6] -
                         _tmp103 * _views_1_pose[6] - _tmp106 - _tmp108 + _tmp109;
  const Scalar _tmp111 = _tmp27 - _tmp28 - _tmp29 + _tmp30;
  const Scalar _tmp112 = _tmp22 + _tmp23 - _tmp24 - _tmp25;
  const Scalar _tmp113 = _tmp17 - _tmp18 + _tmp19 - _tmp20;
  const Scalar _tmp114 =
      -_priors_1_0_target_T_src[0] * _tmp112 + _priors_1_0_target_T_src[1] * _tmp113 -
      _priors_1_0_target_T_src[2] * _tmp16 + _priors_1_0_target_T_src[3] * _tmp111;
  const Scalar _tmp115 = _tmp114 * priors_1_0_sqrt_info(0, 2);
  const Scalar _tmp116 = _priors_1_0_target_T_src[3] * _tmp16;
  const Scalar _tmp117 = _priors_1_0_target_T_src[2] * _tmp111;
  const Scalar _tmp118 = _priors_1_0_target_T_src[1] * _tmp112;
  const Scalar _tmp119 = _priors_1_0_target_T_src[0] * _tmp113;
  const Scalar _tmp120 = -_tmp117 - _tmp118 - _tmp119;
  const Scalar _tmp121 = _tmp116 - _tmp120;
  const Scalar _tmp122 = std::min<Scalar>(_tmp42, std::fabs(_tmp121));
  const Scalar _tmp123 = std::acos(_tmp122);
  const Scalar _tmp124 =
      std::pow(Scalar(1 - std::pow(_tmp122, Scalar(2))), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp125 = 2 * std::min<Scalar>(0, (((_tmp121) > 0) - ((_tmp121) < 0))) + 1;
  const Scalar _tmp126 = 2 * _tmp125;
  const Scalar _tmp127 = _tmp123 * _tmp124 * _tmp126;
  const Scalar _tmp128 =
      _priors_1_0_target_T_src[0] * _tmp111 - _priors_1_0_target_T_src[1] * _tmp16 -
      _priors_1_0_target_T_src[2] * _tmp113 + _priors_1_0_target_T_src[3] * _tmp112;
  const Scalar _tmp129 = _tmp127 * _tmp128;
  const Scalar _tmp130 =
      -_priors_1_0_target_T_src[0] * _tmp16 - _priors_1_0_target_T_src[1] * _tmp111 +
      _priors_1_0_target_T_src[2] * _tmp112 + _priors_1_0_target_T_src[3] * _tmp113;
  const Scalar _tmp131 = _tmp127 * _tmp130;
  const Scalar _tmp132 = _tmp102 * priors_1_0_sqrt_info(0, 4) +
                         _tmp110 * priors_1_0_sqrt_info(0, 5) + _tmp115 * _tmp127 +
                         _tmp129 * priors_1_0_sqrt_info(0, 1) +
                         _tmp131 * priors_1_0_sqrt_info(0, 0) + _tmp89 * priors_1_0_sqrt_info(0, 3);
  const Scalar _tmp133 = _tmp114 * _tmp127;
  const Scalar _tmp134 =
      _tmp102 * priors_1_0_sqrt_info(1, 4) + _tmp110 * priors_1_0_sqrt_info(1, 5) +
      _tmp129 * priors_1_0_sqrt_info(1, 1) + _tmp131 * priors_1_0_sqrt_info(1, 0) +
      _tmp133 * priors_1_0_sqrt_info(1, 2) + _tmp89 * priors_1_0_sqrt_info(1, 3);
  const Scalar _tmp135 =
      _tmp102 * priors_1_0_sqrt_info(2, 4) + _tmp110 * priors_1_0_sqrt_info(2, 5) +
      _tmp129 * priors_1_0_sqrt_info(2, 1) + _tmp131 * priors_1_0_sqrt_info(2, 0) +
      _tmp133 * priors_1_0_sqrt_info(2, 2) + _tmp89 * priors_1_0_sqrt_info(2, 3);
  const Scalar _tmp136 =
      _tmp102 * priors_1_0_sqrt_info(3, 4) + _tmp110 * priors_1_0_sqrt_info(3, 5) +
      _tmp129 * priors_1_0_sqrt_info(3, 1) + _tmp131 * priors_1_0_sqrt_info(3, 0) +
      _tmp133 * priors_1_0_sqrt_info(3, 2) + _tmp89 * priors_1_0_sqrt_info(3, 3);
  const Scalar _tmp137 =
      _tmp102 * priors_1_0_sqrt_info(4, 4) + _tmp110 * priors_1_0_sqrt_info(4, 5) +
      _tmp129 * priors_1_0_sqrt_info(4, 1) + _tmp131 * priors_1_0_sqrt_info(4, 0) +
      _tmp133 * priors_1_0_sqrt_info(4, 2) + _tmp89 * priors_1_0_sqrt_info(4, 3);
  const Scalar _tmp138 = _tmp126 * priors_1_0_sqrt_info(5, 2);
  const Scalar _tmp139 =
      _tmp102 * priors_1_0_sqrt_info(5, 4) + _tmp110 * priors_1_0_sqrt_info(5, 5) +
      _tmp114 * _tmp123 * _tmp124 * _tmp138 + _tmp129 * priors_1_0_sqrt_info(5, 1) +
      _tmp131 * priors_1_0_sqrt_info(5, 0) + _tmp89 * priors_1_0_sqrt_info(5, 3);
  const Scalar _tmp140 = -views_0_calibration(2, 0);
  const Scalar _tmp141 = _tmp140 + matches_0_0_source_coords(0, 0);
  const Scalar _tmp142 = std::pow(views_0_calibration(0, 0), Scalar(-2));
  const Scalar _tmp143 = -views_0_calibration(3, 0);
  const Scalar _tmp144 = _tmp143 + matches_0_0_source_coords(1, 0);
  const Scalar _tmp145 = std::pow(views_0_calibration(1, 0), Scalar(-2));
  const Scalar _tmp146 = std::pow(
      Scalar(std::pow(_tmp141, Scalar(2)) * _tmp142 + std::pow(_tmp144, Scalar(2)) * _tmp145 + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp147 = Scalar(1.0) / (views_0_calibration(0, 0));
  const Scalar _tmp148 = _tmp147 * _tmp59;
  const Scalar _tmp149 = _tmp141 * _tmp146;
  const Scalar _tmp150 = Scalar(1.0) / (views_0_calibration(1, 0));
  const Scalar _tmp151 = _tmp150 * _tmp4;
  const Scalar _tmp152 = _tmp144 * _tmp146;
  const Scalar _tmp153 = _views_0_pose[4] - _views_1_pose[4];
  const Scalar _tmp154 =
      _tmp146 * _tmp51 + _tmp148 * _tmp149 + _tmp151 * _tmp152 + _tmp153 * landmarks_0_;
  const Scalar _tmp155 = _tmp150 * _tmp7;
  const Scalar _tmp156 = _tmp147 * _tmp58;
  const Scalar _tmp157 = _views_0_pose[5] - _views_1_pose[5];
  const Scalar _tmp158 =
      _tmp146 * _tmp52 + _tmp149 * _tmp156 + _tmp152 * _tmp155 + _tmp157 * landmarks_0_;
  const Scalar _tmp159 = _tmp147 * _tmp60;
  const Scalar _tmp160 = _tmp10 * _tmp150;
  const Scalar _tmp161 = _views_0_pose[6] - _views_1_pose[6];
  const Scalar _tmp162 =
      _tmp146 * _tmp48 + _tmp149 * _tmp159 + _tmp152 * _tmp160 + _tmp161 * landmarks_0_;
  const Scalar _tmp163 = _tmp158 * _tmp86 + _tmp162 * _tmp82;
  const Scalar _tmp164 = _tmp154 * _tmp76 + _tmp163;
  const Scalar _tmp165 = _tmp105 * _tmp158 + _tmp107 * _tmp154;
  const Scalar _tmp166 = _tmp103 * _tmp162 + _tmp165;
  const Scalar _tmp167 = std::fabs(_tmp166);
  const Scalar _tmp168 = std::max<Scalar>(_tmp167, epsilon);
  const Scalar _tmp169 = Scalar(1.0) / (_tmp168);
  const Scalar _tmp170 = _tmp169 * views_1_calibration(0, 0);
  const Scalar _tmp171 =
      _tmp164 * _tmp170 - matches_0_0_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp172 = _tmp154 * _tmp99 + _tmp162 * _tmp96;
  const Scalar _tmp173 = _tmp158 * _tmp93 + _tmp172;
  const Scalar _tmp174 = _tmp169 * views_1_calibration(1, 0);
  const Scalar _tmp175 =
      _tmp173 * _tmp174 - matches_0_0_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp176 = std::pow(_tmp171, Scalar(2)) + std::pow(_tmp175, Scalar(2)) + epsilon;
  const Scalar _tmp177 = std::pow(_tmp176, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp178 = std::pow(costs_reprojection_error_gnc_scale, Scalar(-2));
  const Scalar _tmp179 = Scalar(1.0) / (-costs_reprojection_error_gnc_mu + epsilon + 1);
  const Scalar _tmp180 = epsilon + std::fabs(_tmp179);
  const Scalar _tmp181 = _tmp178 / _tmp180;
  const Scalar _tmp182 = _tmp176 * _tmp181 + 1;
  const Scalar _tmp183 = 2 - _tmp179;
  const Scalar _tmp184 =
      _tmp183 + epsilon * (2 * std::min<Scalar>(0, (((_tmp183) > 0) - ((_tmp183) < 0))) + 1);
  const Scalar _tmp185 = (Scalar(1) / Scalar(2)) * _tmp184;
  const Scalar _tmp186 = 2 * _tmp180 / _tmp184;
  const Scalar _tmp187 = std::sqrt(_tmp186 * (std::pow(_tmp182, _tmp185) - 1));
  const Scalar _tmp188 = (((_tmp166) > 0) - ((_tmp166) < 0));
  const Scalar _tmp189 = std::sqrt(matches_0_0_weight) * std::sqrt(std::max<Scalar>(0, _tmp188));
  const Scalar _tmp190 = _tmp187 * _tmp189;
  const Scalar _tmp191 = _tmp177 * _tmp190;
  const Scalar _tmp192 = _tmp171 * _tmp191;
  const Scalar _tmp193 = _tmp175 * _tmp191;
  const Scalar _tmp194 = _tmp140 + matches_0_1_source_coords(0, 0);
  const Scalar _tmp195 = _tmp143 + matches_0_1_source_coords(1, 0);
  const Scalar _tmp196 = std::pow(
      Scalar(_tmp142 * std::pow(_tmp194, Scalar(2)) + _tmp145 * std::pow(_tmp195, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp197 = _tmp195 * _tmp196;
  const Scalar _tmp198 = _tmp194 * _tmp196;
  const Scalar _tmp199 =
      _tmp148 * _tmp198 + _tmp151 * _tmp197 + _tmp153 * landmarks_1_ + _tmp196 * _tmp51;
  const Scalar _tmp200 =
      _tmp155 * _tmp197 + _tmp156 * _tmp198 + _tmp157 * landmarks_1_ + _tmp196 * _tmp52;
  const Scalar _tmp201 =
      _tmp159 * _tmp198 + _tmp160 * _tmp197 + _tmp161 * landmarks_1_ + _tmp196 * _tmp48;
  const Scalar _tmp202 = _tmp200 * _tmp86 + _tmp201 * _tmp82;
  const Scalar _tmp203 = _tmp199 * _tmp76 + _tmp202;
  const Scalar _tmp204 = _tmp105 * _tmp200 + _tmp107 * _tmp199;
  const Scalar _tmp205 = _tmp103 * _tmp201 + _tmp204;
  const Scalar _tmp206 = std::fabs(_tmp205);
  const Scalar _tmp207 = std::max<Scalar>(_tmp206, epsilon);
  const Scalar _tmp208 = Scalar(1.0) / (_tmp207);
  const Scalar _tmp209 = _tmp208 * views_1_calibration(0, 0);
  const Scalar _tmp210 =
      _tmp203 * _tmp209 - matches_0_1_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp211 = _tmp199 * _tmp99 + _tmp201 * _tmp96;
  const Scalar _tmp212 = _tmp200 * _tmp93 + _tmp211;
  const Scalar _tmp213 = _tmp208 * views_1_calibration(1, 0);
  const Scalar _tmp214 =
      _tmp212 * _tmp213 - matches_0_1_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp215 = std::pow(_tmp210, Scalar(2)) + std::pow(_tmp214, Scalar(2)) + epsilon;
  const Scalar _tmp216 = std::pow(_tmp215, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp217 = _tmp181 * _tmp215 + 1;
  const Scalar _tmp218 = std::sqrt(_tmp186 * (std::pow(_tmp217, _tmp185) - 1));
  const Scalar _tmp219 = (((_tmp205) > 0) - ((_tmp205) < 0));
  const Scalar _tmp220 = std::sqrt(matches_0_1_weight) * std::sqrt(std::max<Scalar>(0, _tmp219));
  const Scalar _tmp221 = _tmp218 * _tmp220;
  const Scalar _tmp222 = _tmp216 * _tmp221;
  const Scalar _tmp223 = _tmp210 * _tmp222;
  const Scalar _tmp224 = _tmp214 * _tmp222;
  const Scalar _tmp225 = _tmp143 + matches_0_2_source_coords(1, 0);
  const Scalar _tmp226 = _tmp140 + matches_0_2_source_coords(0, 0);
  const Scalar _tmp227 = std::pow(
      Scalar(_tmp142 * std::pow(_tmp226, Scalar(2)) + _tmp145 * std::pow(_tmp225, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp228 = _tmp225 * _tmp227;
  const Scalar _tmp229 = _tmp226 * _tmp227;
  const Scalar _tmp230 =
      _tmp148 * _tmp229 + _tmp151 * _tmp228 + _tmp153 * landmarks_2_ + _tmp227 * _tmp51;
  const Scalar _tmp231 =
      _tmp155 * _tmp228 + _tmp156 * _tmp229 + _tmp157 * landmarks_2_ + _tmp227 * _tmp52;
  const Scalar _tmp232 =
      _tmp159 * _tmp229 + _tmp160 * _tmp228 + _tmp161 * landmarks_2_ + _tmp227 * _tmp48;
  const Scalar _tmp233 = _tmp231 * _tmp86 + _tmp232 * _tmp82;
  const Scalar _tmp234 = _tmp230 * _tmp76 + _tmp233;
  const Scalar _tmp235 = _tmp105 * _tmp231 + _tmp107 * _tmp230;
  const Scalar _tmp236 = _tmp103 * _tmp232 + _tmp235;
  const Scalar _tmp237 = std::fabs(_tmp236);
  const Scalar _tmp238 = std::max<Scalar>(_tmp237, epsilon);
  const Scalar _tmp239 = Scalar(1.0) / (_tmp238);
  const Scalar _tmp240 = _tmp239 * views_1_calibration(0, 0);
  const Scalar _tmp241 =
      _tmp234 * _tmp240 - matches_0_2_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp242 = _tmp230 * _tmp99 + _tmp232 * _tmp96;
  const Scalar _tmp243 = _tmp231 * _tmp93 + _tmp242;
  const Scalar _tmp244 = _tmp239 * views_1_calibration(1, 0);
  const Scalar _tmp245 =
      _tmp243 * _tmp244 - matches_0_2_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp246 = std::pow(_tmp241, Scalar(2)) + std::pow(_tmp245, Scalar(2)) + epsilon;
  const Scalar _tmp247 = std::pow(_tmp246, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp248 = _tmp181 * _tmp246 + 1;
  const Scalar _tmp249 = std::sqrt(_tmp186 * (std::pow(_tmp248, _tmp185) - 1));
  const Scalar _tmp250 = (((_tmp236) > 0) - ((_tmp236) < 0));
  const Scalar _tmp251 = std::sqrt(matches_0_2_weight) * std::sqrt(std::max<Scalar>(0, _tmp250));
  const Scalar _tmp252 = _tmp249 * _tmp251;
  const Scalar _tmp253 = _tmp247 * _tmp252;
  const Scalar _tmp254 = _tmp241 * _tmp253;
  const Scalar _tmp255 = _tmp245 * _tmp253;
  const Scalar _tmp256 = _tmp140 + matches_0_3_source_coords(0, 0);
  const Scalar _tmp257 = _tmp143 + matches_0_3_source_coords(1, 0);
  const Scalar _tmp258 = std::pow(
      Scalar(_tmp142 * std::pow(_tmp256, Scalar(2)) + _tmp145 * std::pow(_tmp257, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp259 = _tmp257 * _tmp258;
  const Scalar _tmp260 = _tmp256 * _tmp258;
  const Scalar _tmp261 =
      _tmp148 * _tmp260 + _tmp151 * _tmp259 + _tmp153 * landmarks_3_ + _tmp258 * _tmp51;
  const Scalar _tmp262 =
      _tmp159 * _tmp260 + _tmp160 * _tmp259 + _tmp161 * landmarks_3_ + _tmp258 * _tmp48;
  const Scalar _tmp263 =
      _tmp155 * _tmp259 + _tmp156 * _tmp260 + _tmp157 * landmarks_3_ + _tmp258 * _tmp52;
  const Scalar _tmp264 = _tmp262 * _tmp82 + _tmp263 * _tmp86;
  const Scalar _tmp265 = _tmp261 * _tmp76 + _tmp264;
  const Scalar _tmp266 = _tmp105 * _tmp263 + _tmp107 * _tmp261;
  const Scalar _tmp267 = _tmp103 * _tmp262 + _tmp266;
  const Scalar _tmp268 = std::fabs(_tmp267);
  const Scalar _tmp269 = std::max<Scalar>(_tmp268, epsilon);
  const Scalar _tmp270 = Scalar(1.0) / (_tmp269);
  const Scalar _tmp271 = _tmp270 * views_1_calibration(0, 0);
  const Scalar _tmp272 =
      _tmp265 * _tmp271 - matches_0_3_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp273 = _tmp261 * _tmp99 + _tmp262 * _tmp96;
  const Scalar _tmp274 = _tmp263 * _tmp93 + _tmp273;
  const Scalar _tmp275 = _tmp270 * views_1_calibration(1, 0);
  const Scalar _tmp276 =
      _tmp274 * _tmp275 - matches_0_3_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp277 = std::pow(_tmp272, Scalar(2)) + std::pow(_tmp276, Scalar(2)) + epsilon;
  const Scalar _tmp278 = std::pow(_tmp277, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp279 = (((_tmp267) > 0) - ((_tmp267) < 0));
  const Scalar _tmp280 = std::sqrt(matches_0_3_weight) * std::sqrt(std::max<Scalar>(0, _tmp279));
  const Scalar _tmp281 = _tmp181 * _tmp277 + 1;
  const Scalar _tmp282 = std::sqrt(_tmp186 * (std::pow(_tmp281, _tmp185) - 1));
  const Scalar _tmp283 = _tmp280 * _tmp282;
  const Scalar _tmp284 = _tmp278 * _tmp283;
  const Scalar _tmp285 = _tmp272 * _tmp284;
  const Scalar _tmp286 = _tmp276 * _tmp284;
  const Scalar _tmp287 = _tmp143 + matches_0_4_source_coords(1, 0);
  const Scalar _tmp288 = _tmp140 + matches_0_4_source_coords(0, 0);
  const Scalar _tmp289 = std::pow(
      Scalar(_tmp142 * std::pow(_tmp288, Scalar(2)) + _tmp145 * std::pow(_tmp287, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp290 = _tmp288 * _tmp289;
  const Scalar _tmp291 = _tmp287 * _tmp289;
  const Scalar _tmp292 =
      _tmp148 * _tmp290 + _tmp151 * _tmp291 + _tmp153 * landmarks_4_ + _tmp289 * _tmp51;
  const Scalar _tmp293 =
      _tmp155 * _tmp291 + _tmp156 * _tmp290 + _tmp157 * landmarks_4_ + _tmp289 * _tmp52;
  const Scalar _tmp294 =
      _tmp159 * _tmp290 + _tmp160 * _tmp291 + _tmp161 * landmarks_4_ + _tmp289 * _tmp48;
  const Scalar _tmp295 = _tmp293 * _tmp86 + _tmp294 * _tmp82;
  const Scalar _tmp296 = _tmp292 * _tmp76 + _tmp295;
  const Scalar _tmp297 = _tmp105 * _tmp293 + _tmp107 * _tmp292;
  const Scalar _tmp298 = _tmp103 * _tmp294 + _tmp297;
  const Scalar _tmp299 = std::fabs(_tmp298);
  const Scalar _tmp300 = std::max<Scalar>(_tmp299, epsilon);
  const Scalar _tmp301 = Scalar(1.0) / (_tmp300);
  const Scalar _tmp302 = _tmp301 * views_1_calibration(0, 0);
  const Scalar _tmp303 =
      _tmp296 * _tmp302 - matches_0_4_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp304 = _tmp292 * _tmp99 + _tmp294 * _tmp96;
  const Scalar _tmp305 = _tmp293 * _tmp93 + _tmp304;
  const Scalar _tmp306 = _tmp301 * views_1_calibration(1, 0);
  const Scalar _tmp307 =
      _tmp305 * _tmp306 - matches_0_4_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp308 = std::pow(_tmp303, Scalar(2)) + std::pow(_tmp307, Scalar(2)) + epsilon;
  const Scalar _tmp309 = std::pow(_tmp308, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp310 = _tmp181 * _tmp308 + 1;
  const Scalar _tmp311 = std::sqrt(_tmp186 * (std::pow(_tmp310, _tmp185) - 1));
  const Scalar _tmp312 = (((_tmp298) > 0) - ((_tmp298) < 0));
  const Scalar _tmp313 = std::sqrt(matches_0_4_weight) * std::sqrt(std::max<Scalar>(0, _tmp312));
  const Scalar _tmp314 = _tmp311 * _tmp313;
  const Scalar _tmp315 = _tmp309 * _tmp314;
  const Scalar _tmp316 = _tmp303 * _tmp315;
  const Scalar _tmp317 = _tmp307 * _tmp315;
  const Scalar _tmp318 = _tmp143 + matches_0_5_source_coords(1, 0);
  const Scalar _tmp319 = _tmp140 + matches_0_5_source_coords(0, 0);
  const Scalar _tmp320 = std::pow(
      Scalar(_tmp142 * std::pow(_tmp319, Scalar(2)) + _tmp145 * std::pow(_tmp318, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp321 = _tmp319 * _tmp320;
  const Scalar _tmp322 = _tmp318 * _tmp320;
  const Scalar _tmp323 =
      _tmp148 * _tmp321 + _tmp151 * _tmp322 + _tmp153 * landmarks_5_ + _tmp320 * _tmp51;
  const Scalar _tmp324 =
      _tmp155 * _tmp322 + _tmp156 * _tmp321 + _tmp157 * landmarks_5_ + _tmp320 * _tmp52;
  const Scalar _tmp325 =
      _tmp159 * _tmp321 + _tmp160 * _tmp322 + _tmp161 * landmarks_5_ + _tmp320 * _tmp48;
  const Scalar _tmp326 = _tmp324 * _tmp86 + _tmp325 * _tmp82;
  const Scalar _tmp327 = _tmp323 * _tmp76 + _tmp326;
  const Scalar _tmp328 = _tmp105 * _tmp324 + _tmp107 * _tmp323;
  const Scalar _tmp329 = _tmp103 * _tmp325 + _tmp328;
  const Scalar _tmp330 = std::fabs(_tmp329);
  const Scalar _tmp331 = std::max<Scalar>(_tmp330, epsilon);
  const Scalar _tmp332 = Scalar(1.0) / (_tmp331);
  const Scalar _tmp333 = _tmp332 * views_1_calibration(0, 0);
  const Scalar _tmp334 =
      _tmp327 * _tmp333 - matches_0_5_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp335 = _tmp323 * _tmp99 + _tmp325 * _tmp96;
  const Scalar _tmp336 = _tmp324 * _tmp93 + _tmp335;
  const Scalar _tmp337 = _tmp332 * views_1_calibration(1, 0);
  const Scalar _tmp338 =
      _tmp336 * _tmp337 - matches_0_5_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp339 = std::pow(_tmp334, Scalar(2)) + std::pow(_tmp338, Scalar(2)) + epsilon;
  const Scalar _tmp340 = std::pow(_tmp339, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp341 = _tmp181 * _tmp339 + 1;
  const Scalar _tmp342 = std::sqrt(_tmp186 * (std::pow(_tmp341, _tmp185) - 1));
  const Scalar _tmp343 = (((_tmp329) > 0) - ((_tmp329) < 0));
  const Scalar _tmp344 = std::sqrt(matches_0_5_weight) * std::sqrt(std::max<Scalar>(0, _tmp343));
  const Scalar _tmp345 = _tmp342 * _tmp344;
  const Scalar _tmp346 = _tmp340 * _tmp345;
  const Scalar _tmp347 = _tmp334 * _tmp346;
  const Scalar _tmp348 = _tmp338 * _tmp346;
  const Scalar _tmp349 = _tmp140 + matches_0_6_source_coords(0, 0);
  const Scalar _tmp350 = _tmp143 + matches_0_6_source_coords(1, 0);
  const Scalar _tmp351 = std::pow(
      Scalar(_tmp142 * std::pow(_tmp349, Scalar(2)) + _tmp145 * std::pow(_tmp350, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp352 = _tmp349 * _tmp351;
  const Scalar _tmp353 = _tmp350 * _tmp351;
  const Scalar _tmp354 =
      _tmp148 * _tmp352 + _tmp151 * _tmp353 + _tmp153 * landmarks_6_ + _tmp351 * _tmp51;
  const Scalar _tmp355 =
      _tmp159 * _tmp352 + _tmp160 * _tmp353 + _tmp161 * landmarks_6_ + _tmp351 * _tmp48;
  const Scalar _tmp356 =
      _tmp155 * _tmp353 + _tmp156 * _tmp352 + _tmp157 * landmarks_6_ + _tmp351 * _tmp52;
  const Scalar _tmp357 = _tmp355 * _tmp82 + _tmp356 * _tmp86;
  const Scalar _tmp358 = _tmp354 * _tmp76 + _tmp357;
  const Scalar _tmp359 = _tmp105 * _tmp356 + _tmp107 * _tmp354;
  const Scalar _tmp360 = _tmp103 * _tmp355 + _tmp359;
  const Scalar _tmp361 = std::fabs(_tmp360);
  const Scalar _tmp362 = std::max<Scalar>(_tmp361, epsilon);
  const Scalar _tmp363 = Scalar(1.0) / (_tmp362);
  const Scalar _tmp364 = _tmp363 * views_1_calibration(0, 0);
  const Scalar _tmp365 =
      _tmp358 * _tmp364 - matches_0_6_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp366 = _tmp354 * _tmp99 + _tmp355 * _tmp96;
  const Scalar _tmp367 = _tmp356 * _tmp93 + _tmp366;
  const Scalar _tmp368 = _tmp363 * views_1_calibration(1, 0);
  const Scalar _tmp369 =
      _tmp367 * _tmp368 - matches_0_6_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp370 = std::pow(_tmp365, Scalar(2)) + std::pow(_tmp369, Scalar(2)) + epsilon;
  const Scalar _tmp371 = std::pow(_tmp370, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp372 = (((_tmp360) > 0) - ((_tmp360) < 0));
  const Scalar _tmp373 = std::sqrt(matches_0_6_weight) * std::sqrt(std::max<Scalar>(0, _tmp372));
  const Scalar _tmp374 = _tmp181 * _tmp370 + 1;
  const Scalar _tmp375 = std::sqrt(_tmp186 * (std::pow(_tmp374, _tmp185) - 1));
  const Scalar _tmp376 = _tmp373 * _tmp375;
  const Scalar _tmp377 = _tmp371 * _tmp376;
  const Scalar _tmp378 = _tmp365 * _tmp377;
  const Scalar _tmp379 = _tmp369 * _tmp377;
  const Scalar _tmp380 = _tmp143 + matches_0_7_source_coords(1, 0);
  const Scalar _tmp381 = _tmp140 + matches_0_7_source_coords(0, 0);
  const Scalar _tmp382 = std::pow(
      Scalar(_tmp142 * std::pow(_tmp381, Scalar(2)) + _tmp145 * std::pow(_tmp380, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp383 = _tmp381 * _tmp382;
  const Scalar _tmp384 = _tmp380 * _tmp382;
  const Scalar _tmp385 =
      _tmp148 * _tmp383 + _tmp151 * _tmp384 + _tmp153 * landmarks_7_ + _tmp382 * _tmp51;
  const Scalar _tmp386 =
      _tmp155 * _tmp384 + _tmp156 * _tmp383 + _tmp157 * landmarks_7_ + _tmp382 * _tmp52;
  const Scalar _tmp387 =
      _tmp159 * _tmp383 + _tmp160 * _tmp384 + _tmp161 * landmarks_7_ + _tmp382 * _tmp48;
  const Scalar _tmp388 = _tmp386 * _tmp86 + _tmp387 * _tmp82;
  const Scalar _tmp389 = _tmp385 * _tmp76 + _tmp388;
  const Scalar _tmp390 = _tmp105 * _tmp386 + _tmp107 * _tmp385;
  const Scalar _tmp391 = _tmp103 * _tmp387 + _tmp390;
  const Scalar _tmp392 = std::fabs(_tmp391);
  const Scalar _tmp393 = std::max<Scalar>(_tmp392, epsilon);
  const Scalar _tmp394 = Scalar(1.0) / (_tmp393);
  const Scalar _tmp395 = _tmp394 * views_1_calibration(0, 0);
  const Scalar _tmp396 =
      _tmp389 * _tmp395 - matches_0_7_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp397 = _tmp385 * _tmp99 + _tmp387 * _tmp96;
  const Scalar _tmp398 = _tmp386 * _tmp93 + _tmp397;
  const Scalar _tmp399 = _tmp394 * views_1_calibration(1, 0);
  const Scalar _tmp400 =
      _tmp398 * _tmp399 - matches_0_7_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp401 = std::pow(_tmp396, Scalar(2)) + std::pow(_tmp400, Scalar(2)) + epsilon;
  const Scalar _tmp402 = std::pow(_tmp401, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp403 = _tmp181 * _tmp401 + 1;
  const Scalar _tmp404 = std::sqrt(_tmp186 * (std::pow(_tmp403, _tmp185) - 1));
  const Scalar _tmp405 = (((_tmp391) > 0) - ((_tmp391) < 0));
  const Scalar _tmp406 = std::sqrt(matches_0_7_weight) * std::sqrt(std::max<Scalar>(0, _tmp405));
  const Scalar _tmp407 = _tmp404 * _tmp406;
  const Scalar _tmp408 = _tmp402 * _tmp407;
  const Scalar _tmp409 = _tmp396 * _tmp408;
  const Scalar _tmp410 = _tmp400 * _tmp408;
  const Scalar _tmp411 = _tmp143 + matches_0_8_source_coords(1, 0);
  const Scalar _tmp412 = _tmp140 + matches_0_8_source_coords(0, 0);
  const Scalar _tmp413 = std::pow(
      Scalar(_tmp142 * std::pow(_tmp412, Scalar(2)) + _tmp145 * std::pow(_tmp411, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp414 = _tmp411 * _tmp413;
  const Scalar _tmp415 = _tmp412 * _tmp413;
  const Scalar _tmp416 =
      _tmp148 * _tmp415 + _tmp151 * _tmp414 + _tmp153 * landmarks_8_ + _tmp413 * _tmp51;
  const Scalar _tmp417 =
      _tmp159 * _tmp415 + _tmp160 * _tmp414 + _tmp161 * landmarks_8_ + _tmp413 * _tmp48;
  const Scalar _tmp418 =
      _tmp155 * _tmp414 + _tmp156 * _tmp415 + _tmp157 * landmarks_8_ + _tmp413 * _tmp52;
  const Scalar _tmp419 = _tmp417 * _tmp82 + _tmp418 * _tmp86;
  const Scalar _tmp420 = _tmp416 * _tmp76 + _tmp419;
  const Scalar _tmp421 = _tmp105 * _tmp418 + _tmp107 * _tmp416;
  const Scalar _tmp422 = _tmp103 * _tmp417 + _tmp421;
  const Scalar _tmp423 = std::fabs(_tmp422);
  const Scalar _tmp424 = std::max<Scalar>(_tmp423, epsilon);
  const Scalar _tmp425 = Scalar(1.0) / (_tmp424);
  const Scalar _tmp426 = _tmp425 * views_1_calibration(0, 0);
  const Scalar _tmp427 =
      _tmp420 * _tmp426 - matches_0_8_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp428 = _tmp416 * _tmp99 + _tmp417 * _tmp96;
  const Scalar _tmp429 = _tmp418 * _tmp93 + _tmp428;
  const Scalar _tmp430 = _tmp425 * views_1_calibration(1, 0);
  const Scalar _tmp431 =
      _tmp429 * _tmp430 - matches_0_8_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp432 = std::pow(_tmp427, Scalar(2)) + std::pow(_tmp431, Scalar(2)) + epsilon;
  const Scalar _tmp433 = std::pow(_tmp432, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp434 = (((_tmp422) > 0) - ((_tmp422) < 0));
  const Scalar _tmp435 = std::sqrt(matches_0_8_weight) * std::sqrt(std::max<Scalar>(0, _tmp434));
  const Scalar _tmp436 = _tmp181 * _tmp432 + 1;
  const Scalar _tmp437 = std::sqrt(_tmp186 * (std::pow(_tmp436, _tmp185) - 1));
  const Scalar _tmp438 = _tmp435 * _tmp437;
  const Scalar _tmp439 = _tmp433 * _tmp438;
  const Scalar _tmp440 = _tmp427 * _tmp439;
  const Scalar _tmp441 = _tmp431 * _tmp439;
  const Scalar _tmp442 = _tmp143 + matches_0_9_source_coords(1, 0);
  const Scalar _tmp443 = _tmp140 + matches_0_9_source_coords(0, 0);
  const Scalar _tmp444 = std::pow(
      Scalar(_tmp142 * std::pow(_tmp443, Scalar(2)) + _tmp145 * std::pow(_tmp442, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp445 = _tmp443 * _tmp444;
  const Scalar _tmp446 = _tmp442 * _tmp444;
  const Scalar _tmp447 =
      _tmp148 * _tmp445 + _tmp151 * _tmp446 + _tmp153 * landmarks_9_ + _tmp444 * _tmp51;
  const Scalar _tmp448 =
      _tmp155 * _tmp446 + _tmp156 * _tmp445 + _tmp157 * landmarks_9_ + _tmp444 * _tmp52;
  const Scalar _tmp449 =
      _tmp159 * _tmp445 + _tmp160 * _tmp446 + _tmp161 * landmarks_9_ + _tmp444 * _tmp48;
  const Scalar _tmp450 = _tmp448 * _tmp86 + _tmp449 * _tmp82;
  const Scalar _tmp451 = _tmp447 * _tmp76 + _tmp450;
  const Scalar _tmp452 = _tmp105 * _tmp448 + _tmp107 * _tmp447;
  const Scalar _tmp453 = _tmp103 * _tmp449 + _tmp452;
  const Scalar _tmp454 = std::fabs(_tmp453);
  const Scalar _tmp455 = std::max<Scalar>(_tmp454, epsilon);
  const Scalar _tmp456 = Scalar(1.0) / (_tmp455);
  const Scalar _tmp457 = _tmp456 * views_1_calibration(0, 0);
  const Scalar _tmp458 =
      _tmp451 * _tmp457 - matches_0_9_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp459 = _tmp447 * _tmp99 + _tmp449 * _tmp96;
  const Scalar _tmp460 = _tmp448 * _tmp93 + _tmp459;
  const Scalar _tmp461 = _tmp456 * views_1_calibration(1, 0);
  const Scalar _tmp462 =
      _tmp460 * _tmp461 - matches_0_9_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp463 = std::pow(_tmp458, Scalar(2)) + std::pow(_tmp462, Scalar(2)) + epsilon;
  const Scalar _tmp464 = std::pow(_tmp463, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp465 = _tmp181 * _tmp463 + 1;
  const Scalar _tmp466 = std::sqrt(_tmp186 * (std::pow(_tmp465, _tmp185) - 1));
  const Scalar _tmp467 = (((_tmp453) > 0) - ((_tmp453) < 0));
  const Scalar _tmp468 = std::sqrt(matches_0_9_weight) * std::sqrt(std::max<Scalar>(0, _tmp467));
  const Scalar _tmp469 = _tmp466 * _tmp468;
  const Scalar _tmp470 = _tmp464 * _tmp469;
  const Scalar _tmp471 = _tmp458 * _tmp470;
  const Scalar _tmp472 = _tmp462 * _tmp470;
  const Scalar _tmp473 = _tmp143 + matches_0_10_source_coords(1, 0);
  const Scalar _tmp474 = _tmp140 + matches_0_10_source_coords(0, 0);
  const Scalar _tmp475 = std::pow(
      Scalar(_tmp142 * std::pow(_tmp474, Scalar(2)) + _tmp145 * std::pow(_tmp473, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp476 = _tmp473 * _tmp475;
  const Scalar _tmp477 = _tmp474 * _tmp475;
  const Scalar _tmp478 =
      _tmp148 * _tmp477 + _tmp151 * _tmp476 + _tmp153 * landmarks_10_ + _tmp475 * _tmp51;
  const Scalar _tmp479 =
      _tmp159 * _tmp477 + _tmp160 * _tmp476 + _tmp161 * landmarks_10_ + _tmp475 * _tmp48;
  const Scalar _tmp480 =
      _tmp155 * _tmp476 + _tmp156 * _tmp477 + _tmp157 * landmarks_10_ + _tmp475 * _tmp52;
  const Scalar _tmp481 = _tmp479 * _tmp82 + _tmp480 * _tmp86;
  const Scalar _tmp482 = _tmp478 * _tmp76 + _tmp481;
  const Scalar _tmp483 = _tmp105 * _tmp480 + _tmp107 * _tmp478;
  const Scalar _tmp484 = _tmp103 * _tmp479 + _tmp483;
  const Scalar _tmp485 = std::fabs(_tmp484);
  const Scalar _tmp486 = std::max<Scalar>(_tmp485, epsilon);
  const Scalar _tmp487 = Scalar(1.0) / (_tmp486);
  const Scalar _tmp488 = _tmp487 * views_1_calibration(0, 0);
  const Scalar _tmp489 =
      _tmp482 * _tmp488 - matches_0_10_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp490 = _tmp478 * _tmp99 + _tmp479 * _tmp96;
  const Scalar _tmp491 = _tmp480 * _tmp93 + _tmp490;
  const Scalar _tmp492 = _tmp487 * views_1_calibration(1, 0);
  const Scalar _tmp493 =
      _tmp491 * _tmp492 - matches_0_10_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp494 = std::pow(_tmp489, Scalar(2)) + std::pow(_tmp493, Scalar(2)) + epsilon;
  const Scalar _tmp495 = std::pow(_tmp494, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp496 = (((_tmp484) > 0) - ((_tmp484) < 0));
  const Scalar _tmp497 = std::sqrt(matches_0_10_weight) * std::sqrt(std::max<Scalar>(0, _tmp496));
  const Scalar _tmp498 = _tmp181 * _tmp494 + 1;
  const Scalar _tmp499 = std::sqrt(_tmp186 * (std::pow(_tmp498, _tmp185) - 1));
  const Scalar _tmp500 = _tmp497 * _tmp499;
  const Scalar _tmp501 = _tmp495 * _tmp500;
  const Scalar _tmp502 = _tmp489 * _tmp501;
  const Scalar _tmp503 = _tmp493 * _tmp501;
  const Scalar _tmp504 = _tmp143 + matches_0_11_source_coords(1, 0);
  const Scalar _tmp505 = _tmp140 + matches_0_11_source_coords(0, 0);
  const Scalar _tmp506 = std::pow(
      Scalar(_tmp142 * std::pow(_tmp505, Scalar(2)) + _tmp145 * std::pow(_tmp504, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp507 = _tmp505 * _tmp506;
  const Scalar _tmp508 = _tmp504 * _tmp506;
  const Scalar _tmp509 =
      _tmp148 * _tmp507 + _tmp151 * _tmp508 + _tmp153 * landmarks_11_ + _tmp506 * _tmp51;
  const Scalar _tmp510 =
      _tmp159 * _tmp507 + _tmp160 * _tmp508 + _tmp161 * landmarks_11_ + _tmp48 * _tmp506;
  const Scalar _tmp511 =
      _tmp155 * _tmp508 + _tmp156 * _tmp507 + _tmp157 * landmarks_11_ + _tmp506 * _tmp52;
  const Scalar _tmp512 = _tmp510 * _tmp82 + _tmp511 * _tmp86;
  const Scalar _tmp513 = _tmp509 * _tmp76 + _tmp512;
  const Scalar _tmp514 = _tmp105 * _tmp511 + _tmp107 * _tmp509;
  const Scalar _tmp515 = _tmp103 * _tmp510 + _tmp514;
  const Scalar _tmp516 = std::fabs(_tmp515);
  const Scalar _tmp517 = std::max<Scalar>(_tmp516, epsilon);
  const Scalar _tmp518 = Scalar(1.0) / (_tmp517);
  const Scalar _tmp519 = _tmp518 * views_1_calibration(0, 0);
  const Scalar _tmp520 =
      _tmp513 * _tmp519 - matches_0_11_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp521 = _tmp509 * _tmp99 + _tmp510 * _tmp96;
  const Scalar _tmp522 = _tmp511 * _tmp93 + _tmp521;
  const Scalar _tmp523 = _tmp518 * views_1_calibration(1, 0);
  const Scalar _tmp524 =
      _tmp522 * _tmp523 - matches_0_11_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp525 = std::pow(_tmp520, Scalar(2)) + std::pow(_tmp524, Scalar(2)) + epsilon;
  const Scalar _tmp526 = std::pow(_tmp525, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp527 = (((_tmp515) > 0) - ((_tmp515) < 0));
  const Scalar _tmp528 = std::sqrt(matches_0_11_weight) * std::sqrt(std::max<Scalar>(0, _tmp527));
  const Scalar _tmp529 = _tmp181 * _tmp525 + 1;
  const Scalar _tmp530 = std::sqrt(_tmp186 * (std::pow(_tmp529, _tmp185) - 1));
  const Scalar _tmp531 = _tmp528 * _tmp530;
  const Scalar _tmp532 = _tmp526 * _tmp531;
  const Scalar _tmp533 = _tmp520 * _tmp532;
  const Scalar _tmp534 = _tmp524 * _tmp532;
  const Scalar _tmp535 = _tmp143 + matches_0_12_source_coords(1, 0);
  const Scalar _tmp536 = _tmp140 + matches_0_12_source_coords(0, 0);
  const Scalar _tmp537 = std::pow(
      Scalar(_tmp142 * std::pow(_tmp536, Scalar(2)) + _tmp145 * std::pow(_tmp535, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp538 = _tmp536 * _tmp537;
  const Scalar _tmp539 = _tmp535 * _tmp537;
  const Scalar _tmp540 =
      _tmp148 * _tmp538 + _tmp151 * _tmp539 + _tmp153 * landmarks_12_ + _tmp51 * _tmp537;
  const Scalar _tmp541 =
      _tmp155 * _tmp539 + _tmp156 * _tmp538 + _tmp157 * landmarks_12_ + _tmp52 * _tmp537;
  const Scalar _tmp542 =
      _tmp159 * _tmp538 + _tmp160 * _tmp539 + _tmp161 * landmarks_12_ + _tmp48 * _tmp537;
  const Scalar _tmp543 = _tmp541 * _tmp86 + _tmp542 * _tmp82;
  const Scalar _tmp544 = _tmp540 * _tmp76 + _tmp543;
  const Scalar _tmp545 = _tmp105 * _tmp541 + _tmp107 * _tmp540;
  const Scalar _tmp546 = _tmp103 * _tmp542 + _tmp545;
  const Scalar _tmp547 = std::fabs(_tmp546);
  const Scalar _tmp548 = std::max<Scalar>(_tmp547, epsilon);
  const Scalar _tmp549 = Scalar(1.0) / (_tmp548);
  const Scalar _tmp550 = _tmp549 * views_1_calibration(0, 0);
  const Scalar _tmp551 =
      _tmp544 * _tmp550 - matches_0_12_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp552 = _tmp540 * _tmp99 + _tmp542 * _tmp96;
  const Scalar _tmp553 = _tmp541 * _tmp93 + _tmp552;
  const Scalar _tmp554 = _tmp549 * views_1_calibration(1, 0);
  const Scalar _tmp555 =
      _tmp553 * _tmp554 - matches_0_12_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp556 = std::pow(_tmp551, Scalar(2)) + std::pow(_tmp555, Scalar(2)) + epsilon;
  const Scalar _tmp557 = std::pow(_tmp556, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp558 = _tmp181 * _tmp556 + 1;
  const Scalar _tmp559 = std::sqrt(_tmp186 * (std::pow(_tmp558, _tmp185) - 1));
  const Scalar _tmp560 = (((_tmp546) > 0) - ((_tmp546) < 0));
  const Scalar _tmp561 = std::sqrt(matches_0_12_weight) * std::sqrt(std::max<Scalar>(0, _tmp560));
  const Scalar _tmp562 = _tmp559 * _tmp561;
  const Scalar _tmp563 = _tmp557 * _tmp562;
  const Scalar _tmp564 = _tmp551 * _tmp563;
  const Scalar _tmp565 = _tmp555 * _tmp563;
  const Scalar _tmp566 = _tmp143 + matches_0_13_source_coords(1, 0);
  const Scalar _tmp567 = _tmp140 + matches_0_13_source_coords(0, 0);
  const Scalar _tmp568 = std::pow(
      Scalar(_tmp142 * std::pow(_tmp567, Scalar(2)) + _tmp145 * std::pow(_tmp566, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp569 = _tmp567 * _tmp568;
  const Scalar _tmp570 = _tmp566 * _tmp568;
  const Scalar _tmp571 =
      _tmp148 * _tmp569 + _tmp151 * _tmp570 + _tmp153 * landmarks_13_ + _tmp51 * _tmp568;
  const Scalar _tmp572 =
      _tmp159 * _tmp569 + _tmp160 * _tmp570 + _tmp161 * landmarks_13_ + _tmp48 * _tmp568;
  const Scalar _tmp573 =
      _tmp155 * _tmp570 + _tmp156 * _tmp569 + _tmp157 * landmarks_13_ + _tmp52 * _tmp568;
  const Scalar _tmp574 = _tmp572 * _tmp82 + _tmp573 * _tmp86;
  const Scalar _tmp575 = _tmp571 * _tmp76 + _tmp574;
  const Scalar _tmp576 = _tmp105 * _tmp573 + _tmp107 * _tmp571;
  const Scalar _tmp577 = _tmp103 * _tmp572 + _tmp576;
  const Scalar _tmp578 = std::fabs(_tmp577);
  const Scalar _tmp579 = std::max<Scalar>(_tmp578, epsilon);
  const Scalar _tmp580 = Scalar(1.0) / (_tmp579);
  const Scalar _tmp581 = _tmp580 * views_1_calibration(0, 0);
  const Scalar _tmp582 =
      _tmp575 * _tmp581 - matches_0_13_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp583 = _tmp571 * _tmp99 + _tmp572 * _tmp96;
  const Scalar _tmp584 = _tmp573 * _tmp93 + _tmp583;
  const Scalar _tmp585 = _tmp580 * views_1_calibration(1, 0);
  const Scalar _tmp586 =
      _tmp584 * _tmp585 - matches_0_13_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp587 = std::pow(_tmp582, Scalar(2)) + std::pow(_tmp586, Scalar(2)) + epsilon;
  const Scalar _tmp588 = std::pow(_tmp587, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp589 = _tmp181 * _tmp587 + 1;
  const Scalar _tmp590 = std::sqrt(_tmp186 * (std::pow(_tmp589, _tmp185) - 1));
  const Scalar _tmp591 = (((_tmp577) > 0) - ((_tmp577) < 0));
  const Scalar _tmp592 = std::sqrt(matches_0_13_weight) * std::sqrt(std::max<Scalar>(0, _tmp591));
  const Scalar _tmp593 = _tmp590 * _tmp592;
  const Scalar _tmp594 = _tmp588 * _tmp593;
  const Scalar _tmp595 = _tmp582 * _tmp594;
  const Scalar _tmp596 = _tmp586 * _tmp594;
  const Scalar _tmp597 = _tmp143 + matches_0_14_source_coords(1, 0);
  const Scalar _tmp598 = _tmp140 + matches_0_14_source_coords(0, 0);
  const Scalar _tmp599 = std::pow(
      Scalar(_tmp142 * std::pow(_tmp598, Scalar(2)) + _tmp145 * std::pow(_tmp597, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp600 = _tmp597 * _tmp599;
  const Scalar _tmp601 = _tmp598 * _tmp599;
  const Scalar _tmp602 =
      _tmp148 * _tmp601 + _tmp151 * _tmp600 + _tmp153 * landmarks_14_ + _tmp51 * _tmp599;
  const Scalar _tmp603 =
      _tmp159 * _tmp601 + _tmp160 * _tmp600 + _tmp161 * landmarks_14_ + _tmp48 * _tmp599;
  const Scalar _tmp604 =
      _tmp155 * _tmp600 + _tmp156 * _tmp601 + _tmp157 * landmarks_14_ + _tmp52 * _tmp599;
  const Scalar _tmp605 = _tmp603 * _tmp82 + _tmp604 * _tmp86;
  const Scalar _tmp606 = _tmp602 * _tmp76 + _tmp605;
  const Scalar _tmp607 = _tmp105 * _tmp604 + _tmp107 * _tmp602;
  const Scalar _tmp608 = _tmp103 * _tmp603 + _tmp607;
  const Scalar _tmp609 = std::fabs(_tmp608);
  const Scalar _tmp610 = std::max<Scalar>(_tmp609, epsilon);
  const Scalar _tmp611 = Scalar(1.0) / (_tmp610);
  const Scalar _tmp612 = _tmp611 * views_1_calibration(0, 0);
  const Scalar _tmp613 =
      _tmp606 * _tmp612 - matches_0_14_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp614 = _tmp602 * _tmp99 + _tmp603 * _tmp96;
  const Scalar _tmp615 = _tmp604 * _tmp93 + _tmp614;
  const Scalar _tmp616 = _tmp611 * views_1_calibration(1, 0);
  const Scalar _tmp617 =
      _tmp615 * _tmp616 - matches_0_14_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp618 = std::pow(_tmp613, Scalar(2)) + std::pow(_tmp617, Scalar(2)) + epsilon;
  const Scalar _tmp619 = std::pow(_tmp618, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp620 = (((_tmp608) > 0) - ((_tmp608) < 0));
  const Scalar _tmp621 = std::sqrt(matches_0_14_weight) * std::sqrt(std::max<Scalar>(0, _tmp620));
  const Scalar _tmp622 = _tmp181 * _tmp618 + 1;
  const Scalar _tmp623 = std::sqrt(_tmp186 * (std::pow(_tmp622, _tmp185) - 1));
  const Scalar _tmp624 = _tmp621 * _tmp623;
  const Scalar _tmp625 = _tmp619 * _tmp624;
  const Scalar _tmp626 = _tmp613 * _tmp625;
  const Scalar _tmp627 = _tmp617 * _tmp625;
  const Scalar _tmp628 = _tmp143 + matches_0_15_source_coords(1, 0);
  const Scalar _tmp629 = _tmp140 + matches_0_15_source_coords(0, 0);
  const Scalar _tmp630 = std::pow(
      Scalar(_tmp142 * std::pow(_tmp629, Scalar(2)) + _tmp145 * std::pow(_tmp628, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp631 = _tmp629 * _tmp630;
  const Scalar _tmp632 = _tmp628 * _tmp630;
  const Scalar _tmp633 =
      _tmp148 * _tmp631 + _tmp151 * _tmp632 + _tmp153 * landmarks_15_ + _tmp51 * _tmp630;
  const Scalar _tmp634 =
      _tmp159 * _tmp631 + _tmp160 * _tmp632 + _tmp161 * landmarks_15_ + _tmp48 * _tmp630;
  const Scalar _tmp635 =
      _tmp155 * _tmp632 + _tmp156 * _tmp631 + _tmp157 * landmarks_15_ + _tmp52 * _tmp630;
  const Scalar _tmp636 = _tmp634 * _tmp82 + _tmp635 * _tmp86;
  const Scalar _tmp637 = _tmp633 * _tmp76 + _tmp636;
  const Scalar _tmp638 = _tmp105 * _tmp635 + _tmp107 * _tmp633;
  const Scalar _tmp639 = _tmp103 * _tmp634 + _tmp638;
  const Scalar _tmp640 = std::fabs(_tmp639);
  const Scalar _tmp641 = std::max<Scalar>(_tmp640, epsilon);
  const Scalar _tmp642 = Scalar(1.0) / (_tmp641);
  const Scalar _tmp643 = _tmp642 * views_1_calibration(0, 0);
  const Scalar _tmp644 =
      _tmp637 * _tmp643 - matches_0_15_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp645 = _tmp633 * _tmp99 + _tmp634 * _tmp96;
  const Scalar _tmp646 = _tmp635 * _tmp93 + _tmp645;
  const Scalar _tmp647 = _tmp642 * views_1_calibration(1, 0);
  const Scalar _tmp648 =
      _tmp646 * _tmp647 - matches_0_15_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp649 = std::pow(_tmp644, Scalar(2)) + std::pow(_tmp648, Scalar(2)) + epsilon;
  const Scalar _tmp650 = std::pow(_tmp649, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp651 = (((_tmp639) > 0) - ((_tmp639) < 0));
  const Scalar _tmp652 = std::sqrt(matches_0_15_weight) * std::sqrt(std::max<Scalar>(0, _tmp651));
  const Scalar _tmp653 = _tmp181 * _tmp649 + 1;
  const Scalar _tmp654 = std::sqrt(_tmp186 * (std::pow(_tmp653, _tmp185) - 1));
  const Scalar _tmp655 = _tmp652 * _tmp654;
  const Scalar _tmp656 = _tmp650 * _tmp655;
  const Scalar _tmp657 = _tmp644 * _tmp656;
  const Scalar _tmp658 = _tmp648 * _tmp656;
  const Scalar _tmp659 = _tmp143 + matches_0_16_source_coords(1, 0);
  const Scalar _tmp660 = _tmp140 + matches_0_16_source_coords(0, 0);
  const Scalar _tmp661 = std::pow(
      Scalar(_tmp142 * std::pow(_tmp660, Scalar(2)) + _tmp145 * std::pow(_tmp659, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp662 = _tmp659 * _tmp661;
  const Scalar _tmp663 = _tmp660 * _tmp661;
  const Scalar _tmp664 =
      _tmp148 * _tmp663 + _tmp151 * _tmp662 + _tmp153 * landmarks_16_ + _tmp51 * _tmp661;
  const Scalar _tmp665 =
      _tmp159 * _tmp663 + _tmp160 * _tmp662 + _tmp161 * landmarks_16_ + _tmp48 * _tmp661;
  const Scalar _tmp666 =
      _tmp155 * _tmp662 + _tmp156 * _tmp663 + _tmp157 * landmarks_16_ + _tmp52 * _tmp661;
  const Scalar _tmp667 = _tmp665 * _tmp82 + _tmp666 * _tmp86;
  const Scalar _tmp668 = _tmp664 * _tmp76 + _tmp667;
  const Scalar _tmp669 = _tmp105 * _tmp666 + _tmp107 * _tmp664;
  const Scalar _tmp670 = _tmp103 * _tmp665 + _tmp669;
  const Scalar _tmp671 = std::fabs(_tmp670);
  const Scalar _tmp672 = std::max<Scalar>(_tmp671, epsilon);
  const Scalar _tmp673 = Scalar(1.0) / (_tmp672);
  const Scalar _tmp674 = _tmp673 * views_1_calibration(0, 0);
  const Scalar _tmp675 =
      _tmp668 * _tmp674 - matches_0_16_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp676 = _tmp664 * _tmp99 + _tmp665 * _tmp96;
  const Scalar _tmp677 = _tmp666 * _tmp93 + _tmp676;
  const Scalar _tmp678 = _tmp673 * views_1_calibration(1, 0);
  const Scalar _tmp679 =
      _tmp677 * _tmp678 - matches_0_16_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp680 = std::pow(_tmp675, Scalar(2)) + std::pow(_tmp679, Scalar(2)) + epsilon;
  const Scalar _tmp681 = std::pow(_tmp680, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp682 = _tmp181 * _tmp680 + 1;
  const Scalar _tmp683 = std::sqrt(_tmp186 * (std::pow(_tmp682, _tmp185) - 1));
  const Scalar _tmp684 = (((_tmp670) > 0) - ((_tmp670) < 0));
  const Scalar _tmp685 = std::sqrt(matches_0_16_weight) * std::sqrt(std::max<Scalar>(0, _tmp684));
  const Scalar _tmp686 = _tmp683 * _tmp685;
  const Scalar _tmp687 = _tmp681 * _tmp686;
  const Scalar _tmp688 = _tmp675 * _tmp687;
  const Scalar _tmp689 = _tmp679 * _tmp687;
  const Scalar _tmp690 = _tmp143 + matches_0_17_source_coords(1, 0);
  const Scalar _tmp691 = _tmp140 + matches_0_17_source_coords(0, 0);
  const Scalar _tmp692 = std::pow(
      Scalar(_tmp142 * std::pow(_tmp691, Scalar(2)) + _tmp145 * std::pow(_tmp690, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp693 = _tmp691 * _tmp692;
  const Scalar _tmp694 = _tmp690 * _tmp692;
  const Scalar _tmp695 =
      _tmp148 * _tmp693 + _tmp151 * _tmp694 + _tmp153 * landmarks_17_ + _tmp51 * _tmp692;
  const Scalar _tmp696 =
      _tmp155 * _tmp694 + _tmp156 * _tmp693 + _tmp157 * landmarks_17_ + _tmp52 * _tmp692;
  const Scalar _tmp697 =
      _tmp159 * _tmp693 + _tmp160 * _tmp694 + _tmp161 * landmarks_17_ + _tmp48 * _tmp692;
  const Scalar _tmp698 = _tmp696 * _tmp86 + _tmp697 * _tmp82;
  const Scalar _tmp699 = _tmp695 * _tmp76 + _tmp698;
  const Scalar _tmp700 = _tmp105 * _tmp696 + _tmp107 * _tmp695;
  const Scalar _tmp701 = _tmp103 * _tmp697 + _tmp700;
  const Scalar _tmp702 = std::fabs(_tmp701);
  const Scalar _tmp703 = std::max<Scalar>(_tmp702, epsilon);
  const Scalar _tmp704 = Scalar(1.0) / (_tmp703);
  const Scalar _tmp705 = _tmp704 * views_1_calibration(0, 0);
  const Scalar _tmp706 =
      _tmp699 * _tmp705 - matches_0_17_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp707 = _tmp695 * _tmp99 + _tmp697 * _tmp96;
  const Scalar _tmp708 = _tmp696 * _tmp93 + _tmp707;
  const Scalar _tmp709 = _tmp704 * views_1_calibration(1, 0);
  const Scalar _tmp710 =
      _tmp708 * _tmp709 - matches_0_17_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp711 = std::pow(_tmp706, Scalar(2)) + std::pow(_tmp710, Scalar(2)) + epsilon;
  const Scalar _tmp712 = std::pow(_tmp711, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp713 = (((_tmp701) > 0) - ((_tmp701) < 0));
  const Scalar _tmp714 = std::sqrt(matches_0_17_weight) * std::sqrt(std::max<Scalar>(0, _tmp713));
  const Scalar _tmp715 = _tmp181 * _tmp711 + 1;
  const Scalar _tmp716 = std::sqrt(_tmp186 * (std::pow(_tmp715, _tmp185) - 1));
  const Scalar _tmp717 = _tmp714 * _tmp716;
  const Scalar _tmp718 = _tmp712 * _tmp717;
  const Scalar _tmp719 = _tmp706 * _tmp718;
  const Scalar _tmp720 = _tmp710 * _tmp718;
  const Scalar _tmp721 = _tmp143 + matches_0_18_source_coords(1, 0);
  const Scalar _tmp722 = _tmp140 + matches_0_18_source_coords(0, 0);
  const Scalar _tmp723 = std::pow(
      Scalar(_tmp142 * std::pow(_tmp722, Scalar(2)) + _tmp145 * std::pow(_tmp721, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp724 = _tmp722 * _tmp723;
  const Scalar _tmp725 = _tmp721 * _tmp723;
  const Scalar _tmp726 =
      _tmp148 * _tmp724 + _tmp151 * _tmp725 + _tmp153 * landmarks_18_ + _tmp51 * _tmp723;
  const Scalar _tmp727 =
      _tmp159 * _tmp724 + _tmp160 * _tmp725 + _tmp161 * landmarks_18_ + _tmp48 * _tmp723;
  const Scalar _tmp728 =
      _tmp155 * _tmp725 + _tmp156 * _tmp724 + _tmp157 * landmarks_18_ + _tmp52 * _tmp723;
  const Scalar _tmp729 = _tmp727 * _tmp82 + _tmp728 * _tmp86;
  const Scalar _tmp730 = _tmp726 * _tmp76 + _tmp729;
  const Scalar _tmp731 = _tmp105 * _tmp728 + _tmp107 * _tmp726;
  const Scalar _tmp732 = _tmp103 * _tmp727 + _tmp731;
  const Scalar _tmp733 = std::fabs(_tmp732);
  const Scalar _tmp734 = std::max<Scalar>(_tmp733, epsilon);
  const Scalar _tmp735 = Scalar(1.0) / (_tmp734);
  const Scalar _tmp736 = _tmp735 * views_1_calibration(0, 0);
  const Scalar _tmp737 =
      _tmp730 * _tmp736 - matches_0_18_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp738 = _tmp726 * _tmp99 + _tmp727 * _tmp96;
  const Scalar _tmp739 = _tmp728 * _tmp93 + _tmp738;
  const Scalar _tmp740 = _tmp735 * views_1_calibration(1, 0);
  const Scalar _tmp741 =
      _tmp739 * _tmp740 - matches_0_18_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp742 = std::pow(_tmp737, Scalar(2)) + std::pow(_tmp741, Scalar(2)) + epsilon;
  const Scalar _tmp743 = std::pow(_tmp742, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp744 = (((_tmp732) > 0) - ((_tmp732) < 0));
  const Scalar _tmp745 = std::sqrt(matches_0_18_weight) * std::sqrt(std::max<Scalar>(0, _tmp744));
  const Scalar _tmp746 = _tmp181 * _tmp742 + 1;
  const Scalar _tmp747 = std::sqrt(_tmp186 * (std::pow(_tmp746, _tmp185) - 1));
  const Scalar _tmp748 = _tmp745 * _tmp747;
  const Scalar _tmp749 = _tmp743 * _tmp748;
  const Scalar _tmp750 = _tmp737 * _tmp749;
  const Scalar _tmp751 = _tmp741 * _tmp749;
  const Scalar _tmp752 = _tmp143 + matches_0_19_source_coords(1, 0);
  const Scalar _tmp753 = _tmp140 + matches_0_19_source_coords(0, 0);
  const Scalar _tmp754 = std::pow(
      Scalar(_tmp142 * std::pow(_tmp753, Scalar(2)) + _tmp145 * std::pow(_tmp752, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp755 = _tmp753 * _tmp754;
  const Scalar _tmp756 = _tmp752 * _tmp754;
  const Scalar _tmp757 =
      _tmp148 * _tmp755 + _tmp151 * _tmp756 + _tmp153 * landmarks_19_ + _tmp51 * _tmp754;
  const Scalar _tmp758 =
      _tmp159 * _tmp755 + _tmp160 * _tmp756 + _tmp161 * landmarks_19_ + _tmp48 * _tmp754;
  const Scalar _tmp759 =
      _tmp155 * _tmp756 + _tmp156 * _tmp755 + _tmp157 * landmarks_19_ + _tmp52 * _tmp754;
  const Scalar _tmp760 = _tmp758 * _tmp82 + _tmp759 * _tmp86;
  const Scalar _tmp761 = _tmp757 * _tmp76 + _tmp760;
  const Scalar _tmp762 = _tmp105 * _tmp759 + _tmp107 * _tmp757;
  const Scalar _tmp763 = _tmp103 * _tmp758 + _tmp762;
  const Scalar _tmp764 = std::fabs(_tmp763);
  const Scalar _tmp765 = std::max<Scalar>(_tmp764, epsilon);
  const Scalar _tmp766 = Scalar(1.0) / (_tmp765);
  const Scalar _tmp767 = _tmp766 * views_1_calibration(0, 0);
  const Scalar _tmp768 =
      _tmp761 * _tmp767 - matches_0_19_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp769 = _tmp757 * _tmp99 + _tmp758 * _tmp96;
  const Scalar _tmp770 = _tmp759 * _tmp93 + _tmp769;
  const Scalar _tmp771 = _tmp766 * views_1_calibration(1, 0);
  const Scalar _tmp772 =
      _tmp770 * _tmp771 - matches_0_19_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp773 = std::pow(_tmp768, Scalar(2)) + std::pow(_tmp772, Scalar(2)) + epsilon;
  const Scalar _tmp774 = std::pow(_tmp773, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp775 = _tmp181 * _tmp773 + 1;
  const Scalar _tmp776 = std::sqrt(_tmp186 * (std::pow(_tmp775, _tmp185) - 1));
  const Scalar _tmp777 = (((_tmp763) > 0) - ((_tmp763) < 0));
  const Scalar _tmp778 = std::sqrt(matches_0_19_weight) * std::sqrt(std::max<Scalar>(0, _tmp777));
  const Scalar _tmp779 = _tmp776 * _tmp778;
  const Scalar _tmp780 = _tmp774 * _tmp779;
  const Scalar _tmp781 = _tmp768 * _tmp780;
  const Scalar _tmp782 = _tmp772 * _tmp780;
  const Scalar _tmp783 = landmarks_0_ - matches_0_0_inverse_range_prior;
  const Scalar _tmp784 = epsilon + matches_0_0_inverse_range_prior_sigma;
  const Scalar _tmp785 = matches_0_0_weight / _tmp784;
  const Scalar _tmp786 = landmarks_1_ - matches_0_1_inverse_range_prior;
  const Scalar _tmp787 = epsilon + matches_0_1_inverse_range_prior_sigma;
  const Scalar _tmp788 = matches_0_1_weight / _tmp787;
  const Scalar _tmp789 = landmarks_2_ - matches_0_2_inverse_range_prior;
  const Scalar _tmp790 = epsilon + matches_0_2_inverse_range_prior_sigma;
  const Scalar _tmp791 = matches_0_2_weight / _tmp790;
  const Scalar _tmp792 = landmarks_3_ - matches_0_3_inverse_range_prior;
  const Scalar _tmp793 = epsilon + matches_0_3_inverse_range_prior_sigma;
  const Scalar _tmp794 = matches_0_3_weight / _tmp793;
  const Scalar _tmp795 = landmarks_4_ - matches_0_4_inverse_range_prior;
  const Scalar _tmp796 = epsilon + matches_0_4_inverse_range_prior_sigma;
  const Scalar _tmp797 = matches_0_4_weight / _tmp796;
  const Scalar _tmp798 = landmarks_5_ - matches_0_5_inverse_range_prior;
  const Scalar _tmp799 = epsilon + matches_0_5_inverse_range_prior_sigma;
  const Scalar _tmp800 = matches_0_5_weight / _tmp799;
  const Scalar _tmp801 = landmarks_6_ - matches_0_6_inverse_range_prior;
  const Scalar _tmp802 = epsilon + matches_0_6_inverse_range_prior_sigma;
  const Scalar _tmp803 = matches_0_6_weight / _tmp802;
  const Scalar _tmp804 = landmarks_7_ - matches_0_7_inverse_range_prior;
  const Scalar _tmp805 = epsilon + matches_0_7_inverse_range_prior_sigma;
  const Scalar _tmp806 = matches_0_7_weight / _tmp805;
  const Scalar _tmp807 = landmarks_8_ - matches_0_8_inverse_range_prior;
  const Scalar _tmp808 = epsilon + matches_0_8_inverse_range_prior_sigma;
  const Scalar _tmp809 = matches_0_8_weight / _tmp808;
  const Scalar _tmp810 = landmarks_9_ - matches_0_9_inverse_range_prior;
  const Scalar _tmp811 = epsilon + matches_0_9_inverse_range_prior_sigma;
  const Scalar _tmp812 = matches_0_9_weight / _tmp811;
  const Scalar _tmp813 = landmarks_10_ - matches_0_10_inverse_range_prior;
  const Scalar _tmp814 = epsilon + matches_0_10_inverse_range_prior_sigma;
  const Scalar _tmp815 = matches_0_10_weight / _tmp814;
  const Scalar _tmp816 = landmarks_11_ - matches_0_11_inverse_range_prior;
  const Scalar _tmp817 = epsilon + matches_0_11_inverse_range_prior_sigma;
  const Scalar _tmp818 = matches_0_11_weight / _tmp817;
  const Scalar _tmp819 = landmarks_12_ - matches_0_12_inverse_range_prior;
  const Scalar _tmp820 = epsilon + matches_0_12_inverse_range_prior_sigma;
  const Scalar _tmp821 = matches_0_12_weight / _tmp820;
  const Scalar _tmp822 = landmarks_13_ - matches_0_13_inverse_range_prior;
  const Scalar _tmp823 = epsilon + matches_0_13_inverse_range_prior_sigma;
  const Scalar _tmp824 = matches_0_13_weight / _tmp823;
  const Scalar _tmp825 = landmarks_14_ - matches_0_14_inverse_range_prior;
  const Scalar _tmp826 = epsilon + matches_0_14_inverse_range_prior_sigma;
  const Scalar _tmp827 = matches_0_14_weight / _tmp826;
  const Scalar _tmp828 = landmarks_15_ - matches_0_15_inverse_range_prior;
  const Scalar _tmp829 = epsilon + matches_0_15_inverse_range_prior_sigma;
  const Scalar _tmp830 = matches_0_15_weight / _tmp829;
  const Scalar _tmp831 = landmarks_16_ - matches_0_16_inverse_range_prior;
  const Scalar _tmp832 = epsilon + matches_0_16_inverse_range_prior_sigma;
  const Scalar _tmp833 = matches_0_16_weight / _tmp832;
  const Scalar _tmp834 = landmarks_17_ - matches_0_17_inverse_range_prior;
  const Scalar _tmp835 = epsilon + matches_0_17_inverse_range_prior_sigma;
  const Scalar _tmp836 = matches_0_17_weight / _tmp835;
  const Scalar _tmp837 = landmarks_18_ - matches_0_18_inverse_range_prior;
  const Scalar _tmp838 = epsilon + matches_0_18_inverse_range_prior_sigma;
  const Scalar _tmp839 = matches_0_18_weight / _tmp838;
  const Scalar _tmp840 = landmarks_19_ - matches_0_19_inverse_range_prior;
  const Scalar _tmp841 = epsilon + matches_0_19_inverse_range_prior_sigma;
  const Scalar _tmp842 = matches_0_19_weight / _tmp841;
  const Scalar _tmp843 = std::pow(_views_1_pose[3], Scalar(2));
  const Scalar _tmp844 = -_tmp843;
  const Scalar _tmp845 = _tmp70 + _tmp844;
  const Scalar _tmp846 = -_tmp73;
  const Scalar _tmp847 = _tmp846 + _tmp90;
  const Scalar _tmp848 = _tmp845 + _tmp847;
  const Scalar _tmp849 = -_tmp95;
  const Scalar _tmp850 = _tmp104 + _tmp849;
  const Scalar _tmp851 = -_tmp84;
  const Scalar _tmp852 = _tmp85 + _tmp851;
  const Scalar _tmp853 = _tmp560 * ((((_tmp41 + _tmp547) > 0) - ((_tmp41 + _tmp547) < 0)) + 1) /
                         std::pow(_tmp548, Scalar(2));
  const Scalar _tmp854 = _tmp853 * (_tmp540 * _tmp852 + _tmp541 * _tmp848 + _tmp542 * _tmp850);
  const Scalar _tmp855 = _tmp544 * _tmp854;
  const Scalar _tmp856 = -_tmp90;
  const Scalar _tmp857 = _tmp70 + _tmp843 + _tmp846 + _tmp856;
  const Scalar _tmp858 = _tmp553 * views_1_calibration(1, 0);
  const Scalar _tmp859 = (Scalar(1) / Scalar(2)) * _tmp858;
  const Scalar _tmp860 = _tmp554 * (_tmp542 * _tmp857 + _tmp545) - _tmp854 * _tmp859;
  const Scalar _tmp861 = 2 * _tmp555;
  const Scalar _tmp862 = -_tmp551 * _tmp855 * views_1_calibration(0, 0) + _tmp860 * _tmp861;
  const Scalar _tmp863 = _tmp562 / (_tmp556 * std::sqrt(_tmp556));
  const Scalar _tmp864 = _tmp555 * _tmp863;
  const Scalar _tmp865 = (Scalar(1) / Scalar(2)) * _tmp864;
  const Scalar _tmp866 = (Scalar(1) / Scalar(2)) * _tmp178;
  const Scalar _tmp867 = _tmp862 * _tmp866;
  const Scalar _tmp868 = _tmp185 - 1;
  const Scalar _tmp869 = _tmp557 * std::pow(_tmp558, _tmp868) * _tmp561 / _tmp559;
  const Scalar _tmp870 = _tmp555 * _tmp869;
  const Scalar _tmp871 = _tmp563 * _tmp860 - _tmp862 * _tmp865 + _tmp867 * _tmp870;
  const Scalar _tmp872 = (Scalar(1) / Scalar(2)) * _tmp17;
  const Scalar _tmp873 = (Scalar(1) / Scalar(2)) * _tmp18;
  const Scalar _tmp874 = (Scalar(1) / Scalar(2)) * _tmp19;
  const Scalar _tmp875 = (Scalar(1) / Scalar(2)) * _tmp20;
  const Scalar _tmp876 = _tmp872 - _tmp873 + _tmp874 - _tmp875;
  const Scalar _tmp877 = _priors_0_1_target_T_src[3] * _tmp876;
  const Scalar _tmp878 = (Scalar(1) / Scalar(2)) * _tmp27;
  const Scalar _tmp879 = (Scalar(1) / Scalar(2)) * _tmp28;
  const Scalar _tmp880 = (Scalar(1) / Scalar(2)) * _tmp29;
  const Scalar _tmp881 = (Scalar(1) / Scalar(2)) * _tmp30;
  const Scalar _tmp882 = -_tmp878 + _tmp879 + _tmp880 - _tmp881;
  const Scalar _tmp883 = (Scalar(1) / Scalar(2)) * _tmp15;
  const Scalar _tmp884 = (Scalar(1) / Scalar(2)) * _tmp12;
  const Scalar _tmp885 = (Scalar(1) / Scalar(2)) * _tmp13;
  const Scalar _tmp886 = (Scalar(1) / Scalar(2)) * _tmp14;
  const Scalar _tmp887 = _tmp883 + _tmp884 + _tmp885 + _tmp886;
  const Scalar _tmp888 = _priors_0_1_target_T_src[0] * _tmp887;
  const Scalar _tmp889 = (Scalar(1) / Scalar(2)) * _tmp22;
  const Scalar _tmp890 = (Scalar(1) / Scalar(2)) * _tmp23;
  const Scalar _tmp891 = (Scalar(1) / Scalar(2)) * _tmp24;
  const Scalar _tmp892 = (Scalar(1) / Scalar(2)) * _tmp25;
  const Scalar _tmp893 = _tmp889 + _tmp890 - _tmp891 - _tmp892;
  const Scalar _tmp894 = -_priors_0_1_target_T_src[2] * _tmp893 - _tmp888;
  const Scalar _tmp895 = -_priors_0_1_target_T_src[1] * _tmp882 - _tmp877 + _tmp894;
  const Scalar _tmp896 = std::fabs(_tmp33 + _tmp34 + _tmp35 + _tmp36);
  const Scalar _tmp897 = std::min<Scalar>(_tmp42, _tmp896);
  const Scalar _tmp898 = std::acos(_tmp897);
  const Scalar _tmp899 = 1 - std::pow(_tmp897, Scalar(2));
  const Scalar _tmp900 = _tmp39 * ((((_tmp42 - _tmp896) > 0) - ((_tmp42 - _tmp896) < 0)) + 1) *
                         (((-_tmp33 + _tmp37) > 0) - ((-_tmp33 + _tmp37) < 0));
  const Scalar _tmp901 = _tmp897 * _tmp898 * _tmp900 / (_tmp899 * std::sqrt(_tmp899));
  const Scalar _tmp902 = _tmp895 * _tmp901;
  const Scalar _tmp903 = _tmp56 * _tmp902;
  const Scalar _tmp904 = -_priors_0_1_target_T_src[1] * _tmp893;
  const Scalar _tmp905 = _priors_0_1_target_T_src[3] * _tmp887;
  const Scalar _tmp906 = -_priors_0_1_target_T_src[0] * _tmp876 + _tmp905;
  const Scalar _tmp907 = _priors_0_1_target_T_src[2] * _tmp882 + _tmp904 + _tmp906;
  const Scalar _tmp908 = _tmp898 / std::sqrt(_tmp899);
  const Scalar _tmp909 = _tmp40 * _tmp908;
  const Scalar _tmp910 = _tmp907 * _tmp909;
  const Scalar _tmp911 = _priors_0_1_target_T_src[0] * _tmp893;
  const Scalar _tmp912 = _priors_0_1_target_T_src[2] * _tmp887;
  const Scalar _tmp913 = -_priors_0_1_target_T_src[1] * _tmp876 - _tmp912;
  const Scalar _tmp914 = _priors_0_1_target_T_src[3] * _tmp882 + _tmp911 + _tmp913;
  const Scalar _tmp915 = _tmp909 * _tmp914;
  const Scalar _tmp916 = _tmp900 / _tmp899;
  const Scalar _tmp917 = _tmp895 * _tmp916;
  const Scalar _tmp918 = _tmp56 * _tmp917;
  const Scalar _tmp919 = _tmp54 * _tmp917;
  const Scalar _tmp920 = _tmp54 * priors_0_1_sqrt_info(4, 0);
  const Scalar _tmp921 = _tmp32 * _tmp902;
  const Scalar _tmp922 = _priors_0_1_target_T_src[1] * _tmp887;
  const Scalar _tmp923 = _priors_0_1_target_T_src[3] * _tmp893;
  const Scalar _tmp924 = _priors_0_1_target_T_src[2] * _tmp876;
  const Scalar _tmp925 =
      _tmp909 * (-_priors_0_1_target_T_src[0] * _tmp882 + _tmp922 + _tmp923 - _tmp924);
  const Scalar _tmp926 = _tmp32 * _tmp917;
  const Scalar _tmp927 =
      _tmp902 * _tmp920 + _tmp903 * priors_0_1_sqrt_info(4, 2) +
      _tmp910 * priors_0_1_sqrt_info(4, 0) + _tmp915 * priors_0_1_sqrt_info(4, 1) -
      _tmp918 * priors_0_1_sqrt_info(4, 2) - _tmp919 * priors_0_1_sqrt_info(4, 0) +
      _tmp921 * priors_0_1_sqrt_info(4, 1) + _tmp925 * priors_0_1_sqrt_info(4, 2) -
      _tmp926 * priors_0_1_sqrt_info(4, 1);
  const Scalar _tmp928 = _tmp188 * ((((_tmp167 + _tmp41) > 0) - ((_tmp167 + _tmp41) < 0)) + 1) /
                         std::pow(_tmp168, Scalar(2));
  const Scalar _tmp929 = _tmp928 * (_tmp154 * _tmp852 + _tmp158 * _tmp848 + _tmp162 * _tmp850);
  const Scalar _tmp930 = _tmp164 * _tmp929;
  const Scalar _tmp931 = (Scalar(1) / Scalar(2)) * views_1_calibration(1, 0);
  const Scalar _tmp932 = _tmp173 * _tmp931;
  const Scalar _tmp933 = _tmp174 * (_tmp162 * _tmp857 + _tmp165) - _tmp929 * _tmp932;
  const Scalar _tmp934 = 2 * _tmp175;
  const Scalar _tmp935 = -_tmp171 * _tmp930 * views_1_calibration(0, 0) + _tmp933 * _tmp934;
  const Scalar _tmp936 = _tmp190 / (_tmp176 * std::sqrt(_tmp176));
  const Scalar _tmp937 = (Scalar(1) / Scalar(2)) * _tmp171;
  const Scalar _tmp938 = _tmp936 * _tmp937;
  const Scalar _tmp939 = (Scalar(1) / Scalar(2)) * views_1_calibration(0, 0);
  const Scalar _tmp940 = _tmp177 * _tmp178 * std::pow(_tmp182, _tmp868) * _tmp189 / _tmp187;
  const Scalar _tmp941 = _tmp937 * _tmp940;
  const Scalar _tmp942 = -_tmp191 * _tmp930 * _tmp939 - _tmp935 * _tmp938 + _tmp935 * _tmp941;
  const Scalar _tmp943 = -_tmp883 - _tmp884 - _tmp885 - _tmp886;
  const Scalar _tmp944 = _priors_1_0_target_T_src[0] * _tmp943;
  const Scalar _tmp945 = -_tmp944;
  const Scalar _tmp946 = -_tmp889 - _tmp890 + _tmp891 + _tmp892;
  const Scalar _tmp947 = _priors_1_0_target_T_src[3] * _tmp876;
  const Scalar _tmp948 = _tmp878 - _tmp879 - _tmp880 + _tmp881;
  const Scalar _tmp949 = -_priors_1_0_target_T_src[1] * _tmp948;
  const Scalar _tmp950 = -_priors_1_0_target_T_src[2] * _tmp946 + _tmp945 - _tmp947 + _tmp949;
  const Scalar _tmp951 = std::fabs(_tmp116 + _tmp117 + _tmp118 + _tmp119);
  const Scalar _tmp952 = std::min<Scalar>(_tmp42, _tmp951);
  const Scalar _tmp953 = 1 - std::pow(_tmp952, Scalar(2));
  const Scalar _tmp954 = _tmp125 * ((((_tmp42 - _tmp951) > 0) - ((_tmp42 - _tmp951) < 0)) + 1) *
                         (((-_tmp116 + _tmp120) > 0) - ((-_tmp116 + _tmp120) < 0));
  const Scalar _tmp955 = _tmp954 / _tmp953;
  const Scalar _tmp956 = _tmp130 * _tmp955;
  const Scalar _tmp957 = _tmp950 * _tmp956;
  const Scalar _tmp958 = _priors_1_0_target_T_src[2] * _tmp943;
  const Scalar _tmp959 = -_tmp958;
  const Scalar _tmp960 = -_priors_1_0_target_T_src[1] * _tmp876;
  const Scalar _tmp961 = _priors_1_0_target_T_src[3] * _tmp948;
  const Scalar _tmp962 = std::acos(_tmp952);
  const Scalar _tmp963 = _tmp962 / std::sqrt(_tmp953);
  const Scalar _tmp964 = _tmp126 * _tmp963;
  const Scalar _tmp965 =
      _tmp964 * (_priors_1_0_target_T_src[0] * _tmp946 + _tmp959 + _tmp960 + _tmp961);
  const Scalar _tmp966 = _priors_1_0_target_T_src[1] * _tmp943;
  const Scalar _tmp967 = -_priors_1_0_target_T_src[2] * _tmp876;
  const Scalar _tmp968 = -_priors_1_0_target_T_src[0] * _tmp948;
  const Scalar _tmp969 = _priors_1_0_target_T_src[3] * _tmp946 + _tmp966 + _tmp967 + _tmp968;
  const Scalar _tmp970 = _tmp964 * _tmp969;
  const Scalar _tmp971 =
      -_tmp106 - _tmp108 + _tmp109 + _tmp857 * _views_0_pose[6] - _tmp857 * _views_1_pose[6];
  const Scalar _tmp972 = _tmp848 * _views_0_pose[5] - _tmp848 * _views_1_pose[5] +
                         _tmp850 * _views_0_pose[6] - _tmp850 * _views_1_pose[6] +
                         _tmp852 * _views_0_pose[4] - _tmp852 * _views_1_pose[4];
  const Scalar _tmp973 = _tmp952 * _tmp954 * _tmp962 / (_tmp953 * std::sqrt(_tmp953));
  const Scalar _tmp974 = _tmp950 * _tmp973;
  const Scalar _tmp975 = _tmp130 * _tmp974;
  const Scalar _tmp976 = _tmp128 * _tmp974;
  const Scalar _tmp977 = _tmp114 * _tmp973;
  const Scalar _tmp978 = _tmp950 * _tmp977;
  const Scalar _tmp979 = _tmp114 * _tmp955;
  const Scalar _tmp980 = _tmp950 * _tmp979;
  const Scalar _tmp981 = _tmp128 * _tmp955;
  const Scalar _tmp982 = _tmp950 * _tmp981;
  const Scalar _tmp983 = _priors_1_0_target_T_src[3] * _tmp943;
  const Scalar _tmp984 = _priors_1_0_target_T_src[0] * _tmp876;
  const Scalar _tmp985 = _priors_1_0_target_T_src[2] * _tmp948;
  const Scalar _tmp986 =
      _tmp964 * (-_priors_1_0_target_T_src[1] * _tmp946 + _tmp983 - _tmp984 + _tmp985);
  const Scalar _tmp987 =
      -_tmp957 * priors_1_0_sqrt_info(1, 0) + _tmp965 * priors_1_0_sqrt_info(1, 1) +
      _tmp970 * priors_1_0_sqrt_info(1, 2) + _tmp971 * priors_1_0_sqrt_info(1, 4) +
      _tmp972 * priors_1_0_sqrt_info(1, 5) + _tmp975 * priors_1_0_sqrt_info(1, 0) +
      _tmp976 * priors_1_0_sqrt_info(1, 1) + _tmp978 * priors_1_0_sqrt_info(1, 2) -
      _tmp980 * priors_1_0_sqrt_info(1, 2) - _tmp982 * priors_1_0_sqrt_info(1, 1) +
      _tmp986 * priors_1_0_sqrt_info(1, 0);
  const Scalar _tmp988 = _tmp620 * ((((_tmp41 + _tmp609) > 0) - ((_tmp41 + _tmp609) < 0)) + 1) /
                         std::pow(_tmp610, Scalar(2));
  const Scalar _tmp989 = _tmp988 * (_tmp602 * _tmp852 + _tmp603 * _tmp850 + _tmp604 * _tmp848);
  const Scalar _tmp990 = _tmp615 * _tmp931;
  const Scalar _tmp991 = _tmp616 * (_tmp603 * _tmp857 + _tmp607) - _tmp989 * _tmp990;
  const Scalar _tmp992 = 2 * _tmp617;
  const Scalar _tmp993 =
      -_tmp606 * _tmp613 * _tmp989 * views_1_calibration(0, 0) + _tmp991 * _tmp992;
  const Scalar _tmp994 = (Scalar(1) / Scalar(2)) * _tmp617;
  const Scalar _tmp995 = _tmp178 * _tmp619 * _tmp621 * std::pow(_tmp622, _tmp868) / _tmp623;
  const Scalar _tmp996 = _tmp994 * _tmp995;
  const Scalar _tmp997 = _tmp624 / (_tmp618 * std::sqrt(_tmp618));
  const Scalar _tmp998 = _tmp994 * _tmp997;
  const Scalar _tmp999 = _tmp625 * _tmp991 + _tmp993 * _tmp996 - _tmp993 * _tmp998;
  const Scalar _tmp1000 =
      -_tmp957 * priors_1_0_sqrt_info(2, 0) + _tmp965 * priors_1_0_sqrt_info(2, 1) +
      _tmp970 * priors_1_0_sqrt_info(2, 2) + _tmp971 * priors_1_0_sqrt_info(2, 4) +
      _tmp972 * priors_1_0_sqrt_info(2, 5) + _tmp975 * priors_1_0_sqrt_info(2, 0) +
      _tmp976 * priors_1_0_sqrt_info(2, 1) + _tmp978 * priors_1_0_sqrt_info(2, 2) -
      _tmp980 * priors_1_0_sqrt_info(2, 2) - _tmp982 * priors_1_0_sqrt_info(2, 1) +
      _tmp986 * priors_1_0_sqrt_info(2, 0);
  const Scalar _tmp1001 = _tmp354 * _tmp852 + _tmp355 * _tmp850 + _tmp356 * _tmp848;
  const Scalar _tmp1002 = _tmp372 * ((((_tmp361 + _tmp41) > 0) - ((_tmp361 + _tmp41) < 0)) + 1) /
                          std::pow(_tmp362, Scalar(2));
  const Scalar _tmp1003 = _tmp1002 * _tmp367;
  const Scalar _tmp1004 = _tmp1003 * _tmp931;
  const Scalar _tmp1005 = -_tmp1001 * _tmp1004 + _tmp368 * (_tmp355 * _tmp857 + _tmp359);
  const Scalar _tmp1006 = 2 * _tmp369;
  const Scalar _tmp1007 = _tmp1002 * _tmp358;
  const Scalar _tmp1008 =
      -_tmp1001 * _tmp1007 * _tmp365 * views_1_calibration(0, 0) + _tmp1005 * _tmp1006;
  const Scalar _tmp1009 = _tmp376 / (_tmp370 * std::sqrt(_tmp370));
  const Scalar _tmp1010 = (Scalar(1) / Scalar(2)) * _tmp369;
  const Scalar _tmp1011 = _tmp1009 * _tmp1010;
  const Scalar _tmp1012 = _tmp178 * _tmp371 * _tmp373 * std::pow(_tmp374, _tmp868) / _tmp375;
  const Scalar _tmp1013 = _tmp1010 * _tmp1012;
  const Scalar _tmp1014 = _tmp1005 * _tmp377 - _tmp1008 * _tmp1011 + _tmp1008 * _tmp1013;
  const Scalar _tmp1015 = _tmp1007 * _tmp939;
  const Scalar _tmp1016 = (Scalar(1) / Scalar(2)) * _tmp365;
  const Scalar _tmp1017 = _tmp1008 * _tmp1016;
  const Scalar _tmp1018 =
      -_tmp1001 * _tmp1015 * _tmp377 - _tmp1009 * _tmp1017 + _tmp1012 * _tmp1017;
  const Scalar _tmp1019 = _tmp551 * _tmp863;
  const Scalar _tmp1020 = (Scalar(1) / Scalar(2)) * _tmp1019;
  const Scalar _tmp1021 = _tmp551 * _tmp869;
  const Scalar _tmp1022 = -_tmp1020 * _tmp862 + _tmp1021 * _tmp867 - _tmp563 * _tmp855 * _tmp939;
  const Scalar _tmp1023 = _tmp199 * _tmp852 + _tmp200 * _tmp848 + _tmp201 * _tmp850;
  const Scalar _tmp1024 = _tmp219 * ((((_tmp206 + _tmp41) > 0) - ((_tmp206 + _tmp41) < 0)) + 1) /
                          std::pow(_tmp207, Scalar(2));
  const Scalar _tmp1025 = _tmp1024 * _tmp212;
  const Scalar _tmp1026 = _tmp1025 * _tmp931;
  const Scalar _tmp1027 = -_tmp1023 * _tmp1026 + _tmp213 * (_tmp201 * _tmp857 + _tmp204);
  const Scalar _tmp1028 = 2 * _tmp214;
  const Scalar _tmp1029 = _tmp1024 * _tmp203;
  const Scalar _tmp1030 =
      -_tmp1023 * _tmp1029 * _tmp210 * views_1_calibration(0, 0) + _tmp1027 * _tmp1028;
  const Scalar _tmp1031 = _tmp221 / (_tmp215 * std::sqrt(_tmp215));
  const Scalar _tmp1032 = (Scalar(1) / Scalar(2)) * _tmp210;
  const Scalar _tmp1033 = _tmp1031 * _tmp1032;
  const Scalar _tmp1034 = _tmp1029 * _tmp939;
  const Scalar _tmp1035 = _tmp178 * _tmp216 * std::pow(_tmp217, _tmp868) * _tmp220 / _tmp218;
  const Scalar _tmp1036 = _tmp1032 * _tmp1035;
  const Scalar _tmp1037 =
      -_tmp1023 * _tmp1034 * _tmp222 - _tmp1030 * _tmp1033 + _tmp1030 * _tmp1036;
  const Scalar _tmp1038 = _tmp292 * _tmp852 + _tmp293 * _tmp848 + _tmp294 * _tmp850;
  const Scalar _tmp1039 = _tmp312 * ((((_tmp299 + _tmp41) > 0) - ((_tmp299 + _tmp41) < 0)) + 1) /
                          std::pow(_tmp300, Scalar(2));
  const Scalar _tmp1040 = _tmp1039 * _tmp296;
  const Scalar _tmp1041 = _tmp1038 * _tmp1040;
  const Scalar _tmp1042 = _tmp1039 * _tmp305;
  const Scalar _tmp1043 = _tmp1042 * _tmp931;
  const Scalar _tmp1044 = -_tmp1038 * _tmp1043 + _tmp306 * (_tmp294 * _tmp857 + _tmp297);
  const Scalar _tmp1045 = 2 * _tmp307;
  const Scalar _tmp1046 = -_tmp1041 * _tmp303 * views_1_calibration(0, 0) + _tmp1044 * _tmp1045;
  const Scalar _tmp1047 = (Scalar(1) / Scalar(2)) * _tmp303;
  const Scalar _tmp1048 = _tmp178 * _tmp309 * std::pow(_tmp310, _tmp868) * _tmp313 / _tmp311;
  const Scalar _tmp1049 = _tmp1047 * _tmp1048;
  const Scalar _tmp1050 = _tmp314 / (_tmp308 * std::sqrt(_tmp308));
  const Scalar _tmp1051 = _tmp1047 * _tmp1050;
  const Scalar _tmp1052 = -_tmp1041 * _tmp315 * _tmp939 + _tmp1046 * _tmp1049 - _tmp1046 * _tmp1051;
  const Scalar _tmp1053 = _tmp664 * _tmp852 + _tmp665 * _tmp850 + _tmp666 * _tmp848;
  const Scalar _tmp1054 = _tmp684 * ((((_tmp41 + _tmp671) > 0) - ((_tmp41 + _tmp671) < 0)) + 1) /
                          std::pow(_tmp672, Scalar(2));
  const Scalar _tmp1055 = _tmp1054 * _tmp677;
  const Scalar _tmp1056 = _tmp1055 * _tmp931;
  const Scalar _tmp1057 = -_tmp1053 * _tmp1056 + _tmp678 * (_tmp665 * _tmp857 + _tmp669);
  const Scalar _tmp1058 = 2 * _tmp679;
  const Scalar _tmp1059 = _tmp1054 * _tmp668;
  const Scalar _tmp1060 =
      -_tmp1053 * _tmp1059 * _tmp675 * views_1_calibration(0, 0) + _tmp1057 * _tmp1058;
  const Scalar _tmp1061 = (Scalar(1) / Scalar(2)) * _tmp679;
  const Scalar _tmp1062 = _tmp686 / (_tmp680 * std::sqrt(_tmp680));
  const Scalar _tmp1063 = _tmp1061 * _tmp1062;
  const Scalar _tmp1064 = _tmp178 * _tmp681 * std::pow(_tmp682, _tmp868) * _tmp685 / _tmp683;
  const Scalar _tmp1065 = _tmp1061 * _tmp1064;
  const Scalar _tmp1066 = _tmp1057 * _tmp687 - _tmp1060 * _tmp1063 + _tmp1060 * _tmp1065;
  const Scalar _tmp1067 = _tmp65 * _tmp908;
  const Scalar _tmp1068 = _tmp54 * _tmp902;
  const Scalar _tmp1069 = _tmp32 * priors_0_1_sqrt_info(2, 1);
  const Scalar _tmp1070 =
      _tmp1067 * _tmp907 + _tmp1068 * priors_0_1_sqrt_info(2, 0) + _tmp1069 * _tmp902 +
      _tmp903 * priors_0_1_sqrt_info(2, 2) + _tmp915 * priors_0_1_sqrt_info(2, 1) -
      _tmp918 * priors_0_1_sqrt_info(2, 2) - _tmp919 * priors_0_1_sqrt_info(2, 0) +
      _tmp925 * priors_0_1_sqrt_info(2, 2) - _tmp926 * priors_0_1_sqrt_info(2, 1);
  const Scalar _tmp1071 = (Scalar(1) / Scalar(2)) * _tmp307;
  const Scalar _tmp1072 = _tmp1048 * _tmp1071;
  const Scalar _tmp1073 = _tmp1050 * _tmp1071;
  const Scalar _tmp1074 = _tmp1044 * _tmp315 + _tmp1046 * _tmp1072 - _tmp1046 * _tmp1073;
  const Scalar _tmp1075 = _tmp323 * _tmp852 + _tmp324 * _tmp848 + _tmp325 * _tmp850;
  const Scalar _tmp1076 = _tmp343 * ((((_tmp330 + _tmp41) > 0) - ((_tmp330 + _tmp41) < 0)) + 1) /
                          std::pow(_tmp331, Scalar(2));
  const Scalar _tmp1077 = _tmp1076 * _tmp336;
  const Scalar _tmp1078 = _tmp1077 * _tmp931;
  const Scalar _tmp1079 = -_tmp1075 * _tmp1078 + _tmp337 * (_tmp325 * _tmp857 + _tmp328);
  const Scalar _tmp1080 = 2 * _tmp338;
  const Scalar _tmp1081 = _tmp1076 * _tmp327;
  const Scalar _tmp1082 =
      -_tmp1075 * _tmp1081 * _tmp334 * views_1_calibration(0, 0) + _tmp1079 * _tmp1080;
  const Scalar _tmp1083 = _tmp345 / (_tmp339 * std::sqrt(_tmp339));
  const Scalar _tmp1084 = (Scalar(1) / Scalar(2)) * _tmp338;
  const Scalar _tmp1085 = _tmp1083 * _tmp1084;
  const Scalar _tmp1086 = _tmp178 * _tmp340 * std::pow(_tmp341, _tmp868) * _tmp344 / _tmp342;
  const Scalar _tmp1087 = _tmp1084 * _tmp1086;
  const Scalar _tmp1088 = _tmp1079 * _tmp346 - _tmp1082 * _tmp1085 + _tmp1082 * _tmp1087;
  const Scalar _tmp1089 = (((_tmp392 + _tmp41) > 0) - ((_tmp392 + _tmp41) < 0)) + 1;
  const Scalar _tmp1090 = std::pow(_tmp393, Scalar(-2));
  const Scalar _tmp1091 = _tmp1089 * _tmp1090 * _tmp405;
  const Scalar _tmp1092 = _tmp1091 * (_tmp385 * _tmp852 + _tmp386 * _tmp848 + _tmp387 * _tmp850);
  const Scalar _tmp1093 = _tmp398 * _tmp931;
  const Scalar _tmp1094 = -_tmp1092 * _tmp1093 + _tmp399 * (_tmp387 * _tmp857 + _tmp390);
  const Scalar _tmp1095 = 2 * _tmp400;
  const Scalar _tmp1096 =
      -_tmp1092 * _tmp389 * _tmp396 * views_1_calibration(0, 0) + _tmp1094 * _tmp1095;
  const Scalar _tmp1097 = (Scalar(1) / Scalar(2)) * _tmp400;
  const Scalar _tmp1098 = _tmp178 * _tmp402 * std::pow(_tmp403, _tmp868) * _tmp406 / _tmp404;
  const Scalar _tmp1099 = _tmp1097 * _tmp1098;
  const Scalar _tmp1100 = _tmp407 / (_tmp401 * std::sqrt(_tmp401));
  const Scalar _tmp1101 = _tmp1097 * _tmp1100;
  const Scalar _tmp1102 = _tmp1094 * _tmp408 + _tmp1096 * _tmp1099 - _tmp1096 * _tmp1101;
  const Scalar _tmp1103 = _tmp571 * _tmp852 + _tmp572 * _tmp850 + _tmp573 * _tmp848;
  const Scalar _tmp1104 = _tmp591 * ((((_tmp41 + _tmp578) > 0) - ((_tmp41 + _tmp578) < 0)) + 1) /
                          std::pow(_tmp579, Scalar(2));
  const Scalar _tmp1105 = _tmp1104 * _tmp575;
  const Scalar _tmp1106 = _tmp1103 * _tmp1105;
  const Scalar _tmp1107 = _tmp1104 * _tmp584;
  const Scalar _tmp1108 = _tmp1107 * _tmp931;
  const Scalar _tmp1109 = -_tmp1103 * _tmp1108 + _tmp585 * (_tmp572 * _tmp857 + _tmp576);
  const Scalar _tmp1110 = 2 * _tmp586;
  const Scalar _tmp1111 = -_tmp1106 * _tmp582 * views_1_calibration(0, 0) + _tmp1109 * _tmp1110;
  const Scalar _tmp1112 = _tmp593 / (_tmp587 * std::sqrt(_tmp587));
  const Scalar _tmp1113 = (Scalar(1) / Scalar(2)) * _tmp582;
  const Scalar _tmp1114 = _tmp1112 * _tmp1113;
  const Scalar _tmp1115 = _tmp178 * _tmp588 * std::pow(_tmp589, _tmp868) * _tmp592 / _tmp590;
  const Scalar _tmp1116 = _tmp1113 * _tmp1115;
  const Scalar _tmp1117 = -_tmp1106 * _tmp594 * _tmp939 - _tmp1111 * _tmp1114 + _tmp1111 * _tmp1116;
  const Scalar _tmp1118 = _tmp416 * _tmp852 + _tmp417 * _tmp850 + _tmp418 * _tmp848;
  const Scalar _tmp1119 = _tmp434 * ((((_tmp41 + _tmp423) > 0) - ((_tmp41 + _tmp423) < 0)) + 1) /
                          std::pow(_tmp424, Scalar(2));
  const Scalar _tmp1120 = _tmp1119 * _tmp420;
  const Scalar _tmp1121 = _tmp1120 * _tmp939;
  const Scalar _tmp1122 = _tmp1119 * _tmp429;
  const Scalar _tmp1123 = _tmp1122 * _tmp931;
  const Scalar _tmp1124 = -_tmp1118 * _tmp1123 + _tmp430 * (_tmp417 * _tmp857 + _tmp421);
  const Scalar _tmp1125 = 2 * _tmp431;
  const Scalar _tmp1126 =
      -_tmp1118 * _tmp1120 * _tmp427 * views_1_calibration(0, 0) + _tmp1124 * _tmp1125;
  const Scalar _tmp1127 = (Scalar(1) / Scalar(2)) * _tmp427;
  const Scalar _tmp1128 = _tmp1126 * _tmp1127;
  const Scalar _tmp1129 = _tmp178 * _tmp433 * _tmp435 * std::pow(_tmp436, _tmp868) / _tmp437;
  const Scalar _tmp1130 = _tmp438 / (_tmp432 * std::sqrt(_tmp432));
  const Scalar _tmp1131 =
      -_tmp1118 * _tmp1121 * _tmp439 + _tmp1128 * _tmp1129 - _tmp1128 * _tmp1130;
  const Scalar _tmp1132 = (Scalar(1) / Scalar(2)) * _tmp586;
  const Scalar _tmp1133 = _tmp1111 * _tmp1132;
  const Scalar _tmp1134 = _tmp1109 * _tmp594 - _tmp1112 * _tmp1133 + _tmp1115 * _tmp1133;
  const Scalar _tmp1135 = _tmp447 * _tmp852 + _tmp448 * _tmp848 + _tmp449 * _tmp850;
  const Scalar _tmp1136 = _tmp467 * ((((_tmp41 + _tmp454) > 0) - ((_tmp41 + _tmp454) < 0)) + 1) /
                          std::pow(_tmp455, Scalar(2));
  const Scalar _tmp1137 = _tmp1136 * _tmp451;
  const Scalar _tmp1138 = _tmp1135 * _tmp1137;
  const Scalar _tmp1139 = _tmp1136 * _tmp460;
  const Scalar _tmp1140 = _tmp1139 * _tmp931;
  const Scalar _tmp1141 = -_tmp1135 * _tmp1140 + _tmp461 * (_tmp449 * _tmp857 + _tmp452);
  const Scalar _tmp1142 = 2 * _tmp462;
  const Scalar _tmp1143 = -_tmp1138 * _tmp458 * views_1_calibration(0, 0) + _tmp1141 * _tmp1142;
  const Scalar _tmp1144 = (Scalar(1) / Scalar(2)) * _tmp458;
  const Scalar _tmp1145 = _tmp469 / (_tmp463 * std::sqrt(_tmp463));
  const Scalar _tmp1146 = _tmp1144 * _tmp1145;
  const Scalar _tmp1147 = _tmp178 * _tmp464 * std::pow(_tmp465, _tmp868) * _tmp468 / _tmp466;
  const Scalar _tmp1148 = _tmp1144 * _tmp1147;
  const Scalar _tmp1149 = -_tmp1138 * _tmp470 * _tmp939 - _tmp1143 * _tmp1146 + _tmp1143 * _tmp1148;
  const Scalar _tmp1150 =
      -_tmp957 * priors_1_0_sqrt_info(4, 0) + _tmp965 * priors_1_0_sqrt_info(4, 1) +
      _tmp970 * priors_1_0_sqrt_info(4, 2) + _tmp971 * priors_1_0_sqrt_info(4, 4) +
      _tmp972 * priors_1_0_sqrt_info(4, 5) + _tmp975 * priors_1_0_sqrt_info(4, 0) +
      _tmp976 * priors_1_0_sqrt_info(4, 1) + _tmp978 * priors_1_0_sqrt_info(4, 2) -
      _tmp980 * priors_1_0_sqrt_info(4, 2) - _tmp982 * priors_1_0_sqrt_info(4, 1) +
      _tmp986 * priors_1_0_sqrt_info(4, 0);
  const Scalar _tmp1151 = _tmp757 * _tmp852 + _tmp758 * _tmp850 + _tmp759 * _tmp848;
  const Scalar _tmp1152 = _tmp777 * ((((_tmp41 + _tmp764) > 0) - ((_tmp41 + _tmp764) < 0)) + 1) /
                          std::pow(_tmp765, Scalar(2));
  const Scalar _tmp1153 = _tmp1152 * _tmp770;
  const Scalar _tmp1154 = _tmp1153 * _tmp931;
  const Scalar _tmp1155 = -_tmp1151 * _tmp1154 + _tmp771 * (_tmp758 * _tmp857 + _tmp762);
  const Scalar _tmp1156 = _tmp1152 * _tmp761;
  const Scalar _tmp1157 = 2 * _tmp772;
  const Scalar _tmp1158 =
      -_tmp1151 * _tmp1156 * _tmp768 * views_1_calibration(0, 0) + _tmp1155 * _tmp1157;
  const Scalar _tmp1159 = _tmp178 * _tmp774 * std::pow(_tmp775, _tmp868) * _tmp778 / _tmp776;
  const Scalar _tmp1160 = (Scalar(1) / Scalar(2)) * _tmp1159;
  const Scalar _tmp1161 = _tmp1158 * _tmp1160;
  const Scalar _tmp1162 = _tmp779 / (_tmp773 * std::sqrt(_tmp773));
  const Scalar _tmp1163 = (Scalar(1) / Scalar(2)) * _tmp1162;
  const Scalar _tmp1164 = _tmp1163 * _tmp772;
  const Scalar _tmp1165 = _tmp1155 * _tmp780 - _tmp1158 * _tmp1164 + _tmp1161 * _tmp772;
  const Scalar _tmp1166 = _tmp633 * _tmp852 + _tmp634 * _tmp850 + _tmp635 * _tmp848;
  const Scalar _tmp1167 = _tmp651 * ((((_tmp41 + _tmp640) > 0) - ((_tmp41 + _tmp640) < 0)) + 1) /
                          std::pow(_tmp641, Scalar(2));
  const Scalar _tmp1168 = _tmp1167 * _tmp646;
  const Scalar _tmp1169 = _tmp1168 * _tmp931;
  const Scalar _tmp1170 = -_tmp1166 * _tmp1169 + _tmp647 * (_tmp634 * _tmp857 + _tmp638);
  const Scalar _tmp1171 = 2 * _tmp648;
  const Scalar _tmp1172 = _tmp1167 * _tmp637;
  const Scalar _tmp1173 =
      -_tmp1166 * _tmp1172 * _tmp644 * views_1_calibration(0, 0) + _tmp1170 * _tmp1171;
  const Scalar _tmp1174 = (Scalar(1) / Scalar(2)) * _tmp648;
  const Scalar _tmp1175 = _tmp1173 * _tmp1174;
  const Scalar _tmp1176 = _tmp178 * _tmp650 * _tmp652 * std::pow(_tmp653, _tmp868) / _tmp654;
  const Scalar _tmp1177 = _tmp655 / (_tmp649 * std::sqrt(_tmp649));
  const Scalar _tmp1178 = _tmp1170 * _tmp656 + _tmp1175 * _tmp1176 - _tmp1175 * _tmp1177;
  const Scalar _tmp1179 = _tmp115 * _tmp955;
  const Scalar _tmp1180 =
      _tmp115 * _tmp974 - _tmp1179 * _tmp950 - _tmp957 * priors_1_0_sqrt_info(0, 0) +
      _tmp965 * priors_1_0_sqrt_info(0, 1) + _tmp970 * priors_1_0_sqrt_info(0, 2) +
      _tmp971 * priors_1_0_sqrt_info(0, 4) + _tmp972 * priors_1_0_sqrt_info(0, 5) +
      _tmp975 * priors_1_0_sqrt_info(0, 0) + _tmp976 * priors_1_0_sqrt_info(0, 1) -
      _tmp982 * priors_1_0_sqrt_info(0, 1) + _tmp986 * priors_1_0_sqrt_info(0, 0);
  const Scalar _tmp1181 = _tmp606 * _tmp939;
  const Scalar _tmp1182 = (Scalar(1) / Scalar(2)) * _tmp613;
  const Scalar _tmp1183 = _tmp1182 * _tmp997;
  const Scalar _tmp1184 = _tmp1182 * _tmp995;
  const Scalar _tmp1185 = -_tmp1181 * _tmp625 * _tmp989 - _tmp1183 * _tmp993 + _tmp1184 * _tmp993;
  const Scalar _tmp1186 = (Scalar(1) / Scalar(2)) * _tmp431;
  const Scalar _tmp1187 = _tmp1129 * _tmp1186;
  const Scalar _tmp1188 = _tmp1130 * _tmp1186;
  const Scalar _tmp1189 = _tmp1124 * _tmp439 + _tmp1126 * _tmp1187 - _tmp1126 * _tmp1188;
  const Scalar _tmp1190 = _tmp261 * _tmp852 + _tmp262 * _tmp850 + _tmp263 * _tmp848;
  const Scalar _tmp1191 = _tmp279 * ((((_tmp268 + _tmp41) > 0) - ((_tmp268 + _tmp41) < 0)) + 1) /
                          std::pow(_tmp269, Scalar(2));
  const Scalar _tmp1192 = _tmp1191 * _tmp274;
  const Scalar _tmp1193 = _tmp1192 * _tmp931;
  const Scalar _tmp1194 = -_tmp1190 * _tmp1193 + _tmp275 * (_tmp262 * _tmp857 + _tmp266);
  const Scalar _tmp1195 = 2 * _tmp276;
  const Scalar _tmp1196 = _tmp1191 * _tmp265;
  const Scalar _tmp1197 = _tmp1190 * _tmp1196;
  const Scalar _tmp1198 = _tmp1194 * _tmp1195 - _tmp1197 * _tmp272 * views_1_calibration(0, 0);
  const Scalar _tmp1199 = _tmp283 / (_tmp277 * std::sqrt(_tmp277));
  const Scalar _tmp1200 = (Scalar(1) / Scalar(2)) * _tmp276;
  const Scalar _tmp1201 = _tmp1199 * _tmp1200;
  const Scalar _tmp1202 = _tmp178 * _tmp278 * _tmp280 * std::pow(_tmp281, _tmp868) / _tmp282;
  const Scalar _tmp1203 = _tmp1200 * _tmp1202;
  const Scalar _tmp1204 = _tmp1194 * _tmp284 - _tmp1198 * _tmp1201 + _tmp1198 * _tmp1203;
  const Scalar _tmp1205 = _tmp726 * _tmp852 + _tmp727 * _tmp850 + _tmp728 * _tmp848;
  const Scalar _tmp1206 = _tmp744 * ((((_tmp41 + _tmp733) > 0) - ((_tmp41 + _tmp733) < 0)) + 1) /
                          std::pow(_tmp734, Scalar(2));
  const Scalar _tmp1207 = _tmp1206 * _tmp739;
  const Scalar _tmp1208 = _tmp1207 * _tmp931;
  const Scalar _tmp1209 = -_tmp1205 * _tmp1208 + _tmp740 * (_tmp727 * _tmp857 + _tmp731);
  const Scalar _tmp1210 = 2 * _tmp741;
  const Scalar _tmp1211 = _tmp1206 * _tmp730;
  const Scalar _tmp1212 =
      -_tmp1205 * _tmp1211 * _tmp737 * views_1_calibration(0, 0) + _tmp1209 * _tmp1210;
  const Scalar _tmp1213 = _tmp748 / (_tmp742 * std::sqrt(_tmp742));
  const Scalar _tmp1214 = (Scalar(1) / Scalar(2)) * _tmp737;
  const Scalar _tmp1215 = _tmp1213 * _tmp1214;
  const Scalar _tmp1216 = _tmp1211 * _tmp939;
  const Scalar _tmp1217 = _tmp178 * _tmp743 * _tmp745 * std::pow(_tmp746, _tmp868) / _tmp747;
  const Scalar _tmp1218 = _tmp1214 * _tmp1217;
  const Scalar _tmp1219 =
      -_tmp1205 * _tmp1216 * _tmp749 - _tmp1212 * _tmp1215 + _tmp1212 * _tmp1218;
  const Scalar _tmp1220 = _tmp509 * _tmp852 + _tmp510 * _tmp850 + _tmp511 * _tmp848;
  const Scalar _tmp1221 = _tmp527 * ((((_tmp41 + _tmp516) > 0) - ((_tmp41 + _tmp516) < 0)) + 1) /
                          std::pow(_tmp517, Scalar(2));
  const Scalar _tmp1222 = _tmp1221 * _tmp513;
  const Scalar _tmp1223 = _tmp1221 * _tmp522;
  const Scalar _tmp1224 = _tmp1223 * _tmp931;
  const Scalar _tmp1225 = -_tmp1220 * _tmp1224 + _tmp523 * (_tmp510 * _tmp857 + _tmp514);
  const Scalar _tmp1226 = 2 * _tmp524;
  const Scalar _tmp1227 =
      -_tmp1220 * _tmp1222 * _tmp520 * views_1_calibration(0, 0) + _tmp1225 * _tmp1226;
  const Scalar _tmp1228 = (Scalar(1) / Scalar(2)) * _tmp520;
  const Scalar _tmp1229 = _tmp178 * _tmp526 * _tmp528 * std::pow(_tmp529, _tmp868) / _tmp530;
  const Scalar _tmp1230 = _tmp1228 * _tmp1229;
  const Scalar _tmp1231 = _tmp513 * _tmp939;
  const Scalar _tmp1232 = _tmp1221 * _tmp1231;
  const Scalar _tmp1233 = _tmp531 / (_tmp525 * std::sqrt(_tmp525));
  const Scalar _tmp1234 = _tmp1228 * _tmp1233;
  const Scalar _tmp1235 =
      -_tmp1220 * _tmp1232 * _tmp532 + _tmp1227 * _tmp1230 - _tmp1227 * _tmp1234;
  const Scalar _tmp1236 = _tmp1081 * _tmp939;
  const Scalar _tmp1237 = (Scalar(1) / Scalar(2)) * _tmp334;
  const Scalar _tmp1238 = _tmp1086 * _tmp1237;
  const Scalar _tmp1239 = _tmp1083 * _tmp1237;
  const Scalar _tmp1240 =
      -_tmp1075 * _tmp1236 * _tmp346 + _tmp1082 * _tmp1238 - _tmp1082 * _tmp1239;
  const Scalar _tmp1241 = (Scalar(1) / Scalar(2)) * _tmp462;
  const Scalar _tmp1242 = _tmp1147 * _tmp1241;
  const Scalar _tmp1243 = _tmp1145 * _tmp1241;
  const Scalar _tmp1244 = _tmp1141 * _tmp470 + _tmp1143 * _tmp1242 - _tmp1143 * _tmp1243;
  const Scalar _tmp1245 = _tmp496 * ((((_tmp41 + _tmp485) > 0) - ((_tmp41 + _tmp485) < 0)) + 1) /
                          std::pow(_tmp486, Scalar(2));
  const Scalar _tmp1246 = _tmp1245 * (_tmp478 * _tmp852 + _tmp479 * _tmp850 + _tmp480 * _tmp848);
  const Scalar _tmp1247 = _tmp491 * _tmp931;
  const Scalar _tmp1248 = -_tmp1246 * _tmp1247 + _tmp492 * (_tmp479 * _tmp857 + _tmp483);
  const Scalar _tmp1249 = 2 * _tmp493;
  const Scalar _tmp1250 = _tmp1246 * _tmp482;
  const Scalar _tmp1251 = _tmp1248 * _tmp1249 - _tmp1250 * _tmp489 * views_1_calibration(0, 0);
  const Scalar _tmp1252 = (Scalar(1) / Scalar(2)) * _tmp489;
  const Scalar _tmp1253 = _tmp178 * _tmp495 * _tmp497 * std::pow(_tmp498, _tmp868) / _tmp499;
  const Scalar _tmp1254 = _tmp1252 * _tmp1253;
  const Scalar _tmp1255 = _tmp500 / (_tmp494 * std::sqrt(_tmp494));
  const Scalar _tmp1256 = _tmp1252 * _tmp1255;
  const Scalar _tmp1257 = -_tmp1250 * _tmp501 * _tmp939 + _tmp1251 * _tmp1254 - _tmp1251 * _tmp1256;
  const Scalar _tmp1258 = _tmp56 * priors_0_1_sqrt_info(5, 2);
  const Scalar _tmp1259 =
      _tmp1068 * priors_0_1_sqrt_info(5, 0) + _tmp1258 * _tmp902 +
      _tmp910 * priors_0_1_sqrt_info(5, 0) + _tmp915 * priors_0_1_sqrt_info(5, 1) -
      _tmp918 * priors_0_1_sqrt_info(5, 2) - _tmp919 * priors_0_1_sqrt_info(5, 0) +
      _tmp921 * priors_0_1_sqrt_info(5, 1) + _tmp925 * priors_0_1_sqrt_info(5, 2) -
      _tmp926 * priors_0_1_sqrt_info(5, 1);
  const Scalar _tmp1260 = (Scalar(1) / Scalar(2)) * _tmp524;
  const Scalar _tmp1261 = _tmp1229 * _tmp1260;
  const Scalar _tmp1262 = _tmp1233 * _tmp1260;
  const Scalar _tmp1263 = _tmp1225 * _tmp532 + _tmp1227 * _tmp1261 - _tmp1227 * _tmp1262;
  const Scalar _tmp1264 = (Scalar(1) / Scalar(2)) * _tmp493;
  const Scalar _tmp1265 = _tmp1255 * _tmp1264;
  const Scalar _tmp1266 = _tmp1253 * _tmp1264;
  const Scalar _tmp1267 = _tmp1248 * _tmp501 - _tmp1251 * _tmp1265 + _tmp1251 * _tmp1266;
  const Scalar _tmp1268 = _tmp956 * priors_1_0_sqrt_info(5, 0);
  const Scalar _tmp1269 = _tmp138 * _tmp963;
  const Scalar _tmp1270 =
      -_tmp1268 * _tmp950 + _tmp1269 * _tmp969 + _tmp965 * priors_1_0_sqrt_info(5, 1) +
      _tmp971 * priors_1_0_sqrt_info(5, 4) + _tmp972 * priors_1_0_sqrt_info(5, 5) +
      _tmp975 * priors_1_0_sqrt_info(5, 0) + _tmp976 * priors_1_0_sqrt_info(5, 1) +
      _tmp978 * priors_1_0_sqrt_info(5, 2) - _tmp980 * priors_1_0_sqrt_info(5, 2) -
      _tmp982 * priors_1_0_sqrt_info(5, 1) + _tmp986 * priors_1_0_sqrt_info(5, 0);
  const Scalar _tmp1271 = _tmp717 / (_tmp711 * std::sqrt(_tmp711));
  const Scalar _tmp1272 = _tmp695 * _tmp852 + _tmp696 * _tmp848 + _tmp697 * _tmp850;
  const Scalar _tmp1273 = _tmp713 * ((((_tmp41 + _tmp702) > 0) - ((_tmp41 + _tmp702) < 0)) + 1) /
                          std::pow(_tmp703, Scalar(2));
  const Scalar _tmp1274 = _tmp1273 * _tmp708;
  const Scalar _tmp1275 = _tmp1274 * _tmp931;
  const Scalar _tmp1276 = -_tmp1272 * _tmp1275 + _tmp709 * (_tmp697 * _tmp857 + _tmp700);
  const Scalar _tmp1277 = 2 * _tmp710;
  const Scalar _tmp1278 = _tmp1273 * _tmp699;
  const Scalar _tmp1279 =
      -Scalar(1) / Scalar(2) * _tmp1272 * _tmp1278 * _tmp706 * views_1_calibration(0, 0) +
      (Scalar(1) / Scalar(2)) * _tmp1276 * _tmp1277;
  const Scalar _tmp1280 = _tmp1279 * _tmp710;
  const Scalar _tmp1281 = _tmp712 * _tmp714 * std::pow(_tmp715, _tmp868) / _tmp716;
  const Scalar _tmp1282 = _tmp1281 * _tmp178;
  const Scalar _tmp1283 = -_tmp1271 * _tmp1280 + _tmp1276 * _tmp718 + _tmp1280 * _tmp1282;
  const Scalar _tmp1284 = _tmp1163 * _tmp768;
  const Scalar _tmp1285 = _tmp1156 * _tmp939;
  const Scalar _tmp1286 = -_tmp1151 * _tmp1285 * _tmp780 - _tmp1158 * _tmp1284 + _tmp1161 * _tmp768;
  const Scalar _tmp1287 = _tmp1059 * _tmp939;
  const Scalar _tmp1288 = (Scalar(1) / Scalar(2)) * _tmp675;
  const Scalar _tmp1289 = _tmp1062 * _tmp1288;
  const Scalar _tmp1290 = _tmp1064 * _tmp1288;
  const Scalar _tmp1291 =
      -_tmp1053 * _tmp1287 * _tmp687 - _tmp1060 * _tmp1289 + _tmp1060 * _tmp1290;
  const Scalar _tmp1292 = (Scalar(1) / Scalar(2)) * _tmp175;
  const Scalar _tmp1293 = _tmp1292 * _tmp940;
  const Scalar _tmp1294 = _tmp1292 * _tmp936;
  const Scalar _tmp1295 = _tmp1293 * _tmp935 - _tmp1294 * _tmp935 + _tmp191 * _tmp933;
  const Scalar _tmp1296 = _tmp56 * priors_0_1_sqrt_info(0, 2);
  const Scalar _tmp1297 = _tmp32 * priors_0_1_sqrt_info(0, 1);
  const Scalar _tmp1298 =
      _tmp1068 * priors_0_1_sqrt_info(0, 0) + _tmp1296 * _tmp902 + _tmp1297 * _tmp902 -
      _tmp1297 * _tmp917 + _tmp910 * priors_0_1_sqrt_info(0, 0) +
      _tmp915 * priors_0_1_sqrt_info(0, 1) - _tmp918 * priors_0_1_sqrt_info(0, 2) -
      _tmp919 * priors_0_1_sqrt_info(0, 0) + _tmp925 * priors_0_1_sqrt_info(0, 2);
  const Scalar _tmp1299 = _tmp250 * ((((_tmp237 + _tmp41) > 0) - ((_tmp237 + _tmp41) < 0)) + 1) /
                          std::pow(_tmp238, Scalar(2));
  const Scalar _tmp1300 = _tmp1299 * (_tmp230 * _tmp852 + _tmp231 * _tmp848 + _tmp232 * _tmp850);
  const Scalar _tmp1301 = _tmp1300 * _tmp234;
  const Scalar _tmp1302 = _tmp243 * _tmp931;
  const Scalar _tmp1303 = -_tmp1300 * _tmp1302 + _tmp244 * (_tmp232 * _tmp857 + _tmp235);
  const Scalar _tmp1304 = 2 * _tmp245;
  const Scalar _tmp1305 = -_tmp1301 * _tmp241 * views_1_calibration(0, 0) + _tmp1303 * _tmp1304;
  const Scalar _tmp1306 = _tmp252 / (_tmp246 * std::sqrt(_tmp246));
  const Scalar _tmp1307 = (Scalar(1) / Scalar(2)) * _tmp241;
  const Scalar _tmp1308 = _tmp1306 * _tmp1307;
  const Scalar _tmp1309 = _tmp178 * _tmp247 * std::pow(_tmp248, _tmp868) * _tmp251 / _tmp249;
  const Scalar _tmp1310 = _tmp1307 * _tmp1309;
  const Scalar _tmp1311 = -_tmp1301 * _tmp253 * _tmp939 - _tmp1305 * _tmp1308 + _tmp1305 * _tmp1310;
  const Scalar _tmp1312 = _tmp699 * _tmp939;
  const Scalar _tmp1313 = _tmp1273 * _tmp1312;
  const Scalar _tmp1314 = _tmp1279 * _tmp706;
  const Scalar _tmp1315 =
      -_tmp1271 * _tmp1314 - _tmp1272 * _tmp1313 * _tmp718 + _tmp1282 * _tmp1314;
  const Scalar _tmp1316 = _tmp130 * priors_1_0_sqrt_info(3, 0);
  const Scalar _tmp1317 =
      _tmp1316 * _tmp974 - _tmp957 * priors_1_0_sqrt_info(3, 0) +
      _tmp965 * priors_1_0_sqrt_info(3, 1) + _tmp970 * priors_1_0_sqrt_info(3, 2) +
      _tmp971 * priors_1_0_sqrt_info(3, 4) + _tmp972 * priors_1_0_sqrt_info(3, 5) +
      _tmp976 * priors_1_0_sqrt_info(3, 1) + _tmp978 * priors_1_0_sqrt_info(3, 2) -
      _tmp980 * priors_1_0_sqrt_info(3, 2) - _tmp982 * priors_1_0_sqrt_info(3, 1) +
      _tmp986 * priors_1_0_sqrt_info(3, 0);
  const Scalar _tmp1318 =
      _tmp1068 * priors_0_1_sqrt_info(3, 0) + _tmp903 * priors_0_1_sqrt_info(3, 2) +
      _tmp910 * priors_0_1_sqrt_info(3, 0) + _tmp915 * priors_0_1_sqrt_info(3, 1) -
      _tmp918 * priors_0_1_sqrt_info(3, 2) - _tmp919 * priors_0_1_sqrt_info(3, 0) +
      _tmp921 * priors_0_1_sqrt_info(3, 1) + _tmp925 * priors_0_1_sqrt_info(3, 2) -
      _tmp926 * priors_0_1_sqrt_info(3, 1);
  const Scalar _tmp1319 = (Scalar(1) / Scalar(2)) * _tmp245;
  const Scalar _tmp1320 = _tmp1309 * _tmp1319;
  const Scalar _tmp1321 = _tmp1306 * _tmp1319;
  const Scalar _tmp1322 = _tmp1303 * _tmp253 + _tmp1305 * _tmp1320 - _tmp1305 * _tmp1321;
  const Scalar _tmp1323 = (Scalar(1) / Scalar(2)) * _tmp741;
  const Scalar _tmp1324 = _tmp1217 * _tmp1323;
  const Scalar _tmp1325 = _tmp1213 * _tmp1323;
  const Scalar _tmp1326 = _tmp1209 * _tmp749 + _tmp1212 * _tmp1324 - _tmp1212 * _tmp1325;
  const Scalar _tmp1327 = (Scalar(1) / Scalar(2)) * _tmp214;
  const Scalar _tmp1328 = _tmp1031 * _tmp1327;
  const Scalar _tmp1329 = _tmp1035 * _tmp1327;
  const Scalar _tmp1330 = _tmp1027 * _tmp222 - _tmp1030 * _tmp1328 + _tmp1030 * _tmp1329;
  const Scalar _tmp1331 = (Scalar(1) / Scalar(2)) * _tmp396;
  const Scalar _tmp1332 = _tmp1100 * _tmp1331;
  const Scalar _tmp1333 = _tmp389 * _tmp939;
  const Scalar _tmp1334 = _tmp1098 * _tmp1331;
  const Scalar _tmp1335 =
      -_tmp1092 * _tmp1333 * _tmp408 - _tmp1096 * _tmp1332 + _tmp1096 * _tmp1334;
  const Scalar _tmp1336 = _tmp909 * priors_0_1_sqrt_info(1, 1);
  const Scalar _tmp1337 = _tmp32 * priors_0_1_sqrt_info(1, 1);
  const Scalar _tmp1338 =
      _tmp1068 * priors_0_1_sqrt_info(1, 0) + _tmp1336 * _tmp914 + _tmp1337 * _tmp902 +
      _tmp63 * _tmp902 - _tmp63 * _tmp917 + _tmp910 * priors_0_1_sqrt_info(1, 0) -
      _tmp919 * priors_0_1_sqrt_info(1, 0) + _tmp925 * priors_0_1_sqrt_info(1, 2) -
      _tmp926 * priors_0_1_sqrt_info(1, 1);
  const Scalar _tmp1339 = (Scalar(1) / Scalar(2)) * _tmp272;
  const Scalar _tmp1340 = _tmp1198 * _tmp1339;
  const Scalar _tmp1341 = -_tmp1197 * _tmp284 * _tmp939 - _tmp1199 * _tmp1340 + _tmp1202 * _tmp1340;
  const Scalar _tmp1342 = (Scalar(1) / Scalar(2)) * _tmp644;
  const Scalar _tmp1343 = _tmp1177 * _tmp1342;
  const Scalar _tmp1344 = _tmp1176 * _tmp1342;
  const Scalar _tmp1345 = _tmp1172 * _tmp939;
  const Scalar _tmp1346 =
      -_tmp1166 * _tmp1345 * _tmp656 - _tmp1173 * _tmp1343 + _tmp1173 * _tmp1344;
  const Scalar _tmp1347 = -_tmp70;
  const Scalar _tmp1348 = _tmp1347 + _tmp73 + _tmp844 + _tmp90;
  const Scalar _tmp1349 = _tmp849 + _tmp94;
  const Scalar _tmp1350 = -_tmp78;
  const Scalar _tmp1351 = _tmp1350 + _tmp81;
  const Scalar _tmp1352 = _tmp1347 + _tmp843;
  const Scalar _tmp1353 = _tmp1352 + _tmp847;
  const Scalar _tmp1354 = _tmp1353 * _tmp633 + _tmp636;
  const Scalar _tmp1355 = -_tmp1345 * _tmp1354 +
                          _tmp643 * (_tmp1348 * _tmp634 + _tmp1349 * _tmp635 + _tmp1351 * _tmp633);
  const Scalar _tmp1356 = 2 * _tmp644;
  const Scalar _tmp1357 =
      -_tmp1168 * _tmp1354 * _tmp648 * views_1_calibration(1, 0) + _tmp1355 * _tmp1356;
  const Scalar _tmp1358 = -_tmp1343 * _tmp1357 + _tmp1344 * _tmp1357 + _tmp1355 * _tmp656;
  const Scalar _tmp1359 = _tmp1353 * _tmp571 + _tmp574;
  const Scalar _tmp1360 = _tmp1105 * _tmp939;
  const Scalar _tmp1361 = -_tmp1359 * _tmp1360 +
                          _tmp581 * (_tmp1348 * _tmp572 + _tmp1349 * _tmp573 + _tmp1351 * _tmp571);
  const Scalar _tmp1362 = 2 * _tmp582;
  const Scalar _tmp1363 =
      -_tmp1107 * _tmp1359 * _tmp586 * views_1_calibration(1, 0) + _tmp1361 * _tmp1362;
  const Scalar _tmp1364 = _tmp1112 * _tmp1363;
  const Scalar _tmp1365 = _tmp1115 * _tmp1132;
  const Scalar _tmp1366 =
      -_tmp1108 * _tmp1359 * _tmp594 - _tmp1132 * _tmp1364 + _tmp1363 * _tmp1365;
  const Scalar _tmp1367 = _tmp1353 * _tmp261 + _tmp264;
  const Scalar _tmp1368 = _tmp1196 * _tmp939;
  const Scalar _tmp1369 = -_tmp1367 * _tmp1368 +
                          _tmp271 * (_tmp1348 * _tmp262 + _tmp1349 * _tmp263 + _tmp1351 * _tmp261);
  const Scalar _tmp1370 = 2 * _tmp272;
  const Scalar _tmp1371 = _tmp1192 * _tmp1367;
  const Scalar _tmp1372 = _tmp1369 * _tmp1370 - _tmp1371 * _tmp276 * views_1_calibration(1, 0);
  const Scalar _tmp1373 = -_tmp1201 * _tmp1372 + _tmp1203 * _tmp1372 - _tmp1371 * _tmp284 * _tmp931;
  const Scalar _tmp1374 = _tmp1353 * _tmp664 + _tmp667;
  const Scalar _tmp1375 = _tmp1055 * _tmp1374;
  const Scalar _tmp1376 = -_tmp1287 * _tmp1374 +
                          _tmp674 * (_tmp1348 * _tmp665 + _tmp1349 * _tmp666 + _tmp1351 * _tmp664);
  const Scalar _tmp1377 = 2 * _tmp675;
  const Scalar _tmp1378 = -_tmp1375 * _tmp679 * views_1_calibration(1, 0) + _tmp1376 * _tmp1377;
  const Scalar _tmp1379 = -_tmp1063 * _tmp1378 + _tmp1065 * _tmp1378 - _tmp1375 * _tmp687 * _tmp931;
  const Scalar _tmp1380 = _tmp1353 * _tmp323 + _tmp326;
  const Scalar _tmp1381 = -_tmp1236 * _tmp1380 +
                          _tmp333 * (_tmp1348 * _tmp325 + _tmp1349 * _tmp324 + _tmp1351 * _tmp323);
  const Scalar _tmp1382 = 2 * _tmp334;
  const Scalar _tmp1383 =
      -_tmp1077 * _tmp1380 * _tmp338 * views_1_calibration(1, 0) + _tmp1381 * _tmp1382;
  const Scalar _tmp1384 = _tmp1238 * _tmp1383 - _tmp1239 * _tmp1383 + _tmp1381 * _tmp346;
  const Scalar _tmp1385 = -_tmp872 + _tmp873 - _tmp874 + _tmp875;
  const Scalar _tmp1386 = -_priors_0_1_target_T_src[0] * _tmp948 - _tmp922;
  const Scalar _tmp1387 = -_priors_0_1_target_T_src[2] * _tmp1385 + _tmp1386 - _tmp923;
  const Scalar _tmp1388 = _tmp1387 * _tmp901;
  const Scalar _tmp1389 = _priors_0_1_target_T_src[1] * _tmp948;
  const Scalar _tmp1390 = _tmp909 * (_priors_0_1_target_T_src[3] * _tmp1385 + _tmp1389 + _tmp894);
  const Scalar _tmp1391 = _tmp1387 * _tmp916;
  const Scalar _tmp1392 = _tmp1391 * _tmp56;
  const Scalar _tmp1393 = _tmp54 * _tmp916;
  const Scalar _tmp1394 = _tmp1387 * _tmp1393;
  const Scalar _tmp1395 = _tmp1391 * _tmp32;
  const Scalar _tmp1396 = _tmp1388 * _tmp54;
  const Scalar _tmp1397 = _tmp1388 * _tmp56;
  const Scalar _tmp1398 = -_priors_0_1_target_T_src[2] * _tmp948;
  const Scalar _tmp1399 = _priors_0_1_target_T_src[0] * _tmp1385 + _tmp1398 + _tmp904 + _tmp905;
  const Scalar _tmp1400 = _tmp1399 * _tmp909;
  const Scalar _tmp1401 = _priors_0_1_target_T_src[3] * _tmp948;
  const Scalar _tmp1402 =
      _tmp908 * (-_priors_0_1_target_T_src[1] * _tmp1385 + _tmp1401 - _tmp911 + _tmp912);
  const Scalar _tmp1403 =
      _tmp1069 * _tmp1388 + _tmp1390 * priors_0_1_sqrt_info(2, 2) -
      _tmp1392 * priors_0_1_sqrt_info(2, 2) - _tmp1394 * priors_0_1_sqrt_info(2, 0) -
      _tmp1395 * priors_0_1_sqrt_info(2, 1) + _tmp1396 * priors_0_1_sqrt_info(2, 0) +
      _tmp1397 * priors_0_1_sqrt_info(2, 2) + _tmp1400 * priors_0_1_sqrt_info(2, 1) +
      _tmp1402 * _tmp65;
  const Scalar _tmp1404 = _tmp1353 * _tmp199 + _tmp202;
  const Scalar _tmp1405 = _tmp1025 * _tmp1404;
  const Scalar _tmp1406 = -_tmp1034 * _tmp1404 +
                          _tmp209 * (_tmp1348 * _tmp201 + _tmp1349 * _tmp200 + _tmp1351 * _tmp199);
  const Scalar _tmp1407 = 2 * _tmp210;
  const Scalar _tmp1408 = -_tmp1405 * _tmp214 * views_1_calibration(1, 0) + _tmp1406 * _tmp1407;
  const Scalar _tmp1409 = -_tmp1033 * _tmp1408 + _tmp1036 * _tmp1408 + _tmp1406 * _tmp222;
  const Scalar _tmp1410 = -_tmp966;
  const Scalar _tmp1411 = _priors_1_0_target_T_src[3] * _tmp893;
  const Scalar _tmp1412 = -_priors_1_0_target_T_src[0] * _tmp882 + _tmp1410 - _tmp1411 + _tmp967;
  const Scalar _tmp1413 = _tmp1412 * _tmp973;
  const Scalar _tmp1414 = _tmp128 * _tmp1413;
  const Scalar _tmp1415 = _tmp130 * _tmp1413;
  const Scalar _tmp1416 = _priors_1_0_target_T_src[1] * _tmp893;
  const Scalar _tmp1417 =
      _tmp964 * (-_priors_1_0_target_T_src[2] * _tmp882 - _tmp1416 + _tmp983 + _tmp984);
  const Scalar _tmp1418 = _tmp114 * _tmp1413;
  const Scalar _tmp1419 = -_priors_1_0_target_T_src[0] * _tmp893;
  const Scalar _tmp1420 =
      _tmp964 * (_priors_1_0_target_T_src[3] * _tmp882 + _tmp1419 + _tmp958 + _tmp960);
  const Scalar _tmp1421 = -_priors_1_0_target_T_src[2] * _tmp893;
  const Scalar _tmp1422 =
      _tmp963 * (_priors_1_0_target_T_src[1] * _tmp882 + _tmp1421 + _tmp945 + _tmp947);
  const Scalar _tmp1423 = _tmp126 * _tmp1422;
  const Scalar _tmp1424 = _tmp1412 * _tmp955;
  const Scalar _tmp1425 = _tmp130 * _tmp1424;
  const Scalar _tmp1426 = _tmp1348 * _views_0_pose[6] - _tmp1348 * _views_1_pose[6] +
                          _tmp1349 * _views_0_pose[5] - _tmp1349 * _views_1_pose[5] +
                          _tmp1351 * _views_0_pose[4] - _tmp1351 * _views_1_pose[4];
  const Scalar _tmp1427 =
      _tmp1353 * _views_0_pose[4] - _tmp1353 * _views_1_pose[4] - _tmp83 - _tmp87 + _tmp88;
  const Scalar _tmp1428 = _tmp128 * _tmp1424;
  const Scalar _tmp1429 = _tmp1412 * _tmp979;
  const Scalar _tmp1430 =
      _tmp1414 * priors_1_0_sqrt_info(1, 1) + _tmp1415 * priors_1_0_sqrt_info(1, 0) +
      _tmp1417 * priors_1_0_sqrt_info(1, 1) + _tmp1418 * priors_1_0_sqrt_info(1, 2) +
      _tmp1420 * priors_1_0_sqrt_info(1, 0) + _tmp1423 * priors_1_0_sqrt_info(1, 2) -
      _tmp1425 * priors_1_0_sqrt_info(1, 0) + _tmp1426 * priors_1_0_sqrt_info(1, 3) +
      _tmp1427 * priors_1_0_sqrt_info(1, 5) - _tmp1428 * priors_1_0_sqrt_info(1, 1) -
      _tmp1429 * priors_1_0_sqrt_info(1, 2);
  const Scalar _tmp1431 = _tmp1299 * (_tmp1353 * _tmp230 + _tmp233);
  const Scalar _tmp1432 = -_tmp1431 * _tmp234 * _tmp939 +
                          _tmp240 * (_tmp1348 * _tmp232 + _tmp1349 * _tmp231 + _tmp1351 * _tmp230);
  const Scalar _tmp1433 = 2 * _tmp241;
  const Scalar _tmp1434 =
      -_tmp1431 * _tmp243 * _tmp245 * views_1_calibration(1, 0) + _tmp1432 * _tmp1433;
  const Scalar _tmp1435 = -_tmp1308 * _tmp1434 + _tmp1310 * _tmp1434 + _tmp1432 * _tmp253;
  const Scalar _tmp1436 = _tmp1353 * _tmp154 + _tmp163;
  const Scalar _tmp1437 = _tmp173 * _tmp928;
  const Scalar _tmp1438 = _tmp164 * _tmp928;
  const Scalar _tmp1439 = _tmp1438 * _tmp939;
  const Scalar _tmp1440 = -_tmp1436 * _tmp1439 +
                          _tmp170 * (_tmp1348 * _tmp162 + _tmp1349 * _tmp158 + _tmp1351 * _tmp154);
  const Scalar _tmp1441 = 2 * _tmp171;
  const Scalar _tmp1442 =
      -_tmp1436 * _tmp1437 * _tmp175 * views_1_calibration(1, 0) + _tmp1440 * _tmp1441;
  const Scalar _tmp1443 = _tmp928 * _tmp932;
  const Scalar _tmp1444 = _tmp1293 * _tmp1442 - _tmp1294 * _tmp1442 - _tmp1436 * _tmp1443 * _tmp191;
  const Scalar _tmp1445 = -_tmp1113 * _tmp1364 + _tmp1116 * _tmp1363 + _tmp1361 * _tmp594;
  const Scalar _tmp1446 = _tmp1353 * _tmp447 + _tmp450;
  const Scalar _tmp1447 = _tmp1137 * _tmp939;
  const Scalar _tmp1448 = -_tmp1446 * _tmp1447 +
                          _tmp457 * (_tmp1348 * _tmp449 + _tmp1349 * _tmp448 + _tmp1351 * _tmp447);
  const Scalar _tmp1449 = 2 * _tmp458;
  const Scalar _tmp1450 =
      -_tmp1139 * _tmp1446 * _tmp462 * views_1_calibration(1, 0) + _tmp1448 * _tmp1449;
  const Scalar _tmp1451 =
      -_tmp1140 * _tmp1446 * _tmp470 + _tmp1242 * _tmp1450 - _tmp1243 * _tmp1450;
  const Scalar _tmp1452 = _tmp1353 * _tmp726 + _tmp729;
  const Scalar _tmp1453 = -_tmp1216 * _tmp1452 +
                          _tmp736 * (_tmp1348 * _tmp727 + _tmp1349 * _tmp728 + _tmp1351 * _tmp726);
  const Scalar _tmp1454 = 2 * _tmp737;
  const Scalar _tmp1455 =
      -_tmp1207 * _tmp1452 * _tmp741 * views_1_calibration(1, 0) + _tmp1453 * _tmp1454;
  const Scalar _tmp1456 =
      -_tmp1208 * _tmp1452 * _tmp749 + _tmp1324 * _tmp1455 - _tmp1325 * _tmp1455;
  const Scalar _tmp1457 = _tmp1221 * (_tmp1353 * _tmp509 + _tmp512);
  const Scalar _tmp1458 = -_tmp1231 * _tmp1457 +
                          _tmp519 * (_tmp1348 * _tmp510 + _tmp1349 * _tmp511 + _tmp1351 * _tmp509);
  const Scalar _tmp1459 = 2 * _tmp520;
  const Scalar _tmp1460 = _tmp1457 * _tmp522;
  const Scalar _tmp1461 = _tmp1458 * _tmp1459 - _tmp1460 * _tmp524 * views_1_calibration(1, 0);
  const Scalar _tmp1462 = _tmp1261 * _tmp1461 - _tmp1262 * _tmp1461 - _tmp1460 * _tmp532 * _tmp931;
  const Scalar _tmp1463 = _tmp988 * (_tmp1353 * _tmp602 + _tmp605);
  const Scalar _tmp1464 = -_tmp1181 * _tmp1463 +
                          _tmp612 * (_tmp1348 * _tmp603 + _tmp1349 * _tmp604 + _tmp1351 * _tmp602);
  const Scalar _tmp1465 = _tmp1463 * _tmp615;
  const Scalar _tmp1466 = 2 * _tmp613;
  const Scalar _tmp1467 = _tmp1464 * _tmp1466 - _tmp1465 * _tmp617 * views_1_calibration(1, 0);
  const Scalar _tmp1468 = _tmp1467 * _tmp997;
  const Scalar _tmp1469 = -_tmp1182 * _tmp1468 + _tmp1184 * _tmp1467 + _tmp1464 * _tmp625;
  const Scalar _tmp1470 = _tmp1353 * _tmp292 + _tmp295;
  const Scalar _tmp1471 = _tmp1040 * _tmp939;
  const Scalar _tmp1472 = -_tmp1470 * _tmp1471 +
                          _tmp302 * (_tmp1348 * _tmp294 + _tmp1349 * _tmp293 + _tmp1351 * _tmp292);
  const Scalar _tmp1473 = 2 * _tmp303;
  const Scalar _tmp1474 =
      -_tmp1042 * _tmp1470 * _tmp307 * views_1_calibration(1, 0) + _tmp1472 * _tmp1473;
  const Scalar _tmp1475 =
      -_tmp1043 * _tmp1470 * _tmp315 + _tmp1072 * _tmp1474 - _tmp1073 * _tmp1474;
  const Scalar _tmp1476 =
      -_tmp1078 * _tmp1380 * _tmp346 - _tmp1085 * _tmp1383 + _tmp1087 * _tmp1383;
  const Scalar _tmp1477 = _tmp1174 * _tmp1177;
  const Scalar _tmp1478 = _tmp1174 * _tmp1176;
  const Scalar _tmp1479 =
      -_tmp1169 * _tmp1354 * _tmp656 - _tmp1357 * _tmp1477 + _tmp1357 * _tmp1478;
  const Scalar _tmp1480 = _tmp1353 * _tmp757 + _tmp760;
  const Scalar _tmp1481 = -_tmp1285 * _tmp1480 +
                          _tmp767 * (_tmp1348 * _tmp758 + _tmp1349 * _tmp759 + _tmp1351 * _tmp757);
  const Scalar _tmp1482 = 2 * _tmp768;
  const Scalar _tmp1483 =
      -_tmp1153 * _tmp1480 * _tmp772 * views_1_calibration(1, 0) + _tmp1481 * _tmp1482;
  const Scalar _tmp1484 = _tmp1160 * _tmp768;
  const Scalar _tmp1485 = -_tmp1284 * _tmp1483 + _tmp1481 * _tmp780 + _tmp1483 * _tmp1484;
  const Scalar _tmp1486 = -_tmp1289 * _tmp1378 + _tmp1290 * _tmp1378 + _tmp1376 * _tmp687;
  const Scalar _tmp1487 = _tmp1089 * _tmp1090 * _tmp405 * (_tmp1353 * _tmp385 + _tmp388);
  const Scalar _tmp1488 = _tmp1487 * _tmp398;
  const Scalar _tmp1489 = -_tmp1333 * _tmp1487 +
                          _tmp395 * (_tmp1348 * _tmp387 + _tmp1349 * _tmp386 + _tmp1351 * _tmp385);
  const Scalar _tmp1490 = 2 * _tmp396;
  const Scalar _tmp1491 = -_tmp1488 * _tmp400 * views_1_calibration(1, 0) + _tmp1489 * _tmp1490;
  const Scalar _tmp1492 = _tmp1099 * _tmp1491 - _tmp1101 * _tmp1491 - _tmp1488 * _tmp408 * _tmp931;
  const Scalar _tmp1493 = -_tmp1332 * _tmp1491 + _tmp1334 * _tmp1491 + _tmp1489 * _tmp408;
  const Scalar _tmp1494 =
      _tmp1414 * priors_1_0_sqrt_info(2, 1) + _tmp1415 * priors_1_0_sqrt_info(2, 0) +
      _tmp1417 * priors_1_0_sqrt_info(2, 1) + _tmp1418 * priors_1_0_sqrt_info(2, 2) +
      _tmp1420 * priors_1_0_sqrt_info(2, 0) + _tmp1423 * priors_1_0_sqrt_info(2, 2) -
      _tmp1425 * priors_1_0_sqrt_info(2, 0) + _tmp1426 * priors_1_0_sqrt_info(2, 3) +
      _tmp1427 * priors_1_0_sqrt_info(2, 5) - _tmp1428 * priors_1_0_sqrt_info(2, 1) -
      _tmp1429 * priors_1_0_sqrt_info(2, 2);
  const Scalar _tmp1495 = _tmp1402 * _tmp40;
  const Scalar _tmp1496 =
      _tmp1296 * _tmp1388 + _tmp1297 * _tmp1388 - _tmp1297 * _tmp1391 +
      _tmp1390 * priors_0_1_sqrt_info(0, 2) - _tmp1392 * priors_0_1_sqrt_info(0, 2) -
      _tmp1394 * priors_0_1_sqrt_info(0, 0) + _tmp1396 * priors_0_1_sqrt_info(0, 0) +
      _tmp1400 * priors_0_1_sqrt_info(0, 1) + _tmp1495 * priors_0_1_sqrt_info(0, 0);
  const Scalar _tmp1497 = _tmp1245 * (_tmp1353 * _tmp478 + _tmp481);
  const Scalar _tmp1498 = -_tmp1497 * _tmp482 * _tmp939 +
                          _tmp488 * (_tmp1348 * _tmp479 + _tmp1349 * _tmp480 + _tmp1351 * _tmp478);
  const Scalar _tmp1499 = 2 * _tmp489;
  const Scalar _tmp1500 =
      -_tmp1497 * _tmp491 * _tmp493 * views_1_calibration(1, 0) + _tmp1498 * _tmp1499;
  const Scalar _tmp1501 = _tmp1254 * _tmp1500 - _tmp1256 * _tmp1500 + _tmp1498 * _tmp501;
  const Scalar _tmp1502 = _tmp1144 * _tmp1450;
  const Scalar _tmp1503 = -_tmp1145 * _tmp1502 + _tmp1147 * _tmp1502 + _tmp1448 * _tmp470;
  const Scalar _tmp1504 = -_tmp1215 * _tmp1455 + _tmp1218 * _tmp1455 + _tmp1453 * _tmp749;
  const Scalar _tmp1505 = _tmp1388 * _tmp32;
  const Scalar _tmp1506 =
      _tmp1258 * _tmp1388 + _tmp1390 * priors_0_1_sqrt_info(5, 2) -
      _tmp1392 * priors_0_1_sqrt_info(5, 2) - _tmp1394 * priors_0_1_sqrt_info(5, 0) -
      _tmp1395 * priors_0_1_sqrt_info(5, 1) + _tmp1396 * priors_0_1_sqrt_info(5, 0) +
      _tmp1400 * priors_0_1_sqrt_info(5, 1) + _tmp1495 * priors_0_1_sqrt_info(5, 0) +
      _tmp1505 * priors_0_1_sqrt_info(5, 1);
  const Scalar _tmp1507 = _tmp1319 * _tmp1434;
  const Scalar _tmp1508 =
      -_tmp1302 * _tmp1431 * _tmp253 - _tmp1306 * _tmp1507 + _tmp1309 * _tmp1507;
  const Scalar _tmp1509 = _tmp1440 * _tmp191 - _tmp1442 * _tmp938 + _tmp1442 * _tmp941;
  const Scalar _tmp1510 =
      _tmp138 * _tmp1422 + _tmp1414 * priors_1_0_sqrt_info(5, 1) +
      _tmp1415 * priors_1_0_sqrt_info(5, 0) + _tmp1417 * priors_1_0_sqrt_info(5, 1) +
      _tmp1418 * priors_1_0_sqrt_info(5, 2) + _tmp1420 * priors_1_0_sqrt_info(5, 0) -
      _tmp1425 * priors_1_0_sqrt_info(5, 0) + _tmp1426 * priors_1_0_sqrt_info(5, 3) +
      _tmp1427 * priors_1_0_sqrt_info(5, 5) - _tmp1428 * priors_1_0_sqrt_info(5, 1) -
      _tmp1429 * priors_1_0_sqrt_info(5, 2);
  const Scalar _tmp1511 = _tmp1049 * _tmp1474 - _tmp1051 * _tmp1474 + _tmp1472 * _tmp315;
  const Scalar _tmp1512 = _tmp1160 * _tmp772;
  const Scalar _tmp1513 =
      -_tmp1154 * _tmp1480 * _tmp780 - _tmp1164 * _tmp1483 + _tmp1483 * _tmp1512;
  const Scalar _tmp1514 = _tmp1230 * _tmp1461 - _tmp1234 * _tmp1461 + _tmp1458 * _tmp532;
  const Scalar _tmp1515 =
      _tmp1316 * _tmp1413 + _tmp1414 * priors_1_0_sqrt_info(3, 1) +
      _tmp1417 * priors_1_0_sqrt_info(3, 1) + _tmp1418 * priors_1_0_sqrt_info(3, 2) +
      _tmp1420 * priors_1_0_sqrt_info(3, 0) + _tmp1423 * priors_1_0_sqrt_info(3, 2) -
      _tmp1425 * priors_1_0_sqrt_info(3, 0) + _tmp1426 * priors_1_0_sqrt_info(3, 3) +
      _tmp1427 * priors_1_0_sqrt_info(3, 5) - _tmp1428 * priors_1_0_sqrt_info(3, 1) -
      _tmp1429 * priors_1_0_sqrt_info(3, 2);
  const Scalar _tmp1516 = -_tmp1328 * _tmp1408 + _tmp1329 * _tmp1408 - _tmp1405 * _tmp222 * _tmp931;
  const Scalar _tmp1517 = _tmp853 * (_tmp1353 * _tmp540 + _tmp543);
  const Scalar _tmp1518 = -_tmp1517 * _tmp544 * _tmp939 +
                          _tmp550 * (_tmp1348 * _tmp542 + _tmp1349 * _tmp541 + _tmp1351 * _tmp540);
  const Scalar _tmp1519 = 2 * _tmp551;
  const Scalar _tmp1520 = _tmp1517 * _tmp858;
  const Scalar _tmp1521 = _tmp1518 * _tmp1519 - _tmp1520 * _tmp555;
  const Scalar _tmp1522 = _tmp866 * _tmp870;
  const Scalar _tmp1523 =
      -Scalar(1) / Scalar(2) * _tmp1520 * _tmp563 + _tmp1521 * _tmp1522 - _tmp1521 * _tmp865;
  const Scalar _tmp1524 = _tmp1273 * (_tmp1353 * _tmp695 + _tmp698);
  const Scalar _tmp1525 = -_tmp1312 * _tmp1524 +
                          _tmp705 * (_tmp1348 * _tmp697 + _tmp1349 * _tmp696 + _tmp1351 * _tmp695);
  const Scalar _tmp1526 = 2 * _tmp706;
  const Scalar _tmp1527 = _tmp1524 * _tmp708;
  const Scalar _tmp1528 = _tmp1525 * _tmp1526 - _tmp1527 * _tmp710 * views_1_calibration(1, 0);
  const Scalar _tmp1529 = (Scalar(1) / Scalar(2)) * _tmp1271;
  const Scalar _tmp1530 = _tmp1529 * _tmp710;
  const Scalar _tmp1531 = _tmp1281 * _tmp866;
  const Scalar _tmp1532 = _tmp1531 * _tmp710;
  const Scalar _tmp1533 = -_tmp1527 * _tmp718 * _tmp931 - _tmp1528 * _tmp1530 + _tmp1528 * _tmp1532;
  const Scalar _tmp1534 = _tmp1199 * _tmp1339;
  const Scalar _tmp1535 = _tmp1202 * _tmp1339;
  const Scalar _tmp1536 = _tmp1369 * _tmp284 - _tmp1372 * _tmp1534 + _tmp1372 * _tmp1535;
  const Scalar _tmp1537 = _tmp56 * priors_0_1_sqrt_info(4, 2);
  const Scalar _tmp1538 =
      _tmp1388 * _tmp1537 + _tmp1388 * _tmp920 + _tmp1390 * priors_0_1_sqrt_info(4, 2) -
      _tmp1392 * priors_0_1_sqrt_info(4, 2) - _tmp1394 * priors_0_1_sqrt_info(4, 0) -
      _tmp1395 * priors_0_1_sqrt_info(4, 1) + _tmp1400 * priors_0_1_sqrt_info(4, 1) +
      _tmp1495 * priors_0_1_sqrt_info(4, 0) + _tmp1505 * priors_0_1_sqrt_info(4, 1);
  const Scalar _tmp1539 =
      _tmp1390 * priors_0_1_sqrt_info(3, 2) - _tmp1392 * priors_0_1_sqrt_info(3, 2) -
      _tmp1394 * priors_0_1_sqrt_info(3, 0) - _tmp1395 * priors_0_1_sqrt_info(3, 1) +
      _tmp1396 * priors_0_1_sqrt_info(3, 0) + _tmp1397 * priors_0_1_sqrt_info(3, 2) +
      _tmp1400 * priors_0_1_sqrt_info(3, 1) + _tmp1495 * priors_0_1_sqrt_info(3, 0) +
      _tmp1505 * priors_0_1_sqrt_info(3, 1);
  const Scalar _tmp1540 = _tmp1353 * _tmp354 + _tmp357;
  const Scalar _tmp1541 = -_tmp1015 * _tmp1540 +
                          _tmp364 * (_tmp1348 * _tmp355 + _tmp1349 * _tmp356 + _tmp1351 * _tmp354);
  const Scalar _tmp1542 = 2 * _tmp365;
  const Scalar _tmp1543 =
      -_tmp1003 * _tmp1540 * _tmp369 * views_1_calibration(1, 0) + _tmp1541 * _tmp1542;
  const Scalar _tmp1544 = _tmp1009 * _tmp1016;
  const Scalar _tmp1545 = _tmp1012 * _tmp1016;
  const Scalar _tmp1546 = _tmp1541 * _tmp377 - _tmp1543 * _tmp1544 + _tmp1543 * _tmp1545;
  const Scalar _tmp1547 =
      -_tmp1004 * _tmp1540 * _tmp377 - _tmp1011 * _tmp1543 + _tmp1013 * _tmp1543;
  const Scalar _tmp1548 = _tmp1353 * _tmp416 + _tmp419;
  const Scalar _tmp1549 = _tmp1122 * _tmp1548;
  const Scalar _tmp1550 = -_tmp1121 * _tmp1548 +
                          _tmp426 * (_tmp1348 * _tmp417 + _tmp1349 * _tmp418 + _tmp1351 * _tmp416);
  const Scalar _tmp1551 = 2 * _tmp427;
  const Scalar _tmp1552 = -_tmp1549 * _tmp431 * views_1_calibration(1, 0) + _tmp1550 * _tmp1551;
  const Scalar _tmp1553 = _tmp1187 * _tmp1552 - _tmp1188 * _tmp1552 - _tmp1549 * _tmp439 * _tmp931;
  const Scalar _tmp1554 =
      _tmp1336 * _tmp1399 + _tmp1388 * _tmp63 + _tmp1390 * priors_0_1_sqrt_info(1, 2) -
      _tmp1391 * _tmp63 - _tmp1394 * priors_0_1_sqrt_info(1, 0) -
      _tmp1395 * priors_0_1_sqrt_info(1, 1) + _tmp1396 * priors_0_1_sqrt_info(1, 0) +
      _tmp1495 * priors_0_1_sqrt_info(1, 0) + _tmp1505 * priors_0_1_sqrt_info(1, 1);
  const Scalar _tmp1555 = -_tmp1465 * _tmp625 * _tmp931 + _tmp1467 * _tmp996 - _tmp1468 * _tmp994;
  const Scalar _tmp1556 = _tmp1021 * _tmp866;
  const Scalar _tmp1557 = -_tmp1020 * _tmp1521 + _tmp1518 * _tmp563 + _tmp1521 * _tmp1556;
  const Scalar _tmp1558 = _tmp1531 * _tmp706;
  const Scalar _tmp1559 = _tmp1529 * _tmp706;
  const Scalar _tmp1560 = _tmp1525 * _tmp718 + _tmp1528 * _tmp1558 - _tmp1528 * _tmp1559;
  const Scalar _tmp1561 =
      -_tmp1247 * _tmp1497 * _tmp501 - _tmp1265 * _tmp1500 + _tmp1266 * _tmp1500;
  const Scalar _tmp1562 = _tmp1127 * _tmp1130;
  const Scalar _tmp1563 = _tmp1127 * _tmp1129;
  const Scalar _tmp1564 = _tmp1550 * _tmp439 - _tmp1552 * _tmp1562 + _tmp1552 * _tmp1563;
  const Scalar _tmp1565 =
      _tmp115 * _tmp1413 - _tmp115 * _tmp1424 + _tmp1414 * priors_1_0_sqrt_info(0, 1) +
      _tmp1415 * priors_1_0_sqrt_info(0, 0) + _tmp1417 * priors_1_0_sqrt_info(0, 1) +
      _tmp1420 * priors_1_0_sqrt_info(0, 0) + _tmp1423 * priors_1_0_sqrt_info(0, 2) -
      _tmp1425 * priors_1_0_sqrt_info(0, 0) + _tmp1426 * priors_1_0_sqrt_info(0, 3) +
      _tmp1427 * priors_1_0_sqrt_info(0, 5) - _tmp1428 * priors_1_0_sqrt_info(0, 1);
  const Scalar _tmp1566 =
      _tmp1414 * priors_1_0_sqrt_info(4, 1) + _tmp1415 * priors_1_0_sqrt_info(4, 0) +
      _tmp1417 * priors_1_0_sqrt_info(4, 1) + _tmp1418 * priors_1_0_sqrt_info(4, 2) +
      _tmp1420 * priors_1_0_sqrt_info(4, 0) + _tmp1423 * priors_1_0_sqrt_info(4, 2) -
      _tmp1425 * priors_1_0_sqrt_info(4, 0) + _tmp1426 * priors_1_0_sqrt_info(4, 3) +
      _tmp1427 * priors_1_0_sqrt_info(4, 5) - _tmp1428 * priors_1_0_sqrt_info(4, 1) -
      _tmp1429 * priors_1_0_sqrt_info(4, 2);
  const Scalar _tmp1567 = _tmp73 + _tmp856;
  const Scalar _tmp1568 = _tmp1352 + _tmp1567;
  const Scalar _tmp1569 = _tmp333 * (_tmp1568 * _tmp324 + _tmp335);
  const Scalar _tmp1570 = _tmp851 + _tmp98;
  const Scalar _tmp1571 = _tmp1350 + _tmp80;
  const Scalar _tmp1572 = _tmp1567 + _tmp845;
  const Scalar _tmp1573 = _tmp337 * (_tmp1570 * _tmp324 + _tmp1571 * _tmp325 + _tmp1572 * _tmp323);
  const Scalar _tmp1574 = _tmp1080 * _tmp1573 + _tmp1382 * _tmp1569;
  const Scalar _tmp1575 = -_tmp1085 * _tmp1574 + _tmp1087 * _tmp1574 + _tmp1573 * _tmp346;
  const Scalar _tmp1576 = _tmp457 * (_tmp1568 * _tmp448 + _tmp459);
  const Scalar _tmp1577 = _tmp461 * (_tmp1570 * _tmp448 + _tmp1571 * _tmp449 + _tmp1572 * _tmp447);
  const Scalar _tmp1578 = _tmp1142 * _tmp1577 + _tmp1449 * _tmp1576;
  const Scalar _tmp1579 = -_tmp1146 * _tmp1578 + _tmp1148 * _tmp1578 + _tmp1576 * _tmp470;
  const Scalar _tmp1580 = _tmp492 * (_tmp1570 * _tmp480 + _tmp1571 * _tmp479 + _tmp1572 * _tmp478);
  const Scalar _tmp1581 = _tmp488 * (_tmp1568 * _tmp480 + _tmp490);
  const Scalar _tmp1582 = _tmp1249 * _tmp1580 + _tmp1499 * _tmp1581;
  const Scalar _tmp1583 = _tmp1254 * _tmp1582 - _tmp1256 * _tmp1582 + _tmp1581 * _tmp501;
  const Scalar _tmp1584 = _tmp364 * (_tmp1568 * _tmp356 + _tmp366);
  const Scalar _tmp1585 = _tmp368 * (_tmp1570 * _tmp356 + _tmp1571 * _tmp355 + _tmp1572 * _tmp354);
  const Scalar _tmp1586 = _tmp1006 * _tmp1585 + _tmp1542 * _tmp1584;
  const Scalar _tmp1587 = -_tmp1011 * _tmp1586 + _tmp1013 * _tmp1586 + _tmp1585 * _tmp377;
  const Scalar _tmp1588 = _tmp554 * (_tmp1570 * _tmp541 + _tmp1571 * _tmp542 + _tmp1572 * _tmp540);
  const Scalar _tmp1589 = _tmp550 * (_tmp1568 * _tmp541 + _tmp552);
  const Scalar _tmp1590 =
      (Scalar(1) / Scalar(2)) * _tmp1519 * _tmp1589 + (Scalar(1) / Scalar(2)) * _tmp1588 * _tmp861;
  const Scalar _tmp1591 = _tmp178 * _tmp870;
  const Scalar _tmp1592 = _tmp1588 * _tmp563 + _tmp1590 * _tmp1591 - _tmp1590 * _tmp864;
  const Scalar _tmp1593 = _tmp244 * (_tmp1570 * _tmp231 + _tmp1571 * _tmp232 + _tmp1572 * _tmp230);
  const Scalar _tmp1594 = _tmp240 * (_tmp1568 * _tmp231 + _tmp242);
  const Scalar _tmp1595 = _tmp1304 * _tmp1593 + _tmp1433 * _tmp1594;
  const Scalar _tmp1596 = _tmp1320 * _tmp1595 - _tmp1321 * _tmp1595 + _tmp1593 * _tmp253;
  const Scalar _tmp1597 = _tmp1021 * _tmp178;
  const Scalar _tmp1598 = -_tmp1019 * _tmp1590 + _tmp1589 * _tmp563 + _tmp1590 * _tmp1597;
  const Scalar _tmp1599 = -_priors_1_0_target_T_src[1] * _tmp1385 + _tmp1419 + _tmp959 - _tmp961;
  const Scalar _tmp1600 = _tmp1599 * _tmp973;
  const Scalar _tmp1601 = _tmp128 * _tmp1600;
  const Scalar _tmp1602 = -_priors_1_0_target_T_src[0] * _tmp1385 + _tmp1416 + _tmp983 - _tmp985;
  const Scalar _tmp1603 = _tmp1602 * _tmp964;
  const Scalar _tmp1604 =
      _tmp964 * (_priors_1_0_target_T_src[2] * _tmp1385 + _tmp1410 + _tmp1411 + _tmp968);
  const Scalar _tmp1605 = _tmp1599 * _tmp981;
  const Scalar _tmp1606 = _tmp1599 * _tmp979;
  const Scalar _tmp1607 =
      -_tmp100 + _tmp101 + _tmp1568 * _views_0_pose[5] - _tmp1568 * _views_1_pose[5] - _tmp97;
  const Scalar _tmp1608 = _tmp1570 * _views_0_pose[5] - _tmp1570 * _views_1_pose[5] +
                          _tmp1571 * _views_0_pose[6] - _tmp1571 * _views_1_pose[6] +
                          _tmp1572 * _views_0_pose[4] - _tmp1572 * _views_1_pose[4];
  const Scalar _tmp1609 = _tmp1599 * _tmp977;
  const Scalar _tmp1610 =
      _tmp964 * (_priors_1_0_target_T_src[3] * _tmp1385 + _tmp1421 + _tmp944 + _tmp949);
  const Scalar _tmp1611 = _tmp130 * _tmp1600;
  const Scalar _tmp1612 = _tmp1599 * _tmp956;
  const Scalar _tmp1613 =
      _tmp1601 * priors_1_0_sqrt_info(2, 1) + _tmp1603 * priors_1_0_sqrt_info(2, 2) +
      _tmp1604 * priors_1_0_sqrt_info(2, 0) - _tmp1605 * priors_1_0_sqrt_info(2, 1) -
      _tmp1606 * priors_1_0_sqrt_info(2, 2) + _tmp1607 * priors_1_0_sqrt_info(2, 3) +
      _tmp1608 * priors_1_0_sqrt_info(2, 4) + _tmp1609 * priors_1_0_sqrt_info(2, 2) +
      _tmp1610 * priors_1_0_sqrt_info(2, 1) + _tmp1611 * priors_1_0_sqrt_info(2, 0) -
      _tmp1612 * priors_1_0_sqrt_info(2, 0);
  const Scalar _tmp1614 = _tmp306 * (_tmp1570 * _tmp293 + _tmp1571 * _tmp294 + _tmp1572 * _tmp292);
  const Scalar _tmp1615 = _tmp302 * (_tmp1568 * _tmp293 + _tmp304);
  const Scalar _tmp1616 = _tmp1045 * _tmp1614 + _tmp1473 * _tmp1615;
  const Scalar _tmp1617 = _tmp1049 * _tmp1616 - _tmp1051 * _tmp1616 + _tmp1615 * _tmp315;
  const Scalar _tmp1618 = _tmp678 * (_tmp1570 * _tmp666 + _tmp1571 * _tmp665 + _tmp1572 * _tmp664);
  const Scalar _tmp1619 = _tmp674 * (_tmp1568 * _tmp666 + _tmp676);
  const Scalar _tmp1620 = _tmp1058 * _tmp1618 + _tmp1377 * _tmp1619;
  const Scalar _tmp1621 = _tmp1061 * _tmp1620;
  const Scalar _tmp1622 = -_tmp1062 * _tmp1621 + _tmp1064 * _tmp1621 + _tmp1618 * _tmp687;
  const Scalar _tmp1623 = _tmp1238 * _tmp1574 - _tmp1239 * _tmp1574 + _tmp1569 * _tmp346;
  const Scalar _tmp1624 =
      _tmp115 * _tmp1600 - _tmp1179 * _tmp1599 + _tmp1601 * priors_1_0_sqrt_info(0, 1) +
      _tmp1603 * priors_1_0_sqrt_info(0, 2) + _tmp1604 * priors_1_0_sqrt_info(0, 0) -
      _tmp1605 * priors_1_0_sqrt_info(0, 1) + _tmp1607 * priors_1_0_sqrt_info(0, 3) +
      _tmp1608 * priors_1_0_sqrt_info(0, 4) + _tmp1610 * priors_1_0_sqrt_info(0, 1) +
      _tmp1611 * priors_1_0_sqrt_info(0, 0) - _tmp1612 * priors_1_0_sqrt_info(0, 0);
  const Scalar _tmp1625 = _tmp170 * (_tmp1568 * _tmp158 + _tmp172);
  const Scalar _tmp1626 = _tmp174 * (_tmp154 * _tmp1572 + _tmp1570 * _tmp158 + _tmp1571 * _tmp162);
  const Scalar _tmp1627 = _tmp1441 * _tmp1625 + _tmp1626 * _tmp934;
  const Scalar _tmp1628 = _tmp1292 * _tmp1627;
  const Scalar _tmp1629 = _tmp1626 * _tmp191 - _tmp1628 * _tmp936 + _tmp1628 * _tmp940;
  const Scalar _tmp1630 =
      _tmp1316 * _tmp1600 + _tmp1601 * priors_1_0_sqrt_info(3, 1) +
      _tmp1603 * priors_1_0_sqrt_info(3, 2) + _tmp1604 * priors_1_0_sqrt_info(3, 0) -
      _tmp1605 * priors_1_0_sqrt_info(3, 1) - _tmp1606 * priors_1_0_sqrt_info(3, 2) +
      _tmp1607 * priors_1_0_sqrt_info(3, 3) + _tmp1608 * priors_1_0_sqrt_info(3, 4) +
      _tmp1609 * priors_1_0_sqrt_info(3, 2) + _tmp1610 * priors_1_0_sqrt_info(3, 1) -
      _tmp1612 * priors_1_0_sqrt_info(3, 0);
  const Scalar _tmp1631 = _tmp1072 * _tmp1616 - _tmp1073 * _tmp1616 + _tmp1614 * _tmp315;
  const Scalar _tmp1632 = _tmp643 * (_tmp1568 * _tmp635 + _tmp645);
  const Scalar _tmp1633 = _tmp647 * (_tmp1570 * _tmp635 + _tmp1571 * _tmp634 + _tmp1572 * _tmp633);
  const Scalar _tmp1634 = _tmp1171 * _tmp1633 + _tmp1356 * _tmp1632;
  const Scalar _tmp1635 = -_tmp1477 * _tmp1634 + _tmp1478 * _tmp1634 + _tmp1633 * _tmp656;
  const Scalar _tmp1636 = -_priors_0_1_target_T_src[0] * _tmp946 - _tmp1401 + _tmp913;
  const Scalar _tmp1637 = _tmp1636 * _tmp901;
  const Scalar _tmp1638 = _tmp909 * (_priors_0_1_target_T_src[1] * _tmp946 + _tmp1398 + _tmp906);
  const Scalar _tmp1639 = _tmp1636 * _tmp916;
  const Scalar _tmp1640 = _tmp1639 * _tmp32;
  const Scalar _tmp1641 = -_priors_0_1_target_T_src[2] * _tmp946 - _tmp1389 + _tmp877 + _tmp888;
  const Scalar _tmp1642 = _tmp1637 * _tmp54;
  const Scalar _tmp1643 = _priors_0_1_target_T_src[3] * _tmp946 + _tmp1386 + _tmp924;
  const Scalar _tmp1644 = _tmp1643 * _tmp909;
  const Scalar _tmp1645 = _tmp1393 * _tmp1636;
  const Scalar _tmp1646 =
      _tmp1336 * _tmp1641 + _tmp1337 * _tmp1637 + _tmp1637 * _tmp63 +
      _tmp1638 * priors_0_1_sqrt_info(1, 2) - _tmp1639 * _tmp63 -
      _tmp1640 * priors_0_1_sqrt_info(1, 1) + _tmp1642 * priors_0_1_sqrt_info(1, 0) +
      _tmp1644 * priors_0_1_sqrt_info(1, 0) - _tmp1645 * priors_0_1_sqrt_info(1, 0);
  const Scalar _tmp1647 = _tmp709 * (_tmp1570 * _tmp696 + _tmp1571 * _tmp697 + _tmp1572 * _tmp695);
  const Scalar _tmp1648 = _tmp705 * (_tmp1568 * _tmp696 + _tmp707);
  const Scalar _tmp1649 = _tmp1277 * _tmp1647 + _tmp1526 * _tmp1648;
  const Scalar _tmp1650 = -_tmp1530 * _tmp1649 + _tmp1532 * _tmp1649 + _tmp1647 * _tmp718;
  const Scalar _tmp1651 =
      _tmp1601 * priors_1_0_sqrt_info(4, 1) + _tmp1603 * priors_1_0_sqrt_info(4, 2) +
      _tmp1604 * priors_1_0_sqrt_info(4, 0) - _tmp1605 * priors_1_0_sqrt_info(4, 1) -
      _tmp1606 * priors_1_0_sqrt_info(4, 2) + _tmp1607 * priors_1_0_sqrt_info(4, 3) +
      _tmp1608 * priors_1_0_sqrt_info(4, 4) + _tmp1609 * priors_1_0_sqrt_info(4, 2) +
      _tmp1610 * priors_1_0_sqrt_info(4, 1) + _tmp1611 * priors_1_0_sqrt_info(4, 0) -
      _tmp1612 * priors_1_0_sqrt_info(4, 0);
  const Scalar _tmp1652 = _tmp395 * (_tmp1568 * _tmp386 + _tmp397);
  const Scalar _tmp1653 = _tmp399 * (_tmp1570 * _tmp386 + _tmp1571 * _tmp387 + _tmp1572 * _tmp385);
  const Scalar _tmp1654 = _tmp1095 * _tmp1653 + _tmp1490 * _tmp1652;
  const Scalar _tmp1655 = -_tmp1332 * _tmp1654 + _tmp1334 * _tmp1654 + _tmp1652 * _tmp408;
  const Scalar _tmp1656 = -_tmp1343 * _tmp1634 + _tmp1344 * _tmp1634 + _tmp1632 * _tmp656;
  const Scalar _tmp1657 = _tmp1637 * _tmp32;
  const Scalar _tmp1658 = _tmp1641 * _tmp909;
  const Scalar _tmp1659 = _tmp1639 * _tmp56;
  const Scalar _tmp1660 =
      _tmp1537 * _tmp1637 + _tmp1637 * _tmp920 + _tmp1638 * priors_0_1_sqrt_info(4, 2) -
      _tmp1640 * priors_0_1_sqrt_info(4, 1) + _tmp1644 * priors_0_1_sqrt_info(4, 0) -
      _tmp1645 * priors_0_1_sqrt_info(4, 0) + _tmp1657 * priors_0_1_sqrt_info(4, 1) +
      _tmp1658 * priors_0_1_sqrt_info(4, 1) - _tmp1659 * priors_0_1_sqrt_info(4, 2);
  const Scalar _tmp1661 =
      _tmp1296 * _tmp1637 + _tmp1297 * _tmp1637 - _tmp1297 * _tmp1639 +
      _tmp1638 * priors_0_1_sqrt_info(0, 2) + _tmp1642 * priors_0_1_sqrt_info(0, 0) +
      _tmp1644 * priors_0_1_sqrt_info(0, 0) - _tmp1645 * priors_0_1_sqrt_info(0, 0) +
      _tmp1658 * priors_0_1_sqrt_info(0, 1) - _tmp1659 * priors_0_1_sqrt_info(0, 2);
  const Scalar _tmp1662 = _tmp426 * (_tmp1568 * _tmp418 + _tmp428);
  const Scalar _tmp1663 = _tmp430 * (_tmp1570 * _tmp418 + _tmp1571 * _tmp417 + _tmp1572 * _tmp416);
  const Scalar _tmp1664 = _tmp1125 * _tmp1663 + _tmp1551 * _tmp1662;
  const Scalar _tmp1665 = -_tmp1562 * _tmp1664 + _tmp1563 * _tmp1664 + _tmp1662 * _tmp439;
  const Scalar _tmp1666 = _tmp1242 * _tmp1578 - _tmp1243 * _tmp1578 + _tmp1577 * _tmp470;
  const Scalar _tmp1667 = _tmp771 * (_tmp1570 * _tmp759 + _tmp1571 * _tmp758 + _tmp1572 * _tmp757);
  const Scalar _tmp1668 = _tmp767 * (_tmp1568 * _tmp759 + _tmp769);
  const Scalar _tmp1669 =
      (Scalar(1) / Scalar(2)) * _tmp1157 * _tmp1667 + (Scalar(1) / Scalar(2)) * _tmp1482 * _tmp1668;
  const Scalar _tmp1670 = _tmp1669 * _tmp772;
  const Scalar _tmp1671 = _tmp1159 * _tmp1670 - _tmp1162 * _tmp1670 + _tmp1667 * _tmp780;
  const Scalar _tmp1672 = _tmp1099 * _tmp1654 - _tmp1101 * _tmp1654 + _tmp1653 * _tmp408;
  const Scalar _tmp1673 =
      -_tmp1268 * _tmp1599 + _tmp1269 * _tmp1602 + _tmp1601 * priors_1_0_sqrt_info(5, 1) +
      _tmp1604 * priors_1_0_sqrt_info(5, 0) - _tmp1605 * priors_1_0_sqrt_info(5, 1) -
      _tmp1606 * priors_1_0_sqrt_info(5, 2) + _tmp1607 * priors_1_0_sqrt_info(5, 3) +
      _tmp1608 * priors_1_0_sqrt_info(5, 4) + _tmp1609 * priors_1_0_sqrt_info(5, 2) +
      _tmp1610 * priors_1_0_sqrt_info(5, 1) + _tmp1611 * priors_1_0_sqrt_info(5, 0);
  const Scalar _tmp1674 =
      _tmp1601 * priors_1_0_sqrt_info(1, 1) + _tmp1603 * priors_1_0_sqrt_info(1, 2) +
      _tmp1604 * priors_1_0_sqrt_info(1, 0) - _tmp1605 * priors_1_0_sqrt_info(1, 1) -
      _tmp1606 * priors_1_0_sqrt_info(1, 2) + _tmp1607 * priors_1_0_sqrt_info(1, 3) +
      _tmp1608 * priors_1_0_sqrt_info(1, 4) + _tmp1609 * priors_1_0_sqrt_info(1, 2) +
      _tmp1610 * priors_1_0_sqrt_info(1, 1) + _tmp1611 * priors_1_0_sqrt_info(1, 0) -
      _tmp1612 * priors_1_0_sqrt_info(1, 0);
  const Scalar _tmp1675 =
      _tmp1258 * _tmp1637 + _tmp1638 * priors_0_1_sqrt_info(5, 2) -
      _tmp1640 * priors_0_1_sqrt_info(5, 1) + _tmp1642 * priors_0_1_sqrt_info(5, 0) +
      _tmp1644 * priors_0_1_sqrt_info(5, 0) - _tmp1645 * priors_0_1_sqrt_info(5, 0) +
      _tmp1657 * priors_0_1_sqrt_info(5, 1) + _tmp1658 * priors_0_1_sqrt_info(5, 1) -
      _tmp1659 * priors_0_1_sqrt_info(5, 2);
  const Scalar _tmp1676 = _tmp736 * (_tmp1568 * _tmp728 + _tmp738);
  const Scalar _tmp1677 = _tmp740 * (_tmp1570 * _tmp728 + _tmp1571 * _tmp727 + _tmp1572 * _tmp726);
  const Scalar _tmp1678 = _tmp1210 * _tmp1677 + _tmp1454 * _tmp1676;
  const Scalar _tmp1679 = -_tmp1215 * _tmp1678 + _tmp1218 * _tmp1678 + _tmp1676 * _tmp749;
  const Scalar _tmp1680 = _tmp1187 * _tmp1664 - _tmp1188 * _tmp1664 + _tmp1663 * _tmp439;
  const Scalar _tmp1681 = _tmp209 * (_tmp1568 * _tmp200 + _tmp211);
  const Scalar _tmp1682 = _tmp213 * (_tmp1570 * _tmp200 + _tmp1571 * _tmp201 + _tmp1572 * _tmp199);
  const Scalar _tmp1683 = _tmp1028 * _tmp1682 + _tmp1407 * _tmp1681;
  const Scalar _tmp1684 = -_tmp1033 * _tmp1683 + _tmp1036 * _tmp1683 + _tmp1681 * _tmp222;
  const Scalar _tmp1685 = _tmp585 * (_tmp1570 * _tmp573 + _tmp1571 * _tmp572 + _tmp1572 * _tmp571);
  const Scalar _tmp1686 = _tmp581 * (_tmp1568 * _tmp573 + _tmp583);
  const Scalar _tmp1687 = _tmp1110 * _tmp1685 + _tmp1362 * _tmp1686;
  const Scalar _tmp1688 = _tmp1112 * _tmp1132;
  const Scalar _tmp1689 = _tmp1365 * _tmp1687 + _tmp1685 * _tmp594 - _tmp1687 * _tmp1688;
  const Scalar _tmp1690 = _tmp271 * (_tmp1568 * _tmp263 + _tmp273);
  const Scalar _tmp1691 = _tmp275 * (_tmp1570 * _tmp263 + _tmp1571 * _tmp262 + _tmp1572 * _tmp261);
  const Scalar _tmp1692 = _tmp1195 * _tmp1691 + _tmp1370 * _tmp1690;
  const Scalar _tmp1693 = -_tmp1201 * _tmp1692 + _tmp1203 * _tmp1692 + _tmp1691 * _tmp284;
  const Scalar _tmp1694 = _tmp1264 * _tmp1582;
  const Scalar _tmp1695 = _tmp1253 * _tmp1694 - _tmp1255 * _tmp1694 + _tmp1580 * _tmp501;
  const Scalar _tmp1696 = -_tmp1544 * _tmp1586 + _tmp1545 * _tmp1586 + _tmp1584 * _tmp377;
  const Scalar _tmp1697 = _tmp616 * (_tmp1570 * _tmp604 + _tmp1571 * _tmp603 + _tmp1572 * _tmp602);
  const Scalar _tmp1698 = _tmp612 * (_tmp1568 * _tmp604 + _tmp614);
  const Scalar _tmp1699 = _tmp1466 * _tmp1698 + _tmp1697 * _tmp992;
  const Scalar _tmp1700 = _tmp1699 * _tmp997;
  const Scalar _tmp1701 = _tmp1697 * _tmp625 + _tmp1699 * _tmp996 - _tmp1700 * _tmp994;
  const Scalar _tmp1702 = _tmp1637 * _tmp56;
  const Scalar _tmp1703 =
      _tmp1638 * priors_0_1_sqrt_info(3, 2) - _tmp1640 * priors_0_1_sqrt_info(3, 1) +
      _tmp1642 * priors_0_1_sqrt_info(3, 0) + _tmp1644 * priors_0_1_sqrt_info(3, 0) -
      _tmp1645 * priors_0_1_sqrt_info(3, 0) + _tmp1657 * priors_0_1_sqrt_info(3, 1) +
      _tmp1658 * priors_0_1_sqrt_info(3, 1) - _tmp1659 * priors_0_1_sqrt_info(3, 2) +
      _tmp1702 * priors_0_1_sqrt_info(3, 2);
  const Scalar _tmp1704 = _tmp523 * (_tmp1570 * _tmp511 + _tmp1571 * _tmp510 + _tmp1572 * _tmp509);
  const Scalar _tmp1705 = _tmp519 * (_tmp1568 * _tmp511 + _tmp521);
  const Scalar _tmp1706 = _tmp1226 * _tmp1704 + _tmp1459 * _tmp1705;
  const Scalar _tmp1707 = _tmp1261 * _tmp1706 - _tmp1262 * _tmp1706 + _tmp1704 * _tmp532;
  const Scalar _tmp1708 = _tmp1558 * _tmp1649 - _tmp1559 * _tmp1649 + _tmp1648 * _tmp718;
  const Scalar _tmp1709 = _tmp1669 * _tmp768;
  const Scalar _tmp1710 = _tmp1159 * _tmp1709 - _tmp1162 * _tmp1709 + _tmp1668 * _tmp780;
  const Scalar _tmp1711 =
      _tmp1067 * _tmp1643 + _tmp1069 * _tmp1637 - _tmp1069 * _tmp1639 +
      _tmp1638 * priors_0_1_sqrt_info(2, 2) + _tmp1642 * priors_0_1_sqrt_info(2, 0) -
      _tmp1645 * priors_0_1_sqrt_info(2, 0) + _tmp1658 * priors_0_1_sqrt_info(2, 1) -
      _tmp1659 * priors_0_1_sqrt_info(2, 2) + _tmp1702 * priors_0_1_sqrt_info(2, 2);
  const Scalar _tmp1712 = -_tmp1114 * _tmp1687 + _tmp1116 * _tmp1687 + _tmp1686 * _tmp594;
  const Scalar _tmp1713 = -_tmp1534 * _tmp1692 + _tmp1535 * _tmp1692 + _tmp1690 * _tmp284;
  const Scalar _tmp1714 = -_tmp1289 * _tmp1620 + _tmp1290 * _tmp1620 + _tmp1619 * _tmp687;
  const Scalar _tmp1715 = _tmp1230 * _tmp1706 - _tmp1234 * _tmp1706 + _tmp1705 * _tmp532;
  const Scalar _tmp1716 = _tmp1625 * _tmp191 - _tmp1627 * _tmp938 + _tmp1627 * _tmp941;
  const Scalar _tmp1717 = _tmp1327 * _tmp1683;
  const Scalar _tmp1718 = -_tmp1031 * _tmp1717 + _tmp1035 * _tmp1717 + _tmp1682 * _tmp222;
  const Scalar _tmp1719 = -_tmp1182 * _tmp1700 + _tmp1184 * _tmp1699 + _tmp1698 * _tmp625;
  const Scalar _tmp1720 = -_tmp1308 * _tmp1595 + _tmp1310 * _tmp1595 + _tmp1594 * _tmp253;
  const Scalar _tmp1721 = _tmp1324 * _tmp1678 - _tmp1325 * _tmp1678 + _tmp1677 * _tmp749;
  const Scalar _tmp1722 = _tmp4 * priors_0_1_sqrt_info(5, 4) + _tmp51 * priors_0_1_sqrt_info(5, 5) +
                          _tmp59 * priors_0_1_sqrt_info(5, 3);
  const Scalar _tmp1723 = _tmp4 * priors_0_1_sqrt_info(2, 4) + _tmp51 * priors_0_1_sqrt_info(2, 5) +
                          _tmp59 * priors_0_1_sqrt_info(2, 3);
  const Scalar _tmp1724 = _tmp1216 * landmarks_18_;
  const Scalar _tmp1725 = _tmp736 * landmarks_18_;
  const Scalar _tmp1726 = _tmp107 * _tmp1724 - _tmp1725 * _tmp76;
  const Scalar _tmp1727 = _tmp740 * landmarks_18_;
  const Scalar _tmp1728 = _tmp1208 * landmarks_18_;
  const Scalar _tmp1729 = _tmp107 * _tmp1728 - _tmp1727 * _tmp99;
  const Scalar _tmp1730 = _tmp1210 * _tmp1729 + _tmp1454 * _tmp1726;
  const Scalar _tmp1731 = -_tmp1215 * _tmp1730 + _tmp1218 * _tmp1730 + _tmp1726 * _tmp749;
  const Scalar _tmp1732 = _tmp519 * landmarks_11_;
  const Scalar _tmp1733 = _tmp107 * landmarks_11_;
  const Scalar _tmp1734 = _tmp1232 * _tmp1733 - _tmp1732 * _tmp76;
  const Scalar _tmp1735 = _tmp523 * landmarks_11_;
  const Scalar _tmp1736 = _tmp1224 * _tmp1733 - _tmp1735 * _tmp99;
  const Scalar _tmp1737 = _tmp1226 * _tmp1736 + _tmp1459 * _tmp1734;
  const Scalar _tmp1738 = _tmp1230 * _tmp1737 - _tmp1234 * _tmp1737 + _tmp1734 * _tmp532;
  const Scalar _tmp1739 = _tmp1261 * _tmp1737 - _tmp1262 * _tmp1737 + _tmp1736 * _tmp532;
  const Scalar _tmp1740 = _tmp492 * landmarks_10_;
  const Scalar _tmp1741 = _tmp1245 * _tmp1247;
  const Scalar _tmp1742 = _tmp1741 * landmarks_10_;
  const Scalar _tmp1743 = _tmp107 * _tmp1742 - _tmp1740 * _tmp99;
  const Scalar _tmp1744 = _tmp488 * landmarks_10_;
  const Scalar _tmp1745 = _tmp107 * _tmp939;
  const Scalar _tmp1746 = _tmp1245 * _tmp482;
  const Scalar _tmp1747 = _tmp1746 * landmarks_10_;
  const Scalar _tmp1748 = -_tmp1744 * _tmp76 + _tmp1745 * _tmp1747;
  const Scalar _tmp1749 = _tmp1249 * _tmp1743 + _tmp1499 * _tmp1748;
  const Scalar _tmp1750 = -_tmp1265 * _tmp1749 + _tmp1266 * _tmp1749 + _tmp1743 * _tmp501;
  const Scalar _tmp1751 = _tmp1360 * landmarks_13_;
  const Scalar _tmp1752 = _tmp581 * landmarks_13_;
  const Scalar _tmp1753 = _tmp107 * _tmp1751 - _tmp1752 * _tmp76;
  const Scalar _tmp1754 = _tmp1108 * landmarks_13_;
  const Scalar _tmp1755 = _tmp585 * landmarks_13_;
  const Scalar _tmp1756 = _tmp107 * _tmp1754 - _tmp1755 * _tmp99;
  const Scalar _tmp1757 = _tmp1110 * _tmp1756 + _tmp1362 * _tmp1753;
  const Scalar _tmp1758 = -_tmp1114 * _tmp1757 + _tmp1116 * _tmp1757 + _tmp1753 * _tmp594;
  const Scalar _tmp1759 = _tmp1091 * _tmp1333;
  const Scalar _tmp1760 = _tmp1759 * landmarks_7_;
  const Scalar _tmp1761 = _tmp395 * landmarks_7_;
  const Scalar _tmp1762 = _tmp107 * _tmp1760 - _tmp1761 * _tmp76;
  const Scalar _tmp1763 = _tmp399 * landmarks_7_;
  const Scalar _tmp1764 = _tmp1091 * _tmp1093 * landmarks_7_;
  const Scalar _tmp1765 = _tmp107 * _tmp1764 - _tmp1763 * _tmp99;
  const Scalar _tmp1766 = _tmp1095 * _tmp1765 + _tmp1490 * _tmp1762;
  const Scalar _tmp1767 = _tmp1099 * _tmp1766 - _tmp1101 * _tmp1766 + _tmp1765 * _tmp408;
  const Scalar _tmp1768 = _tmp107 * landmarks_3_;
  const Scalar _tmp1769 = _tmp275 * landmarks_3_;
  const Scalar _tmp1770 = _tmp1193 * _tmp1768 - _tmp1769 * _tmp99;
  const Scalar _tmp1771 = _tmp271 * landmarks_3_;
  const Scalar _tmp1772 = _tmp1368 * _tmp1768 - _tmp1771 * _tmp76;
  const Scalar _tmp1773 = _tmp1195 * _tmp1770 + _tmp1370 * _tmp1772;
  const Scalar _tmp1774 = -_tmp1201 * _tmp1773 + _tmp1203 * _tmp1773 + _tmp1770 * _tmp284;
  const Scalar _tmp1775 = _tmp213 * landmarks_1_;
  const Scalar _tmp1776 = _tmp1026 * landmarks_1_;
  const Scalar _tmp1777 = _tmp107 * _tmp1776 - _tmp1775 * _tmp99;
  const Scalar _tmp1778 = _tmp209 * landmarks_1_;
  const Scalar _tmp1779 = _tmp1034 * landmarks_1_;
  const Scalar _tmp1780 = _tmp107 * _tmp1779 - _tmp1778 * _tmp76;
  const Scalar _tmp1781 = _tmp1028 * _tmp1777 + _tmp1407 * _tmp1780;
  const Scalar _tmp1782 = -_tmp1328 * _tmp1781 + _tmp1329 * _tmp1781 + _tmp1777 * _tmp222;
  const Scalar _tmp1783 = _tmp4 * priors_0_1_sqrt_info(4, 4) + _tmp51 * priors_0_1_sqrt_info(4, 5) +
                          _tmp59 * priors_0_1_sqrt_info(4, 3);
  const Scalar _tmp1784 = _tmp674 * landmarks_16_;
  const Scalar _tmp1785 = _tmp107 * landmarks_16_;
  const Scalar _tmp1786 = _tmp1287 * _tmp1785 - _tmp1784 * _tmp76;
  const Scalar _tmp1787 = _tmp678 * landmarks_16_;
  const Scalar _tmp1788 = _tmp1056 * _tmp1785 - _tmp1787 * _tmp99;
  const Scalar _tmp1789 = _tmp1058 * _tmp1788 + _tmp1377 * _tmp1786;
  const Scalar _tmp1790 = _tmp1062 * _tmp1789;
  const Scalar _tmp1791 = -_tmp1288 * _tmp1790 + _tmp1290 * _tmp1789 + _tmp1786 * _tmp687;
  const Scalar _tmp1792 = _tmp550 * landmarks_12_;
  const Scalar _tmp1793 = _tmp544 * _tmp853;
  const Scalar _tmp1794 = _tmp1793 * landmarks_12_;
  const Scalar _tmp1795 = _tmp1745 * _tmp1794 - _tmp1792 * _tmp76;
  const Scalar _tmp1796 = _tmp853 * _tmp859;
  const Scalar _tmp1797 = _tmp1796 * landmarks_12_;
  const Scalar _tmp1798 = _tmp554 * landmarks_12_;
  const Scalar _tmp1799 = _tmp107 * _tmp1797 - _tmp1798 * _tmp99;
  const Scalar _tmp1800 =
      (Scalar(1) / Scalar(2)) * _tmp1519 * _tmp1795 + (Scalar(1) / Scalar(2)) * _tmp1799 * _tmp861;
  const Scalar _tmp1801 = -_tmp1019 * _tmp1800 + _tmp1597 * _tmp1800 + _tmp1795 * _tmp563;
  const Scalar _tmp1802 = _tmp616 * landmarks_14_;
  const Scalar _tmp1803 = _tmp988 * landmarks_14_;
  const Scalar _tmp1804 = _tmp1803 * _tmp990;
  const Scalar _tmp1805 = _tmp107 * _tmp1804 - _tmp1802 * _tmp99;
  const Scalar _tmp1806 = _tmp612 * landmarks_14_;
  const Scalar _tmp1807 = _tmp1181 * _tmp1803;
  const Scalar _tmp1808 = _tmp107 * _tmp1807 - _tmp1806 * _tmp76;
  const Scalar _tmp1809 = _tmp1466 * _tmp1808 + _tmp1805 * _tmp992;
  const Scalar _tmp1810 = -_tmp1183 * _tmp1809 + _tmp1184 * _tmp1809 + _tmp1808 * _tmp625;
  const Scalar _tmp1811 = _tmp457 * landmarks_9_;
  const Scalar _tmp1812 = _tmp107 * landmarks_9_;
  const Scalar _tmp1813 = _tmp1447 * _tmp1812 - _tmp1811 * _tmp76;
  const Scalar _tmp1814 = _tmp461 * landmarks_9_;
  const Scalar _tmp1815 = _tmp1140 * _tmp1812 - _tmp1814 * _tmp99;
  const Scalar _tmp1816 = _tmp1142 * _tmp1815 + _tmp1449 * _tmp1813;
  const Scalar _tmp1817 = _tmp1242 * _tmp1816 - _tmp1243 * _tmp1816 + _tmp1815 * _tmp470;
  const Scalar _tmp1818 = _tmp240 * landmarks_2_;
  const Scalar _tmp1819 = _tmp107 * landmarks_2_;
  const Scalar _tmp1820 = _tmp1299 * _tmp234;
  const Scalar _tmp1821 = _tmp1820 * _tmp939;
  const Scalar _tmp1822 = -_tmp1818 * _tmp76 + _tmp1819 * _tmp1821;
  const Scalar _tmp1823 = _tmp1299 * _tmp1302;
  const Scalar _tmp1824 = _tmp244 * landmarks_2_;
  const Scalar _tmp1825 = _tmp1819 * _tmp1823 - _tmp1824 * _tmp99;
  const Scalar _tmp1826 = _tmp1304 * _tmp1825 + _tmp1433 * _tmp1822;
  const Scalar _tmp1827 = _tmp1320 * _tmp1826 - _tmp1321 * _tmp1826 + _tmp1825 * _tmp253;
  const Scalar _tmp1828 = _tmp71 + _tmp74 - 1;
  const Scalar _tmp1829 = _tmp1351 * priors_1_0_sqrt_info(1, 5) +
                          _tmp1828 * priors_1_0_sqrt_info(1, 3) +
                          _tmp852 * priors_1_0_sqrt_info(1, 4);
  const Scalar _tmp1830 = -_tmp1534 * _tmp1773 + _tmp1535 * _tmp1773 + _tmp1772 * _tmp284;
  const Scalar _tmp1831 = _tmp4 * priors_0_1_sqrt_info(1, 4) + _tmp51 * priors_0_1_sqrt_info(1, 5) +
                          _tmp59 * priors_0_1_sqrt_info(1, 3);
  const Scalar _tmp1832 = _tmp364 * landmarks_6_;
  const Scalar _tmp1833 = _tmp1015 * landmarks_6_;
  const Scalar _tmp1834 = _tmp107 * _tmp1833 - _tmp1832 * _tmp76;
  const Scalar _tmp1835 = _tmp1004 * landmarks_6_;
  const Scalar _tmp1836 = _tmp368 * landmarks_6_;
  const Scalar _tmp1837 = _tmp107 * _tmp1835 - _tmp1836 * _tmp99;
  const Scalar _tmp1838 = _tmp1006 * _tmp1837 + _tmp1542 * _tmp1834;
  const Scalar _tmp1839 = -_tmp1011 * _tmp1838 + _tmp1013 * _tmp1838 + _tmp1837 * _tmp377;
  const Scalar _tmp1840 = -_tmp1332 * _tmp1766 + _tmp1334 * _tmp1766 + _tmp1762 * _tmp408;
  const Scalar _tmp1841 = _tmp1800 * _tmp555;
  const Scalar _tmp1842 = _tmp178 * _tmp1841 * _tmp869 + _tmp1799 * _tmp563 - _tmp1841 * _tmp863;
  const Scalar _tmp1843 = _tmp1351 * priors_1_0_sqrt_info(0, 5) +
                          _tmp1828 * priors_1_0_sqrt_info(0, 3) +
                          _tmp852 * priors_1_0_sqrt_info(0, 4);
  const Scalar _tmp1844 = _tmp1351 * priors_1_0_sqrt_info(4, 5) +
                          _tmp1828 * priors_1_0_sqrt_info(4, 3) +
                          _tmp852 * priors_1_0_sqrt_info(4, 4);
  const Scalar _tmp1845 = -_tmp1061 * _tmp1790 + _tmp1065 * _tmp1789 + _tmp1788 * _tmp687;
  const Scalar _tmp1846 = -_tmp1033 * _tmp1781 + _tmp1036 * _tmp1781 + _tmp1780 * _tmp222;
  const Scalar _tmp1847 = _tmp1351 * priors_1_0_sqrt_info(3, 5) +
                          _tmp1828 * priors_1_0_sqrt_info(3, 3) +
                          _tmp852 * priors_1_0_sqrt_info(3, 4);
  const Scalar _tmp1848 = _tmp107 * landmarks_4_;
  const Scalar _tmp1849 = _tmp302 * landmarks_4_;
  const Scalar _tmp1850 = _tmp1471 * _tmp1848 - _tmp1849 * _tmp76;
  const Scalar _tmp1851 = _tmp306 * landmarks_4_;
  const Scalar _tmp1852 = _tmp1043 * _tmp1848 - _tmp1851 * _tmp99;
  const Scalar _tmp1853 = _tmp1045 * _tmp1852 + _tmp1473 * _tmp1850;
  const Scalar _tmp1854 = _tmp1072 * _tmp1853 - _tmp1073 * _tmp1853 + _tmp1852 * _tmp315;
  const Scalar _tmp1855 = _tmp107 * landmarks_15_;
  const Scalar _tmp1856 = _tmp643 * landmarks_15_;
  const Scalar _tmp1857 = _tmp1345 * _tmp1855 - _tmp1856 * _tmp76;
  const Scalar _tmp1858 = _tmp647 * landmarks_15_;
  const Scalar _tmp1859 = _tmp1169 * _tmp1855 - _tmp1858 * _tmp99;
  const Scalar _tmp1860 = _tmp1171 * _tmp1859 + _tmp1356 * _tmp1857;
  const Scalar _tmp1861 = -_tmp1343 * _tmp1860 + _tmp1344 * _tmp1860 + _tmp1857 * _tmp656;
  const Scalar _tmp1862 = _tmp430 * landmarks_8_;
  const Scalar _tmp1863 = _tmp1123 * landmarks_8_;
  const Scalar _tmp1864 = _tmp107 * _tmp1863 - _tmp1862 * _tmp99;
  const Scalar _tmp1865 = _tmp426 * landmarks_8_;
  const Scalar _tmp1866 = _tmp1121 * landmarks_8_;
  const Scalar _tmp1867 = _tmp107 * _tmp1866 - _tmp1865 * _tmp76;
  const Scalar _tmp1868 = _tmp1125 * _tmp1864 + _tmp1551 * _tmp1867;
  const Scalar _tmp1869 = _tmp1187 * _tmp1868 - _tmp1188 * _tmp1868 + _tmp1864 * _tmp439;
  const Scalar _tmp1870 = _tmp1323 * _tmp1730;
  const Scalar _tmp1871 = -_tmp1213 * _tmp1870 + _tmp1217 * _tmp1870 + _tmp1729 * _tmp749;
  const Scalar _tmp1872 = _tmp4 * priors_0_1_sqrt_info(0, 4) + _tmp51 * priors_0_1_sqrt_info(0, 5) +
                          _tmp59 * priors_0_1_sqrt_info(0, 3);
  const Scalar _tmp1873 = _tmp709 * landmarks_17_;
  const Scalar _tmp1874 = _tmp1275 * landmarks_17_;
  const Scalar _tmp1875 = _tmp107 * _tmp1874 - _tmp1873 * _tmp99;
  const Scalar _tmp1876 = _tmp1313 * landmarks_17_;
  const Scalar _tmp1877 = _tmp705 * landmarks_17_;
  const Scalar _tmp1878 = _tmp107 * _tmp1876 - _tmp1877 * _tmp76;
  const Scalar _tmp1879 = _tmp1277 * _tmp1875 + _tmp1526 * _tmp1878;
  const Scalar _tmp1880 = -_tmp1530 * _tmp1879 + _tmp1532 * _tmp1879 + _tmp1875 * _tmp718;
  const Scalar _tmp1881 = _tmp174 * landmarks_0_;
  const Scalar _tmp1882 = _tmp107 * landmarks_0_;
  const Scalar _tmp1883 = _tmp1443 * _tmp1882 - _tmp1881 * _tmp99;
  const Scalar _tmp1884 = _tmp170 * landmarks_0_;
  const Scalar _tmp1885 = _tmp1439 * _tmp1882 - _tmp1884 * _tmp76;
  const Scalar _tmp1886 = _tmp1441 * _tmp1885 + _tmp1883 * _tmp934;
  const Scalar _tmp1887 = _tmp1886 * _tmp936;
  const Scalar _tmp1888 = _tmp1885 * _tmp191 + _tmp1886 * _tmp941 - _tmp1887 * _tmp937;
  const Scalar _tmp1889 = -_tmp1477 * _tmp1860 + _tmp1478 * _tmp1860 + _tmp1859 * _tmp656;
  const Scalar _tmp1890 = _tmp333 * landmarks_5_;
  const Scalar _tmp1891 = _tmp1236 * landmarks_5_;
  const Scalar _tmp1892 = _tmp107 * _tmp1891 - _tmp1890 * _tmp76;
  const Scalar _tmp1893 = _tmp337 * landmarks_5_;
  const Scalar _tmp1894 = _tmp1078 * landmarks_5_;
  const Scalar _tmp1895 = _tmp107 * _tmp1894 - _tmp1893 * _tmp99;
  const Scalar _tmp1896 = _tmp1080 * _tmp1895 + _tmp1382 * _tmp1892;
  const Scalar _tmp1897 = _tmp1237 * _tmp1896;
  const Scalar _tmp1898 = -_tmp1083 * _tmp1897 + _tmp1086 * _tmp1897 + _tmp1892 * _tmp346;
  const Scalar _tmp1899 = -_tmp1544 * _tmp1838 + _tmp1545 * _tmp1838 + _tmp1834 * _tmp377;
  const Scalar _tmp1900 = _tmp767 * landmarks_19_;
  const Scalar _tmp1901 = _tmp107 * landmarks_19_;
  const Scalar _tmp1902 = _tmp1285 * _tmp1901 - _tmp1900 * _tmp76;
  const Scalar _tmp1903 = _tmp771 * landmarks_19_;
  const Scalar _tmp1904 = _tmp1154 * _tmp1901 - _tmp1903 * _tmp99;
  const Scalar _tmp1905 = _tmp1157 * _tmp1904 + _tmp1482 * _tmp1902;
  const Scalar _tmp1906 = -_tmp1164 * _tmp1905 + _tmp1512 * _tmp1905 + _tmp1904 * _tmp780;
  const Scalar _tmp1907 = -_tmp1146 * _tmp1816 + _tmp1148 * _tmp1816 + _tmp1813 * _tmp470;
  const Scalar _tmp1908 = _tmp1254 * _tmp1749 - _tmp1256 * _tmp1749 + _tmp1748 * _tmp501;
  const Scalar _tmp1909 = _tmp4 * priors_0_1_sqrt_info(3, 4) + _tmp51 * priors_0_1_sqrt_info(3, 5) +
                          _tmp59 * priors_0_1_sqrt_info(3, 3);
  const Scalar _tmp1910 = _tmp1351 * priors_1_0_sqrt_info(2, 5) +
                          _tmp1828 * priors_1_0_sqrt_info(2, 3) +
                          _tmp852 * priors_1_0_sqrt_info(2, 4);
  const Scalar _tmp1911 = -_tmp1562 * _tmp1868 + _tmp1563 * _tmp1868 + _tmp1867 * _tmp439;
  const Scalar _tmp1912 = -_tmp1284 * _tmp1905 + _tmp1484 * _tmp1905 + _tmp1902 * _tmp780;
  const Scalar _tmp1913 = _tmp1805 * _tmp625 + _tmp1809 * _tmp996 - _tmp1809 * _tmp998;
  const Scalar _tmp1914 = -_tmp1292 * _tmp1887 + _tmp1293 * _tmp1886 + _tmp1883 * _tmp191;
  const Scalar _tmp1915 = _tmp1558 * _tmp1879 - _tmp1559 * _tmp1879 + _tmp1878 * _tmp718;
  const Scalar _tmp1916 = -_tmp1308 * _tmp1826 + _tmp1310 * _tmp1826 + _tmp1822 * _tmp253;
  const Scalar _tmp1917 = _tmp1047 * _tmp1853;
  const Scalar _tmp1918 = _tmp1048 * _tmp1917 - _tmp1050 * _tmp1917 + _tmp1850 * _tmp315;
  const Scalar _tmp1919 = -_tmp1085 * _tmp1896 + _tmp1087 * _tmp1896 + _tmp1895 * _tmp346;
  const Scalar _tmp1920 = _tmp1351 * priors_1_0_sqrt_info(5, 5) +
                          _tmp1828 * priors_1_0_sqrt_info(5, 3) +
                          _tmp852 * priors_1_0_sqrt_info(5, 4);
  const Scalar _tmp1921 = _tmp1365 * _tmp1757 - _tmp1688 * _tmp1757 + _tmp1756 * _tmp594;
  const Scalar _tmp1922 = _tmp105 * landmarks_0_;
  const Scalar _tmp1923 = _tmp1439 * _tmp1922 - _tmp1884 * _tmp86;
  const Scalar _tmp1924 = _tmp1443 * _tmp1922 - _tmp1881 * _tmp93;
  const Scalar _tmp1925 = _tmp1441 * _tmp1923 + _tmp1924 * _tmp934;
  const Scalar _tmp1926 = _tmp191 * _tmp1923 - _tmp1925 * _tmp938 + _tmp1925 * _tmp941;
  const Scalar _tmp1927 = _tmp1823 * landmarks_2_;
  const Scalar _tmp1928 = _tmp105 * _tmp1927 - _tmp1824 * _tmp93;
  const Scalar _tmp1929 = _tmp1821 * landmarks_2_;
  const Scalar _tmp1930 = _tmp105 * _tmp1929 - _tmp1818 * _tmp86;
  const Scalar _tmp1931 = _tmp1304 * _tmp1928 + _tmp1433 * _tmp1930;
  const Scalar _tmp1932 = -_tmp1308 * _tmp1931 + _tmp1310 * _tmp1931 + _tmp1930 * _tmp253;
  const Scalar _tmp1933 = _tmp52 * priors_0_1_sqrt_info(5, 5) +
                          _tmp58 * priors_0_1_sqrt_info(5, 3) + _tmp7 * priors_0_1_sqrt_info(5, 4);
  const Scalar _tmp1934 = _tmp52 * priors_0_1_sqrt_info(4, 5) +
                          _tmp58 * priors_0_1_sqrt_info(4, 3) + _tmp7 * priors_0_1_sqrt_info(4, 4);
  const Scalar _tmp1935 = _tmp105 * _tmp1728 - _tmp1727 * _tmp93;
  const Scalar _tmp1936 = _tmp105 * _tmp1724 - _tmp1725 * _tmp86;
  const Scalar _tmp1937 = _tmp1210 * _tmp1935 + _tmp1454 * _tmp1936;
  const Scalar _tmp1938 = -_tmp1215 * _tmp1937 + _tmp1218 * _tmp1937 + _tmp1936 * _tmp749;
  const Scalar _tmp1939 = _tmp105 * landmarks_9_;
  const Scalar _tmp1940 = _tmp1140 * _tmp1939 - _tmp1814 * _tmp93;
  const Scalar _tmp1941 = _tmp1447 * _tmp1939 - _tmp1811 * _tmp86;
  const Scalar _tmp1942 = _tmp1142 * _tmp1940 + _tmp1449 * _tmp1941;
  const Scalar _tmp1943 = -_tmp1146 * _tmp1942 + _tmp1148 * _tmp1942 + _tmp1941 * _tmp470;
  const Scalar _tmp1944 = _tmp105 * landmarks_11_;
  const Scalar _tmp1945 = _tmp1232 * _tmp1944 - _tmp1732 * _tmp86;
  const Scalar _tmp1946 = _tmp1224 * _tmp1944 - _tmp1735 * _tmp93;
  const Scalar _tmp1947 = _tmp1226 * _tmp1946 + _tmp1459 * _tmp1945;
  const Scalar _tmp1948 = _tmp1261 * _tmp1947 - _tmp1262 * _tmp1947 + _tmp1946 * _tmp532;
  const Scalar _tmp1949 = _tmp105 * _tmp1779 - _tmp1778 * _tmp86;
  const Scalar _tmp1950 = _tmp105 * _tmp1776 - _tmp1775 * _tmp93;
  const Scalar _tmp1951 = _tmp1028 * _tmp1950 + _tmp1407 * _tmp1949;
  const Scalar _tmp1952 = -_tmp1033 * _tmp1951 + _tmp1036 * _tmp1951 + _tmp1949 * _tmp222;
  const Scalar _tmp1953 = _tmp105 * _tmp1754 - _tmp1755 * _tmp93;
  const Scalar _tmp1954 = _tmp105 * _tmp1751 - _tmp1752 * _tmp86;
  const Scalar _tmp1955 = _tmp1110 * _tmp1953 + _tmp1362 * _tmp1954;
  const Scalar _tmp1956 = -_tmp1114 * _tmp1955 + _tmp1116 * _tmp1955 + _tmp1954 * _tmp594;
  const Scalar _tmp1957 = _tmp1324 * _tmp1937 - _tmp1325 * _tmp1937 + _tmp1935 * _tmp749;
  const Scalar _tmp1958 = _tmp1242 * _tmp1942 - _tmp1243 * _tmp1942 + _tmp1940 * _tmp470;
  const Scalar _tmp1959 = _tmp105 * landmarks_19_;
  const Scalar _tmp1960 = _tmp1154 * _tmp1959 - _tmp1903 * _tmp93;
  const Scalar _tmp1961 = _tmp1285 * _tmp1959 - _tmp1900 * _tmp86;
  const Scalar _tmp1962 = _tmp1157 * _tmp1960 + _tmp1482 * _tmp1961;
  const Scalar _tmp1963 = -_tmp1164 * _tmp1962 + _tmp1512 * _tmp1962 + _tmp1960 * _tmp780;
  const Scalar _tmp1964 = _tmp105 * landmarks_16_;
  const Scalar _tmp1965 = _tmp1287 * _tmp1964 - _tmp1784 * _tmp86;
  const Scalar _tmp1966 = _tmp1056 * _tmp1964 - _tmp1787 * _tmp93;
  const Scalar _tmp1967 = _tmp1058 * _tmp1966 + _tmp1377 * _tmp1965;
  const Scalar _tmp1968 = -_tmp1063 * _tmp1967 + _tmp1065 * _tmp1967 + _tmp1966 * _tmp687;
  const Scalar _tmp1969 = _tmp105 * _tmp1804 - _tmp1802 * _tmp93;
  const Scalar _tmp1970 = _tmp105 * _tmp1807 - _tmp1806 * _tmp86;
  const Scalar _tmp1971 = _tmp1466 * _tmp1970 + _tmp1969 * _tmp992;
  const Scalar _tmp1972 = _tmp1969 * _tmp625 + _tmp1971 * _tmp996 - _tmp1971 * _tmp998;
  const Scalar _tmp1973 = _tmp105 * _tmp1874 - _tmp1873 * _tmp93;
  const Scalar _tmp1974 = _tmp105 * _tmp1876 - _tmp1877 * _tmp86;
  const Scalar _tmp1975 = _tmp1277 * _tmp1973 + _tmp1526 * _tmp1974;
  const Scalar _tmp1976 = -_tmp1530 * _tmp1975 + _tmp1532 * _tmp1975 + _tmp1973 * _tmp718;
  const Scalar _tmp1977 = _tmp105 * landmarks_15_;
  const Scalar _tmp1978 = _tmp1169 * _tmp1977 - _tmp1858 * _tmp93;
  const Scalar _tmp1979 = _tmp1345 * _tmp1977 - _tmp1856 * _tmp86;
  const Scalar _tmp1980 = _tmp1171 * _tmp1978 + _tmp1356 * _tmp1979;
  const Scalar _tmp1981 = -_tmp1343 * _tmp1980 + _tmp1344 * _tmp1980 + _tmp1979 * _tmp656;
  const Scalar _tmp1982 = _tmp52 * priors_0_1_sqrt_info(2, 5) +
                          _tmp58 * priors_0_1_sqrt_info(2, 3) + _tmp7 * priors_0_1_sqrt_info(2, 4);
  const Scalar _tmp1983 = _tmp91 - 1;
  const Scalar _tmp1984 = _tmp1983 + _tmp71;
  const Scalar _tmp1985 = _tmp1349 * priors_1_0_sqrt_info(1, 5) +
                          _tmp1570 * priors_1_0_sqrt_info(1, 3) +
                          _tmp1984 * priors_1_0_sqrt_info(1, 4);
  const Scalar _tmp1986 = _tmp105 * _tmp1760 - _tmp1761 * _tmp86;
  const Scalar _tmp1987 = _tmp105 * _tmp1764 - _tmp1763 * _tmp93;
  const Scalar _tmp1988 = _tmp1095 * _tmp1987 + _tmp1490 * _tmp1986;
  const Scalar _tmp1989 = -_tmp1332 * _tmp1988 + _tmp1334 * _tmp1988 + _tmp1986 * _tmp408;
  const Scalar _tmp1990 = _tmp105 * _tmp1863 - _tmp1862 * _tmp93;
  const Scalar _tmp1991 = _tmp105 * _tmp1866 - _tmp1865 * _tmp86;
  const Scalar _tmp1992 = _tmp1125 * _tmp1990 + _tmp1551 * _tmp1991;
  const Scalar _tmp1993 = _tmp1187 * _tmp1992 - _tmp1188 * _tmp1992 + _tmp1990 * _tmp439;
  const Scalar _tmp1994 = _tmp105 * _tmp1742 - _tmp1740 * _tmp93;
  const Scalar _tmp1995 = _tmp105 * _tmp939;
  const Scalar _tmp1996 = -_tmp1744 * _tmp86 + _tmp1747 * _tmp1995;
  const Scalar _tmp1997 = _tmp1249 * _tmp1994 + _tmp1499 * _tmp1996;
  const Scalar _tmp1998 = -_tmp1265 * _tmp1997 + _tmp1266 * _tmp1997 + _tmp1994 * _tmp501;
  const Scalar _tmp1999 = _tmp1293 * _tmp1925 - _tmp1294 * _tmp1925 + _tmp191 * _tmp1924;
  const Scalar _tmp2000 = -_tmp1477 * _tmp1980 + _tmp1478 * _tmp1980 + _tmp1978 * _tmp656;
  const Scalar _tmp2001 = _tmp105 * _tmp1891 - _tmp1890 * _tmp86;
  const Scalar _tmp2002 = _tmp105 * _tmp1894 - _tmp1893 * _tmp93;
  const Scalar _tmp2003 = _tmp1080 * _tmp2002 + _tmp1382 * _tmp2001;
  const Scalar _tmp2004 = _tmp1238 * _tmp2003 - _tmp1239 * _tmp2003 + _tmp2001 * _tmp346;
  const Scalar _tmp2005 = _tmp1349 * priors_1_0_sqrt_info(4, 5) +
                          _tmp1570 * priors_1_0_sqrt_info(4, 3) +
                          _tmp1984 * priors_1_0_sqrt_info(4, 4);
  const Scalar _tmp2006 = -_tmp1284 * _tmp1962 + _tmp1484 * _tmp1962 + _tmp1961 * _tmp780;
  const Scalar _tmp2007 = _tmp1349 * priors_1_0_sqrt_info(0, 5) +
                          _tmp1570 * priors_1_0_sqrt_info(0, 3) +
                          _tmp1984 * priors_1_0_sqrt_info(0, 4);
  const Scalar _tmp2008 = _tmp105 * _tmp1833 - _tmp1832 * _tmp86;
  const Scalar _tmp2009 = _tmp105 * _tmp1835 - _tmp1836 * _tmp93;
  const Scalar _tmp2010 = _tmp1006 * _tmp2009 + _tmp1542 * _tmp2008;
  const Scalar _tmp2011 = -_tmp1544 * _tmp2010 + _tmp1545 * _tmp2010 + _tmp2008 * _tmp377;
  const Scalar _tmp2012 = -_tmp1011 * _tmp2010 + _tmp1013 * _tmp2010 + _tmp2009 * _tmp377;
  const Scalar _tmp2013 = -_tmp1289 * _tmp1967 + _tmp1290 * _tmp1967 + _tmp1965 * _tmp687;
  const Scalar _tmp2014 = _tmp1097 * _tmp1988;
  const Scalar _tmp2015 = _tmp1098 * _tmp2014 - _tmp1100 * _tmp2014 + _tmp1987 * _tmp408;
  const Scalar _tmp2016 = _tmp105 * _tmp1797 - _tmp1798 * _tmp93;
  const Scalar _tmp2017 = -_tmp1792 * _tmp86 + _tmp1794 * _tmp1995;
  const Scalar _tmp2018 = _tmp1519 * _tmp2017 + _tmp2016 * _tmp861;
  const Scalar _tmp2019 = _tmp1522 * _tmp2018 + _tmp2016 * _tmp563 - _tmp2018 * _tmp865;
  const Scalar _tmp2020 = _tmp1043 * landmarks_4_;
  const Scalar _tmp2021 = _tmp105 * _tmp2020 - _tmp1851 * _tmp93;
  const Scalar _tmp2022 = _tmp1471 * landmarks_4_;
  const Scalar _tmp2023 = _tmp105 * _tmp2022 - _tmp1849 * _tmp86;
  const Scalar _tmp2024 = _tmp1045 * _tmp2021 + _tmp1473 * _tmp2023;
  const Scalar _tmp2025 = _tmp1072 * _tmp2024 - _tmp1073 * _tmp2024 + _tmp2021 * _tmp315;
  const Scalar _tmp2026 = -_tmp1085 * _tmp2003 + _tmp1087 * _tmp2003 + _tmp2002 * _tmp346;
  const Scalar _tmp2027 = _tmp52 * priors_0_1_sqrt_info(0, 5) +
                          _tmp58 * priors_0_1_sqrt_info(0, 3) + _tmp7 * priors_0_1_sqrt_info(0, 4);
  const Scalar _tmp2028 = _tmp52 * priors_0_1_sqrt_info(1, 5) +
                          _tmp58 * priors_0_1_sqrt_info(1, 3) + _tmp7 * priors_0_1_sqrt_info(1, 4);
  const Scalar _tmp2029 = -_tmp1183 * _tmp1971 + _tmp1184 * _tmp1971 + _tmp1970 * _tmp625;
  const Scalar _tmp2030 = _tmp52 * priors_0_1_sqrt_info(3, 5) +
                          _tmp58 * priors_0_1_sqrt_info(3, 3) + _tmp7 * priors_0_1_sqrt_info(3, 4);
  const Scalar _tmp2031 = _tmp1365 * _tmp1955 - _tmp1688 * _tmp1955 + _tmp1953 * _tmp594;
  const Scalar _tmp2032 = _tmp1349 * priors_1_0_sqrt_info(3, 5) +
                          _tmp1570 * priors_1_0_sqrt_info(3, 3) +
                          _tmp1984 * priors_1_0_sqrt_info(3, 4);
  const Scalar _tmp2033 = _tmp105 * landmarks_3_;
  const Scalar _tmp2034 = _tmp1368 * _tmp2033 - _tmp1771 * _tmp86;
  const Scalar _tmp2035 = _tmp1193 * _tmp2033 - _tmp1769 * _tmp93;
  const Scalar _tmp2036 = _tmp1195 * _tmp2035 + _tmp1370 * _tmp2034;
  const Scalar _tmp2037 = -_tmp1534 * _tmp2036 + _tmp1535 * _tmp2036 + _tmp2034 * _tmp284;
  const Scalar _tmp2038 = -_tmp1201 * _tmp2036 + _tmp1203 * _tmp2036 + _tmp2035 * _tmp284;
  const Scalar _tmp2039 = _tmp1254 * _tmp1997 - _tmp1256 * _tmp1997 + _tmp1996 * _tmp501;
  const Scalar _tmp2040 = _tmp1228 * _tmp1947;
  const Scalar _tmp2041 = _tmp1229 * _tmp2040 - _tmp1233 * _tmp2040 + _tmp1945 * _tmp532;
  const Scalar _tmp2042 = _tmp1049 * _tmp2024 - _tmp1051 * _tmp2024 + _tmp2023 * _tmp315;
  const Scalar _tmp2043 = _tmp1349 * priors_1_0_sqrt_info(2, 5) +
                          _tmp1570 * priors_1_0_sqrt_info(2, 3) +
                          _tmp1984 * priors_1_0_sqrt_info(2, 4);
  const Scalar _tmp2044 = -_tmp1328 * _tmp1951 + _tmp1329 * _tmp1951 + _tmp1950 * _tmp222;
  const Scalar _tmp2045 = -_tmp1562 * _tmp1992 + _tmp1563 * _tmp1992 + _tmp1991 * _tmp439;
  const Scalar _tmp2046 = _tmp1320 * _tmp1931 - _tmp1321 * _tmp1931 + _tmp1928 * _tmp253;
  const Scalar _tmp2047 = _tmp1349 * priors_1_0_sqrt_info(5, 5) +
                          _tmp1570 * priors_1_0_sqrt_info(5, 3) +
                          _tmp1984 * priors_1_0_sqrt_info(5, 4);
  const Scalar _tmp2048 = -_tmp1020 * _tmp2018 + _tmp1556 * _tmp2018 + _tmp2017 * _tmp563;
  const Scalar _tmp2049 = _tmp1558 * _tmp1975 - _tmp1559 * _tmp1975 + _tmp1974 * _tmp718;
  const Scalar _tmp2050 = _tmp103 * _tmp1760 - _tmp1761 * _tmp82;
  const Scalar _tmp2051 = _tmp103 * _tmp1764 - _tmp1763 * _tmp96;
  const Scalar _tmp2052 = _tmp1095 * _tmp2051 + _tmp1490 * _tmp2050;
  const Scalar _tmp2053 = _tmp1099 * _tmp2052 - _tmp1101 * _tmp2052 + _tmp2051 * _tmp408;
  const Scalar _tmp2054 = _tmp103 * _tmp1807 - _tmp1806 * _tmp82;
  const Scalar _tmp2055 = _tmp103 * _tmp1804 - _tmp1802 * _tmp96;
  const Scalar _tmp2056 = _tmp1466 * _tmp2054 + _tmp2055 * _tmp992;
  const Scalar _tmp2057 = -_tmp1183 * _tmp2056 + _tmp1184 * _tmp2056 + _tmp2054 * _tmp625;
  const Scalar _tmp2058 = _tmp103 * _tmp939;
  const Scalar _tmp2059 = -_tmp1792 * _tmp82 + _tmp1794 * _tmp2058;
  const Scalar _tmp2060 = _tmp103 * _tmp1797 - _tmp1798 * _tmp96;
  const Scalar _tmp2061 = _tmp1519 * _tmp2059 + _tmp2060 * _tmp861;
  const Scalar _tmp2062 = _tmp2061 * _tmp866;
  const Scalar _tmp2063 = -_tmp1020 * _tmp2061 + _tmp1021 * _tmp2062 + _tmp2059 * _tmp563;
  const Scalar _tmp2064 = _tmp103 * _tmp1894 - _tmp1893 * _tmp96;
  const Scalar _tmp2065 = _tmp103 * _tmp1891 - _tmp1890 * _tmp82;
  const Scalar _tmp2066 = _tmp1080 * _tmp2064 + _tmp1382 * _tmp2065;
  const Scalar _tmp2067 = -_tmp1085 * _tmp2066 + _tmp1087 * _tmp2066 + _tmp2064 * _tmp346;
  const Scalar _tmp2068 = _tmp103 * landmarks_19_;
  const Scalar _tmp2069 = _tmp1285 * _tmp2068 - _tmp1900 * _tmp82;
  const Scalar _tmp2070 = _tmp1154 * _tmp2068 - _tmp1903 * _tmp96;
  const Scalar _tmp2071 = _tmp1157 * _tmp2070 + _tmp1482 * _tmp2069;
  const Scalar _tmp2072 = -_tmp1284 * _tmp2071 + _tmp1484 * _tmp2071 + _tmp2069 * _tmp780;
  const Scalar _tmp2073 = _tmp103 * _tmp1874 - _tmp1873 * _tmp96;
  const Scalar _tmp2074 = _tmp103 * _tmp1876 - _tmp1877 * _tmp82;
  const Scalar _tmp2075 = _tmp1277 * _tmp2073 + _tmp1526 * _tmp2074;
  const Scalar _tmp2076 = -_tmp1530 * _tmp2075 + _tmp1532 * _tmp2075 + _tmp2073 * _tmp718;
  const Scalar _tmp2077 = _tmp10 * priors_0_1_sqrt_info(2, 4) +
                          _tmp48 * priors_0_1_sqrt_info(2, 5) + _tmp60 * priors_0_1_sqrt_info(2, 3);
  const Scalar _tmp2078 = _tmp103 * _tmp1927 - _tmp1824 * _tmp96;
  const Scalar _tmp2079 = _tmp103 * _tmp1929 - _tmp1818 * _tmp82;
  const Scalar _tmp2080 = _tmp1304 * _tmp2078 + _tmp1433 * _tmp2079;
  const Scalar _tmp2081 = _tmp1320 * _tmp2080 - _tmp1321 * _tmp2080 + _tmp2078 * _tmp253;
  const Scalar _tmp2082 = _tmp103 * _tmp1779 - _tmp1778 * _tmp82;
  const Scalar _tmp2083 = _tmp103 * _tmp1776 - _tmp1775 * _tmp96;
  const Scalar _tmp2084 = _tmp1028 * _tmp2083 + _tmp1407 * _tmp2082;
  const Scalar _tmp2085 = -_tmp1328 * _tmp2084 + _tmp1329 * _tmp2084 + _tmp2083 * _tmp222;
  const Scalar _tmp2086 = _tmp10 * priors_0_1_sqrt_info(4, 4) +
                          _tmp48 * priors_0_1_sqrt_info(4, 5) + _tmp60 * priors_0_1_sqrt_info(4, 3);
  const Scalar _tmp2087 = _tmp10 * priors_0_1_sqrt_info(5, 4) +
                          _tmp48 * priors_0_1_sqrt_info(5, 5) + _tmp60 * priors_0_1_sqrt_info(5, 3);
  const Scalar _tmp2088 = -_tmp1033 * _tmp2084 + _tmp1036 * _tmp2084 + _tmp2082 * _tmp222;
  const Scalar _tmp2089 = _tmp103 * _tmp1866 - _tmp1865 * _tmp82;
  const Scalar _tmp2090 = _tmp103 * _tmp1863 - _tmp1862 * _tmp96;
  const Scalar _tmp2091 = _tmp1125 * _tmp2090 + _tmp1551 * _tmp2089;
  const Scalar _tmp2092 = _tmp1187 * _tmp2091 - _tmp1188 * _tmp2091 + _tmp2090 * _tmp439;
  const Scalar _tmp2093 = _tmp103 * landmarks_15_;
  const Scalar _tmp2094 = _tmp1345 * _tmp2093 - _tmp1856 * _tmp82;
  const Scalar _tmp2095 = _tmp1169 * _tmp2093 - _tmp1858 * _tmp96;
  const Scalar _tmp2096 = _tmp1171 * _tmp2095 + _tmp1356 * _tmp2094;
  const Scalar _tmp2097 = -_tmp1477 * _tmp2096 + _tmp1478 * _tmp2096 + _tmp2095 * _tmp656;
  const Scalar _tmp2098 = _tmp103 * _tmp1833 - _tmp1832 * _tmp82;
  const Scalar _tmp2099 = _tmp103 * _tmp1835 - _tmp1836 * _tmp96;
  const Scalar _tmp2100 = _tmp1006 * _tmp2099 + _tmp1542 * _tmp2098;
  const Scalar _tmp2101 = -_tmp1011 * _tmp2100 + _tmp1013 * _tmp2100 + _tmp2099 * _tmp377;
  const Scalar _tmp2102 = _tmp103 * landmarks_11_;
  const Scalar _tmp2103 = _tmp1224 * _tmp2102 - _tmp1735 * _tmp96;
  const Scalar _tmp2104 = _tmp1232 * _tmp2102 - _tmp1732 * _tmp82;
  const Scalar _tmp2105 = _tmp1226 * _tmp2103 + _tmp1459 * _tmp2104;
  const Scalar _tmp2106 = _tmp1230 * _tmp2105 - _tmp1234 * _tmp2105 + _tmp2104 * _tmp532;
  const Scalar _tmp2107 = _tmp103 * landmarks_9_;
  const Scalar _tmp2108 = _tmp1447 * _tmp2107 - _tmp1811 * _tmp82;
  const Scalar _tmp2109 = _tmp1140 * _tmp2107 - _tmp1814 * _tmp96;
  const Scalar _tmp2110 = _tmp1142 * _tmp2109 + _tmp1449 * _tmp2108;
  const Scalar _tmp2111 = -_tmp1146 * _tmp2110 + _tmp1148 * _tmp2110 + _tmp2108 * _tmp470;
  const Scalar _tmp2112 = _tmp103 * landmarks_0_;
  const Scalar _tmp2113 = _tmp1439 * _tmp2112 - _tmp1884 * _tmp82;
  const Scalar _tmp2114 = _tmp1443 * _tmp2112 - _tmp1881 * _tmp96;
  const Scalar _tmp2115 = _tmp1441 * _tmp2113 + _tmp2114 * _tmp934;
  const Scalar _tmp2116 = _tmp191 * _tmp2113 - _tmp2115 * _tmp938 + _tmp2115 * _tmp941;
  const Scalar _tmp2117 = -_tmp1332 * _tmp2052 + _tmp1334 * _tmp2052 + _tmp2050 * _tmp408;
  const Scalar _tmp2118 = _tmp2060 * _tmp563 - _tmp2061 * _tmp865 + _tmp2062 * _tmp870;
  const Scalar _tmp2119 = _tmp2056 * _tmp994;
  const Scalar _tmp2120 = _tmp2055 * _tmp625 + _tmp2119 * _tmp995 - _tmp2119 * _tmp997;
  const Scalar _tmp2121 = _tmp103 * _tmp1754 - _tmp1755 * _tmp96;
  const Scalar _tmp2122 = _tmp103 * _tmp1751 - _tmp1752 * _tmp82;
  const Scalar _tmp2123 = _tmp1110 * _tmp2121 + _tmp1362 * _tmp2122;
  const Scalar _tmp2124 = -_tmp1114 * _tmp2123 + _tmp1116 * _tmp2123 + _tmp2122 * _tmp594;
  const Scalar _tmp2125 = _tmp1293 * _tmp2115 - _tmp1294 * _tmp2115 + _tmp191 * _tmp2114;
  const Scalar _tmp2126 = _tmp1365 * _tmp2123 - _tmp1688 * _tmp2123 + _tmp2121 * _tmp594;
  const Scalar _tmp2127 = _tmp10 * priors_0_1_sqrt_info(1, 4) +
                          _tmp48 * priors_0_1_sqrt_info(1, 5) + _tmp60 * priors_0_1_sqrt_info(1, 3);
  const Scalar _tmp2128 = _tmp1983 + _tmp74;
  const Scalar _tmp2129 = _tmp1571 * priors_1_0_sqrt_info(1, 3) +
                          _tmp2128 * priors_1_0_sqrt_info(1, 5) +
                          _tmp850 * priors_1_0_sqrt_info(1, 4);
  const Scalar _tmp2130 = _tmp1571 * priors_1_0_sqrt_info(4, 3) +
                          _tmp2128 * priors_1_0_sqrt_info(4, 5) +
                          _tmp850 * priors_1_0_sqrt_info(4, 4);
  const Scalar _tmp2131 = _tmp1571 * priors_1_0_sqrt_info(0, 3) +
                          _tmp2128 * priors_1_0_sqrt_info(0, 5) +
                          _tmp850 * priors_1_0_sqrt_info(0, 4);
  const Scalar _tmp2132 = _tmp103 * landmarks_3_;
  const Scalar _tmp2133 = _tmp1193 * _tmp2132 - _tmp1769 * _tmp96;
  const Scalar _tmp2134 = _tmp1368 * _tmp2132 - _tmp1771 * _tmp82;
  const Scalar _tmp2135 = _tmp1195 * _tmp2133 + _tmp1370 * _tmp2134;
  const Scalar _tmp2136 = -_tmp1534 * _tmp2135 + _tmp1535 * _tmp2135 + _tmp2134 * _tmp284;
  const Scalar _tmp2137 = -_tmp1164 * _tmp2071 + _tmp1512 * _tmp2071 + _tmp2070 * _tmp780;
  const Scalar _tmp2138 = _tmp1238 * _tmp2066 - _tmp1239 * _tmp2066 + _tmp2065 * _tmp346;
  const Scalar _tmp2139 = _tmp1558 * _tmp2075 - _tmp1559 * _tmp2075 + _tmp2074 * _tmp718;
  const Scalar _tmp2140 = _tmp1261 * _tmp2105 - _tmp1262 * _tmp2105 + _tmp2103 * _tmp532;
  const Scalar _tmp2141 = _tmp10 * priors_0_1_sqrt_info(0, 4) +
                          _tmp48 * priors_0_1_sqrt_info(0, 5) + _tmp60 * priors_0_1_sqrt_info(0, 3);
  const Scalar _tmp2142 = -_tmp1544 * _tmp2100 + _tmp1545 * _tmp2100 + _tmp2098 * _tmp377;
  const Scalar _tmp2143 = _tmp103 * landmarks_16_;
  const Scalar _tmp2144 = _tmp1287 * _tmp2143 - _tmp1784 * _tmp82;
  const Scalar _tmp2145 = _tmp1056 * _tmp2143 - _tmp1787 * _tmp96;
  const Scalar _tmp2146 = _tmp1058 * _tmp2145 + _tmp1377 * _tmp2144;
  const Scalar _tmp2147 = -_tmp1289 * _tmp2146 + _tmp1290 * _tmp2146 + _tmp2144 * _tmp687;
  const Scalar _tmp2148 = _tmp103 * _tmp1728 - _tmp1727 * _tmp96;
  const Scalar _tmp2149 = _tmp103 * _tmp1724 - _tmp1725 * _tmp82;
  const Scalar _tmp2150 = _tmp1210 * _tmp2148 + _tmp1454 * _tmp2149;
  const Scalar _tmp2151 = _tmp1324 * _tmp2150 - _tmp1325 * _tmp2150 + _tmp2148 * _tmp749;
  const Scalar _tmp2152 = _tmp10 * priors_0_1_sqrt_info(3, 4) +
                          _tmp48 * priors_0_1_sqrt_info(3, 5) + _tmp60 * priors_0_1_sqrt_info(3, 3);
  const Scalar _tmp2153 = -_tmp1343 * _tmp2096 + _tmp1344 * _tmp2096 + _tmp2094 * _tmp656;
  const Scalar _tmp2154 = _tmp1571 * priors_1_0_sqrt_info(3, 3) +
                          _tmp2128 * priors_1_0_sqrt_info(3, 5) +
                          _tmp850 * priors_1_0_sqrt_info(3, 4);
  const Scalar _tmp2155 = _tmp1242 * _tmp2110 - _tmp1243 * _tmp2110 + _tmp2109 * _tmp470;
  const Scalar _tmp2156 = -_tmp1744 * _tmp82 + _tmp1747 * _tmp2058;
  const Scalar _tmp2157 = _tmp103 * _tmp1742 - _tmp1740 * _tmp96;
  const Scalar _tmp2158 = _tmp1249 * _tmp2157 + _tmp1499 * _tmp2156;
  const Scalar _tmp2159 = _tmp1254 * _tmp2158 - _tmp1256 * _tmp2158 + _tmp2156 * _tmp501;
  const Scalar _tmp2160 = -_tmp1265 * _tmp2158 + _tmp1266 * _tmp2158 + _tmp2157 * _tmp501;
  const Scalar _tmp2161 = _tmp103 * _tmp2020 - _tmp1851 * _tmp96;
  const Scalar _tmp2162 = _tmp103 * _tmp2022 - _tmp1849 * _tmp82;
  const Scalar _tmp2163 = _tmp1045 * _tmp2161 + _tmp1473 * _tmp2162;
  const Scalar _tmp2164 = _tmp1049 * _tmp2163 - _tmp1051 * _tmp2163 + _tmp2162 * _tmp315;
  const Scalar _tmp2165 = -_tmp1201 * _tmp2135 + _tmp1203 * _tmp2135 + _tmp2133 * _tmp284;
  const Scalar _tmp2166 = -_tmp1063 * _tmp2146 + _tmp1065 * _tmp2146 + _tmp2145 * _tmp687;
  const Scalar _tmp2167 = _tmp1571 * priors_1_0_sqrt_info(2, 3) +
                          _tmp2128 * priors_1_0_sqrt_info(2, 5) +
                          _tmp850 * priors_1_0_sqrt_info(2, 4);
  const Scalar _tmp2168 = -_tmp1215 * _tmp2150 + _tmp1218 * _tmp2150 + _tmp2149 * _tmp749;
  const Scalar _tmp2169 = -_tmp1562 * _tmp2091 + _tmp1563 * _tmp2091 + _tmp2089 * _tmp439;
  const Scalar _tmp2170 = _tmp1571 * priors_1_0_sqrt_info(5, 3) +
                          _tmp2128 * priors_1_0_sqrt_info(5, 5) +
                          _tmp850 * priors_1_0_sqrt_info(5, 4);
  const Scalar _tmp2171 = _tmp1072 * _tmp2163 - _tmp1073 * _tmp2163 + _tmp2161 * _tmp315;
  const Scalar _tmp2172 = -_tmp1308 * _tmp2080 + _tmp1310 * _tmp2080 + _tmp2079 * _tmp253;
  const Scalar _tmp2173 = std::pow(matches_0_0_weight, Scalar(2)) / std::pow(_tmp784, Scalar(2));
  const Scalar _tmp2174 = _tmp153 * _tmp76 + _tmp157 * _tmp86 + _tmp161 * _tmp82;
  const Scalar _tmp2175 = _tmp103 * _tmp161 + _tmp105 * _tmp157 + _tmp107 * _tmp153;
  const Scalar _tmp2176 = _tmp2175 * _tmp939;
  const Scalar _tmp2177 = -_tmp1438 * _tmp2176 + _tmp170 * _tmp2174;
  const Scalar _tmp2178 = _tmp2175 * _tmp931;
  const Scalar _tmp2179 = _tmp153 * _tmp99 + _tmp157 * _tmp93 + _tmp161 * _tmp96;
  const Scalar _tmp2180 = _tmp2179 * views_1_calibration(1, 0);
  const Scalar _tmp2181 = -_tmp1437 * _tmp2178 + _tmp169 * _tmp2180;
  const Scalar _tmp2182 = _tmp1441 * _tmp2177 + _tmp2181 * _tmp934;
  const Scalar _tmp2183 = _tmp2182 * _tmp936;
  const Scalar _tmp2184 = _tmp191 * _tmp2177 + _tmp2182 * _tmp941 - _tmp2183 * _tmp937;
  const Scalar _tmp2185 = -_tmp1292 * _tmp2183 + _tmp1293 * _tmp2182 + _tmp191 * _tmp2181;
  const Scalar _tmp2186 = -_tmp1029 * _tmp2176 + _tmp209 * _tmp2174;
  const Scalar _tmp2187 = -_tmp1025 * _tmp2178 + _tmp208 * _tmp2180;
  const Scalar _tmp2188 = _tmp1028 * _tmp2187 + _tmp1407 * _tmp2186;
  const Scalar _tmp2189 = -_tmp1033 * _tmp2188 + _tmp1036 * _tmp2188 + _tmp2186 * _tmp222;
  const Scalar _tmp2190 = std::pow(matches_0_1_weight, Scalar(2)) / std::pow(_tmp787, Scalar(2));
  const Scalar _tmp2191 = -_tmp1328 * _tmp2188 + _tmp1329 * _tmp2188 + _tmp2187 * _tmp222;
  const Scalar _tmp2192 = std::pow(matches_0_2_weight, Scalar(2)) / std::pow(_tmp790, Scalar(2));
  const Scalar _tmp2193 = _tmp2174 * views_1_calibration(0, 0);
  const Scalar _tmp2194 = -_tmp1820 * _tmp2176 + _tmp2193 * _tmp239;
  const Scalar _tmp2195 = -_tmp1299 * _tmp2178 * _tmp243 + _tmp2180 * _tmp239;
  const Scalar _tmp2196 = _tmp1304 * _tmp2195 + _tmp1433 * _tmp2194;
  const Scalar _tmp2197 = -_tmp1308 * _tmp2196 + _tmp1310 * _tmp2196 + _tmp2194 * _tmp253;
  const Scalar _tmp2198 = _tmp1320 * _tmp2196 - _tmp1321 * _tmp2196 + _tmp2195 * _tmp253;
  const Scalar _tmp2199 = -_tmp1196 * _tmp2176 + _tmp2193 * _tmp270;
  const Scalar _tmp2200 = -_tmp1192 * _tmp2178 + _tmp2180 * _tmp270;
  const Scalar _tmp2201 = _tmp1195 * _tmp2200 + _tmp1370 * _tmp2199;
  const Scalar _tmp2202 = -_tmp1534 * _tmp2201 + _tmp1535 * _tmp2201 + _tmp2199 * _tmp284;
  const Scalar _tmp2203 = -_tmp1201 * _tmp2201 + _tmp1203 * _tmp2201 + _tmp2200 * _tmp284;
  const Scalar _tmp2204 = std::pow(matches_0_3_weight, Scalar(2)) / std::pow(_tmp793, Scalar(2));
  const Scalar _tmp2205 = -_tmp1042 * _tmp2178 + _tmp2180 * _tmp301;
  const Scalar _tmp2206 = -_tmp1040 * _tmp2176 + _tmp2193 * _tmp301;
  const Scalar _tmp2207 = _tmp1045 * _tmp2205 + _tmp1473 * _tmp2206;
  const Scalar _tmp2208 = _tmp1072 * _tmp2207 - _tmp1073 * _tmp2207 + _tmp2205 * _tmp315;
  const Scalar _tmp2209 = std::pow(matches_0_4_weight, Scalar(2)) / std::pow(_tmp796, Scalar(2));
  const Scalar _tmp2210 = _tmp1049 * _tmp2207 - _tmp1051 * _tmp2207 + _tmp2206 * _tmp315;
  const Scalar _tmp2211 = -_tmp1077 * _tmp2178 + _tmp2180 * _tmp332;
  const Scalar _tmp2212 = -_tmp1081 * _tmp2176 + _tmp2193 * _tmp332;
  const Scalar _tmp2213 = _tmp1080 * _tmp2211 + _tmp1382 * _tmp2212;
  const Scalar _tmp2214 = -_tmp1085 * _tmp2213 + _tmp1087 * _tmp2213 + _tmp2211 * _tmp346;
  const Scalar _tmp2215 = std::pow(matches_0_5_weight, Scalar(2)) / std::pow(_tmp799, Scalar(2));
  const Scalar _tmp2216 = _tmp1238 * _tmp2213 - _tmp1239 * _tmp2213 + _tmp2212 * _tmp346;
  const Scalar _tmp2217 = -_tmp1003 * _tmp2178 + _tmp2180 * _tmp363;
  const Scalar _tmp2218 = -_tmp1007 * _tmp2176 + _tmp2193 * _tmp363;
  const Scalar _tmp2219 = _tmp1006 * _tmp2217 + _tmp1542 * _tmp2218;
  const Scalar _tmp2220 = -_tmp1544 * _tmp2219 + _tmp1545 * _tmp2219 + _tmp2218 * _tmp377;
  const Scalar _tmp2221 = std::pow(matches_0_6_weight, Scalar(2)) / std::pow(_tmp802, Scalar(2));
  const Scalar _tmp2222 = -_tmp1011 * _tmp2219 + _tmp1013 * _tmp2219 + _tmp2217 * _tmp377;
  const Scalar _tmp2223 = std::pow(matches_0_7_weight, Scalar(2)) / std::pow(_tmp805, Scalar(2));
  const Scalar _tmp2224 = -_tmp1091 * _tmp2178 * _tmp398 + _tmp2180 * _tmp394;
  const Scalar _tmp2225 = -_tmp1759 * _tmp2175 + _tmp2174 * _tmp395;
  const Scalar _tmp2226 = _tmp1095 * _tmp2224 + _tmp1490 * _tmp2225;
  const Scalar _tmp2227 = -_tmp1332 * _tmp2226 + _tmp1334 * _tmp2226 + _tmp2225 * _tmp408;
  const Scalar _tmp2228 = _tmp1099 * _tmp2226 - _tmp1101 * _tmp2226 + _tmp2224 * _tmp408;
  const Scalar _tmp2229 = -_tmp1120 * _tmp2176 + _tmp2193 * _tmp425;
  const Scalar _tmp2230 = -_tmp1122 * _tmp2178 + _tmp2180 * _tmp425;
  const Scalar _tmp2231 = _tmp1125 * _tmp2230 + _tmp1551 * _tmp2229;
  const Scalar _tmp2232 = _tmp1187 * _tmp2231 - _tmp1188 * _tmp2231 + _tmp2230 * _tmp439;
  const Scalar _tmp2233 = std::pow(matches_0_8_weight, Scalar(2)) / std::pow(_tmp808, Scalar(2));
  const Scalar _tmp2234 = -_tmp1562 * _tmp2231 + _tmp1563 * _tmp2231 + _tmp2229 * _tmp439;
  const Scalar _tmp2235 = -_tmp1139 * _tmp2178 + _tmp2180 * _tmp456;
  const Scalar _tmp2236 = -_tmp1137 * _tmp2176 + _tmp2174 * _tmp457;
  const Scalar _tmp2237 = _tmp1142 * _tmp2235 + _tmp1449 * _tmp2236;
  const Scalar _tmp2238 = _tmp1145 * _tmp2237;
  const Scalar _tmp2239 = -_tmp1144 * _tmp2238 + _tmp1148 * _tmp2237 + _tmp2236 * _tmp470;
  const Scalar _tmp2240 = std::pow(matches_0_9_weight, Scalar(2)) / std::pow(_tmp811, Scalar(2));
  const Scalar _tmp2241 = -_tmp1241 * _tmp2238 + _tmp1242 * _tmp2237 + _tmp2235 * _tmp470;
  const Scalar _tmp2242 = -_tmp1741 * _tmp2175 + _tmp2180 * _tmp487;
  const Scalar _tmp2243 = -_tmp1746 * _tmp2176 + _tmp2193 * _tmp487;
  const Scalar _tmp2244 = _tmp1249 * _tmp2242 + _tmp1499 * _tmp2243;
  const Scalar _tmp2245 = -_tmp1265 * _tmp2244 + _tmp1266 * _tmp2244 + _tmp2242 * _tmp501;
  const Scalar _tmp2246 = std::pow(matches_0_10_weight, Scalar(2)) / std::pow(_tmp814, Scalar(2));
  const Scalar _tmp2247 = _tmp1254 * _tmp2244 - _tmp1256 * _tmp2244 + _tmp2243 * _tmp501;
  const Scalar _tmp2248 = -_tmp1223 * _tmp2178 + _tmp2180 * _tmp518;
  const Scalar _tmp2249 = -_tmp1222 * _tmp2176 + _tmp2193 * _tmp518;
  const Scalar _tmp2250 = _tmp1226 * _tmp2248 + _tmp1459 * _tmp2249;
  const Scalar _tmp2251 = _tmp1261 * _tmp2250 - _tmp1262 * _tmp2250 + _tmp2248 * _tmp532;
  const Scalar _tmp2252 = std::pow(matches_0_11_weight, Scalar(2)) / std::pow(_tmp817, Scalar(2));
  const Scalar _tmp2253 = _tmp1230 * _tmp2250 - _tmp1234 * _tmp2250 + _tmp2249 * _tmp532;
  const Scalar _tmp2254 = std::pow(matches_0_12_weight, Scalar(2)) / std::pow(_tmp820, Scalar(2));
  const Scalar _tmp2255 = -_tmp1793 * _tmp2176 + _tmp2193 * _tmp549;
  const Scalar _tmp2256 = -_tmp1796 * _tmp2175 + _tmp2180 * _tmp549;
  const Scalar _tmp2257 =
      (Scalar(1) / Scalar(2)) * _tmp1519 * _tmp2255 + (Scalar(1) / Scalar(2)) * _tmp2256 * _tmp861;
  const Scalar _tmp2258 = -_tmp1019 * _tmp2257 + _tmp1597 * _tmp2257 + _tmp2255 * _tmp563;
  const Scalar _tmp2259 = _tmp1591 * _tmp2257 + _tmp2256 * _tmp563 - _tmp2257 * _tmp864;
  const Scalar _tmp2260 = -_tmp1105 * _tmp2176 + _tmp2193 * _tmp580;
  const Scalar _tmp2261 = -_tmp1107 * _tmp2178 + _tmp2180 * _tmp580;
  const Scalar _tmp2262 = _tmp1110 * _tmp2261 + _tmp1362 * _tmp2260;
  const Scalar _tmp2263 = -_tmp1114 * _tmp2262 + _tmp1116 * _tmp2262 + _tmp2260 * _tmp594;
  const Scalar _tmp2264 = std::pow(matches_0_13_weight, Scalar(2)) / std::pow(_tmp823, Scalar(2));
  const Scalar _tmp2265 = _tmp1365 * _tmp2262 - _tmp1688 * _tmp2262 + _tmp2261 * _tmp594;
  const Scalar _tmp2266 = _tmp2174 * _tmp612 - _tmp2176 * _tmp606 * _tmp988;
  const Scalar _tmp2267 = -_tmp2178 * _tmp615 * _tmp988 + _tmp2179 * _tmp616;
  const Scalar _tmp2268 = _tmp1466 * _tmp2266 + _tmp2267 * _tmp992;
  const Scalar _tmp2269 = _tmp2267 * _tmp625 + _tmp2268 * _tmp996 - _tmp2268 * _tmp998;
  const Scalar _tmp2270 = -_tmp1183 * _tmp2268 + _tmp1184 * _tmp2268 + _tmp2266 * _tmp625;
  const Scalar _tmp2271 = std::pow(matches_0_14_weight, Scalar(2)) / std::pow(_tmp826, Scalar(2));
  const Scalar _tmp2272 = -_tmp1168 * _tmp2178 + _tmp2179 * _tmp647;
  const Scalar _tmp2273 = -_tmp1172 * _tmp2176 + _tmp2193 * _tmp642;
  const Scalar _tmp2274 = _tmp1171 * _tmp2272 + _tmp1356 * _tmp2273;
  const Scalar _tmp2275 = -_tmp1343 * _tmp2274 + _tmp1344 * _tmp2274 + _tmp2273 * _tmp656;
  const Scalar _tmp2276 = std::pow(matches_0_15_weight, Scalar(2)) / std::pow(_tmp829, Scalar(2));
  const Scalar _tmp2277 = -_tmp1477 * _tmp2274 + _tmp1478 * _tmp2274 + _tmp2272 * _tmp656;
  const Scalar _tmp2278 = std::pow(matches_0_16_weight, Scalar(2)) / std::pow(_tmp832, Scalar(2));
  const Scalar _tmp2279 = -_tmp1059 * _tmp2176 + _tmp2193 * _tmp673;
  const Scalar _tmp2280 = -_tmp1055 * _tmp2178 + _tmp2180 * _tmp673;
  const Scalar _tmp2281 = _tmp1058 * _tmp2280 + _tmp1377 * _tmp2279;
  const Scalar _tmp2282 = -_tmp1289 * _tmp2281 + _tmp1290 * _tmp2281 + _tmp2279 * _tmp687;
  const Scalar _tmp2283 = -_tmp1063 * _tmp2281 + _tmp1065 * _tmp2281 + _tmp2280 * _tmp687;
  const Scalar _tmp2284 = -_tmp1274 * _tmp2178 + _tmp2180 * _tmp704;
  const Scalar _tmp2285 = -_tmp1278 * _tmp2176 + _tmp2193 * _tmp704;
  const Scalar _tmp2286 = _tmp1277 * _tmp2284 + _tmp1526 * _tmp2285;
  const Scalar _tmp2287 = -_tmp1530 * _tmp2286 + _tmp1532 * _tmp2286 + _tmp2284 * _tmp718;
  const Scalar _tmp2288 = std::pow(matches_0_17_weight, Scalar(2)) / std::pow(_tmp835, Scalar(2));
  const Scalar _tmp2289 = _tmp1558 * _tmp2286 - _tmp1559 * _tmp2286 + _tmp2285 * _tmp718;
  const Scalar _tmp2290 = -_tmp1207 * _tmp2178 + _tmp2179 * _tmp740;
  const Scalar _tmp2291 = -_tmp1211 * _tmp2176 + _tmp2193 * _tmp735;
  const Scalar _tmp2292 = _tmp1210 * _tmp2290 + _tmp1454 * _tmp2291;
  const Scalar _tmp2293 = _tmp1324 * _tmp2292 - _tmp1325 * _tmp2292 + _tmp2290 * _tmp749;
  const Scalar _tmp2294 = std::pow(matches_0_18_weight, Scalar(2)) / std::pow(_tmp838, Scalar(2));
  const Scalar _tmp2295 = -_tmp1215 * _tmp2292 + _tmp1218 * _tmp2292 + _tmp2291 * _tmp749;
  const Scalar _tmp2296 = -_tmp1153 * _tmp2178 + _tmp2180 * _tmp766;
  const Scalar _tmp2297 = -_tmp1156 * _tmp2176 + _tmp2193 * _tmp766;
  const Scalar _tmp2298 = _tmp1157 * _tmp2296 + _tmp1482 * _tmp2297;
  const Scalar _tmp2299 = -_tmp1164 * _tmp2298 + _tmp1512 * _tmp2298 + _tmp2296 * _tmp780;
  const Scalar _tmp2300 = std::pow(matches_0_19_weight, Scalar(2)) / std::pow(_tmp841, Scalar(2));
  const Scalar _tmp2301 = -_tmp1284 * _tmp2298 + _tmp1484 * _tmp2298 + _tmp2297 * _tmp780;

  // Output terms (4)
  if (residual != nullptr) {
    Eigen::Matrix<Scalar, 72, 1>& _residual = (*residual);

    _residual(0, 0) = _tmp62;
    _residual(1, 0) = _tmp64;
    _residual(2, 0) = _tmp66;
    _residual(3, 0) = _tmp67;
    _residual(4, 0) = _tmp68;
    _residual(5, 0) = _tmp69;
    _residual(6, 0) = _tmp132;
    _residual(7, 0) = _tmp134;
    _residual(8, 0) = _tmp135;
    _residual(9, 0) = _tmp136;
    _residual(10, 0) = _tmp137;
    _residual(11, 0) = _tmp139;
    _residual(12, 0) = _tmp192;
    _residual(13, 0) = _tmp193;
    _residual(14, 0) = _tmp223;
    _residual(15, 0) = _tmp224;
    _residual(16, 0) = _tmp254;
    _residual(17, 0) = _tmp255;
    _residual(18, 0) = _tmp285;
    _residual(19, 0) = _tmp286;
    _residual(20, 0) = _tmp316;
    _residual(21, 0) = _tmp317;
    _residual(22, 0) = _tmp347;
    _residual(23, 0) = _tmp348;
    _residual(24, 0) = _tmp378;
    _residual(25, 0) = _tmp379;
    _residual(26, 0) = _tmp409;
    _residual(27, 0) = _tmp410;
    _residual(28, 0) = _tmp440;
    _residual(29, 0) = _tmp441;
    _residual(30, 0) = _tmp471;
    _residual(31, 0) = _tmp472;
    _residual(32, 0) = _tmp502;
    _residual(33, 0) = _tmp503;
    _residual(34, 0) = _tmp533;
    _residual(35, 0) = _tmp534;
    _residual(36, 0) = _tmp564;
    _residual(37, 0) = _tmp565;
    _residual(38, 0) = _tmp595;
    _residual(39, 0) = _tmp596;
    _residual(40, 0) = _tmp626;
    _residual(41, 0) = _tmp627;
    _residual(42, 0) = _tmp657;
    _residual(43, 0) = _tmp658;
    _residual(44, 0) = _tmp688;
    _residual(45, 0) = _tmp689;
    _residual(46, 0) = _tmp719;
    _residual(47, 0) = _tmp720;
    _residual(48, 0) = _tmp750;
    _residual(49, 0) = _tmp751;
    _residual(50, 0) = _tmp781;
    _residual(51, 0) = _tmp782;
    _residual(52, 0) = _tmp783 * _tmp785;
    _residual(53, 0) = _tmp786 * _tmp788;
    _residual(54, 0) = _tmp789 * _tmp791;
    _residual(55, 0) = _tmp792 * _tmp794;
    _residual(56, 0) = _tmp795 * _tmp797;
    _residual(57, 0) = _tmp798 * _tmp800;
    _residual(58, 0) = _tmp801 * _tmp803;
    _residual(59, 0) = _tmp804 * _tmp806;
    _residual(60, 0) = _tmp807 * _tmp809;
    _residual(61, 0) = _tmp810 * _tmp812;
    _residual(62, 0) = _tmp813 * _tmp815;
    _residual(63, 0) = _tmp816 * _tmp818;
    _residual(64, 0) = _tmp819 * _tmp821;
    _residual(65, 0) = _tmp822 * _tmp824;
    _residual(66, 0) = _tmp825 * _tmp827;
    _residual(67, 0) = _tmp828 * _tmp830;
    _residual(68, 0) = _tmp831 * _tmp833;
    _residual(69, 0) = _tmp834 * _tmp836;
    _residual(70, 0) = _tmp837 * _tmp839;
    _residual(71, 0) = _tmp840 * _tmp842;
  }

  if (rhs != nullptr) {
    Eigen::Matrix<Scalar, 26, 1>& _rhs = (*rhs);

    _rhs(0, 0) = _tmp1000 * _tmp135 + _tmp1014 * _tmp379 + _tmp1018 * _tmp378 + _tmp1022 * _tmp564 +
                 _tmp1037 * _tmp223 + _tmp1052 * _tmp316 + _tmp1066 * _tmp689 + _tmp1070 * _tmp66 +
                 _tmp1074 * _tmp317 + _tmp1088 * _tmp348 + _tmp1102 * _tmp410 + _tmp1117 * _tmp595 +
                 _tmp1131 * _tmp440 + _tmp1134 * _tmp596 + _tmp1149 * _tmp471 + _tmp1150 * _tmp137 +
                 _tmp1165 * _tmp782 + _tmp1178 * _tmp658 + _tmp1180 * _tmp132 + _tmp1185 * _tmp626 +
                 _tmp1189 * _tmp441 + _tmp1204 * _tmp286 + _tmp1219 * _tmp750 + _tmp1235 * _tmp533 +
                 _tmp1240 * _tmp347 + _tmp1244 * _tmp472 + _tmp1257 * _tmp502 + _tmp1259 * _tmp69 +
                 _tmp1263 * _tmp534 + _tmp1267 * _tmp503 + _tmp1270 * _tmp139 + _tmp1283 * _tmp720 +
                 _tmp1286 * _tmp781 + _tmp1291 * _tmp688 + _tmp1295 * _tmp193 + _tmp1298 * _tmp62 +
                 _tmp1311 * _tmp254 + _tmp1315 * _tmp719 + _tmp1317 * _tmp136 + _tmp1318 * _tmp67 +
                 _tmp1322 * _tmp255 + _tmp1326 * _tmp751 + _tmp1330 * _tmp224 + _tmp1335 * _tmp409 +
                 _tmp1338 * _tmp64 + _tmp134 * _tmp987 + _tmp1341 * _tmp285 + _tmp1346 * _tmp657 +
                 _tmp192 * _tmp942 + _tmp565 * _tmp871 + _tmp627 * _tmp999 + _tmp68 * _tmp927;
    _rhs(1, 0) = _tmp132 * _tmp1565 + _tmp134 * _tmp1430 + _tmp135 * _tmp1494 + _tmp1358 * _tmp657 +
                 _tmp136 * _tmp1515 + _tmp1366 * _tmp596 + _tmp137 * _tmp1566 + _tmp1373 * _tmp286 +
                 _tmp1379 * _tmp689 + _tmp1384 * _tmp347 + _tmp139 * _tmp1510 + _tmp1403 * _tmp66 +
                 _tmp1409 * _tmp223 + _tmp1435 * _tmp254 + _tmp1444 * _tmp193 + _tmp1445 * _tmp595 +
                 _tmp1451 * _tmp472 + _tmp1456 * _tmp751 + _tmp1462 * _tmp534 + _tmp1469 * _tmp626 +
                 _tmp1475 * _tmp317 + _tmp1476 * _tmp348 + _tmp1479 * _tmp658 + _tmp1485 * _tmp781 +
                 _tmp1486 * _tmp688 + _tmp1492 * _tmp410 + _tmp1493 * _tmp409 + _tmp1496 * _tmp62 +
                 _tmp1501 * _tmp502 + _tmp1503 * _tmp471 + _tmp1504 * _tmp750 + _tmp1506 * _tmp69 +
                 _tmp1508 * _tmp255 + _tmp1509 * _tmp192 + _tmp1511 * _tmp316 + _tmp1513 * _tmp782 +
                 _tmp1514 * _tmp533 + _tmp1516 * _tmp224 + _tmp1523 * _tmp565 + _tmp1533 * _tmp720 +
                 _tmp1536 * _tmp285 + _tmp1538 * _tmp68 + _tmp1539 * _tmp67 + _tmp1546 * _tmp378 +
                 _tmp1547 * _tmp379 + _tmp1553 * _tmp441 + _tmp1554 * _tmp64 + _tmp1555 * _tmp627 +
                 _tmp1557 * _tmp564 + _tmp1560 * _tmp719 + _tmp1561 * _tmp503 + _tmp1564 * _tmp440;
    _rhs(2, 0) = _tmp132 * _tmp1624 + _tmp134 * _tmp1674 + _tmp135 * _tmp1613 + _tmp136 * _tmp1630 +
                 _tmp137 * _tmp1651 + _tmp139 * _tmp1673 + _tmp1575 * _tmp348 + _tmp1579 * _tmp471 +
                 _tmp1583 * _tmp502 + _tmp1587 * _tmp379 + _tmp1592 * _tmp565 + _tmp1596 * _tmp255 +
                 _tmp1598 * _tmp564 + _tmp1617 * _tmp316 + _tmp1622 * _tmp689 + _tmp1623 * _tmp347 +
                 _tmp1629 * _tmp193 + _tmp1631 * _tmp317 + _tmp1635 * _tmp658 + _tmp1646 * _tmp64 +
                 _tmp1650 * _tmp720 + _tmp1655 * _tmp409 + _tmp1656 * _tmp657 + _tmp1660 * _tmp68 +
                 _tmp1661 * _tmp62 + _tmp1665 * _tmp440 + _tmp1666 * _tmp472 + _tmp1671 * _tmp782 +
                 _tmp1672 * _tmp410 + _tmp1675 * _tmp69 + _tmp1679 * _tmp750 + _tmp1680 * _tmp441 +
                 _tmp1684 * _tmp223 + _tmp1689 * _tmp596 + _tmp1693 * _tmp286 + _tmp1695 * _tmp503 +
                 _tmp1696 * _tmp378 + _tmp1701 * _tmp627 + _tmp1703 * _tmp67 + _tmp1707 * _tmp534 +
                 _tmp1708 * _tmp719 + _tmp1710 * _tmp781 + _tmp1711 * _tmp66 + _tmp1712 * _tmp595 +
                 _tmp1713 * _tmp285 + _tmp1714 * _tmp688 + _tmp1715 * _tmp533 + _tmp1716 * _tmp192 +
                 _tmp1718 * _tmp224 + _tmp1719 * _tmp626 + _tmp1720 * _tmp254 + _tmp1721 * _tmp751;
    _rhs(3, 0) = _tmp132 * _tmp1843 + _tmp134 * _tmp1829 + _tmp135 * _tmp1910 + _tmp136 * _tmp1847 +
                 _tmp137 * _tmp1844 + _tmp139 * _tmp1920 + _tmp1722 * _tmp69 + _tmp1723 * _tmp66 +
                 _tmp1731 * _tmp750 + _tmp1738 * _tmp533 + _tmp1739 * _tmp534 + _tmp1750 * _tmp503 +
                 _tmp1758 * _tmp595 + _tmp1767 * _tmp410 + _tmp1774 * _tmp286 + _tmp1782 * _tmp224 +
                 _tmp1783 * _tmp68 + _tmp1791 * _tmp688 + _tmp1801 * _tmp564 + _tmp1810 * _tmp626 +
                 _tmp1817 * _tmp472 + _tmp1827 * _tmp255 + _tmp1830 * _tmp285 + _tmp1831 * _tmp64 +
                 _tmp1839 * _tmp379 + _tmp1840 * _tmp409 + _tmp1842 * _tmp565 + _tmp1845 * _tmp689 +
                 _tmp1846 * _tmp223 + _tmp1854 * _tmp317 + _tmp1861 * _tmp657 + _tmp1869 * _tmp441 +
                 _tmp1871 * _tmp751 + _tmp1872 * _tmp62 + _tmp1880 * _tmp720 + _tmp1888 * _tmp192 +
                 _tmp1889 * _tmp658 + _tmp1898 * _tmp347 + _tmp1899 * _tmp378 + _tmp1906 * _tmp782 +
                 _tmp1907 * _tmp471 + _tmp1908 * _tmp502 + _tmp1909 * _tmp67 + _tmp1911 * _tmp440 +
                 _tmp1912 * _tmp781 + _tmp1913 * _tmp627 + _tmp1914 * _tmp193 + _tmp1915 * _tmp719 +
                 _tmp1916 * _tmp254 + _tmp1918 * _tmp316 + _tmp1919 * _tmp348 + _tmp1921 * _tmp596;
    _rhs(4, 0) = _tmp132 * _tmp2007 + _tmp134 * _tmp1985 + _tmp135 * _tmp2043 + _tmp136 * _tmp2032 +
                 _tmp137 * _tmp2005 + _tmp139 * _tmp2047 + _tmp192 * _tmp1926 + _tmp193 * _tmp1999 +
                 _tmp1932 * _tmp254 + _tmp1933 * _tmp69 + _tmp1934 * _tmp68 + _tmp1938 * _tmp750 +
                 _tmp1943 * _tmp471 + _tmp1948 * _tmp534 + _tmp1952 * _tmp223 + _tmp1956 * _tmp595 +
                 _tmp1957 * _tmp751 + _tmp1958 * _tmp472 + _tmp1963 * _tmp782 + _tmp1968 * _tmp689 +
                 _tmp1972 * _tmp627 + _tmp1976 * _tmp720 + _tmp1981 * _tmp657 + _tmp1982 * _tmp66 +
                 _tmp1989 * _tmp409 + _tmp1993 * _tmp441 + _tmp1998 * _tmp503 + _tmp2000 * _tmp658 +
                 _tmp2004 * _tmp347 + _tmp2006 * _tmp781 + _tmp2011 * _tmp378 + _tmp2012 * _tmp379 +
                 _tmp2013 * _tmp688 + _tmp2015 * _tmp410 + _tmp2019 * _tmp565 + _tmp2025 * _tmp317 +
                 _tmp2026 * _tmp348 + _tmp2027 * _tmp62 + _tmp2028 * _tmp64 + _tmp2029 * _tmp626 +
                 _tmp2030 * _tmp67 + _tmp2031 * _tmp596 + _tmp2037 * _tmp285 + _tmp2038 * _tmp286 +
                 _tmp2039 * _tmp502 + _tmp2041 * _tmp533 + _tmp2042 * _tmp316 + _tmp2044 * _tmp224 +
                 _tmp2045 * _tmp440 + _tmp2046 * _tmp255 + _tmp2048 * _tmp564 + _tmp2049 * _tmp719;
    _rhs(5, 0) = _tmp132 * _tmp2131 + _tmp134 * _tmp2129 + _tmp135 * _tmp2167 + _tmp136 * _tmp2154 +
                 _tmp137 * _tmp2130 + _tmp139 * _tmp2170 + _tmp192 * _tmp2116 + _tmp193 * _tmp2125 +
                 _tmp2053 * _tmp410 + _tmp2057 * _tmp626 + _tmp2063 * _tmp564 + _tmp2067 * _tmp348 +
                 _tmp2072 * _tmp781 + _tmp2076 * _tmp720 + _tmp2077 * _tmp66 + _tmp2081 * _tmp255 +
                 _tmp2085 * _tmp224 + _tmp2086 * _tmp68 + _tmp2087 * _tmp69 + _tmp2088 * _tmp223 +
                 _tmp2092 * _tmp441 + _tmp2097 * _tmp658 + _tmp2101 * _tmp379 + _tmp2106 * _tmp533 +
                 _tmp2111 * _tmp471 + _tmp2117 * _tmp409 + _tmp2118 * _tmp565 + _tmp2120 * _tmp627 +
                 _tmp2124 * _tmp595 + _tmp2126 * _tmp596 + _tmp2127 * _tmp64 + _tmp2136 * _tmp285 +
                 _tmp2137 * _tmp782 + _tmp2138 * _tmp347 + _tmp2139 * _tmp719 + _tmp2140 * _tmp534 +
                 _tmp2141 * _tmp62 + _tmp2142 * _tmp378 + _tmp2147 * _tmp688 + _tmp2151 * _tmp751 +
                 _tmp2152 * _tmp67 + _tmp2153 * _tmp657 + _tmp2155 * _tmp472 + _tmp2159 * _tmp502 +
                 _tmp2160 * _tmp503 + _tmp2164 * _tmp316 + _tmp2165 * _tmp286 + _tmp2166 * _tmp689 +
                 _tmp2168 * _tmp750 + _tmp2169 * _tmp440 + _tmp2171 * _tmp317 + _tmp2172 * _tmp254;
    _rhs(6, 0) = _tmp192 * _tmp2184 + _tmp193 * _tmp2185 + _tmp2173 * _tmp783;
    _rhs(7, 0) = _tmp2189 * _tmp223 + _tmp2190 * _tmp786 + _tmp2191 * _tmp224;
    _rhs(8, 0) = _tmp2192 * _tmp789 + _tmp2197 * _tmp254 + _tmp2198 * _tmp255;
    _rhs(9, 0) = _tmp2202 * _tmp285 + _tmp2203 * _tmp286 + _tmp2204 * _tmp792;
    _rhs(10, 0) = _tmp2208 * _tmp317 + _tmp2209 * _tmp795 + _tmp2210 * _tmp316;
    _rhs(11, 0) = _tmp2214 * _tmp348 + _tmp2215 * _tmp798 + _tmp2216 * _tmp347;
    _rhs(12, 0) = _tmp2220 * _tmp378 + _tmp2221 * _tmp801 + _tmp2222 * _tmp379;
    _rhs(13, 0) = _tmp2223 * _tmp804 + _tmp2227 * _tmp409 + _tmp2228 * _tmp410;
    _rhs(14, 0) = _tmp2232 * _tmp441 + _tmp2233 * _tmp807 + _tmp2234 * _tmp440;
    _rhs(15, 0) = _tmp2239 * _tmp471 + _tmp2240 * _tmp810 + _tmp2241 * _tmp472;
    _rhs(16, 0) = _tmp2245 * _tmp503 + _tmp2246 * _tmp813 + _tmp2247 * _tmp502;
    _rhs(17, 0) = _tmp2251 * _tmp534 + _tmp2252 * _tmp816 + _tmp2253 * _tmp533;
    _rhs(18, 0) = _tmp2254 * _tmp819 + _tmp2258 * _tmp564 + _tmp2259 * _tmp565;
    _rhs(19, 0) = _tmp2263 * _tmp595 + _tmp2264 * _tmp822 + _tmp2265 * _tmp596;
    _rhs(20, 0) = _tmp2269 * _tmp627 + _tmp2270 * _tmp626 + _tmp2271 * _tmp825;
    _rhs(21, 0) = _tmp2275 * _tmp657 + _tmp2276 * _tmp828 + _tmp2277 * _tmp658;
    _rhs(22, 0) = _tmp2278 * _tmp831 + _tmp2282 * _tmp688 + _tmp2283 * _tmp689;
    _rhs(23, 0) = _tmp2287 * _tmp720 + _tmp2288 * _tmp834 + _tmp2289 * _tmp719;
    _rhs(24, 0) = _tmp2293 * _tmp751 + _tmp2294 * _tmp837 + _tmp2295 * _tmp750;
    _rhs(25, 0) = _tmp2299 * _tmp782 + _tmp2300 * _tmp840 + _tmp2301 * _tmp781;
  }

  if (jacobian != nullptr) {
    static constexpr int kRows_jacobian = 72;
    static constexpr int kCols_jacobian = 26;
    static constexpr int kNumNonZero_jacobian = 372;
    static constexpr int kColPtrs_jacobian[] = {0,   52,  104, 156, 208, 260, 312, 315, 318,
                                                321, 324, 327, 330, 333, 336, 339, 342, 345,
                                                348, 351, 354, 357, 360, 363, 366, 369, 372};
    static constexpr int kRowIndices_jacobian[] = {
        0,  1,  2,  3,  4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
        22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
        44, 45, 46, 47, 48, 49, 50, 51, 0,  1,  2,  3,  4,  5,  6,  7,  8,  9,  10, 11, 12, 13,
        14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0,  1,  2,  3,  4,  5,
        6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,
        28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49,
        50, 51, 0,  1,  2,  3,  4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
        20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
        42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0,  1,  2,  3,  4,  5,  6,  7,  8,  9,  10, 11,
        12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
        34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0,  1,  2,  3,
        4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,
        26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
        48, 49, 50, 51, 12, 13, 52, 14, 15, 53, 16, 17, 54, 18, 19, 55, 20, 21, 56, 22, 23, 57,
        24, 25, 58, 26, 27, 59, 28, 29, 60, 30, 31, 61, 32, 33, 62, 34, 35, 63, 36, 37, 64, 38,
        39, 65, 40, 41, 66, 42, 43, 67, 44, 45, 68, 46, 47, 69, 48, 49, 70, 50, 51, 71};
    if (jacobian->nonZeros() != 372 || jacobian->outerSize() != 26 || jacobian->innerSize() != 72 ||
        !jacobian->isCompressed()) {
      // Matrix does not have the expected layout, create a correctly initialized sparse matrix
      Scalar jacobian_empty_value_ptr[372];
      *jacobian = Eigen::Map<const Eigen::SparseMatrix<Scalar>>(
          kRows_jacobian, kCols_jacobian, kNumNonZero_jacobian, kColPtrs_jacobian,
          kRowIndices_jacobian, jacobian_empty_value_ptr);
    }
    Scalar* jacobian_value_ptr = jacobian->valuePtr();

    jacobian_value_ptr[0] = _tmp1298;
    jacobian_value_ptr[1] = _tmp1338;
    jacobian_value_ptr[2] = _tmp1070;
    jacobian_value_ptr[3] = _tmp1318;
    jacobian_value_ptr[4] = _tmp927;
    jacobian_value_ptr[5] = _tmp1259;
    jacobian_value_ptr[6] = _tmp1180;
    jacobian_value_ptr[7] = _tmp987;
    jacobian_value_ptr[8] = _tmp1000;
    jacobian_value_ptr[9] = _tmp1317;
    jacobian_value_ptr[10] = _tmp1150;
    jacobian_value_ptr[11] = _tmp1270;
    jacobian_value_ptr[12] = _tmp942;
    jacobian_value_ptr[13] = _tmp1295;
    jacobian_value_ptr[14] = _tmp1037;
    jacobian_value_ptr[15] = _tmp1330;
    jacobian_value_ptr[16] = _tmp1311;
    jacobian_value_ptr[17] = _tmp1322;
    jacobian_value_ptr[18] = _tmp1341;
    jacobian_value_ptr[19] = _tmp1204;
    jacobian_value_ptr[20] = _tmp1052;
    jacobian_value_ptr[21] = _tmp1074;
    jacobian_value_ptr[22] = _tmp1240;
    jacobian_value_ptr[23] = _tmp1088;
    jacobian_value_ptr[24] = _tmp1018;
    jacobian_value_ptr[25] = _tmp1014;
    jacobian_value_ptr[26] = _tmp1335;
    jacobian_value_ptr[27] = _tmp1102;
    jacobian_value_ptr[28] = _tmp1131;
    jacobian_value_ptr[29] = _tmp1189;
    jacobian_value_ptr[30] = _tmp1149;
    jacobian_value_ptr[31] = _tmp1244;
    jacobian_value_ptr[32] = _tmp1257;
    jacobian_value_ptr[33] = _tmp1267;
    jacobian_value_ptr[34] = _tmp1235;
    jacobian_value_ptr[35] = _tmp1263;
    jacobian_value_ptr[36] = _tmp1022;
    jacobian_value_ptr[37] = _tmp871;
    jacobian_value_ptr[38] = _tmp1117;
    jacobian_value_ptr[39] = _tmp1134;
    jacobian_value_ptr[40] = _tmp1185;
    jacobian_value_ptr[41] = _tmp999;
    jacobian_value_ptr[42] = _tmp1346;
    jacobian_value_ptr[43] = _tmp1178;
    jacobian_value_ptr[44] = _tmp1291;
    jacobian_value_ptr[45] = _tmp1066;
    jacobian_value_ptr[46] = _tmp1315;
    jacobian_value_ptr[47] = _tmp1283;
    jacobian_value_ptr[48] = _tmp1219;
    jacobian_value_ptr[49] = _tmp1326;
    jacobian_value_ptr[50] = _tmp1286;
    jacobian_value_ptr[51] = _tmp1165;
    jacobian_value_ptr[52] = _tmp1496;
    jacobian_value_ptr[53] = _tmp1554;
    jacobian_value_ptr[54] = _tmp1403;
    jacobian_value_ptr[55] = _tmp1539;
    jacobian_value_ptr[56] = _tmp1538;
    jacobian_value_ptr[57] = _tmp1506;
    jacobian_value_ptr[58] = _tmp1565;
    jacobian_value_ptr[59] = _tmp1430;
    jacobian_value_ptr[60] = _tmp1494;
    jacobian_value_ptr[61] = _tmp1515;
    jacobian_value_ptr[62] = _tmp1566;
    jacobian_value_ptr[63] = _tmp1510;
    jacobian_value_ptr[64] = _tmp1509;
    jacobian_value_ptr[65] = _tmp1444;
    jacobian_value_ptr[66] = _tmp1409;
    jacobian_value_ptr[67] = _tmp1516;
    jacobian_value_ptr[68] = _tmp1435;
    jacobian_value_ptr[69] = _tmp1508;
    jacobian_value_ptr[70] = _tmp1536;
    jacobian_value_ptr[71] = _tmp1373;
    jacobian_value_ptr[72] = _tmp1511;
    jacobian_value_ptr[73] = _tmp1475;
    jacobian_value_ptr[74] = _tmp1384;
    jacobian_value_ptr[75] = _tmp1476;
    jacobian_value_ptr[76] = _tmp1546;
    jacobian_value_ptr[77] = _tmp1547;
    jacobian_value_ptr[78] = _tmp1493;
    jacobian_value_ptr[79] = _tmp1492;
    jacobian_value_ptr[80] = _tmp1564;
    jacobian_value_ptr[81] = _tmp1553;
    jacobian_value_ptr[82] = _tmp1503;
    jacobian_value_ptr[83] = _tmp1451;
    jacobian_value_ptr[84] = _tmp1501;
    jacobian_value_ptr[85] = _tmp1561;
    jacobian_value_ptr[86] = _tmp1514;
    jacobian_value_ptr[87] = _tmp1462;
    jacobian_value_ptr[88] = _tmp1557;
    jacobian_value_ptr[89] = _tmp1523;
    jacobian_value_ptr[90] = _tmp1445;
    jacobian_value_ptr[91] = _tmp1366;
    jacobian_value_ptr[92] = _tmp1469;
    jacobian_value_ptr[93] = _tmp1555;
    jacobian_value_ptr[94] = _tmp1358;
    jacobian_value_ptr[95] = _tmp1479;
    jacobian_value_ptr[96] = _tmp1486;
    jacobian_value_ptr[97] = _tmp1379;
    jacobian_value_ptr[98] = _tmp1560;
    jacobian_value_ptr[99] = _tmp1533;
    jacobian_value_ptr[100] = _tmp1504;
    jacobian_value_ptr[101] = _tmp1456;
    jacobian_value_ptr[102] = _tmp1485;
    jacobian_value_ptr[103] = _tmp1513;
    jacobian_value_ptr[104] = _tmp1661;
    jacobian_value_ptr[105] = _tmp1646;
    jacobian_value_ptr[106] = _tmp1711;
    jacobian_value_ptr[107] = _tmp1703;
    jacobian_value_ptr[108] = _tmp1660;
    jacobian_value_ptr[109] = _tmp1675;
    jacobian_value_ptr[110] = _tmp1624;
    jacobian_value_ptr[111] = _tmp1674;
    jacobian_value_ptr[112] = _tmp1613;
    jacobian_value_ptr[113] = _tmp1630;
    jacobian_value_ptr[114] = _tmp1651;
    jacobian_value_ptr[115] = _tmp1673;
    jacobian_value_ptr[116] = _tmp1716;
    jacobian_value_ptr[117] = _tmp1629;
    jacobian_value_ptr[118] = _tmp1684;
    jacobian_value_ptr[119] = _tmp1718;
    jacobian_value_ptr[120] = _tmp1720;
    jacobian_value_ptr[121] = _tmp1596;
    jacobian_value_ptr[122] = _tmp1713;
    jacobian_value_ptr[123] = _tmp1693;
    jacobian_value_ptr[124] = _tmp1617;
    jacobian_value_ptr[125] = _tmp1631;
    jacobian_value_ptr[126] = _tmp1623;
    jacobian_value_ptr[127] = _tmp1575;
    jacobian_value_ptr[128] = _tmp1696;
    jacobian_value_ptr[129] = _tmp1587;
    jacobian_value_ptr[130] = _tmp1655;
    jacobian_value_ptr[131] = _tmp1672;
    jacobian_value_ptr[132] = _tmp1665;
    jacobian_value_ptr[133] = _tmp1680;
    jacobian_value_ptr[134] = _tmp1579;
    jacobian_value_ptr[135] = _tmp1666;
    jacobian_value_ptr[136] = _tmp1583;
    jacobian_value_ptr[137] = _tmp1695;
    jacobian_value_ptr[138] = _tmp1715;
    jacobian_value_ptr[139] = _tmp1707;
    jacobian_value_ptr[140] = _tmp1598;
    jacobian_value_ptr[141] = _tmp1592;
    jacobian_value_ptr[142] = _tmp1712;
    jacobian_value_ptr[143] = _tmp1689;
    jacobian_value_ptr[144] = _tmp1719;
    jacobian_value_ptr[145] = _tmp1701;
    jacobian_value_ptr[146] = _tmp1656;
    jacobian_value_ptr[147] = _tmp1635;
    jacobian_value_ptr[148] = _tmp1714;
    jacobian_value_ptr[149] = _tmp1622;
    jacobian_value_ptr[150] = _tmp1708;
    jacobian_value_ptr[151] = _tmp1650;
    jacobian_value_ptr[152] = _tmp1679;
    jacobian_value_ptr[153] = _tmp1721;
    jacobian_value_ptr[154] = _tmp1710;
    jacobian_value_ptr[155] = _tmp1671;
    jacobian_value_ptr[156] = _tmp1872;
    jacobian_value_ptr[157] = _tmp1831;
    jacobian_value_ptr[158] = _tmp1723;
    jacobian_value_ptr[159] = _tmp1909;
    jacobian_value_ptr[160] = _tmp1783;
    jacobian_value_ptr[161] = _tmp1722;
    jacobian_value_ptr[162] = _tmp1843;
    jacobian_value_ptr[163] = _tmp1829;
    jacobian_value_ptr[164] = _tmp1910;
    jacobian_value_ptr[165] = _tmp1847;
    jacobian_value_ptr[166] = _tmp1844;
    jacobian_value_ptr[167] = _tmp1920;
    jacobian_value_ptr[168] = _tmp1888;
    jacobian_value_ptr[169] = _tmp1914;
    jacobian_value_ptr[170] = _tmp1846;
    jacobian_value_ptr[171] = _tmp1782;
    jacobian_value_ptr[172] = _tmp1916;
    jacobian_value_ptr[173] = _tmp1827;
    jacobian_value_ptr[174] = _tmp1830;
    jacobian_value_ptr[175] = _tmp1774;
    jacobian_value_ptr[176] = _tmp1918;
    jacobian_value_ptr[177] = _tmp1854;
    jacobian_value_ptr[178] = _tmp1898;
    jacobian_value_ptr[179] = _tmp1919;
    jacobian_value_ptr[180] = _tmp1899;
    jacobian_value_ptr[181] = _tmp1839;
    jacobian_value_ptr[182] = _tmp1840;
    jacobian_value_ptr[183] = _tmp1767;
    jacobian_value_ptr[184] = _tmp1911;
    jacobian_value_ptr[185] = _tmp1869;
    jacobian_value_ptr[186] = _tmp1907;
    jacobian_value_ptr[187] = _tmp1817;
    jacobian_value_ptr[188] = _tmp1908;
    jacobian_value_ptr[189] = _tmp1750;
    jacobian_value_ptr[190] = _tmp1738;
    jacobian_value_ptr[191] = _tmp1739;
    jacobian_value_ptr[192] = _tmp1801;
    jacobian_value_ptr[193] = _tmp1842;
    jacobian_value_ptr[194] = _tmp1758;
    jacobian_value_ptr[195] = _tmp1921;
    jacobian_value_ptr[196] = _tmp1810;
    jacobian_value_ptr[197] = _tmp1913;
    jacobian_value_ptr[198] = _tmp1861;
    jacobian_value_ptr[199] = _tmp1889;
    jacobian_value_ptr[200] = _tmp1791;
    jacobian_value_ptr[201] = _tmp1845;
    jacobian_value_ptr[202] = _tmp1915;
    jacobian_value_ptr[203] = _tmp1880;
    jacobian_value_ptr[204] = _tmp1731;
    jacobian_value_ptr[205] = _tmp1871;
    jacobian_value_ptr[206] = _tmp1912;
    jacobian_value_ptr[207] = _tmp1906;
    jacobian_value_ptr[208] = _tmp2027;
    jacobian_value_ptr[209] = _tmp2028;
    jacobian_value_ptr[210] = _tmp1982;
    jacobian_value_ptr[211] = _tmp2030;
    jacobian_value_ptr[212] = _tmp1934;
    jacobian_value_ptr[213] = _tmp1933;
    jacobian_value_ptr[214] = _tmp2007;
    jacobian_value_ptr[215] = _tmp1985;
    jacobian_value_ptr[216] = _tmp2043;
    jacobian_value_ptr[217] = _tmp2032;
    jacobian_value_ptr[218] = _tmp2005;
    jacobian_value_ptr[219] = _tmp2047;
    jacobian_value_ptr[220] = _tmp1926;
    jacobian_value_ptr[221] = _tmp1999;
    jacobian_value_ptr[222] = _tmp1952;
    jacobian_value_ptr[223] = _tmp2044;
    jacobian_value_ptr[224] = _tmp1932;
    jacobian_value_ptr[225] = _tmp2046;
    jacobian_value_ptr[226] = _tmp2037;
    jacobian_value_ptr[227] = _tmp2038;
    jacobian_value_ptr[228] = _tmp2042;
    jacobian_value_ptr[229] = _tmp2025;
    jacobian_value_ptr[230] = _tmp2004;
    jacobian_value_ptr[231] = _tmp2026;
    jacobian_value_ptr[232] = _tmp2011;
    jacobian_value_ptr[233] = _tmp2012;
    jacobian_value_ptr[234] = _tmp1989;
    jacobian_value_ptr[235] = _tmp2015;
    jacobian_value_ptr[236] = _tmp2045;
    jacobian_value_ptr[237] = _tmp1993;
    jacobian_value_ptr[238] = _tmp1943;
    jacobian_value_ptr[239] = _tmp1958;
    jacobian_value_ptr[240] = _tmp2039;
    jacobian_value_ptr[241] = _tmp1998;
    jacobian_value_ptr[242] = _tmp2041;
    jacobian_value_ptr[243] = _tmp1948;
    jacobian_value_ptr[244] = _tmp2048;
    jacobian_value_ptr[245] = _tmp2019;
    jacobian_value_ptr[246] = _tmp1956;
    jacobian_value_ptr[247] = _tmp2031;
    jacobian_value_ptr[248] = _tmp2029;
    jacobian_value_ptr[249] = _tmp1972;
    jacobian_value_ptr[250] = _tmp1981;
    jacobian_value_ptr[251] = _tmp2000;
    jacobian_value_ptr[252] = _tmp2013;
    jacobian_value_ptr[253] = _tmp1968;
    jacobian_value_ptr[254] = _tmp2049;
    jacobian_value_ptr[255] = _tmp1976;
    jacobian_value_ptr[256] = _tmp1938;
    jacobian_value_ptr[257] = _tmp1957;
    jacobian_value_ptr[258] = _tmp2006;
    jacobian_value_ptr[259] = _tmp1963;
    jacobian_value_ptr[260] = _tmp2141;
    jacobian_value_ptr[261] = _tmp2127;
    jacobian_value_ptr[262] = _tmp2077;
    jacobian_value_ptr[263] = _tmp2152;
    jacobian_value_ptr[264] = _tmp2086;
    jacobian_value_ptr[265] = _tmp2087;
    jacobian_value_ptr[266] = _tmp2131;
    jacobian_value_ptr[267] = _tmp2129;
    jacobian_value_ptr[268] = _tmp2167;
    jacobian_value_ptr[269] = _tmp2154;
    jacobian_value_ptr[270] = _tmp2130;
    jacobian_value_ptr[271] = _tmp2170;
    jacobian_value_ptr[272] = _tmp2116;
    jacobian_value_ptr[273] = _tmp2125;
    jacobian_value_ptr[274] = _tmp2088;
    jacobian_value_ptr[275] = _tmp2085;
    jacobian_value_ptr[276] = _tmp2172;
    jacobian_value_ptr[277] = _tmp2081;
    jacobian_value_ptr[278] = _tmp2136;
    jacobian_value_ptr[279] = _tmp2165;
    jacobian_value_ptr[280] = _tmp2164;
    jacobian_value_ptr[281] = _tmp2171;
    jacobian_value_ptr[282] = _tmp2138;
    jacobian_value_ptr[283] = _tmp2067;
    jacobian_value_ptr[284] = _tmp2142;
    jacobian_value_ptr[285] = _tmp2101;
    jacobian_value_ptr[286] = _tmp2117;
    jacobian_value_ptr[287] = _tmp2053;
    jacobian_value_ptr[288] = _tmp2169;
    jacobian_value_ptr[289] = _tmp2092;
    jacobian_value_ptr[290] = _tmp2111;
    jacobian_value_ptr[291] = _tmp2155;
    jacobian_value_ptr[292] = _tmp2159;
    jacobian_value_ptr[293] = _tmp2160;
    jacobian_value_ptr[294] = _tmp2106;
    jacobian_value_ptr[295] = _tmp2140;
    jacobian_value_ptr[296] = _tmp2063;
    jacobian_value_ptr[297] = _tmp2118;
    jacobian_value_ptr[298] = _tmp2124;
    jacobian_value_ptr[299] = _tmp2126;
    jacobian_value_ptr[300] = _tmp2057;
    jacobian_value_ptr[301] = _tmp2120;
    jacobian_value_ptr[302] = _tmp2153;
    jacobian_value_ptr[303] = _tmp2097;
    jacobian_value_ptr[304] = _tmp2147;
    jacobian_value_ptr[305] = _tmp2166;
    jacobian_value_ptr[306] = _tmp2139;
    jacobian_value_ptr[307] = _tmp2076;
    jacobian_value_ptr[308] = _tmp2168;
    jacobian_value_ptr[309] = _tmp2151;
    jacobian_value_ptr[310] = _tmp2072;
    jacobian_value_ptr[311] = _tmp2137;
    jacobian_value_ptr[312] = _tmp2184;
    jacobian_value_ptr[313] = _tmp2185;
    jacobian_value_ptr[314] = _tmp785;
    jacobian_value_ptr[315] = _tmp2189;
    jacobian_value_ptr[316] = _tmp2191;
    jacobian_value_ptr[317] = _tmp788;
    jacobian_value_ptr[318] = _tmp2197;
    jacobian_value_ptr[319] = _tmp2198;
    jacobian_value_ptr[320] = _tmp791;
    jacobian_value_ptr[321] = _tmp2202;
    jacobian_value_ptr[322] = _tmp2203;
    jacobian_value_ptr[323] = _tmp794;
    jacobian_value_ptr[324] = _tmp2210;
    jacobian_value_ptr[325] = _tmp2208;
    jacobian_value_ptr[326] = _tmp797;
    jacobian_value_ptr[327] = _tmp2216;
    jacobian_value_ptr[328] = _tmp2214;
    jacobian_value_ptr[329] = _tmp800;
    jacobian_value_ptr[330] = _tmp2220;
    jacobian_value_ptr[331] = _tmp2222;
    jacobian_value_ptr[332] = _tmp803;
    jacobian_value_ptr[333] = _tmp2227;
    jacobian_value_ptr[334] = _tmp2228;
    jacobian_value_ptr[335] = _tmp806;
    jacobian_value_ptr[336] = _tmp2234;
    jacobian_value_ptr[337] = _tmp2232;
    jacobian_value_ptr[338] = _tmp809;
    jacobian_value_ptr[339] = _tmp2239;
    jacobian_value_ptr[340] = _tmp2241;
    jacobian_value_ptr[341] = _tmp812;
    jacobian_value_ptr[342] = _tmp2247;
    jacobian_value_ptr[343] = _tmp2245;
    jacobian_value_ptr[344] = _tmp815;
    jacobian_value_ptr[345] = _tmp2253;
    jacobian_value_ptr[346] = _tmp2251;
    jacobian_value_ptr[347] = _tmp818;
    jacobian_value_ptr[348] = _tmp2258;
    jacobian_value_ptr[349] = _tmp2259;
    jacobian_value_ptr[350] = _tmp821;
    jacobian_value_ptr[351] = _tmp2263;
    jacobian_value_ptr[352] = _tmp2265;
    jacobian_value_ptr[353] = _tmp824;
    jacobian_value_ptr[354] = _tmp2270;
    jacobian_value_ptr[355] = _tmp2269;
    jacobian_value_ptr[356] = _tmp827;
    jacobian_value_ptr[357] = _tmp2275;
    jacobian_value_ptr[358] = _tmp2277;
    jacobian_value_ptr[359] = _tmp830;
    jacobian_value_ptr[360] = _tmp2282;
    jacobian_value_ptr[361] = _tmp2283;
    jacobian_value_ptr[362] = _tmp833;
    jacobian_value_ptr[363] = _tmp2289;
    jacobian_value_ptr[364] = _tmp2287;
    jacobian_value_ptr[365] = _tmp836;
    jacobian_value_ptr[366] = _tmp2295;
    jacobian_value_ptr[367] = _tmp2293;
    jacobian_value_ptr[368] = _tmp839;
    jacobian_value_ptr[369] = _tmp2301;
    jacobian_value_ptr[370] = _tmp2299;
    jacobian_value_ptr[371] = _tmp842;
  }

  if (hessian != nullptr) {
    static constexpr int kRows_hessian = 26;
    static constexpr int kCols_hessian = 26;
    static constexpr int kNumNonZero_hessian = 161;
    static constexpr int kColPtrs_hessian[] = {0,   26,  51,  75,  98,  120, 141, 142, 143,
                                               144, 145, 146, 147, 148, 149, 150, 151, 152,
                                               153, 154, 155, 156, 157, 158, 159, 160, 161};
    static constexpr int kRowIndices_hessian[] = {
        0,  1,  2,  3,  4,  5,  6, 7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,
        23, 24, 25, 1,  2,  3,  4, 5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
        21, 22, 23, 24, 25, 2,  3, 4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
        20, 21, 22, 23, 24, 25, 3, 4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
        20, 21, 22, 23, 24, 25, 4, 5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
        21, 22, 23, 24, 25, 5,  6, 7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,
        23, 24, 25, 6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25};
    if (hessian->nonZeros() != 161 || hessian->outerSize() != 26 || hessian->innerSize() != 26 ||
        !hessian->isCompressed()) {
      // Matrix does not have the expected layout, create a correctly initialized sparse matrix
      Scalar hessian_empty_value_ptr[161];
      *hessian = Eigen::Map<const Eigen::SparseMatrix<Scalar>>(
          kRows_hessian, kCols_hessian, kNumNonZero_hessian, kColPtrs_hessian, kRowIndices_hessian,
          hessian_empty_value_ptr);
    }
    Scalar* hessian_value_ptr = hessian->valuePtr();

    hessian_value_ptr[0] = std::pow(_tmp1000, Scalar(2)) + std::pow(_tmp1014, Scalar(2)) +
                           std::pow(_tmp1018, Scalar(2)) + std::pow(_tmp1022, Scalar(2)) +
                           std::pow(_tmp1037, Scalar(2)) + std::pow(_tmp1052, Scalar(2)) +
                           std::pow(_tmp1066, Scalar(2)) + std::pow(_tmp1070, Scalar(2)) +
                           std::pow(_tmp1074, Scalar(2)) + std::pow(_tmp1088, Scalar(2)) +
                           std::pow(_tmp1102, Scalar(2)) + std::pow(_tmp1117, Scalar(2)) +
                           std::pow(_tmp1131, Scalar(2)) + std::pow(_tmp1134, Scalar(2)) +
                           std::pow(_tmp1149, Scalar(2)) + std::pow(_tmp1150, Scalar(2)) +
                           std::pow(_tmp1165, Scalar(2)) + std::pow(_tmp1178, Scalar(2)) +
                           std::pow(_tmp1180, Scalar(2)) + std::pow(_tmp1185, Scalar(2)) +
                           std::pow(_tmp1189, Scalar(2)) + std::pow(_tmp1204, Scalar(2)) +
                           std::pow(_tmp1219, Scalar(2)) + std::pow(_tmp1235, Scalar(2)) +
                           std::pow(_tmp1240, Scalar(2)) + std::pow(_tmp1244, Scalar(2)) +
                           std::pow(_tmp1257, Scalar(2)) + std::pow(_tmp1259, Scalar(2)) +
                           std::pow(_tmp1263, Scalar(2)) + std::pow(_tmp1267, Scalar(2)) +
                           std::pow(_tmp1270, Scalar(2)) + std::pow(_tmp1283, Scalar(2)) +
                           std::pow(_tmp1286, Scalar(2)) + std::pow(_tmp1291, Scalar(2)) +
                           std::pow(_tmp1295, Scalar(2)) + std::pow(_tmp1298, Scalar(2)) +
                           std::pow(_tmp1311, Scalar(2)) + std::pow(_tmp1315, Scalar(2)) +
                           std::pow(_tmp1317, Scalar(2)) + std::pow(_tmp1318, Scalar(2)) +
                           std::pow(_tmp1322, Scalar(2)) + std::pow(_tmp1326, Scalar(2)) +
                           std::pow(_tmp1330, Scalar(2)) + std::pow(_tmp1335, Scalar(2)) +
                           std::pow(_tmp1338, Scalar(2)) + std::pow(_tmp1341, Scalar(2)) +
                           std::pow(_tmp1346, Scalar(2)) + std::pow(_tmp871, Scalar(2)) +
                           std::pow(_tmp927, Scalar(2)) + std::pow(_tmp942, Scalar(2)) +
                           std::pow(_tmp987, Scalar(2)) + std::pow(_tmp999, Scalar(2));
    hessian_value_ptr[1] =
        _tmp1000 * _tmp1494 + _tmp1014 * _tmp1547 + _tmp1018 * _tmp1546 + _tmp1022 * _tmp1557 +
        _tmp1037 * _tmp1409 + _tmp1052 * _tmp1511 + _tmp1066 * _tmp1379 + _tmp1070 * _tmp1403 +
        _tmp1074 * _tmp1475 + _tmp1088 * _tmp1476 + _tmp1102 * _tmp1492 + _tmp1117 * _tmp1445 +
        _tmp1131 * _tmp1564 + _tmp1134 * _tmp1366 + _tmp1149 * _tmp1503 + _tmp1150 * _tmp1566 +
        _tmp1165 * _tmp1513 + _tmp1178 * _tmp1479 + _tmp1180 * _tmp1565 + _tmp1185 * _tmp1469 +
        _tmp1189 * _tmp1553 + _tmp1204 * _tmp1373 + _tmp1219 * _tmp1504 + _tmp1235 * _tmp1514 +
        _tmp1240 * _tmp1384 + _tmp1244 * _tmp1451 + _tmp1257 * _tmp1501 + _tmp1259 * _tmp1506 +
        _tmp1263 * _tmp1462 + _tmp1267 * _tmp1561 + _tmp1270 * _tmp1510 + _tmp1283 * _tmp1533 +
        _tmp1286 * _tmp1485 + _tmp1291 * _tmp1486 + _tmp1295 * _tmp1444 + _tmp1298 * _tmp1496 +
        _tmp1311 * _tmp1435 + _tmp1315 * _tmp1560 + _tmp1317 * _tmp1515 + _tmp1318 * _tmp1539 +
        _tmp1322 * _tmp1508 + _tmp1326 * _tmp1456 + _tmp1330 * _tmp1516 + _tmp1335 * _tmp1493 +
        _tmp1338 * _tmp1554 + _tmp1341 * _tmp1536 + _tmp1346 * _tmp1358 + _tmp1430 * _tmp987 +
        _tmp1509 * _tmp942 + _tmp1523 * _tmp871 + _tmp1538 * _tmp927 + _tmp1555 * _tmp999;
    hessian_value_ptr[2] =
        _tmp1000 * _tmp1613 + _tmp1014 * _tmp1587 + _tmp1018 * _tmp1696 + _tmp1022 * _tmp1598 +
        _tmp1037 * _tmp1684 + _tmp1052 * _tmp1617 + _tmp1066 * _tmp1622 + _tmp1070 * _tmp1711 +
        _tmp1074 * _tmp1631 + _tmp1088 * _tmp1575 + _tmp1102 * _tmp1672 + _tmp1117 * _tmp1712 +
        _tmp1131 * _tmp1665 + _tmp1134 * _tmp1689 + _tmp1149 * _tmp1579 + _tmp1150 * _tmp1651 +
        _tmp1165 * _tmp1671 + _tmp1178 * _tmp1635 + _tmp1180 * _tmp1624 + _tmp1185 * _tmp1719 +
        _tmp1189 * _tmp1680 + _tmp1204 * _tmp1693 + _tmp1219 * _tmp1679 + _tmp1235 * _tmp1715 +
        _tmp1240 * _tmp1623 + _tmp1244 * _tmp1666 + _tmp1257 * _tmp1583 + _tmp1259 * _tmp1675 +
        _tmp1263 * _tmp1707 + _tmp1267 * _tmp1695 + _tmp1270 * _tmp1673 + _tmp1283 * _tmp1650 +
        _tmp1286 * _tmp1710 + _tmp1291 * _tmp1714 + _tmp1295 * _tmp1629 + _tmp1298 * _tmp1661 +
        _tmp1311 * _tmp1720 + _tmp1315 * _tmp1708 + _tmp1317 * _tmp1630 + _tmp1318 * _tmp1703 +
        _tmp1322 * _tmp1596 + _tmp1326 * _tmp1721 + _tmp1330 * _tmp1718 + _tmp1335 * _tmp1655 +
        _tmp1338 * _tmp1646 + _tmp1341 * _tmp1713 + _tmp1346 * _tmp1656 + _tmp1592 * _tmp871 +
        _tmp1660 * _tmp927 + _tmp1674 * _tmp987 + _tmp1701 * _tmp999 + _tmp1716 * _tmp942;
    hessian_value_ptr[3] =
        _tmp1000 * _tmp1910 + _tmp1014 * _tmp1839 + _tmp1018 * _tmp1899 + _tmp1022 * _tmp1801 +
        _tmp1037 * _tmp1846 + _tmp1052 * _tmp1918 + _tmp1066 * _tmp1845 + _tmp1070 * _tmp1723 +
        _tmp1074 * _tmp1854 + _tmp1088 * _tmp1919 + _tmp1102 * _tmp1767 + _tmp1117 * _tmp1758 +
        _tmp1131 * _tmp1911 + _tmp1134 * _tmp1921 + _tmp1149 * _tmp1907 + _tmp1150 * _tmp1844 +
        _tmp1165 * _tmp1906 + _tmp1178 * _tmp1889 + _tmp1180 * _tmp1843 + _tmp1185 * _tmp1810 +
        _tmp1189 * _tmp1869 + _tmp1204 * _tmp1774 + _tmp1219 * _tmp1731 + _tmp1235 * _tmp1738 +
        _tmp1240 * _tmp1898 + _tmp1244 * _tmp1817 + _tmp1257 * _tmp1908 + _tmp1259 * _tmp1722 +
        _tmp1263 * _tmp1739 + _tmp1267 * _tmp1750 + _tmp1270 * _tmp1920 + _tmp1283 * _tmp1880 +
        _tmp1286 * _tmp1912 + _tmp1291 * _tmp1791 + _tmp1295 * _tmp1914 + _tmp1298 * _tmp1872 +
        _tmp1311 * _tmp1916 + _tmp1315 * _tmp1915 + _tmp1317 * _tmp1847 + _tmp1318 * _tmp1909 +
        _tmp1322 * _tmp1827 + _tmp1326 * _tmp1871 + _tmp1330 * _tmp1782 + _tmp1335 * _tmp1840 +
        _tmp1338 * _tmp1831 + _tmp1341 * _tmp1830 + _tmp1346 * _tmp1861 + _tmp1783 * _tmp927 +
        _tmp1829 * _tmp987 + _tmp1842 * _tmp871 + _tmp1888 * _tmp942 + _tmp1913 * _tmp999;
    hessian_value_ptr[4] =
        _tmp1000 * _tmp2043 + _tmp1014 * _tmp2012 + _tmp1018 * _tmp2011 + _tmp1022 * _tmp2048 +
        _tmp1037 * _tmp1952 + _tmp1052 * _tmp2042 + _tmp1066 * _tmp1968 + _tmp1070 * _tmp1982 +
        _tmp1074 * _tmp2025 + _tmp1088 * _tmp2026 + _tmp1102 * _tmp2015 + _tmp1117 * _tmp1956 +
        _tmp1131 * _tmp2045 + _tmp1134 * _tmp2031 + _tmp1149 * _tmp1943 + _tmp1150 * _tmp2005 +
        _tmp1165 * _tmp1963 + _tmp1178 * _tmp2000 + _tmp1180 * _tmp2007 + _tmp1185 * _tmp2029 +
        _tmp1189 * _tmp1993 + _tmp1204 * _tmp2038 + _tmp1219 * _tmp1938 + _tmp1235 * _tmp2041 +
        _tmp1240 * _tmp2004 + _tmp1244 * _tmp1958 + _tmp1257 * _tmp2039 + _tmp1259 * _tmp1933 +
        _tmp1263 * _tmp1948 + _tmp1267 * _tmp1998 + _tmp1270 * _tmp2047 + _tmp1283 * _tmp1976 +
        _tmp1286 * _tmp2006 + _tmp1291 * _tmp2013 + _tmp1295 * _tmp1999 + _tmp1298 * _tmp2027 +
        _tmp1311 * _tmp1932 + _tmp1315 * _tmp2049 + _tmp1317 * _tmp2032 + _tmp1318 * _tmp2030 +
        _tmp1322 * _tmp2046 + _tmp1326 * _tmp1957 + _tmp1330 * _tmp2044 + _tmp1335 * _tmp1989 +
        _tmp1338 * _tmp2028 + _tmp1341 * _tmp2037 + _tmp1346 * _tmp1981 + _tmp1926 * _tmp942 +
        _tmp1934 * _tmp927 + _tmp1972 * _tmp999 + _tmp1985 * _tmp987 + _tmp2019 * _tmp871;
    hessian_value_ptr[5] =
        _tmp1000 * _tmp2167 + _tmp1014 * _tmp2101 + _tmp1018 * _tmp2142 + _tmp1022 * _tmp2063 +
        _tmp1037 * _tmp2088 + _tmp1052 * _tmp2164 + _tmp1066 * _tmp2166 + _tmp1070 * _tmp2077 +
        _tmp1074 * _tmp2171 + _tmp1088 * _tmp2067 + _tmp1102 * _tmp2053 + _tmp1117 * _tmp2124 +
        _tmp1131 * _tmp2169 + _tmp1134 * _tmp2126 + _tmp1149 * _tmp2111 + _tmp1150 * _tmp2130 +
        _tmp1165 * _tmp2137 + _tmp1178 * _tmp2097 + _tmp1180 * _tmp2131 + _tmp1185 * _tmp2057 +
        _tmp1189 * _tmp2092 + _tmp1204 * _tmp2165 + _tmp1219 * _tmp2168 + _tmp1235 * _tmp2106 +
        _tmp1240 * _tmp2138 + _tmp1244 * _tmp2155 + _tmp1257 * _tmp2159 + _tmp1259 * _tmp2087 +
        _tmp1263 * _tmp2140 + _tmp1267 * _tmp2160 + _tmp1270 * _tmp2170 + _tmp1283 * _tmp2076 +
        _tmp1286 * _tmp2072 + _tmp1291 * _tmp2147 + _tmp1295 * _tmp2125 + _tmp1298 * _tmp2141 +
        _tmp1311 * _tmp2172 + _tmp1315 * _tmp2139 + _tmp1317 * _tmp2154 + _tmp1318 * _tmp2152 +
        _tmp1322 * _tmp2081 + _tmp1326 * _tmp2151 + _tmp1330 * _tmp2085 + _tmp1335 * _tmp2117 +
        _tmp1338 * _tmp2127 + _tmp1341 * _tmp2136 + _tmp1346 * _tmp2153 + _tmp2086 * _tmp927 +
        _tmp2116 * _tmp942 + _tmp2118 * _tmp871 + _tmp2120 * _tmp999 + _tmp2129 * _tmp987;
    hessian_value_ptr[6] = _tmp1295 * _tmp2185 + _tmp2184 * _tmp942;
    hessian_value_ptr[7] = _tmp1037 * _tmp2189 + _tmp1330 * _tmp2191;
    hessian_value_ptr[8] = _tmp1311 * _tmp2197 + _tmp1322 * _tmp2198;
    hessian_value_ptr[9] = _tmp1204 * _tmp2203 + _tmp1341 * _tmp2202;
    hessian_value_ptr[10] = _tmp1052 * _tmp2210 + _tmp1074 * _tmp2208;
    hessian_value_ptr[11] = _tmp1088 * _tmp2214 + _tmp1240 * _tmp2216;
    hessian_value_ptr[12] = _tmp1014 * _tmp2222 + _tmp1018 * _tmp2220;
    hessian_value_ptr[13] = _tmp1102 * _tmp2228 + _tmp1335 * _tmp2227;
    hessian_value_ptr[14] = _tmp1131 * _tmp2234 + _tmp1189 * _tmp2232;
    hessian_value_ptr[15] = _tmp1149 * _tmp2239 + _tmp1244 * _tmp2241;
    hessian_value_ptr[16] = _tmp1257 * _tmp2247 + _tmp1267 * _tmp2245;
    hessian_value_ptr[17] = _tmp1235 * _tmp2253 + _tmp1263 * _tmp2251;
    hessian_value_ptr[18] = _tmp1022 * _tmp2258 + _tmp2259 * _tmp871;
    hessian_value_ptr[19] = _tmp1117 * _tmp2263 + _tmp1134 * _tmp2265;
    hessian_value_ptr[20] = _tmp1185 * _tmp2270 + _tmp2269 * _tmp999;
    hessian_value_ptr[21] = _tmp1178 * _tmp2277 + _tmp1346 * _tmp2275;
    hessian_value_ptr[22] = _tmp1066 * _tmp2283 + _tmp1291 * _tmp2282;
    hessian_value_ptr[23] = _tmp1283 * _tmp2287 + _tmp1315 * _tmp2289;
    hessian_value_ptr[24] = _tmp1219 * _tmp2295 + _tmp1326 * _tmp2293;
    hessian_value_ptr[25] = _tmp1165 * _tmp2299 + _tmp1286 * _tmp2301;
    hessian_value_ptr[26] = std::pow(_tmp1358, Scalar(2)) + std::pow(_tmp1366, Scalar(2)) +
                            std::pow(_tmp1373, Scalar(2)) + std::pow(_tmp1379, Scalar(2)) +
                            std::pow(_tmp1384, Scalar(2)) + std::pow(_tmp1403, Scalar(2)) +
                            std::pow(_tmp1409, Scalar(2)) + std::pow(_tmp1430, Scalar(2)) +
                            std::pow(_tmp1435, Scalar(2)) + std::pow(_tmp1444, Scalar(2)) +
                            std::pow(_tmp1445, Scalar(2)) + std::pow(_tmp1451, Scalar(2)) +
                            std::pow(_tmp1456, Scalar(2)) + std::pow(_tmp1462, Scalar(2)) +
                            std::pow(_tmp1469, Scalar(2)) + std::pow(_tmp1475, Scalar(2)) +
                            std::pow(_tmp1476, Scalar(2)) + std::pow(_tmp1479, Scalar(2)) +
                            std::pow(_tmp1485, Scalar(2)) + std::pow(_tmp1486, Scalar(2)) +
                            std::pow(_tmp1492, Scalar(2)) + std::pow(_tmp1493, Scalar(2)) +
                            std::pow(_tmp1494, Scalar(2)) + std::pow(_tmp1496, Scalar(2)) +
                            std::pow(_tmp1501, Scalar(2)) + std::pow(_tmp1503, Scalar(2)) +
                            std::pow(_tmp1504, Scalar(2)) + std::pow(_tmp1506, Scalar(2)) +
                            std::pow(_tmp1508, Scalar(2)) + std::pow(_tmp1509, Scalar(2)) +
                            std::pow(_tmp1510, Scalar(2)) + std::pow(_tmp1511, Scalar(2)) +
                            std::pow(_tmp1513, Scalar(2)) + std::pow(_tmp1514, Scalar(2)) +
                            std::pow(_tmp1515, Scalar(2)) + std::pow(_tmp1516, Scalar(2)) +
                            std::pow(_tmp1523, Scalar(2)) + std::pow(_tmp1533, Scalar(2)) +
                            std::pow(_tmp1536, Scalar(2)) + std::pow(_tmp1538, Scalar(2)) +
                            std::pow(_tmp1539, Scalar(2)) + std::pow(_tmp1546, Scalar(2)) +
                            std::pow(_tmp1547, Scalar(2)) + std::pow(_tmp1553, Scalar(2)) +
                            std::pow(_tmp1554, Scalar(2)) + std::pow(_tmp1555, Scalar(2)) +
                            std::pow(_tmp1557, Scalar(2)) + std::pow(_tmp1560, Scalar(2)) +
                            std::pow(_tmp1561, Scalar(2)) + std::pow(_tmp1564, Scalar(2)) +
                            std::pow(_tmp1565, Scalar(2)) + std::pow(_tmp1566, Scalar(2));
    hessian_value_ptr[27] =
        _tmp1358 * _tmp1656 + _tmp1366 * _tmp1689 + _tmp1373 * _tmp1693 + _tmp1379 * _tmp1622 +
        _tmp1384 * _tmp1623 + _tmp1403 * _tmp1711 + _tmp1409 * _tmp1684 + _tmp1430 * _tmp1674 +
        _tmp1435 * _tmp1720 + _tmp1444 * _tmp1629 + _tmp1445 * _tmp1712 + _tmp1451 * _tmp1666 +
        _tmp1456 * _tmp1721 + _tmp1462 * _tmp1707 + _tmp1469 * _tmp1719 + _tmp1475 * _tmp1631 +
        _tmp1476 * _tmp1575 + _tmp1479 * _tmp1635 + _tmp1485 * _tmp1710 + _tmp1486 * _tmp1714 +
        _tmp1492 * _tmp1672 + _tmp1493 * _tmp1655 + _tmp1494 * _tmp1613 + _tmp1496 * _tmp1661 +
        _tmp1501 * _tmp1583 + _tmp1503 * _tmp1579 + _tmp1504 * _tmp1679 + _tmp1506 * _tmp1675 +
        _tmp1508 * _tmp1596 + _tmp1509 * _tmp1716 + _tmp1510 * _tmp1673 + _tmp1511 * _tmp1617 +
        _tmp1513 * _tmp1671 + _tmp1514 * _tmp1715 + _tmp1515 * _tmp1630 + _tmp1516 * _tmp1718 +
        _tmp1523 * _tmp1592 + _tmp1533 * _tmp1650 + _tmp1536 * _tmp1713 + _tmp1538 * _tmp1660 +
        _tmp1539 * _tmp1703 + _tmp1546 * _tmp1696 + _tmp1547 * _tmp1587 + _tmp1553 * _tmp1680 +
        _tmp1554 * _tmp1646 + _tmp1555 * _tmp1701 + _tmp1557 * _tmp1598 + _tmp1560 * _tmp1708 +
        _tmp1561 * _tmp1695 + _tmp1564 * _tmp1665 + _tmp1565 * _tmp1624 + _tmp1566 * _tmp1651;
    hessian_value_ptr[28] =
        _tmp1358 * _tmp1861 + _tmp1366 * _tmp1921 + _tmp1373 * _tmp1774 + _tmp1379 * _tmp1845 +
        _tmp1384 * _tmp1898 + _tmp1403 * _tmp1723 + _tmp1409 * _tmp1846 + _tmp1430 * _tmp1829 +
        _tmp1435 * _tmp1916 + _tmp1444 * _tmp1914 + _tmp1445 * _tmp1758 + _tmp1451 * _tmp1817 +
        _tmp1456 * _tmp1871 + _tmp1462 * _tmp1739 + _tmp1469 * _tmp1810 + _tmp1475 * _tmp1854 +
        _tmp1476 * _tmp1919 + _tmp1479 * _tmp1889 + _tmp1485 * _tmp1912 + _tmp1486 * _tmp1791 +
        _tmp1492 * _tmp1767 + _tmp1493 * _tmp1840 + _tmp1494 * _tmp1910 + _tmp1496 * _tmp1872 +
        _tmp1501 * _tmp1908 + _tmp1503 * _tmp1907 + _tmp1504 * _tmp1731 + _tmp1506 * _tmp1722 +
        _tmp1508 * _tmp1827 + _tmp1509 * _tmp1888 + _tmp1510 * _tmp1920 + _tmp1511 * _tmp1918 +
        _tmp1513 * _tmp1906 + _tmp1514 * _tmp1738 + _tmp1515 * _tmp1847 + _tmp1516 * _tmp1782 +
        _tmp1523 * _tmp1842 + _tmp1533 * _tmp1880 + _tmp1536 * _tmp1830 + _tmp1538 * _tmp1783 +
        _tmp1539 * _tmp1909 + _tmp1546 * _tmp1899 + _tmp1547 * _tmp1839 + _tmp1553 * _tmp1869 +
        _tmp1554 * _tmp1831 + _tmp1555 * _tmp1913 + _tmp1557 * _tmp1801 + _tmp1560 * _tmp1915 +
        _tmp1561 * _tmp1750 + _tmp1564 * _tmp1911 + _tmp1565 * _tmp1843 + _tmp1566 * _tmp1844;
    hessian_value_ptr[29] =
        _tmp1358 * _tmp1981 + _tmp1366 * _tmp2031 + _tmp1373 * _tmp2038 + _tmp1379 * _tmp1968 +
        _tmp1384 * _tmp2004 + _tmp1403 * _tmp1982 + _tmp1409 * _tmp1952 + _tmp1430 * _tmp1985 +
        _tmp1435 * _tmp1932 + _tmp1444 * _tmp1999 + _tmp1445 * _tmp1956 + _tmp1451 * _tmp1958 +
        _tmp1456 * _tmp1957 + _tmp1462 * _tmp1948 + _tmp1469 * _tmp2029 + _tmp1475 * _tmp2025 +
        _tmp1476 * _tmp2026 + _tmp1479 * _tmp2000 + _tmp1485 * _tmp2006 + _tmp1486 * _tmp2013 +
        _tmp1492 * _tmp2015 + _tmp1493 * _tmp1989 + _tmp1494 * _tmp2043 + _tmp1496 * _tmp2027 +
        _tmp1501 * _tmp2039 + _tmp1503 * _tmp1943 + _tmp1504 * _tmp1938 + _tmp1506 * _tmp1933 +
        _tmp1508 * _tmp2046 + _tmp1509 * _tmp1926 + _tmp1510 * _tmp2047 + _tmp1511 * _tmp2042 +
        _tmp1513 * _tmp1963 + _tmp1514 * _tmp2041 + _tmp1515 * _tmp2032 + _tmp1516 * _tmp2044 +
        _tmp1523 * _tmp2019 + _tmp1533 * _tmp1976 + _tmp1536 * _tmp2037 + _tmp1538 * _tmp1934 +
        _tmp1539 * _tmp2030 + _tmp1546 * _tmp2011 + _tmp1547 * _tmp2012 + _tmp1553 * _tmp1993 +
        _tmp1554 * _tmp2028 + _tmp1555 * _tmp1972 + _tmp1557 * _tmp2048 + _tmp1560 * _tmp2049 +
        _tmp1561 * _tmp1998 + _tmp1564 * _tmp2045 + _tmp1565 * _tmp2007 + _tmp1566 * _tmp2005;
    hessian_value_ptr[30] =
        _tmp1358 * _tmp2153 + _tmp1366 * _tmp2126 + _tmp1373 * _tmp2165 + _tmp1379 * _tmp2166 +
        _tmp1384 * _tmp2138 + _tmp1403 * _tmp2077 + _tmp1409 * _tmp2088 + _tmp1430 * _tmp2129 +
        _tmp1435 * _tmp2172 + _tmp1444 * _tmp2125 + _tmp1445 * _tmp2124 + _tmp1451 * _tmp2155 +
        _tmp1456 * _tmp2151 + _tmp1462 * _tmp2140 + _tmp1469 * _tmp2057 + _tmp1475 * _tmp2171 +
        _tmp1476 * _tmp2067 + _tmp1479 * _tmp2097 + _tmp1485 * _tmp2072 + _tmp1486 * _tmp2147 +
        _tmp1492 * _tmp2053 + _tmp1493 * _tmp2117 + _tmp1494 * _tmp2167 + _tmp1496 * _tmp2141 +
        _tmp1501 * _tmp2159 + _tmp1503 * _tmp2111 + _tmp1504 * _tmp2168 + _tmp1506 * _tmp2087 +
        _tmp1508 * _tmp2081 + _tmp1509 * _tmp2116 + _tmp1510 * _tmp2170 + _tmp1511 * _tmp2164 +
        _tmp1513 * _tmp2137 + _tmp1514 * _tmp2106 + _tmp1515 * _tmp2154 + _tmp1516 * _tmp2085 +
        _tmp1523 * _tmp2118 + _tmp1533 * _tmp2076 + _tmp1536 * _tmp2136 + _tmp1538 * _tmp2086 +
        _tmp1539 * _tmp2152 + _tmp1546 * _tmp2142 + _tmp1547 * _tmp2101 + _tmp1553 * _tmp2092 +
        _tmp1554 * _tmp2127 + _tmp1555 * _tmp2120 + _tmp1557 * _tmp2063 + _tmp1560 * _tmp2139 +
        _tmp1561 * _tmp2160 + _tmp1564 * _tmp2169 + _tmp1565 * _tmp2131 + _tmp1566 * _tmp2130;
    hessian_value_ptr[31] = _tmp1444 * _tmp2185 + _tmp1509 * _tmp2184;
    hessian_value_ptr[32] = _tmp1409 * _tmp2189 + _tmp1516 * _tmp2191;
    hessian_value_ptr[33] = _tmp1435 * _tmp2197 + _tmp1508 * _tmp2198;
    hessian_value_ptr[34] = _tmp1373 * _tmp2203 + _tmp1536 * _tmp2202;
    hessian_value_ptr[35] = _tmp1475 * _tmp2208 + _tmp1511 * _tmp2210;
    hessian_value_ptr[36] = _tmp1384 * _tmp2216 + _tmp1476 * _tmp2214;
    hessian_value_ptr[37] = _tmp1546 * _tmp2220 + _tmp1547 * _tmp2222;
    hessian_value_ptr[38] = _tmp1492 * _tmp2228 + _tmp1493 * _tmp2227;
    hessian_value_ptr[39] = _tmp1553 * _tmp2232 + _tmp1564 * _tmp2234;
    hessian_value_ptr[40] = _tmp1451 * _tmp2241 + _tmp1503 * _tmp2239;
    hessian_value_ptr[41] = _tmp1501 * _tmp2247 + _tmp1561 * _tmp2245;
    hessian_value_ptr[42] = _tmp1462 * _tmp2251 + _tmp1514 * _tmp2253;
    hessian_value_ptr[43] = _tmp1523 * _tmp2259 + _tmp1557 * _tmp2258;
    hessian_value_ptr[44] = _tmp1366 * _tmp2265 + _tmp1445 * _tmp2263;
    hessian_value_ptr[45] = _tmp1469 * _tmp2270 + _tmp1555 * _tmp2269;
    hessian_value_ptr[46] = _tmp1358 * _tmp2275 + _tmp1479 * _tmp2277;
    hessian_value_ptr[47] = _tmp1379 * _tmp2283 + _tmp1486 * _tmp2282;
    hessian_value_ptr[48] = _tmp1533 * _tmp2287 + _tmp1560 * _tmp2289;
    hessian_value_ptr[49] = _tmp1456 * _tmp2293 + _tmp1504 * _tmp2295;
    hessian_value_ptr[50] = _tmp1485 * _tmp2301 + _tmp1513 * _tmp2299;
    hessian_value_ptr[51] = std::pow(_tmp1575, Scalar(2)) + std::pow(_tmp1579, Scalar(2)) +
                            std::pow(_tmp1583, Scalar(2)) + std::pow(_tmp1587, Scalar(2)) +
                            std::pow(_tmp1592, Scalar(2)) + std::pow(_tmp1596, Scalar(2)) +
                            std::pow(_tmp1598, Scalar(2)) + std::pow(_tmp1613, Scalar(2)) +
                            std::pow(_tmp1617, Scalar(2)) + std::pow(_tmp1622, Scalar(2)) +
                            std::pow(_tmp1623, Scalar(2)) + std::pow(_tmp1624, Scalar(2)) +
                            std::pow(_tmp1629, Scalar(2)) + std::pow(_tmp1630, Scalar(2)) +
                            std::pow(_tmp1631, Scalar(2)) + std::pow(_tmp1635, Scalar(2)) +
                            std::pow(_tmp1646, Scalar(2)) + std::pow(_tmp1650, Scalar(2)) +
                            std::pow(_tmp1651, Scalar(2)) + std::pow(_tmp1655, Scalar(2)) +
                            std::pow(_tmp1656, Scalar(2)) + std::pow(_tmp1660, Scalar(2)) +
                            std::pow(_tmp1661, Scalar(2)) + std::pow(_tmp1665, Scalar(2)) +
                            std::pow(_tmp1666, Scalar(2)) + std::pow(_tmp1671, Scalar(2)) +
                            std::pow(_tmp1672, Scalar(2)) + std::pow(_tmp1673, Scalar(2)) +
                            std::pow(_tmp1674, Scalar(2)) + std::pow(_tmp1675, Scalar(2)) +
                            std::pow(_tmp1679, Scalar(2)) + std::pow(_tmp1680, Scalar(2)) +
                            std::pow(_tmp1684, Scalar(2)) + std::pow(_tmp1689, Scalar(2)) +
                            std::pow(_tmp1693, Scalar(2)) + std::pow(_tmp1695, Scalar(2)) +
                            std::pow(_tmp1696, Scalar(2)) + std::pow(_tmp1701, Scalar(2)) +
                            std::pow(_tmp1703, Scalar(2)) + std::pow(_tmp1707, Scalar(2)) +
                            std::pow(_tmp1708, Scalar(2)) + std::pow(_tmp1710, Scalar(2)) +
                            std::pow(_tmp1711, Scalar(2)) + std::pow(_tmp1712, Scalar(2)) +
                            std::pow(_tmp1713, Scalar(2)) + std::pow(_tmp1714, Scalar(2)) +
                            std::pow(_tmp1715, Scalar(2)) + std::pow(_tmp1716, Scalar(2)) +
                            std::pow(_tmp1718, Scalar(2)) + std::pow(_tmp1719, Scalar(2)) +
                            std::pow(_tmp1720, Scalar(2)) + std::pow(_tmp1721, Scalar(2));
    hessian_value_ptr[52] =
        _tmp1575 * _tmp1919 + _tmp1579 * _tmp1907 + _tmp1583 * _tmp1908 + _tmp1587 * _tmp1839 +
        _tmp1592 * _tmp1842 + _tmp1596 * _tmp1827 + _tmp1598 * _tmp1801 + _tmp1613 * _tmp1910 +
        _tmp1617 * _tmp1918 + _tmp1622 * _tmp1845 + _tmp1623 * _tmp1898 + _tmp1624 * _tmp1843 +
        _tmp1629 * _tmp1914 + _tmp1630 * _tmp1847 + _tmp1631 * _tmp1854 + _tmp1635 * _tmp1889 +
        _tmp1646 * _tmp1831 + _tmp1650 * _tmp1880 + _tmp1651 * _tmp1844 + _tmp1655 * _tmp1840 +
        _tmp1656 * _tmp1861 + _tmp1660 * _tmp1783 + _tmp1661 * _tmp1872 + _tmp1665 * _tmp1911 +
        _tmp1666 * _tmp1817 + _tmp1671 * _tmp1906 + _tmp1672 * _tmp1767 + _tmp1673 * _tmp1920 +
        _tmp1674 * _tmp1829 + _tmp1675 * _tmp1722 + _tmp1679 * _tmp1731 + _tmp1680 * _tmp1869 +
        _tmp1684 * _tmp1846 + _tmp1689 * _tmp1921 + _tmp1693 * _tmp1774 + _tmp1695 * _tmp1750 +
        _tmp1696 * _tmp1899 + _tmp1701 * _tmp1913 + _tmp1703 * _tmp1909 + _tmp1707 * _tmp1739 +
        _tmp1708 * _tmp1915 + _tmp1710 * _tmp1912 + _tmp1711 * _tmp1723 + _tmp1712 * _tmp1758 +
        _tmp1713 * _tmp1830 + _tmp1714 * _tmp1791 + _tmp1715 * _tmp1738 + _tmp1716 * _tmp1888 +
        _tmp1718 * _tmp1782 + _tmp1719 * _tmp1810 + _tmp1720 * _tmp1916 + _tmp1721 * _tmp1871;
    hessian_value_ptr[53] =
        _tmp1575 * _tmp2026 + _tmp1579 * _tmp1943 + _tmp1583 * _tmp2039 + _tmp1587 * _tmp2012 +
        _tmp1592 * _tmp2019 + _tmp1596 * _tmp2046 + _tmp1598 * _tmp2048 + _tmp1613 * _tmp2043 +
        _tmp1617 * _tmp2042 + _tmp1622 * _tmp1968 + _tmp1623 * _tmp2004 + _tmp1624 * _tmp2007 +
        _tmp1629 * _tmp1999 + _tmp1630 * _tmp2032 + _tmp1631 * _tmp2025 + _tmp1635 * _tmp2000 +
        _tmp1646 * _tmp2028 + _tmp1650 * _tmp1976 + _tmp1651 * _tmp2005 + _tmp1655 * _tmp1989 +
        _tmp1656 * _tmp1981 + _tmp1660 * _tmp1934 + _tmp1661 * _tmp2027 + _tmp1665 * _tmp2045 +
        _tmp1666 * _tmp1958 + _tmp1671 * _tmp1963 + _tmp1672 * _tmp2015 + _tmp1673 * _tmp2047 +
        _tmp1674 * _tmp1985 + _tmp1675 * _tmp1933 + _tmp1679 * _tmp1938 + _tmp1680 * _tmp1993 +
        _tmp1684 * _tmp1952 + _tmp1689 * _tmp2031 + _tmp1693 * _tmp2038 + _tmp1695 * _tmp1998 +
        _tmp1696 * _tmp2011 + _tmp1701 * _tmp1972 + _tmp1703 * _tmp2030 + _tmp1707 * _tmp1948 +
        _tmp1708 * _tmp2049 + _tmp1710 * _tmp2006 + _tmp1711 * _tmp1982 + _tmp1712 * _tmp1956 +
        _tmp1713 * _tmp2037 + _tmp1714 * _tmp2013 + _tmp1715 * _tmp2041 + _tmp1716 * _tmp1926 +
        _tmp1718 * _tmp2044 + _tmp1719 * _tmp2029 + _tmp1720 * _tmp1932 + _tmp1721 * _tmp1957;
    hessian_value_ptr[54] =
        _tmp1575 * _tmp2067 + _tmp1579 * _tmp2111 + _tmp1583 * _tmp2159 + _tmp1587 * _tmp2101 +
        _tmp1592 * _tmp2118 + _tmp1596 * _tmp2081 + _tmp1598 * _tmp2063 + _tmp1613 * _tmp2167 +
        _tmp1617 * _tmp2164 + _tmp1622 * _tmp2166 + _tmp1623 * _tmp2138 + _tmp1624 * _tmp2131 +
        _tmp1629 * _tmp2125 + _tmp1630 * _tmp2154 + _tmp1631 * _tmp2171 + _tmp1635 * _tmp2097 +
        _tmp1646 * _tmp2127 + _tmp1650 * _tmp2076 + _tmp1651 * _tmp2130 + _tmp1655 * _tmp2117 +
        _tmp1656 * _tmp2153 + _tmp1660 * _tmp2086 + _tmp1661 * _tmp2141 + _tmp1665 * _tmp2169 +
        _tmp1666 * _tmp2155 + _tmp1671 * _tmp2137 + _tmp1672 * _tmp2053 + _tmp1673 * _tmp2170 +
        _tmp1674 * _tmp2129 + _tmp1675 * _tmp2087 + _tmp1679 * _tmp2168 + _tmp1680 * _tmp2092 +
        _tmp1684 * _tmp2088 + _tmp1689 * _tmp2126 + _tmp1693 * _tmp2165 + _tmp1695 * _tmp2160 +
        _tmp1696 * _tmp2142 + _tmp1701 * _tmp2120 + _tmp1703 * _tmp2152 + _tmp1707 * _tmp2140 +
        _tmp1708 * _tmp2139 + _tmp1710 * _tmp2072 + _tmp1711 * _tmp2077 + _tmp1712 * _tmp2124 +
        _tmp1713 * _tmp2136 + _tmp1714 * _tmp2147 + _tmp1715 * _tmp2106 + _tmp1716 * _tmp2116 +
        _tmp1718 * _tmp2085 + _tmp1719 * _tmp2057 + _tmp1720 * _tmp2172 + _tmp1721 * _tmp2151;
    hessian_value_ptr[55] = _tmp1629 * _tmp2185 + _tmp1716 * _tmp2184;
    hessian_value_ptr[56] = _tmp1684 * _tmp2189 + _tmp1718 * _tmp2191;
    hessian_value_ptr[57] = _tmp1596 * _tmp2198 + _tmp1720 * _tmp2197;
    hessian_value_ptr[58] = _tmp1693 * _tmp2203 + _tmp1713 * _tmp2202;
    hessian_value_ptr[59] = _tmp1617 * _tmp2210 + _tmp1631 * _tmp2208;
    hessian_value_ptr[60] = _tmp1575 * _tmp2214 + _tmp1623 * _tmp2216;
    hessian_value_ptr[61] = _tmp1587 * _tmp2222 + _tmp1696 * _tmp2220;
    hessian_value_ptr[62] = _tmp1655 * _tmp2227 + _tmp1672 * _tmp2228;
    hessian_value_ptr[63] = _tmp1665 * _tmp2234 + _tmp1680 * _tmp2232;
    hessian_value_ptr[64] = _tmp1579 * _tmp2239 + _tmp1666 * _tmp2241;
    hessian_value_ptr[65] = _tmp1583 * _tmp2247 + _tmp1695 * _tmp2245;
    hessian_value_ptr[66] = _tmp1707 * _tmp2251 + _tmp1715 * _tmp2253;
    hessian_value_ptr[67] = _tmp1592 * _tmp2259 + _tmp1598 * _tmp2258;
    hessian_value_ptr[68] = _tmp1689 * _tmp2265 + _tmp1712 * _tmp2263;
    hessian_value_ptr[69] = _tmp1701 * _tmp2269 + _tmp1719 * _tmp2270;
    hessian_value_ptr[70] = _tmp1635 * _tmp2277 + _tmp1656 * _tmp2275;
    hessian_value_ptr[71] = _tmp1622 * _tmp2283 + _tmp1714 * _tmp2282;
    hessian_value_ptr[72] = _tmp1650 * _tmp2287 + _tmp1708 * _tmp2289;
    hessian_value_ptr[73] = _tmp1679 * _tmp2295 + _tmp1721 * _tmp2293;
    hessian_value_ptr[74] = _tmp1671 * _tmp2299 + _tmp1710 * _tmp2301;
    hessian_value_ptr[75] = std::pow(_tmp1722, Scalar(2)) + std::pow(_tmp1723, Scalar(2)) +
                            std::pow(_tmp1731, Scalar(2)) + std::pow(_tmp1738, Scalar(2)) +
                            std::pow(_tmp1739, Scalar(2)) + std::pow(_tmp1750, Scalar(2)) +
                            std::pow(_tmp1758, Scalar(2)) + std::pow(_tmp1767, Scalar(2)) +
                            std::pow(_tmp1774, Scalar(2)) + std::pow(_tmp1782, Scalar(2)) +
                            std::pow(_tmp1783, Scalar(2)) + std::pow(_tmp1791, Scalar(2)) +
                            std::pow(_tmp1801, Scalar(2)) + std::pow(_tmp1810, Scalar(2)) +
                            std::pow(_tmp1817, Scalar(2)) + std::pow(_tmp1827, Scalar(2)) +
                            std::pow(_tmp1829, Scalar(2)) + std::pow(_tmp1830, Scalar(2)) +
                            std::pow(_tmp1831, Scalar(2)) + std::pow(_tmp1839, Scalar(2)) +
                            std::pow(_tmp1840, Scalar(2)) + std::pow(_tmp1842, Scalar(2)) +
                            std::pow(_tmp1843, Scalar(2)) + std::pow(_tmp1844, Scalar(2)) +
                            std::pow(_tmp1845, Scalar(2)) + std::pow(_tmp1846, Scalar(2)) +
                            std::pow(_tmp1847, Scalar(2)) + std::pow(_tmp1854, Scalar(2)) +
                            std::pow(_tmp1861, Scalar(2)) + std::pow(_tmp1869, Scalar(2)) +
                            std::pow(_tmp1871, Scalar(2)) + std::pow(_tmp1872, Scalar(2)) +
                            std::pow(_tmp1880, Scalar(2)) + std::pow(_tmp1888, Scalar(2)) +
                            std::pow(_tmp1889, Scalar(2)) + std::pow(_tmp1898, Scalar(2)) +
                            std::pow(_tmp1899, Scalar(2)) + std::pow(_tmp1906, Scalar(2)) +
                            std::pow(_tmp1907, Scalar(2)) + std::pow(_tmp1908, Scalar(2)) +
                            std::pow(_tmp1909, Scalar(2)) + std::pow(_tmp1910, Scalar(2)) +
                            std::pow(_tmp1911, Scalar(2)) + std::pow(_tmp1912, Scalar(2)) +
                            std::pow(_tmp1913, Scalar(2)) + std::pow(_tmp1914, Scalar(2)) +
                            std::pow(_tmp1915, Scalar(2)) + std::pow(_tmp1916, Scalar(2)) +
                            std::pow(_tmp1918, Scalar(2)) + std::pow(_tmp1919, Scalar(2)) +
                            std::pow(_tmp1920, Scalar(2)) + std::pow(_tmp1921, Scalar(2));
    hessian_value_ptr[76] =
        _tmp1722 * _tmp1933 + _tmp1723 * _tmp1982 + _tmp1731 * _tmp1938 + _tmp1738 * _tmp2041 +
        _tmp1739 * _tmp1948 + _tmp1750 * _tmp1998 + _tmp1758 * _tmp1956 + _tmp1767 * _tmp2015 +
        _tmp1774 * _tmp2038 + _tmp1782 * _tmp2044 + _tmp1783 * _tmp1934 + _tmp1791 * _tmp2013 +
        _tmp1801 * _tmp2048 + _tmp1810 * _tmp2029 + _tmp1817 * _tmp1958 + _tmp1827 * _tmp2046 +
        _tmp1829 * _tmp1985 + _tmp1830 * _tmp2037 + _tmp1831 * _tmp2028 + _tmp1839 * _tmp2012 +
        _tmp1840 * _tmp1989 + _tmp1842 * _tmp2019 + _tmp1843 * _tmp2007 + _tmp1844 * _tmp2005 +
        _tmp1845 * _tmp1968 + _tmp1846 * _tmp1952 + _tmp1847 * _tmp2032 + _tmp1854 * _tmp2025 +
        _tmp1861 * _tmp1981 + _tmp1869 * _tmp1993 + _tmp1871 * _tmp1957 + _tmp1872 * _tmp2027 +
        _tmp1880 * _tmp1976 + _tmp1888 * _tmp1926 + _tmp1889 * _tmp2000 + _tmp1898 * _tmp2004 +
        _tmp1899 * _tmp2011 + _tmp1906 * _tmp1963 + _tmp1907 * _tmp1943 + _tmp1908 * _tmp2039 +
        _tmp1909 * _tmp2030 + _tmp1910 * _tmp2043 + _tmp1911 * _tmp2045 + _tmp1912 * _tmp2006 +
        _tmp1913 * _tmp1972 + _tmp1914 * _tmp1999 + _tmp1915 * _tmp2049 + _tmp1916 * _tmp1932 +
        _tmp1918 * _tmp2042 + _tmp1919 * _tmp2026 + _tmp1920 * _tmp2047 + _tmp1921 * _tmp2031;
    hessian_value_ptr[77] =
        _tmp1722 * _tmp2087 + _tmp1723 * _tmp2077 + _tmp1731 * _tmp2168 + _tmp1738 * _tmp2106 +
        _tmp1739 * _tmp2140 + _tmp1750 * _tmp2160 + _tmp1758 * _tmp2124 + _tmp1767 * _tmp2053 +
        _tmp1774 * _tmp2165 + _tmp1782 * _tmp2085 + _tmp1783 * _tmp2086 + _tmp1791 * _tmp2147 +
        _tmp1801 * _tmp2063 + _tmp1810 * _tmp2057 + _tmp1817 * _tmp2155 + _tmp1827 * _tmp2081 +
        _tmp1829 * _tmp2129 + _tmp1830 * _tmp2136 + _tmp1831 * _tmp2127 + _tmp1839 * _tmp2101 +
        _tmp1840 * _tmp2117 + _tmp1842 * _tmp2118 + _tmp1843 * _tmp2131 + _tmp1844 * _tmp2130 +
        _tmp1845 * _tmp2166 + _tmp1846 * _tmp2088 + _tmp1847 * _tmp2154 + _tmp1854 * _tmp2171 +
        _tmp1861 * _tmp2153 + _tmp1869 * _tmp2092 + _tmp1871 * _tmp2151 + _tmp1872 * _tmp2141 +
        _tmp1880 * _tmp2076 + _tmp1888 * _tmp2116 + _tmp1889 * _tmp2097 + _tmp1898 * _tmp2138 +
        _tmp1899 * _tmp2142 + _tmp1906 * _tmp2137 + _tmp1907 * _tmp2111 + _tmp1908 * _tmp2159 +
        _tmp1909 * _tmp2152 + _tmp1910 * _tmp2167 + _tmp1911 * _tmp2169 + _tmp1912 * _tmp2072 +
        _tmp1913 * _tmp2120 + _tmp1914 * _tmp2125 + _tmp1915 * _tmp2139 + _tmp1916 * _tmp2172 +
        _tmp1918 * _tmp2164 + _tmp1919 * _tmp2067 + _tmp1920 * _tmp2170 + _tmp1921 * _tmp2126;
    hessian_value_ptr[78] = _tmp1888 * _tmp2184 + _tmp1914 * _tmp2185;
    hessian_value_ptr[79] = _tmp1782 * _tmp2191 + _tmp1846 * _tmp2189;
    hessian_value_ptr[80] = _tmp1827 * _tmp2198 + _tmp1916 * _tmp2197;
    hessian_value_ptr[81] = _tmp1774 * _tmp2203 + _tmp1830 * _tmp2202;
    hessian_value_ptr[82] = _tmp1854 * _tmp2208 + _tmp1918 * _tmp2210;
    hessian_value_ptr[83] = _tmp1898 * _tmp2216 + _tmp1919 * _tmp2214;
    hessian_value_ptr[84] = _tmp1839 * _tmp2222 + _tmp1899 * _tmp2220;
    hessian_value_ptr[85] = _tmp1767 * _tmp2228 + _tmp1840 * _tmp2227;
    hessian_value_ptr[86] = _tmp1869 * _tmp2232 + _tmp1911 * _tmp2234;
    hessian_value_ptr[87] = _tmp1817 * _tmp2241 + _tmp1907 * _tmp2239;
    hessian_value_ptr[88] = _tmp1750 * _tmp2245 + _tmp1908 * _tmp2247;
    hessian_value_ptr[89] = _tmp1738 * _tmp2253 + _tmp1739 * _tmp2251;
    hessian_value_ptr[90] = _tmp1801 * _tmp2258 + _tmp1842 * _tmp2259;
    hessian_value_ptr[91] = _tmp1758 * _tmp2263 + _tmp1921 * _tmp2265;
    hessian_value_ptr[92] = _tmp1810 * _tmp2270 + _tmp1913 * _tmp2269;
    hessian_value_ptr[93] = _tmp1861 * _tmp2275 + _tmp1889 * _tmp2277;
    hessian_value_ptr[94] = _tmp1791 * _tmp2282 + _tmp1845 * _tmp2283;
    hessian_value_ptr[95] = _tmp1880 * _tmp2287 + _tmp1915 * _tmp2289;
    hessian_value_ptr[96] = _tmp1731 * _tmp2295 + _tmp1871 * _tmp2293;
    hessian_value_ptr[97] = _tmp1906 * _tmp2299 + _tmp1912 * _tmp2301;
    hessian_value_ptr[98] = std::pow(_tmp1926, Scalar(2)) + std::pow(_tmp1932, Scalar(2)) +
                            std::pow(_tmp1933, Scalar(2)) + std::pow(_tmp1934, Scalar(2)) +
                            std::pow(_tmp1938, Scalar(2)) + std::pow(_tmp1943, Scalar(2)) +
                            std::pow(_tmp1948, Scalar(2)) + std::pow(_tmp1952, Scalar(2)) +
                            std::pow(_tmp1956, Scalar(2)) + std::pow(_tmp1957, Scalar(2)) +
                            std::pow(_tmp1958, Scalar(2)) + std::pow(_tmp1963, Scalar(2)) +
                            std::pow(_tmp1968, Scalar(2)) + std::pow(_tmp1972, Scalar(2)) +
                            std::pow(_tmp1976, Scalar(2)) + std::pow(_tmp1981, Scalar(2)) +
                            std::pow(_tmp1982, Scalar(2)) + std::pow(_tmp1985, Scalar(2)) +
                            std::pow(_tmp1989, Scalar(2)) + std::pow(_tmp1993, Scalar(2)) +
                            std::pow(_tmp1998, Scalar(2)) + std::pow(_tmp1999, Scalar(2)) +
                            std::pow(_tmp2000, Scalar(2)) + std::pow(_tmp2004, Scalar(2)) +
                            std::pow(_tmp2005, Scalar(2)) + std::pow(_tmp2006, Scalar(2)) +
                            std::pow(_tmp2007, Scalar(2)) + std::pow(_tmp2011, Scalar(2)) +
                            std::pow(_tmp2012, Scalar(2)) + std::pow(_tmp2013, Scalar(2)) +
                            std::pow(_tmp2015, Scalar(2)) + std::pow(_tmp2019, Scalar(2)) +
                            std::pow(_tmp2025, Scalar(2)) + std::pow(_tmp2026, Scalar(2)) +
                            std::pow(_tmp2027, Scalar(2)) + std::pow(_tmp2028, Scalar(2)) +
                            std::pow(_tmp2029, Scalar(2)) + std::pow(_tmp2030, Scalar(2)) +
                            std::pow(_tmp2031, Scalar(2)) + std::pow(_tmp2032, Scalar(2)) +
                            std::pow(_tmp2037, Scalar(2)) + std::pow(_tmp2038, Scalar(2)) +
                            std::pow(_tmp2039, Scalar(2)) + std::pow(_tmp2041, Scalar(2)) +
                            std::pow(_tmp2042, Scalar(2)) + std::pow(_tmp2043, Scalar(2)) +
                            std::pow(_tmp2044, Scalar(2)) + std::pow(_tmp2045, Scalar(2)) +
                            std::pow(_tmp2046, Scalar(2)) + std::pow(_tmp2047, Scalar(2)) +
                            std::pow(_tmp2048, Scalar(2)) + std::pow(_tmp2049, Scalar(2));
    hessian_value_ptr[99] =
        _tmp1926 * _tmp2116 + _tmp1932 * _tmp2172 + _tmp1933 * _tmp2087 + _tmp1934 * _tmp2086 +
        _tmp1938 * _tmp2168 + _tmp1943 * _tmp2111 + _tmp1948 * _tmp2140 + _tmp1952 * _tmp2088 +
        _tmp1956 * _tmp2124 + _tmp1957 * _tmp2151 + _tmp1958 * _tmp2155 + _tmp1963 * _tmp2137 +
        _tmp1968 * _tmp2166 + _tmp1972 * _tmp2120 + _tmp1976 * _tmp2076 + _tmp1981 * _tmp2153 +
        _tmp1982 * _tmp2077 + _tmp1985 * _tmp2129 + _tmp1989 * _tmp2117 + _tmp1993 * _tmp2092 +
        _tmp1998 * _tmp2160 + _tmp1999 * _tmp2125 + _tmp2000 * _tmp2097 + _tmp2004 * _tmp2138 +
        _tmp2005 * _tmp2130 + _tmp2006 * _tmp2072 + _tmp2007 * _tmp2131 + _tmp2011 * _tmp2142 +
        _tmp2012 * _tmp2101 + _tmp2013 * _tmp2147 + _tmp2015 * _tmp2053 + _tmp2019 * _tmp2118 +
        _tmp2025 * _tmp2171 + _tmp2026 * _tmp2067 + _tmp2027 * _tmp2141 + _tmp2028 * _tmp2127 +
        _tmp2029 * _tmp2057 + _tmp2030 * _tmp2152 + _tmp2031 * _tmp2126 + _tmp2032 * _tmp2154 +
        _tmp2037 * _tmp2136 + _tmp2038 * _tmp2165 + _tmp2039 * _tmp2159 + _tmp2041 * _tmp2106 +
        _tmp2042 * _tmp2164 + _tmp2043 * _tmp2167 + _tmp2044 * _tmp2085 + _tmp2045 * _tmp2169 +
        _tmp2046 * _tmp2081 + _tmp2047 * _tmp2170 + _tmp2048 * _tmp2063 + _tmp2049 * _tmp2139;
    hessian_value_ptr[100] = _tmp1926 * _tmp2184 + _tmp1999 * _tmp2185;
    hessian_value_ptr[101] = _tmp1952 * _tmp2189 + _tmp2044 * _tmp2191;
    hessian_value_ptr[102] = _tmp1932 * _tmp2197 + _tmp2046 * _tmp2198;
    hessian_value_ptr[103] = _tmp2037 * _tmp2202 + _tmp2038 * _tmp2203;
    hessian_value_ptr[104] = _tmp2025 * _tmp2208 + _tmp2042 * _tmp2210;
    hessian_value_ptr[105] = _tmp2004 * _tmp2216 + _tmp2026 * _tmp2214;
    hessian_value_ptr[106] = _tmp2011 * _tmp2220 + _tmp2012 * _tmp2222;
    hessian_value_ptr[107] = _tmp1989 * _tmp2227 + _tmp2015 * _tmp2228;
    hessian_value_ptr[108] = _tmp1993 * _tmp2232 + _tmp2045 * _tmp2234;
    hessian_value_ptr[109] = _tmp1943 * _tmp2239 + _tmp1958 * _tmp2241;
    hessian_value_ptr[110] = _tmp1998 * _tmp2245 + _tmp2039 * _tmp2247;
    hessian_value_ptr[111] = _tmp1948 * _tmp2251 + _tmp2041 * _tmp2253;
    hessian_value_ptr[112] = _tmp2019 * _tmp2259 + _tmp2048 * _tmp2258;
    hessian_value_ptr[113] = _tmp1956 * _tmp2263 + _tmp2031 * _tmp2265;
    hessian_value_ptr[114] = _tmp1972 * _tmp2269 + _tmp2029 * _tmp2270;
    hessian_value_ptr[115] = _tmp1981 * _tmp2275 + _tmp2000 * _tmp2277;
    hessian_value_ptr[116] = _tmp1968 * _tmp2283 + _tmp2013 * _tmp2282;
    hessian_value_ptr[117] = _tmp1976 * _tmp2287 + _tmp2049 * _tmp2289;
    hessian_value_ptr[118] = _tmp1938 * _tmp2295 + _tmp1957 * _tmp2293;
    hessian_value_ptr[119] = _tmp1963 * _tmp2299 + _tmp2006 * _tmp2301;
    hessian_value_ptr[120] = std::pow(_tmp2053, Scalar(2)) + std::pow(_tmp2057, Scalar(2)) +
                             std::pow(_tmp2063, Scalar(2)) + std::pow(_tmp2067, Scalar(2)) +
                             std::pow(_tmp2072, Scalar(2)) + std::pow(_tmp2076, Scalar(2)) +
                             std::pow(_tmp2077, Scalar(2)) + std::pow(_tmp2081, Scalar(2)) +
                             std::pow(_tmp2085, Scalar(2)) + std::pow(_tmp2086, Scalar(2)) +
                             std::pow(_tmp2087, Scalar(2)) + std::pow(_tmp2088, Scalar(2)) +
                             std::pow(_tmp2092, Scalar(2)) + std::pow(_tmp2097, Scalar(2)) +
                             std::pow(_tmp2101, Scalar(2)) + std::pow(_tmp2106, Scalar(2)) +
                             std::pow(_tmp2111, Scalar(2)) + std::pow(_tmp2116, Scalar(2)) +
                             std::pow(_tmp2117, Scalar(2)) + std::pow(_tmp2118, Scalar(2)) +
                             std::pow(_tmp2120, Scalar(2)) + std::pow(_tmp2124, Scalar(2)) +
                             std::pow(_tmp2125, Scalar(2)) + std::pow(_tmp2126, Scalar(2)) +
                             std::pow(_tmp2127, Scalar(2)) + std::pow(_tmp2129, Scalar(2)) +
                             std::pow(_tmp2130, Scalar(2)) + std::pow(_tmp2131, Scalar(2)) +
                             std::pow(_tmp2136, Scalar(2)) + std::pow(_tmp2137, Scalar(2)) +
                             std::pow(_tmp2138, Scalar(2)) + std::pow(_tmp2139, Scalar(2)) +
                             std::pow(_tmp2140, Scalar(2)) + std::pow(_tmp2141, Scalar(2)) +
                             std::pow(_tmp2142, Scalar(2)) + std::pow(_tmp2147, Scalar(2)) +
                             std::pow(_tmp2151, Scalar(2)) + std::pow(_tmp2152, Scalar(2)) +
                             std::pow(_tmp2153, Scalar(2)) + std::pow(_tmp2154, Scalar(2)) +
                             std::pow(_tmp2155, Scalar(2)) + std::pow(_tmp2159, Scalar(2)) +
                             std::pow(_tmp2160, Scalar(2)) + std::pow(_tmp2164, Scalar(2)) +
                             std::pow(_tmp2165, Scalar(2)) + std::pow(_tmp2166, Scalar(2)) +
                             std::pow(_tmp2167, Scalar(2)) + std::pow(_tmp2168, Scalar(2)) +
                             std::pow(_tmp2169, Scalar(2)) + std::pow(_tmp2170, Scalar(2)) +
                             std::pow(_tmp2171, Scalar(2)) + std::pow(_tmp2172, Scalar(2));
    hessian_value_ptr[121] = _tmp2116 * _tmp2184 + _tmp2125 * _tmp2185;
    hessian_value_ptr[122] = _tmp2085 * _tmp2191 + _tmp2088 * _tmp2189;
    hessian_value_ptr[123] = _tmp2081 * _tmp2198 + _tmp2172 * _tmp2197;
    hessian_value_ptr[124] = _tmp2136 * _tmp2202 + _tmp2165 * _tmp2203;
    hessian_value_ptr[125] = _tmp2164 * _tmp2210 + _tmp2171 * _tmp2208;
    hessian_value_ptr[126] = _tmp2067 * _tmp2214 + _tmp2138 * _tmp2216;
    hessian_value_ptr[127] = _tmp2101 * _tmp2222 + _tmp2142 * _tmp2220;
    hessian_value_ptr[128] = _tmp2053 * _tmp2228 + _tmp2117 * _tmp2227;
    hessian_value_ptr[129] = _tmp2092 * _tmp2232 + _tmp2169 * _tmp2234;
    hessian_value_ptr[130] = _tmp2111 * _tmp2239 + _tmp2155 * _tmp2241;
    hessian_value_ptr[131] = _tmp2159 * _tmp2247 + _tmp2160 * _tmp2245;
    hessian_value_ptr[132] = _tmp2106 * _tmp2253 + _tmp2140 * _tmp2251;
    hessian_value_ptr[133] = _tmp2063 * _tmp2258 + _tmp2118 * _tmp2259;
    hessian_value_ptr[134] = _tmp2124 * _tmp2263 + _tmp2126 * _tmp2265;
    hessian_value_ptr[135] = _tmp2057 * _tmp2270 + _tmp2120 * _tmp2269;
    hessian_value_ptr[136] = _tmp2097 * _tmp2277 + _tmp2153 * _tmp2275;
    hessian_value_ptr[137] = _tmp2147 * _tmp2282 + _tmp2166 * _tmp2283;
    hessian_value_ptr[138] = _tmp2076 * _tmp2287 + _tmp2139 * _tmp2289;
    hessian_value_ptr[139] = _tmp2151 * _tmp2293 + _tmp2168 * _tmp2295;
    hessian_value_ptr[140] = _tmp2072 * _tmp2301 + _tmp2137 * _tmp2299;
    hessian_value_ptr[141] =
        _tmp2173 + std::pow(_tmp2184, Scalar(2)) + std::pow(_tmp2185, Scalar(2));
    hessian_value_ptr[142] =
        std::pow(_tmp2189, Scalar(2)) + _tmp2190 + std::pow(_tmp2191, Scalar(2));
    hessian_value_ptr[143] =
        _tmp2192 + std::pow(_tmp2197, Scalar(2)) + std::pow(_tmp2198, Scalar(2));
    hessian_value_ptr[144] =
        std::pow(_tmp2202, Scalar(2)) + std::pow(_tmp2203, Scalar(2)) + _tmp2204;
    hessian_value_ptr[145] =
        std::pow(_tmp2208, Scalar(2)) + _tmp2209 + std::pow(_tmp2210, Scalar(2));
    hessian_value_ptr[146] =
        std::pow(_tmp2214, Scalar(2)) + _tmp2215 + std::pow(_tmp2216, Scalar(2));
    hessian_value_ptr[147] =
        std::pow(_tmp2220, Scalar(2)) + _tmp2221 + std::pow(_tmp2222, Scalar(2));
    hessian_value_ptr[148] =
        _tmp2223 + std::pow(_tmp2227, Scalar(2)) + std::pow(_tmp2228, Scalar(2));
    hessian_value_ptr[149] =
        std::pow(_tmp2232, Scalar(2)) + _tmp2233 + std::pow(_tmp2234, Scalar(2));
    hessian_value_ptr[150] =
        std::pow(_tmp2239, Scalar(2)) + _tmp2240 + std::pow(_tmp2241, Scalar(2));
    hessian_value_ptr[151] =
        std::pow(_tmp2245, Scalar(2)) + _tmp2246 + std::pow(_tmp2247, Scalar(2));
    hessian_value_ptr[152] =
        std::pow(_tmp2251, Scalar(2)) + _tmp2252 + std::pow(_tmp2253, Scalar(2));
    hessian_value_ptr[153] =
        _tmp2254 + std::pow(_tmp2258, Scalar(2)) + std::pow(_tmp2259, Scalar(2));
    hessian_value_ptr[154] =
        std::pow(_tmp2263, Scalar(2)) + _tmp2264 + std::pow(_tmp2265, Scalar(2));
    hessian_value_ptr[155] =
        std::pow(_tmp2269, Scalar(2)) + std::pow(_tmp2270, Scalar(2)) + _tmp2271;
    hessian_value_ptr[156] =
        std::pow(_tmp2275, Scalar(2)) + _tmp2276 + std::pow(_tmp2277, Scalar(2));
    hessian_value_ptr[157] =
        _tmp2278 + std::pow(_tmp2282, Scalar(2)) + std::pow(_tmp2283, Scalar(2));
    hessian_value_ptr[158] =
        std::pow(_tmp2287, Scalar(2)) + _tmp2288 + std::pow(_tmp2289, Scalar(2));
    hessian_value_ptr[159] =
        std::pow(_tmp2293, Scalar(2)) + _tmp2294 + std::pow(_tmp2295, Scalar(2));
    hessian_value_ptr[160] =
        std::pow(_tmp2299, Scalar(2)) + _tmp2300 + std::pow(_tmp2301, Scalar(2));
  }
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace bundle_adjustment_fixed_size
