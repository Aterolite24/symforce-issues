// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     cpp_templates/function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>
#include <sym/pose3.h>

namespace bundle_adjustment_fixed_size {

/**
 * This function was autogenerated. Do not modify by hand.
 *
 * Computes the linearization of the residual around the given state,
 * and returns the relevant information about the resulting linear system.
 *
 * Input args: The state to linearize around
 *
 * Output args:
 *     b (Eigen::Matrix*): The residual vector
 *     J (Eigen::Matrix*): The Jacobian of the residual
 *     H (Eigen::Matrix*): The Hessian approximation J.T * J
 *     Jtb (Eigen::Matrix*): J.T * b
 *
 */
template <typename Scalar>
void Linearization(
    const Eigen::Matrix<Scalar, 4, 1>& views_0_calibration, const sym::Pose3<Scalar>& views_0_pose,
    const Eigen::Matrix<Scalar, 4, 1>& views_1_calibration, const sym::Pose3<Scalar>& views_1_pose,
    const sym::Pose3<Scalar>& priors_0_0_target_T_src,
    const Eigen::Matrix<Scalar, 6, 6>& priors_0_0_sqrt_info,
    const sym::Pose3<Scalar>& priors_0_1_target_T_src,
    const Eigen::Matrix<Scalar, 6, 6>& priors_0_1_sqrt_info,
    const sym::Pose3<Scalar>& priors_1_0_target_T_src,
    const Eigen::Matrix<Scalar, 6, 6>& priors_1_0_sqrt_info,
    const sym::Pose3<Scalar>& priors_1_1_target_T_src,
    const Eigen::Matrix<Scalar, 6, 6>& priors_1_1_sqrt_info,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_0_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_0_target_coords, const Scalar matches_0_0_weight,
    const Scalar matches_0_0_inverse_range_prior,
    const Scalar matches_0_0_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_1_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_1_target_coords, const Scalar matches_0_1_weight,
    const Scalar matches_0_1_inverse_range_prior,
    const Scalar matches_0_1_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_2_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_2_target_coords, const Scalar matches_0_2_weight,
    const Scalar matches_0_2_inverse_range_prior,
    const Scalar matches_0_2_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_3_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_3_target_coords, const Scalar matches_0_3_weight,
    const Scalar matches_0_3_inverse_range_prior,
    const Scalar matches_0_3_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_4_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_4_target_coords, const Scalar matches_0_4_weight,
    const Scalar matches_0_4_inverse_range_prior,
    const Scalar matches_0_4_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_5_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_5_target_coords, const Scalar matches_0_5_weight,
    const Scalar matches_0_5_inverse_range_prior,
    const Scalar matches_0_5_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_6_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_6_target_coords, const Scalar matches_0_6_weight,
    const Scalar matches_0_6_inverse_range_prior,
    const Scalar matches_0_6_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_7_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_7_target_coords, const Scalar matches_0_7_weight,
    const Scalar matches_0_7_inverse_range_prior,
    const Scalar matches_0_7_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_8_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_8_target_coords, const Scalar matches_0_8_weight,
    const Scalar matches_0_8_inverse_range_prior,
    const Scalar matches_0_8_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_9_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_9_target_coords, const Scalar matches_0_9_weight,
    const Scalar matches_0_9_inverse_range_prior,
    const Scalar matches_0_9_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_10_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_10_target_coords, const Scalar matches_0_10_weight,
    const Scalar matches_0_10_inverse_range_prior,
    const Scalar matches_0_10_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_11_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_11_target_coords, const Scalar matches_0_11_weight,
    const Scalar matches_0_11_inverse_range_prior,
    const Scalar matches_0_11_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_12_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_12_target_coords, const Scalar matches_0_12_weight,
    const Scalar matches_0_12_inverse_range_prior,
    const Scalar matches_0_12_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_13_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_13_target_coords, const Scalar matches_0_13_weight,
    const Scalar matches_0_13_inverse_range_prior,
    const Scalar matches_0_13_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_14_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_14_target_coords, const Scalar matches_0_14_weight,
    const Scalar matches_0_14_inverse_range_prior,
    const Scalar matches_0_14_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_15_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_15_target_coords, const Scalar matches_0_15_weight,
    const Scalar matches_0_15_inverse_range_prior,
    const Scalar matches_0_15_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_16_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_16_target_coords, const Scalar matches_0_16_weight,
    const Scalar matches_0_16_inverse_range_prior,
    const Scalar matches_0_16_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_17_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_17_target_coords, const Scalar matches_0_17_weight,
    const Scalar matches_0_17_inverse_range_prior,
    const Scalar matches_0_17_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_18_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_18_target_coords, const Scalar matches_0_18_weight,
    const Scalar matches_0_18_inverse_range_prior,
    const Scalar matches_0_18_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_19_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_19_target_coords, const Scalar matches_0_19_weight,
    const Scalar matches_0_19_inverse_range_prior,
    const Scalar matches_0_19_inverse_range_prior_sigma, const Scalar landmarks_0_,
    const Scalar landmarks_1_, const Scalar landmarks_2_, const Scalar landmarks_3_,
    const Scalar landmarks_4_, const Scalar landmarks_5_, const Scalar landmarks_6_,
    const Scalar landmarks_7_, const Scalar landmarks_8_, const Scalar landmarks_9_,
    const Scalar landmarks_10_, const Scalar landmarks_11_, const Scalar landmarks_12_,
    const Scalar landmarks_13_, const Scalar landmarks_14_, const Scalar landmarks_15_,
    const Scalar landmarks_16_, const Scalar landmarks_17_, const Scalar landmarks_18_,
    const Scalar landmarks_19_, const Scalar costs_reprojection_error_gnc_scale,
    const Scalar costs_reprojection_error_gnc_mu, const Scalar epsilon,
    Eigen::Matrix<Scalar, 72, 1>* const b = nullptr,
    Eigen::Matrix<Scalar, 72, 26>* const J = nullptr,
    Eigen::Matrix<Scalar, 26, 26>* const H = nullptr,
    Eigen::Matrix<Scalar, 26, 1>* const Jtb = nullptr) {
  // Total ops: 14535

  // Input arrays
  const Eigen::Matrix<Scalar, 7, 1>& _views_0_pose = views_0_pose.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _views_1_pose = views_1_pose.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _priors_0_0_target_T_src = priors_0_0_target_T_src.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _priors_0_1_target_T_src = priors_0_1_target_T_src.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _priors_1_0_target_T_src = priors_1_0_target_T_src.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _priors_1_1_target_T_src = priors_1_1_target_T_src.Data();

  // Intermediate terms (2861)
  const Scalar _tmp0 = -2 * std::pow(_views_0_pose[2], Scalar(2));
  const Scalar _tmp1 = 1 - 2 * std::pow(_views_0_pose[1], Scalar(2));
  const Scalar _tmp2 = _tmp0 + _tmp1;
  const Scalar _tmp3 = 2 * _views_0_pose[1];
  const Scalar _tmp4 = _tmp3 * _views_0_pose[0];
  const Scalar _tmp5 = 2 * _views_0_pose[2] * _views_0_pose[3];
  const Scalar _tmp6 = _tmp4 + _tmp5;
  const Scalar _tmp7 = _tmp3 * _views_0_pose[3];
  const Scalar _tmp8 = 2 * _views_0_pose[0];
  const Scalar _tmp9 = _tmp8 * _views_0_pose[2];
  const Scalar _tmp10 = -_tmp7 + _tmp9;
  const Scalar _tmp11 = -_priors_0_1_target_T_src[4] - _tmp10 * _views_0_pose[6] +
                        _tmp10 * _views_1_pose[6] - _tmp2 * _views_0_pose[4] +
                        _tmp2 * _views_1_pose[4] - _tmp6 * _views_0_pose[5] +
                        _tmp6 * _views_1_pose[5];
  const Scalar _tmp12 = _views_0_pose[0] * _views_1_pose[0] + _views_0_pose[1] * _views_1_pose[1] +
                        _views_0_pose[2] * _views_1_pose[2] + _views_0_pose[3] * _views_1_pose[3];
  const Scalar _tmp13 = _views_0_pose[1] * _views_1_pose[0];
  const Scalar _tmp14 = _views_0_pose[0] * _views_1_pose[1];
  const Scalar _tmp15 = _views_0_pose[2] * _views_1_pose[3];
  const Scalar _tmp16 = _views_0_pose[3] * _views_1_pose[2];
  const Scalar _tmp17 = _tmp13 - _tmp14 - _tmp15 + _tmp16;
  const Scalar _tmp18 = _views_0_pose[3] * _views_1_pose[0];
  const Scalar _tmp19 = _views_0_pose[2] * _views_1_pose[1];
  const Scalar _tmp20 = _views_0_pose[0] * _views_1_pose[3];
  const Scalar _tmp21 = _views_0_pose[1] * _views_1_pose[2];
  const Scalar _tmp22 = _tmp18 + _tmp19 - _tmp20 - _tmp21;
  const Scalar _tmp23 = _views_0_pose[2] * _views_1_pose[0];
  const Scalar _tmp24 = _views_0_pose[3] * _views_1_pose[1];
  const Scalar _tmp25 = _views_0_pose[1] * _views_1_pose[3];
  const Scalar _tmp26 = _views_0_pose[0] * _views_1_pose[2];
  const Scalar _tmp27 = -_tmp23 + _tmp24 - _tmp25 + _tmp26;
  const Scalar _tmp28 = -_priors_0_1_target_T_src[0] * _tmp27 +
                        _priors_0_1_target_T_src[1] * _tmp22 -
                        _priors_0_1_target_T_src[2] * _tmp12 + _priors_0_1_target_T_src[3] * _tmp17;
  const Scalar _tmp29 = _priors_0_1_target_T_src[0] * _tmp22 +
                        _priors_0_1_target_T_src[1] * _tmp27 +
                        _priors_0_1_target_T_src[2] * _tmp17 + _priors_0_1_target_T_src[3] * _tmp12;
  const Scalar _tmp30 = (((_tmp29) > 0) - ((_tmp29) < 0));
  const Scalar _tmp31 = 2 * std::min<Scalar>(0, _tmp30) + 1;
  const Scalar _tmp32 = std::fabs(_tmp29);
  const Scalar _tmp33 = -epsilon;
  const Scalar _tmp34 = _tmp33 + 1;
  const Scalar _tmp35 = std::min<Scalar>(_tmp32, _tmp34);
  const Scalar _tmp36 = 1 - std::pow(_tmp35, Scalar(2));
  const Scalar _tmp37 = std::acos(_tmp35);
  const Scalar _tmp38 = 2 * _tmp37 / std::sqrt(_tmp36);
  const Scalar _tmp39 = _tmp31 * _tmp38;
  const Scalar _tmp40 = _tmp39 * priors_0_1_sqrt_info(0, 2);
  const Scalar _tmp41 = -_priors_0_1_target_T_src[0] * _tmp12 -
                        _priors_0_1_target_T_src[1] * _tmp17 +
                        _priors_0_1_target_T_src[2] * _tmp27 + _priors_0_1_target_T_src[3] * _tmp22;
  const Scalar _tmp42 = _tmp39 * priors_0_1_sqrt_info(0, 0);
  const Scalar _tmp43 = _priors_0_1_target_T_src[0] * _tmp17 -
                        _priors_0_1_target_T_src[1] * _tmp12 -
                        _priors_0_1_target_T_src[2] * _tmp22 + _priors_0_1_target_T_src[3] * _tmp27;
  const Scalar _tmp44 = _tmp39 * priors_0_1_sqrt_info(0, 1);
  const Scalar _tmp45 = _tmp8 * _views_0_pose[3];
  const Scalar _tmp46 = _tmp3 * _views_0_pose[2];
  const Scalar _tmp47 = _tmp45 + _tmp46;
  const Scalar _tmp48 = -2 * std::pow(_views_0_pose[0], Scalar(2));
  const Scalar _tmp49 = _tmp0 + _tmp48 + 1;
  const Scalar _tmp50 = _tmp4 - _tmp5;
  const Scalar _tmp51 = -_priors_0_1_target_T_src[5] - _tmp47 * _views_0_pose[6] +
                        _tmp47 * _views_1_pose[6] - _tmp49 * _views_0_pose[5] +
                        _tmp49 * _views_1_pose[5] - _tmp50 * _views_0_pose[4] +
                        _tmp50 * _views_1_pose[4];
  const Scalar _tmp52 = -_tmp45 + _tmp46;
  const Scalar _tmp53 = _tmp1 + _tmp48;
  const Scalar _tmp54 = _tmp7 + _tmp9;
  const Scalar _tmp55 = -_priors_0_1_target_T_src[6] - _tmp52 * _views_0_pose[5] +
                        _tmp52 * _views_1_pose[5] - _tmp53 * _views_0_pose[6] +
                        _tmp53 * _views_1_pose[6] - _tmp54 * _views_0_pose[4] +
                        _tmp54 * _views_1_pose[4];
  const Scalar _tmp56 = _tmp11 * priors_0_1_sqrt_info(0, 3) + _tmp28 * _tmp40 + _tmp41 * _tmp42 +
                        _tmp43 * _tmp44 + _tmp51 * priors_0_1_sqrt_info(0, 4) +
                        _tmp55 * priors_0_1_sqrt_info(0, 5);
  const Scalar _tmp57 = _tmp28 * _tmp39;
  const Scalar _tmp58 = _tmp39 * _tmp43;
  const Scalar _tmp59 = _tmp39 * _tmp41;
  const Scalar _tmp60 = _tmp11 * priors_0_1_sqrt_info(1, 3) + _tmp51 * priors_0_1_sqrt_info(1, 4) +
                        _tmp55 * priors_0_1_sqrt_info(1, 5) + _tmp57 * priors_0_1_sqrt_info(1, 2) +
                        _tmp58 * priors_0_1_sqrt_info(1, 1) + _tmp59 * priors_0_1_sqrt_info(1, 0);
  const Scalar _tmp61 = _tmp11 * priors_0_1_sqrt_info(2, 3) + _tmp51 * priors_0_1_sqrt_info(2, 4) +
                        _tmp55 * priors_0_1_sqrt_info(2, 5) + _tmp57 * priors_0_1_sqrt_info(2, 2) +
                        _tmp58 * priors_0_1_sqrt_info(2, 1) + _tmp59 * priors_0_1_sqrt_info(2, 0);
  const Scalar _tmp62 = _tmp11 * priors_0_1_sqrt_info(3, 3) + _tmp51 * priors_0_1_sqrt_info(3, 4) +
                        _tmp55 * priors_0_1_sqrt_info(3, 5) + _tmp57 * priors_0_1_sqrt_info(3, 2) +
                        _tmp58 * priors_0_1_sqrt_info(3, 1) + _tmp59 * priors_0_1_sqrt_info(3, 0);
  const Scalar _tmp63 = _tmp11 * priors_0_1_sqrt_info(4, 3) + _tmp51 * priors_0_1_sqrt_info(4, 4) +
                        _tmp55 * priors_0_1_sqrt_info(4, 5) + _tmp57 * priors_0_1_sqrt_info(4, 2) +
                        _tmp58 * priors_0_1_sqrt_info(4, 1) + _tmp59 * priors_0_1_sqrt_info(4, 0);
  const Scalar _tmp64 = _tmp31 * priors_0_1_sqrt_info(5, 0);
  const Scalar _tmp65 = _tmp38 * _tmp64;
  const Scalar _tmp66 = _tmp11 * priors_0_1_sqrt_info(5, 3) + _tmp41 * _tmp65 +
                        _tmp51 * priors_0_1_sqrt_info(5, 4) + _tmp55 * priors_0_1_sqrt_info(5, 5) +
                        _tmp57 * priors_0_1_sqrt_info(5, 2) + _tmp58 * priors_0_1_sqrt_info(5, 1);
  const Scalar _tmp67 = 2 * _views_1_pose[3];
  const Scalar _tmp68 = _tmp67 * _views_1_pose[1];
  const Scalar _tmp69 = -_tmp68;
  const Scalar _tmp70 = 2 * _views_1_pose[0];
  const Scalar _tmp71 = _tmp70 * _views_1_pose[2];
  const Scalar _tmp72 = _tmp69 + _tmp71;
  const Scalar _tmp73 = _tmp70 * _views_1_pose[1];
  const Scalar _tmp74 = _tmp67 * _views_1_pose[2];
  const Scalar _tmp75 = _tmp73 + _tmp74;
  const Scalar _tmp76 = 2 * std::pow(_views_1_pose[2], Scalar(2));
  const Scalar _tmp77 = -_tmp76;
  const Scalar _tmp78 = 2 * std::pow(_views_1_pose[1], Scalar(2));
  const Scalar _tmp79 = 1 - _tmp78;
  const Scalar _tmp80 = _tmp77 + _tmp79;
  const Scalar _tmp81 = -_priors_1_0_target_T_src[4] + _tmp72 * _views_0_pose[6] -
                        _tmp72 * _views_1_pose[6] + _tmp75 * _views_0_pose[5] -
                        _tmp75 * _views_1_pose[5] + _tmp80 * _views_0_pose[4] -
                        _tmp80 * _views_1_pose[4];
  const Scalar _tmp82 = _tmp70 * _views_1_pose[3];
  const Scalar _tmp83 = 2 * _views_1_pose[1];
  const Scalar _tmp84 = _tmp83 * _views_1_pose[2];
  const Scalar _tmp85 = _tmp82 + _tmp84;
  const Scalar _tmp86 = -_tmp74;
  const Scalar _tmp87 = _tmp73 + _tmp86;
  const Scalar _tmp88 = 2 * std::pow(_views_1_pose[0], Scalar(2));
  const Scalar _tmp89 = -_tmp88;
  const Scalar _tmp90 = _tmp77 + _tmp89 + 1;
  const Scalar _tmp91 = -_priors_1_0_target_T_src[5] + _tmp85 * _views_0_pose[6] -
                        _tmp85 * _views_1_pose[6] + _tmp87 * _views_0_pose[4] -
                        _tmp87 * _views_1_pose[4] + _tmp90 * _views_0_pose[5] -
                        _tmp90 * _views_1_pose[5];
  const Scalar _tmp92 = -_tmp18 - _tmp19 + _tmp20 + _tmp21;
  const Scalar _tmp93 = -_tmp13 + _tmp14 + _tmp15 - _tmp16;
  const Scalar _tmp94 = _tmp23 - _tmp24 + _tmp25 - _tmp26;
  const Scalar _tmp95 = -_priors_1_0_target_T_src[0] * _tmp12 -
                        _priors_1_0_target_T_src[1] * _tmp93 +
                        _priors_1_0_target_T_src[2] * _tmp94 + _priors_1_0_target_T_src[3] * _tmp92;
  const Scalar _tmp96 = _priors_1_0_target_T_src[0] * _tmp92 +
                        _priors_1_0_target_T_src[1] * _tmp94 +
                        _priors_1_0_target_T_src[2] * _tmp93 + _priors_1_0_target_T_src[3] * _tmp12;
  const Scalar _tmp97 = std::fabs(_tmp96);
  const Scalar _tmp98 = std::min<Scalar>(_tmp34, _tmp97);
  const Scalar _tmp99 = 1 - std::pow(_tmp98, Scalar(2));
  const Scalar _tmp100 = 2 / std::sqrt(_tmp99);
  const Scalar _tmp101 = (((_tmp96) > 0) - ((_tmp96) < 0));
  const Scalar _tmp102 = 2 * std::min<Scalar>(0, _tmp101) + 1;
  const Scalar _tmp103 = std::acos(_tmp98);
  const Scalar _tmp104 = _tmp102 * _tmp103;
  const Scalar _tmp105 = _tmp100 * _tmp104;
  const Scalar _tmp106 = _tmp105 * _tmp95;
  const Scalar _tmp107 =
      _priors_1_0_target_T_src[0] * _tmp93 - _priors_1_0_target_T_src[1] * _tmp12 -
      _priors_1_0_target_T_src[2] * _tmp92 + _priors_1_0_target_T_src[3] * _tmp94;
  const Scalar _tmp108 = _tmp105 * _tmp107;
  const Scalar _tmp109 =
      -_priors_1_0_target_T_src[0] * _tmp94 + _priors_1_0_target_T_src[1] * _tmp92 -
      _priors_1_0_target_T_src[2] * _tmp12 + _priors_1_0_target_T_src[3] * _tmp93;
  const Scalar _tmp110 = _tmp105 * _tmp109;
  const Scalar _tmp111 = -_tmp82;
  const Scalar _tmp112 = _tmp111 + _tmp84;
  const Scalar _tmp113 = _tmp68 + _tmp71;
  const Scalar _tmp114 = _tmp79 + _tmp89;
  const Scalar _tmp115 = -_priors_1_0_target_T_src[6] + _tmp112 * _views_0_pose[5] -
                         _tmp112 * _views_1_pose[5] + _tmp113 * _views_0_pose[4] -
                         _tmp113 * _views_1_pose[4] + _tmp114 * _views_0_pose[6] -
                         _tmp114 * _views_1_pose[6];
  const Scalar _tmp116 =
      _tmp106 * priors_1_0_sqrt_info(0, 0) + _tmp108 * priors_1_0_sqrt_info(0, 1) +
      _tmp110 * priors_1_0_sqrt_info(0, 2) + _tmp115 * priors_1_0_sqrt_info(0, 5) +
      _tmp81 * priors_1_0_sqrt_info(0, 3) + _tmp91 * priors_1_0_sqrt_info(0, 4);
  const Scalar _tmp117 = _tmp102 * priors_1_0_sqrt_info(1, 1);
  const Scalar _tmp118 = _tmp103 * _tmp117;
  const Scalar _tmp119 = _tmp100 * _tmp118;
  const Scalar _tmp120 = _tmp106 * priors_1_0_sqrt_info(1, 0) + _tmp107 * _tmp119 +
                         _tmp110 * priors_1_0_sqrt_info(1, 2) +
                         _tmp115 * priors_1_0_sqrt_info(1, 5) +
                         _tmp81 * priors_1_0_sqrt_info(1, 3) + _tmp91 * priors_1_0_sqrt_info(1, 4);
  const Scalar _tmp121 =
      _tmp106 * priors_1_0_sqrt_info(2, 0) + _tmp108 * priors_1_0_sqrt_info(2, 1) +
      _tmp110 * priors_1_0_sqrt_info(2, 2) + _tmp115 * priors_1_0_sqrt_info(2, 5) +
      _tmp81 * priors_1_0_sqrt_info(2, 3) + _tmp91 * priors_1_0_sqrt_info(2, 4);
  const Scalar _tmp122 =
      _tmp106 * priors_1_0_sqrt_info(3, 0) + _tmp108 * priors_1_0_sqrt_info(3, 1) +
      _tmp110 * priors_1_0_sqrt_info(3, 2) + _tmp115 * priors_1_0_sqrt_info(3, 5) +
      _tmp81 * priors_1_0_sqrt_info(3, 3) + _tmp91 * priors_1_0_sqrt_info(3, 4);
  const Scalar _tmp123 =
      _tmp106 * priors_1_0_sqrt_info(4, 0) + _tmp108 * priors_1_0_sqrt_info(4, 1) +
      _tmp110 * priors_1_0_sqrt_info(4, 2) + _tmp115 * priors_1_0_sqrt_info(4, 5) +
      _tmp81 * priors_1_0_sqrt_info(4, 3) + _tmp91 * priors_1_0_sqrt_info(4, 4);
  const Scalar _tmp124 =
      _tmp106 * priors_1_0_sqrt_info(5, 0) + _tmp108 * priors_1_0_sqrt_info(5, 1) +
      _tmp110 * priors_1_0_sqrt_info(5, 2) + _tmp115 * priors_1_0_sqrt_info(5, 5) +
      _tmp81 * priors_1_0_sqrt_info(5, 3) + _tmp91 * priors_1_0_sqrt_info(5, 4);
  const Scalar _tmp125 = -views_0_calibration(2, 0);
  const Scalar _tmp126 = _tmp125 + matches_0_0_source_coords(0, 0);
  const Scalar _tmp127 = std::pow(views_0_calibration(0, 0), Scalar(-2));
  const Scalar _tmp128 = -views_0_calibration(3, 0);
  const Scalar _tmp129 = _tmp128 + matches_0_0_source_coords(1, 0);
  const Scalar _tmp130 = std::pow(views_0_calibration(1, 0), Scalar(-2));
  const Scalar _tmp131 = std::pow(
      Scalar(std::pow(_tmp126, Scalar(2)) * _tmp127 + std::pow(_tmp129, Scalar(2)) * _tmp130 + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp132 = _tmp126 * _tmp131;
  const Scalar _tmp133 = Scalar(1.0) / (views_0_calibration(0, 0));
  const Scalar _tmp134 = _tmp10 * _tmp133;
  const Scalar _tmp135 = Scalar(1.0) / (views_0_calibration(1, 0));
  const Scalar _tmp136 = _tmp135 * _tmp47;
  const Scalar _tmp137 = _tmp129 * _tmp131;
  const Scalar _tmp138 = _tmp131 * _tmp53 + _tmp132 * _tmp134 + _tmp136 * _tmp137;
  const Scalar _tmp139 = _views_0_pose[4] - _views_1_pose[4];
  const Scalar _tmp140 = _views_0_pose[5] - _views_1_pose[5];
  const Scalar _tmp141 = _views_0_pose[6] - _views_1_pose[6];
  const Scalar _tmp142 = _tmp139 * _tmp80 + _tmp140 * _tmp75 + _tmp141 * _tmp72;
  const Scalar _tmp143 = _tmp133 * _tmp6;
  const Scalar _tmp144 = _tmp135 * _tmp49;
  const Scalar _tmp145 = _tmp131 * _tmp52 + _tmp132 * _tmp143 + _tmp137 * _tmp144;
  const Scalar _tmp146 = _tmp135 * _tmp50;
  const Scalar _tmp147 = _tmp133 * _tmp2;
  const Scalar _tmp148 = _tmp131 * _tmp54 + _tmp132 * _tmp147 + _tmp137 * _tmp146;
  const Scalar _tmp149 =
      _tmp138 * _tmp72 + _tmp142 * landmarks_0_ + _tmp145 * _tmp75 + _tmp148 * _tmp80;
  const Scalar _tmp150 = _tmp112 * _tmp140 + _tmp113 * _tmp139 + _tmp114 * _tmp141;
  const Scalar _tmp151 =
      _tmp112 * _tmp145 + _tmp113 * _tmp148 + _tmp114 * _tmp138 + _tmp150 * landmarks_0_;
  const Scalar _tmp152 = std::fabs(_tmp151);
  const Scalar _tmp153 = std::max<Scalar>(_tmp152, epsilon);
  const Scalar _tmp154 = Scalar(1.0) / (_tmp153);
  const Scalar _tmp155 = _tmp154 * views_1_calibration(0, 0);
  const Scalar _tmp156 =
      _tmp149 * _tmp155 - matches_0_0_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp157 = _tmp139 * _tmp87 + _tmp140 * _tmp90 + _tmp141 * _tmp85;
  const Scalar _tmp158 =
      _tmp138 * _tmp85 + _tmp145 * _tmp90 + _tmp148 * _tmp87 + _tmp157 * landmarks_0_;
  const Scalar _tmp159 = _tmp154 * views_1_calibration(1, 0);
  const Scalar _tmp160 =
      _tmp158 * _tmp159 - matches_0_0_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp161 = std::pow(_tmp156, Scalar(2)) + std::pow(_tmp160, Scalar(2)) + epsilon;
  const Scalar _tmp162 = std::pow(_tmp161, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp163 = std::pow(costs_reprojection_error_gnc_scale, Scalar(-2));
  const Scalar _tmp164 = Scalar(1.0) / (-costs_reprojection_error_gnc_mu + epsilon + 1);
  const Scalar _tmp165 = epsilon + std::fabs(_tmp164);
  const Scalar _tmp166 = _tmp163 / _tmp165;
  const Scalar _tmp167 = _tmp161 * _tmp166 + 1;
  const Scalar _tmp168 = 2 - _tmp164;
  const Scalar _tmp169 =
      _tmp168 + epsilon * (2 * std::min<Scalar>(0, (((_tmp168) > 0) - ((_tmp168) < 0))) + 1);
  const Scalar _tmp170 = (Scalar(1) / Scalar(2)) * _tmp169;
  const Scalar _tmp171 = 2 * _tmp165 / _tmp169;
  const Scalar _tmp172 = std::sqrt(_tmp171 * (std::pow(_tmp167, _tmp170) - 1));
  const Scalar _tmp173 = (((_tmp151) > 0) - ((_tmp151) < 0));
  const Scalar _tmp174 = std::sqrt(matches_0_0_weight) * std::sqrt(std::max<Scalar>(0, _tmp173));
  const Scalar _tmp175 = _tmp172 * _tmp174;
  const Scalar _tmp176 = _tmp162 * _tmp175;
  const Scalar _tmp177 = _tmp156 * _tmp176;
  const Scalar _tmp178 = _tmp160 * _tmp176;
  const Scalar _tmp179 = _tmp125 + matches_0_1_source_coords(0, 0);
  const Scalar _tmp180 = _tmp128 + matches_0_1_source_coords(1, 0);
  const Scalar _tmp181 = std::pow(
      Scalar(_tmp127 * std::pow(_tmp179, Scalar(2)) + _tmp130 * std::pow(_tmp180, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp182 = _tmp180 * _tmp181;
  const Scalar _tmp183 = _tmp179 * _tmp181;
  const Scalar _tmp184 = _tmp146 * _tmp182 + _tmp147 * _tmp183 + _tmp181 * _tmp54;
  const Scalar _tmp185 = _tmp134 * _tmp183 + _tmp136 * _tmp182 + _tmp181 * _tmp53;
  const Scalar _tmp186 = _tmp143 * _tmp183 + _tmp144 * _tmp182 + _tmp181 * _tmp52;
  const Scalar _tmp187 =
      _tmp142 * landmarks_1_ + _tmp184 * _tmp80 + _tmp185 * _tmp72 + _tmp186 * _tmp75;
  const Scalar _tmp188 =
      _tmp112 * _tmp186 + _tmp113 * _tmp184 + _tmp114 * _tmp185 + _tmp150 * landmarks_1_;
  const Scalar _tmp189 = std::fabs(_tmp188);
  const Scalar _tmp190 = std::max<Scalar>(_tmp189, epsilon);
  const Scalar _tmp191 = Scalar(1.0) / (_tmp190);
  const Scalar _tmp192 = _tmp191 * views_1_calibration(0, 0);
  const Scalar _tmp193 =
      _tmp187 * _tmp192 - matches_0_1_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp194 =
      _tmp157 * landmarks_1_ + _tmp184 * _tmp87 + _tmp185 * _tmp85 + _tmp186 * _tmp90;
  const Scalar _tmp195 = _tmp191 * views_1_calibration(1, 0);
  const Scalar _tmp196 =
      _tmp194 * _tmp195 - matches_0_1_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp197 = std::pow(_tmp193, Scalar(2)) + std::pow(_tmp196, Scalar(2)) + epsilon;
  const Scalar _tmp198 = std::pow(_tmp197, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp199 = _tmp166 * _tmp197 + 1;
  const Scalar _tmp200 = std::sqrt(_tmp171 * (std::pow(_tmp199, _tmp170) - 1));
  const Scalar _tmp201 = (((_tmp188) > 0) - ((_tmp188) < 0));
  const Scalar _tmp202 = std::sqrt(matches_0_1_weight) * std::sqrt(std::max<Scalar>(0, _tmp201));
  const Scalar _tmp203 = _tmp200 * _tmp202;
  const Scalar _tmp204 = _tmp198 * _tmp203;
  const Scalar _tmp205 = _tmp193 * _tmp204;
  const Scalar _tmp206 = _tmp196 * _tmp204;
  const Scalar _tmp207 = _tmp128 + matches_0_2_source_coords(1, 0);
  const Scalar _tmp208 = _tmp125 + matches_0_2_source_coords(0, 0);
  const Scalar _tmp209 = std::pow(
      Scalar(_tmp127 * std::pow(_tmp208, Scalar(2)) + _tmp130 * std::pow(_tmp207, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp210 = _tmp208 * _tmp209;
  const Scalar _tmp211 = _tmp207 * _tmp209;
  const Scalar _tmp212 = _tmp143 * _tmp210 + _tmp144 * _tmp211 + _tmp209 * _tmp52;
  const Scalar _tmp213 = _tmp146 * _tmp211 + _tmp147 * _tmp210 + _tmp209 * _tmp54;
  const Scalar _tmp214 = _tmp134 * _tmp210 + _tmp136 * _tmp211 + _tmp209 * _tmp53;
  const Scalar _tmp215 =
      _tmp142 * landmarks_2_ + _tmp212 * _tmp75 + _tmp213 * _tmp80 + _tmp214 * _tmp72;
  const Scalar _tmp216 =
      _tmp112 * _tmp212 + _tmp113 * _tmp213 + _tmp114 * _tmp214 + _tmp150 * landmarks_2_;
  const Scalar _tmp217 = std::fabs(_tmp216);
  const Scalar _tmp218 = std::max<Scalar>(_tmp217, epsilon);
  const Scalar _tmp219 = Scalar(1.0) / (_tmp218);
  const Scalar _tmp220 = _tmp219 * views_1_calibration(0, 0);
  const Scalar _tmp221 =
      _tmp215 * _tmp220 - matches_0_2_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp222 =
      _tmp157 * landmarks_2_ + _tmp212 * _tmp90 + _tmp213 * _tmp87 + _tmp214 * _tmp85;
  const Scalar _tmp223 = _tmp219 * views_1_calibration(1, 0);
  const Scalar _tmp224 =
      _tmp222 * _tmp223 - matches_0_2_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp225 = std::pow(_tmp221, Scalar(2)) + std::pow(_tmp224, Scalar(2)) + epsilon;
  const Scalar _tmp226 = std::pow(_tmp225, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp227 = _tmp166 * _tmp225 + 1;
  const Scalar _tmp228 = std::sqrt(_tmp171 * (std::pow(_tmp227, _tmp170) - 1));
  const Scalar _tmp229 = (((_tmp216) > 0) - ((_tmp216) < 0));
  const Scalar _tmp230 = std::sqrt(matches_0_2_weight) * std::sqrt(std::max<Scalar>(0, _tmp229));
  const Scalar _tmp231 = _tmp228 * _tmp230;
  const Scalar _tmp232 = _tmp226 * _tmp231;
  const Scalar _tmp233 = _tmp221 * _tmp232;
  const Scalar _tmp234 = _tmp224 * _tmp232;
  const Scalar _tmp235 = _tmp125 + matches_0_3_source_coords(0, 0);
  const Scalar _tmp236 = _tmp128 + matches_0_3_source_coords(1, 0);
  const Scalar _tmp237 = std::pow(
      Scalar(_tmp127 * std::pow(_tmp235, Scalar(2)) + _tmp130 * std::pow(_tmp236, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp238 = _tmp236 * _tmp237;
  const Scalar _tmp239 = _tmp235 * _tmp237;
  const Scalar _tmp240 = _tmp134 * _tmp239 + _tmp136 * _tmp238 + _tmp237 * _tmp53;
  const Scalar _tmp241 = _tmp143 * _tmp239 + _tmp144 * _tmp238 + _tmp237 * _tmp52;
  const Scalar _tmp242 = _tmp146 * _tmp238 + _tmp147 * _tmp239 + _tmp237 * _tmp54;
  const Scalar _tmp243 =
      _tmp142 * landmarks_3_ + _tmp240 * _tmp72 + _tmp241 * _tmp75 + _tmp242 * _tmp80;
  const Scalar _tmp244 =
      _tmp112 * _tmp241 + _tmp113 * _tmp242 + _tmp114 * _tmp240 + _tmp150 * landmarks_3_;
  const Scalar _tmp245 = std::fabs(_tmp244);
  const Scalar _tmp246 = std::max<Scalar>(_tmp245, epsilon);
  const Scalar _tmp247 = Scalar(1.0) / (_tmp246);
  const Scalar _tmp248 = _tmp247 * views_1_calibration(0, 0);
  const Scalar _tmp249 =
      _tmp243 * _tmp248 - matches_0_3_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp250 =
      _tmp157 * landmarks_3_ + _tmp240 * _tmp85 + _tmp241 * _tmp90 + _tmp242 * _tmp87;
  const Scalar _tmp251 = _tmp247 * views_1_calibration(1, 0);
  const Scalar _tmp252 =
      _tmp250 * _tmp251 - matches_0_3_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp253 = std::pow(_tmp249, Scalar(2)) + std::pow(_tmp252, Scalar(2)) + epsilon;
  const Scalar _tmp254 = std::pow(_tmp253, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp255 = (((_tmp244) > 0) - ((_tmp244) < 0));
  const Scalar _tmp256 = std::sqrt(matches_0_3_weight) * std::sqrt(std::max<Scalar>(0, _tmp255));
  const Scalar _tmp257 = _tmp166 * _tmp253 + 1;
  const Scalar _tmp258 = std::sqrt(_tmp171 * (std::pow(_tmp257, _tmp170) - 1));
  const Scalar _tmp259 = _tmp256 * _tmp258;
  const Scalar _tmp260 = _tmp254 * _tmp259;
  const Scalar _tmp261 = _tmp249 * _tmp260;
  const Scalar _tmp262 = _tmp252 * _tmp260;
  const Scalar _tmp263 = _tmp128 + matches_0_4_source_coords(1, 0);
  const Scalar _tmp264 = _tmp125 + matches_0_4_source_coords(0, 0);
  const Scalar _tmp265 = std::pow(
      Scalar(_tmp127 * std::pow(_tmp264, Scalar(2)) + _tmp130 * std::pow(_tmp263, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp266 = _tmp264 * _tmp265;
  const Scalar _tmp267 = _tmp263 * _tmp265;
  const Scalar _tmp268 = _tmp134 * _tmp266 + _tmp136 * _tmp267 + _tmp265 * _tmp53;
  const Scalar _tmp269 = _tmp143 * _tmp266 + _tmp144 * _tmp267 + _tmp265 * _tmp52;
  const Scalar _tmp270 = _tmp146 * _tmp267 + _tmp147 * _tmp266 + _tmp265 * _tmp54;
  const Scalar _tmp271 =
      _tmp142 * landmarks_4_ + _tmp268 * _tmp72 + _tmp269 * _tmp75 + _tmp270 * _tmp80;
  const Scalar _tmp272 =
      _tmp112 * _tmp269 + _tmp113 * _tmp270 + _tmp114 * _tmp268 + _tmp150 * landmarks_4_;
  const Scalar _tmp273 = std::fabs(_tmp272);
  const Scalar _tmp274 = std::max<Scalar>(_tmp273, epsilon);
  const Scalar _tmp275 = Scalar(1.0) / (_tmp274);
  const Scalar _tmp276 = _tmp275 * views_1_calibration(0, 0);
  const Scalar _tmp277 =
      _tmp271 * _tmp276 - matches_0_4_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp278 =
      _tmp157 * landmarks_4_ + _tmp268 * _tmp85 + _tmp269 * _tmp90 + _tmp270 * _tmp87;
  const Scalar _tmp279 = _tmp275 * views_1_calibration(1, 0);
  const Scalar _tmp280 =
      _tmp278 * _tmp279 - matches_0_4_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp281 = std::pow(_tmp277, Scalar(2)) + std::pow(_tmp280, Scalar(2)) + epsilon;
  const Scalar _tmp282 = std::pow(_tmp281, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp283 = _tmp166 * _tmp281 + 1;
  const Scalar _tmp284 = std::sqrt(_tmp171 * (std::pow(_tmp283, _tmp170) - 1));
  const Scalar _tmp285 = (((_tmp272) > 0) - ((_tmp272) < 0));
  const Scalar _tmp286 = std::sqrt(matches_0_4_weight) * std::sqrt(std::max<Scalar>(0, _tmp285));
  const Scalar _tmp287 = _tmp284 * _tmp286;
  const Scalar _tmp288 = _tmp282 * _tmp287;
  const Scalar _tmp289 = _tmp277 * _tmp288;
  const Scalar _tmp290 = _tmp280 * _tmp288;
  const Scalar _tmp291 = _tmp128 + matches_0_5_source_coords(1, 0);
  const Scalar _tmp292 = _tmp125 + matches_0_5_source_coords(0, 0);
  const Scalar _tmp293 = std::pow(
      Scalar(_tmp127 * std::pow(_tmp292, Scalar(2)) + _tmp130 * std::pow(_tmp291, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp294 = _tmp292 * _tmp293;
  const Scalar _tmp295 = _tmp291 * _tmp293;
  const Scalar _tmp296 = _tmp143 * _tmp294 + _tmp144 * _tmp295 + _tmp293 * _tmp52;
  const Scalar _tmp297 = _tmp146 * _tmp295 + _tmp147 * _tmp294 + _tmp293 * _tmp54;
  const Scalar _tmp298 = _tmp134 * _tmp294 + _tmp136 * _tmp295 + _tmp293 * _tmp53;
  const Scalar _tmp299 =
      _tmp142 * landmarks_5_ + _tmp296 * _tmp75 + _tmp297 * _tmp80 + _tmp298 * _tmp72;
  const Scalar _tmp300 =
      _tmp112 * _tmp296 + _tmp113 * _tmp297 + _tmp114 * _tmp298 + _tmp150 * landmarks_5_;
  const Scalar _tmp301 = std::fabs(_tmp300);
  const Scalar _tmp302 = std::max<Scalar>(_tmp301, epsilon);
  const Scalar _tmp303 = Scalar(1.0) / (_tmp302);
  const Scalar _tmp304 = _tmp303 * views_1_calibration(0, 0);
  const Scalar _tmp305 =
      _tmp299 * _tmp304 - matches_0_5_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp306 =
      _tmp157 * landmarks_5_ + _tmp296 * _tmp90 + _tmp297 * _tmp87 + _tmp298 * _tmp85;
  const Scalar _tmp307 = _tmp303 * views_1_calibration(1, 0);
  const Scalar _tmp308 =
      _tmp306 * _tmp307 - matches_0_5_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp309 = std::pow(_tmp305, Scalar(2)) + std::pow(_tmp308, Scalar(2)) + epsilon;
  const Scalar _tmp310 = std::pow(_tmp309, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp311 = (((_tmp300) > 0) - ((_tmp300) < 0));
  const Scalar _tmp312 = std::sqrt(matches_0_5_weight) * std::sqrt(std::max<Scalar>(0, _tmp311));
  const Scalar _tmp313 = _tmp166 * _tmp309 + 1;
  const Scalar _tmp314 = std::sqrt(_tmp171 * (std::pow(_tmp313, _tmp170) - 1));
  const Scalar _tmp315 = _tmp312 * _tmp314;
  const Scalar _tmp316 = _tmp310 * _tmp315;
  const Scalar _tmp317 = _tmp305 * _tmp316;
  const Scalar _tmp318 = _tmp308 * _tmp316;
  const Scalar _tmp319 = _tmp125 + matches_0_6_source_coords(0, 0);
  const Scalar _tmp320 = _tmp128 + matches_0_6_source_coords(1, 0);
  const Scalar _tmp321 = std::pow(
      Scalar(_tmp127 * std::pow(_tmp319, Scalar(2)) + _tmp130 * std::pow(_tmp320, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp322 = _tmp320 * _tmp321;
  const Scalar _tmp323 = _tmp319 * _tmp321;
  const Scalar _tmp324 = _tmp146 * _tmp322 + _tmp147 * _tmp323 + _tmp321 * _tmp54;
  const Scalar _tmp325 = _tmp143 * _tmp323 + _tmp144 * _tmp322 + _tmp321 * _tmp52;
  const Scalar _tmp326 = _tmp134 * _tmp323 + _tmp136 * _tmp322 + _tmp321 * _tmp53;
  const Scalar _tmp327 =
      _tmp142 * landmarks_6_ + _tmp324 * _tmp80 + _tmp325 * _tmp75 + _tmp326 * _tmp72;
  const Scalar _tmp328 =
      _tmp112 * _tmp325 + _tmp113 * _tmp324 + _tmp114 * _tmp326 + _tmp150 * landmarks_6_;
  const Scalar _tmp329 = std::fabs(_tmp328);
  const Scalar _tmp330 = std::max<Scalar>(_tmp329, epsilon);
  const Scalar _tmp331 = Scalar(1.0) / (_tmp330);
  const Scalar _tmp332 = _tmp331 * views_1_calibration(0, 0);
  const Scalar _tmp333 =
      _tmp327 * _tmp332 - matches_0_6_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp334 =
      _tmp157 * landmarks_6_ + _tmp324 * _tmp87 + _tmp325 * _tmp90 + _tmp326 * _tmp85;
  const Scalar _tmp335 = _tmp331 * views_1_calibration(1, 0);
  const Scalar _tmp336 =
      _tmp334 * _tmp335 - matches_0_6_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp337 = std::pow(_tmp333, Scalar(2)) + std::pow(_tmp336, Scalar(2)) + epsilon;
  const Scalar _tmp338 = std::pow(_tmp337, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp339 = (((_tmp328) > 0) - ((_tmp328) < 0));
  const Scalar _tmp340 = std::sqrt(matches_0_6_weight) * std::sqrt(std::max<Scalar>(0, _tmp339));
  const Scalar _tmp341 = _tmp166 * _tmp337 + 1;
  const Scalar _tmp342 = std::sqrt(_tmp171 * (std::pow(_tmp341, _tmp170) - 1));
  const Scalar _tmp343 = _tmp340 * _tmp342;
  const Scalar _tmp344 = _tmp338 * _tmp343;
  const Scalar _tmp345 = _tmp333 * _tmp344;
  const Scalar _tmp346 = _tmp336 * _tmp344;
  const Scalar _tmp347 = _tmp128 + matches_0_7_source_coords(1, 0);
  const Scalar _tmp348 = _tmp125 + matches_0_7_source_coords(0, 0);
  const Scalar _tmp349 = std::pow(
      Scalar(_tmp127 * std::pow(_tmp348, Scalar(2)) + _tmp130 * std::pow(_tmp347, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp350 = _tmp347 * _tmp349;
  const Scalar _tmp351 = _tmp348 * _tmp349;
  const Scalar _tmp352 = _tmp146 * _tmp350 + _tmp147 * _tmp351 + _tmp349 * _tmp54;
  const Scalar _tmp353 = _tmp134 * _tmp351 + _tmp136 * _tmp350 + _tmp349 * _tmp53;
  const Scalar _tmp354 = _tmp143 * _tmp351 + _tmp144 * _tmp350 + _tmp349 * _tmp52;
  const Scalar _tmp355 =
      _tmp142 * landmarks_7_ + _tmp352 * _tmp80 + _tmp353 * _tmp72 + _tmp354 * _tmp75;
  const Scalar _tmp356 =
      _tmp112 * _tmp354 + _tmp113 * _tmp352 + _tmp114 * _tmp353 + _tmp150 * landmarks_7_;
  const Scalar _tmp357 = std::fabs(_tmp356);
  const Scalar _tmp358 = std::max<Scalar>(_tmp357, epsilon);
  const Scalar _tmp359 = Scalar(1.0) / (_tmp358);
  const Scalar _tmp360 = _tmp359 * views_1_calibration(0, 0);
  const Scalar _tmp361 =
      _tmp355 * _tmp360 - matches_0_7_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp362 =
      _tmp157 * landmarks_7_ + _tmp352 * _tmp87 + _tmp353 * _tmp85 + _tmp354 * _tmp90;
  const Scalar _tmp363 = _tmp359 * views_1_calibration(1, 0);
  const Scalar _tmp364 =
      _tmp362 * _tmp363 - matches_0_7_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp365 = std::pow(_tmp361, Scalar(2)) + std::pow(_tmp364, Scalar(2)) + epsilon;
  const Scalar _tmp366 = std::pow(_tmp365, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp367 = _tmp166 * _tmp365 + 1;
  const Scalar _tmp368 = std::sqrt(_tmp171 * (std::pow(_tmp367, _tmp170) - 1));
  const Scalar _tmp369 = (((_tmp356) > 0) - ((_tmp356) < 0));
  const Scalar _tmp370 = std::sqrt(matches_0_7_weight) * std::sqrt(std::max<Scalar>(0, _tmp369));
  const Scalar _tmp371 = _tmp368 * _tmp370;
  const Scalar _tmp372 = _tmp366 * _tmp371;
  const Scalar _tmp373 = _tmp361 * _tmp372;
  const Scalar _tmp374 = _tmp364 * _tmp372;
  const Scalar _tmp375 = _tmp128 + matches_0_8_source_coords(1, 0);
  const Scalar _tmp376 = _tmp125 + matches_0_8_source_coords(0, 0);
  const Scalar _tmp377 = std::pow(
      Scalar(_tmp127 * std::pow(_tmp376, Scalar(2)) + _tmp130 * std::pow(_tmp375, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp378 = _tmp376 * _tmp377;
  const Scalar _tmp379 = _tmp375 * _tmp377;
  const Scalar _tmp380 = _tmp134 * _tmp378 + _tmp136 * _tmp379 + _tmp377 * _tmp53;
  const Scalar _tmp381 = _tmp143 * _tmp378 + _tmp144 * _tmp379 + _tmp377 * _tmp52;
  const Scalar _tmp382 = _tmp146 * _tmp379 + _tmp147 * _tmp378 + _tmp377 * _tmp54;
  const Scalar _tmp383 =
      _tmp142 * landmarks_8_ + _tmp380 * _tmp72 + _tmp381 * _tmp75 + _tmp382 * _tmp80;
  const Scalar _tmp384 =
      _tmp112 * _tmp381 + _tmp113 * _tmp382 + _tmp114 * _tmp380 + _tmp150 * landmarks_8_;
  const Scalar _tmp385 = std::fabs(_tmp384);
  const Scalar _tmp386 = std::max<Scalar>(_tmp385, epsilon);
  const Scalar _tmp387 = Scalar(1.0) / (_tmp386);
  const Scalar _tmp388 = _tmp387 * views_1_calibration(0, 0);
  const Scalar _tmp389 =
      _tmp383 * _tmp388 - matches_0_8_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp390 =
      _tmp157 * landmarks_8_ + _tmp380 * _tmp85 + _tmp381 * _tmp90 + _tmp382 * _tmp87;
  const Scalar _tmp391 = _tmp387 * views_1_calibration(1, 0);
  const Scalar _tmp392 =
      _tmp390 * _tmp391 - matches_0_8_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp393 = std::pow(_tmp389, Scalar(2)) + std::pow(_tmp392, Scalar(2)) + epsilon;
  const Scalar _tmp394 = std::pow(_tmp393, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp395 = _tmp166 * _tmp393 + 1;
  const Scalar _tmp396 = std::sqrt(_tmp171 * (std::pow(_tmp395, _tmp170) - 1));
  const Scalar _tmp397 = (((_tmp384) > 0) - ((_tmp384) < 0));
  const Scalar _tmp398 = std::sqrt(matches_0_8_weight) * std::sqrt(std::max<Scalar>(0, _tmp397));
  const Scalar _tmp399 = _tmp396 * _tmp398;
  const Scalar _tmp400 = _tmp394 * _tmp399;
  const Scalar _tmp401 = _tmp389 * _tmp400;
  const Scalar _tmp402 = _tmp392 * _tmp400;
  const Scalar _tmp403 = _tmp128 + matches_0_9_source_coords(1, 0);
  const Scalar _tmp404 = _tmp125 + matches_0_9_source_coords(0, 0);
  const Scalar _tmp405 = std::pow(
      Scalar(_tmp127 * std::pow(_tmp404, Scalar(2)) + _tmp130 * std::pow(_tmp403, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp406 = _tmp403 * _tmp405;
  const Scalar _tmp407 = _tmp404 * _tmp405;
  const Scalar _tmp408 = _tmp143 * _tmp407 + _tmp144 * _tmp406 + _tmp405 * _tmp52;
  const Scalar _tmp409 = _tmp134 * _tmp407 + _tmp136 * _tmp406 + _tmp405 * _tmp53;
  const Scalar _tmp410 = _tmp146 * _tmp406 + _tmp147 * _tmp407 + _tmp405 * _tmp54;
  const Scalar _tmp411 =
      _tmp142 * landmarks_9_ + _tmp408 * _tmp75 + _tmp409 * _tmp72 + _tmp410 * _tmp80;
  const Scalar _tmp412 =
      _tmp112 * _tmp408 + _tmp113 * _tmp410 + _tmp114 * _tmp409 + _tmp150 * landmarks_9_;
  const Scalar _tmp413 = std::fabs(_tmp412);
  const Scalar _tmp414 = std::max<Scalar>(_tmp413, epsilon);
  const Scalar _tmp415 = Scalar(1.0) / (_tmp414);
  const Scalar _tmp416 = _tmp415 * views_1_calibration(0, 0);
  const Scalar _tmp417 =
      _tmp411 * _tmp416 - matches_0_9_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp418 =
      _tmp157 * landmarks_9_ + _tmp408 * _tmp90 + _tmp409 * _tmp85 + _tmp410 * _tmp87;
  const Scalar _tmp419 = _tmp415 * views_1_calibration(1, 0);
  const Scalar _tmp420 =
      _tmp418 * _tmp419 - matches_0_9_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp421 = std::pow(_tmp417, Scalar(2)) + std::pow(_tmp420, Scalar(2)) + epsilon;
  const Scalar _tmp422 = std::pow(_tmp421, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp423 = _tmp166 * _tmp421 + 1;
  const Scalar _tmp424 = std::sqrt(_tmp171 * (std::pow(_tmp423, _tmp170) - 1));
  const Scalar _tmp425 = (((_tmp412) > 0) - ((_tmp412) < 0));
  const Scalar _tmp426 = std::sqrt(matches_0_9_weight) * std::sqrt(std::max<Scalar>(0, _tmp425));
  const Scalar _tmp427 = _tmp424 * _tmp426;
  const Scalar _tmp428 = _tmp422 * _tmp427;
  const Scalar _tmp429 = _tmp417 * _tmp428;
  const Scalar _tmp430 = _tmp420 * _tmp428;
  const Scalar _tmp431 = _tmp128 + matches_0_10_source_coords(1, 0);
  const Scalar _tmp432 = _tmp125 + matches_0_10_source_coords(0, 0);
  const Scalar _tmp433 = std::pow(
      Scalar(_tmp127 * std::pow(_tmp432, Scalar(2)) + _tmp130 * std::pow(_tmp431, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp434 = _tmp432 * _tmp433;
  const Scalar _tmp435 = _tmp431 * _tmp433;
  const Scalar _tmp436 = _tmp143 * _tmp434 + _tmp144 * _tmp435 + _tmp433 * _tmp52;
  const Scalar _tmp437 = _tmp134 * _tmp434 + _tmp136 * _tmp435 + _tmp433 * _tmp53;
  const Scalar _tmp438 = _tmp146 * _tmp435 + _tmp147 * _tmp434 + _tmp433 * _tmp54;
  const Scalar _tmp439 =
      _tmp142 * landmarks_10_ + _tmp436 * _tmp75 + _tmp437 * _tmp72 + _tmp438 * _tmp80;
  const Scalar _tmp440 =
      _tmp112 * _tmp436 + _tmp113 * _tmp438 + _tmp114 * _tmp437 + _tmp150 * landmarks_10_;
  const Scalar _tmp441 = std::fabs(_tmp440);
  const Scalar _tmp442 = std::max<Scalar>(_tmp441, epsilon);
  const Scalar _tmp443 = Scalar(1.0) / (_tmp442);
  const Scalar _tmp444 = _tmp443 * views_1_calibration(0, 0);
  const Scalar _tmp445 =
      _tmp439 * _tmp444 - matches_0_10_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp446 =
      _tmp157 * landmarks_10_ + _tmp436 * _tmp90 + _tmp437 * _tmp85 + _tmp438 * _tmp87;
  const Scalar _tmp447 = _tmp443 * views_1_calibration(1, 0);
  const Scalar _tmp448 =
      _tmp446 * _tmp447 - matches_0_10_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp449 = std::pow(_tmp445, Scalar(2)) + std::pow(_tmp448, Scalar(2)) + epsilon;
  const Scalar _tmp450 = std::pow(_tmp449, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp451 = (((_tmp440) > 0) - ((_tmp440) < 0));
  const Scalar _tmp452 = std::sqrt(matches_0_10_weight) * std::sqrt(std::max<Scalar>(0, _tmp451));
  const Scalar _tmp453 = _tmp166 * _tmp449 + 1;
  const Scalar _tmp454 = std::sqrt(_tmp171 * (std::pow(_tmp453, _tmp170) - 1));
  const Scalar _tmp455 = _tmp452 * _tmp454;
  const Scalar _tmp456 = _tmp450 * _tmp455;
  const Scalar _tmp457 = _tmp445 * _tmp456;
  const Scalar _tmp458 = _tmp448 * _tmp456;
  const Scalar _tmp459 = _tmp128 + matches_0_11_source_coords(1, 0);
  const Scalar _tmp460 = _tmp125 + matches_0_11_source_coords(0, 0);
  const Scalar _tmp461 = std::pow(
      Scalar(_tmp127 * std::pow(_tmp460, Scalar(2)) + _tmp130 * std::pow(_tmp459, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp462 = _tmp459 * _tmp461;
  const Scalar _tmp463 = _tmp460 * _tmp461;
  const Scalar _tmp464 = _tmp146 * _tmp462 + _tmp147 * _tmp463 + _tmp461 * _tmp54;
  const Scalar _tmp465 = _tmp143 * _tmp463 + _tmp144 * _tmp462 + _tmp461 * _tmp52;
  const Scalar _tmp466 = _tmp134 * _tmp463 + _tmp136 * _tmp462 + _tmp461 * _tmp53;
  const Scalar _tmp467 =
      _tmp142 * landmarks_11_ + _tmp464 * _tmp80 + _tmp465 * _tmp75 + _tmp466 * _tmp72;
  const Scalar _tmp468 =
      _tmp112 * _tmp465 + _tmp113 * _tmp464 + _tmp114 * _tmp466 + _tmp150 * landmarks_11_;
  const Scalar _tmp469 = std::fabs(_tmp468);
  const Scalar _tmp470 = std::max<Scalar>(_tmp469, epsilon);
  const Scalar _tmp471 = Scalar(1.0) / (_tmp470);
  const Scalar _tmp472 = _tmp471 * views_1_calibration(0, 0);
  const Scalar _tmp473 =
      _tmp467 * _tmp472 - matches_0_11_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp474 =
      _tmp157 * landmarks_11_ + _tmp464 * _tmp87 + _tmp465 * _tmp90 + _tmp466 * _tmp85;
  const Scalar _tmp475 = _tmp471 * views_1_calibration(1, 0);
  const Scalar _tmp476 =
      _tmp474 * _tmp475 - matches_0_11_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp477 = std::pow(_tmp473, Scalar(2)) + std::pow(_tmp476, Scalar(2)) + epsilon;
  const Scalar _tmp478 = std::pow(_tmp477, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp479 = _tmp166 * _tmp477 + 1;
  const Scalar _tmp480 = std::sqrt(_tmp171 * (std::pow(_tmp479, _tmp170) - 1));
  const Scalar _tmp481 = (((_tmp468) > 0) - ((_tmp468) < 0));
  const Scalar _tmp482 = std::sqrt(matches_0_11_weight) * std::sqrt(std::max<Scalar>(0, _tmp481));
  const Scalar _tmp483 = _tmp480 * _tmp482;
  const Scalar _tmp484 = _tmp478 * _tmp483;
  const Scalar _tmp485 = _tmp473 * _tmp484;
  const Scalar _tmp486 = _tmp476 * _tmp484;
  const Scalar _tmp487 = _tmp128 + matches_0_12_source_coords(1, 0);
  const Scalar _tmp488 = _tmp125 + matches_0_12_source_coords(0, 0);
  const Scalar _tmp489 = std::pow(
      Scalar(_tmp127 * std::pow(_tmp488, Scalar(2)) + _tmp130 * std::pow(_tmp487, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp490 = _tmp487 * _tmp489;
  const Scalar _tmp491 = _tmp488 * _tmp489;
  const Scalar _tmp492 = _tmp146 * _tmp490 + _tmp147 * _tmp491 + _tmp489 * _tmp54;
  const Scalar _tmp493 = _tmp143 * _tmp491 + _tmp144 * _tmp490 + _tmp489 * _tmp52;
  const Scalar _tmp494 = _tmp134 * _tmp491 + _tmp136 * _tmp490 + _tmp489 * _tmp53;
  const Scalar _tmp495 =
      _tmp142 * landmarks_12_ + _tmp492 * _tmp80 + _tmp493 * _tmp75 + _tmp494 * _tmp72;
  const Scalar _tmp496 =
      _tmp112 * _tmp493 + _tmp113 * _tmp492 + _tmp114 * _tmp494 + _tmp150 * landmarks_12_;
  const Scalar _tmp497 = std::fabs(_tmp496);
  const Scalar _tmp498 = std::max<Scalar>(_tmp497, epsilon);
  const Scalar _tmp499 = Scalar(1.0) / (_tmp498);
  const Scalar _tmp500 = _tmp499 * views_1_calibration(0, 0);
  const Scalar _tmp501 =
      _tmp495 * _tmp500 - matches_0_12_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp502 =
      _tmp157 * landmarks_12_ + _tmp492 * _tmp87 + _tmp493 * _tmp90 + _tmp494 * _tmp85;
  const Scalar _tmp503 = _tmp499 * views_1_calibration(1, 0);
  const Scalar _tmp504 =
      _tmp502 * _tmp503 - matches_0_12_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp505 = std::pow(_tmp501, Scalar(2)) + std::pow(_tmp504, Scalar(2)) + epsilon;
  const Scalar _tmp506 = std::pow(_tmp505, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp507 = _tmp166 * _tmp505 + 1;
  const Scalar _tmp508 = std::sqrt(_tmp171 * (std::pow(_tmp507, _tmp170) - 1));
  const Scalar _tmp509 = (((_tmp496) > 0) - ((_tmp496) < 0));
  const Scalar _tmp510 = std::sqrt(matches_0_12_weight) * std::sqrt(std::max<Scalar>(0, _tmp509));
  const Scalar _tmp511 = _tmp508 * _tmp510;
  const Scalar _tmp512 = _tmp506 * _tmp511;
  const Scalar _tmp513 = _tmp501 * _tmp512;
  const Scalar _tmp514 = _tmp504 * _tmp512;
  const Scalar _tmp515 = _tmp128 + matches_0_13_source_coords(1, 0);
  const Scalar _tmp516 = _tmp125 + matches_0_13_source_coords(0, 0);
  const Scalar _tmp517 = std::pow(
      Scalar(_tmp127 * std::pow(_tmp516, Scalar(2)) + _tmp130 * std::pow(_tmp515, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp518 = _tmp516 * _tmp517;
  const Scalar _tmp519 = _tmp515 * _tmp517;
  const Scalar _tmp520 = _tmp134 * _tmp518 + _tmp136 * _tmp519 + _tmp517 * _tmp53;
  const Scalar _tmp521 = _tmp146 * _tmp519 + _tmp147 * _tmp518 + _tmp517 * _tmp54;
  const Scalar _tmp522 = _tmp143 * _tmp518 + _tmp144 * _tmp519 + _tmp517 * _tmp52;
  const Scalar _tmp523 =
      _tmp142 * landmarks_13_ + _tmp520 * _tmp72 + _tmp521 * _tmp80 + _tmp522 * _tmp75;
  const Scalar _tmp524 =
      _tmp112 * _tmp522 + _tmp113 * _tmp521 + _tmp114 * _tmp520 + _tmp150 * landmarks_13_;
  const Scalar _tmp525 = std::fabs(_tmp524);
  const Scalar _tmp526 = std::max<Scalar>(_tmp525, epsilon);
  const Scalar _tmp527 = Scalar(1.0) / (_tmp526);
  const Scalar _tmp528 = _tmp527 * views_1_calibration(0, 0);
  const Scalar _tmp529 =
      _tmp523 * _tmp528 - matches_0_13_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp530 =
      _tmp157 * landmarks_13_ + _tmp520 * _tmp85 + _tmp521 * _tmp87 + _tmp522 * _tmp90;
  const Scalar _tmp531 = _tmp527 * views_1_calibration(1, 0);
  const Scalar _tmp532 =
      _tmp530 * _tmp531 - matches_0_13_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp533 = std::pow(_tmp529, Scalar(2)) + std::pow(_tmp532, Scalar(2)) + epsilon;
  const Scalar _tmp534 = std::pow(_tmp533, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp535 = _tmp166 * _tmp533 + 1;
  const Scalar _tmp536 = std::sqrt(_tmp171 * (std::pow(_tmp535, _tmp170) - 1));
  const Scalar _tmp537 = (((_tmp524) > 0) - ((_tmp524) < 0));
  const Scalar _tmp538 = std::sqrt(matches_0_13_weight) * std::sqrt(std::max<Scalar>(0, _tmp537));
  const Scalar _tmp539 = _tmp536 * _tmp538;
  const Scalar _tmp540 = _tmp534 * _tmp539;
  const Scalar _tmp541 = _tmp529 * _tmp540;
  const Scalar _tmp542 = _tmp532 * _tmp540;
  const Scalar _tmp543 = _tmp128 + matches_0_14_source_coords(1, 0);
  const Scalar _tmp544 = _tmp125 + matches_0_14_source_coords(0, 0);
  const Scalar _tmp545 = std::pow(
      Scalar(_tmp127 * std::pow(_tmp544, Scalar(2)) + _tmp130 * std::pow(_tmp543, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp546 = _tmp544 * _tmp545;
  const Scalar _tmp547 = _tmp543 * _tmp545;
  const Scalar _tmp548 = _tmp134 * _tmp546 + _tmp136 * _tmp547 + _tmp53 * _tmp545;
  const Scalar _tmp549 = _tmp143 * _tmp546 + _tmp144 * _tmp547 + _tmp52 * _tmp545;
  const Scalar _tmp550 = _tmp146 * _tmp547 + _tmp147 * _tmp546 + _tmp54 * _tmp545;
  const Scalar _tmp551 =
      _tmp142 * landmarks_14_ + _tmp548 * _tmp72 + _tmp549 * _tmp75 + _tmp550 * _tmp80;
  const Scalar _tmp552 =
      _tmp112 * _tmp549 + _tmp113 * _tmp550 + _tmp114 * _tmp548 + _tmp150 * landmarks_14_;
  const Scalar _tmp553 = std::fabs(_tmp552);
  const Scalar _tmp554 = std::max<Scalar>(_tmp553, epsilon);
  const Scalar _tmp555 = Scalar(1.0) / (_tmp554);
  const Scalar _tmp556 = _tmp555 * views_1_calibration(0, 0);
  const Scalar _tmp557 =
      _tmp551 * _tmp556 - matches_0_14_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp558 =
      _tmp157 * landmarks_14_ + _tmp548 * _tmp85 + _tmp549 * _tmp90 + _tmp550 * _tmp87;
  const Scalar _tmp559 = _tmp555 * views_1_calibration(1, 0);
  const Scalar _tmp560 =
      _tmp558 * _tmp559 - matches_0_14_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp561 = std::pow(_tmp557, Scalar(2)) + std::pow(_tmp560, Scalar(2)) + epsilon;
  const Scalar _tmp562 = std::pow(_tmp561, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp563 = _tmp166 * _tmp561 + 1;
  const Scalar _tmp564 = std::sqrt(_tmp171 * (std::pow(_tmp563, _tmp170) - 1));
  const Scalar _tmp565 = (((_tmp552) > 0) - ((_tmp552) < 0));
  const Scalar _tmp566 = std::sqrt(matches_0_14_weight) * std::sqrt(std::max<Scalar>(0, _tmp565));
  const Scalar _tmp567 = _tmp564 * _tmp566;
  const Scalar _tmp568 = _tmp562 * _tmp567;
  const Scalar _tmp569 = _tmp557 * _tmp568;
  const Scalar _tmp570 = _tmp560 * _tmp568;
  const Scalar _tmp571 = _tmp128 + matches_0_15_source_coords(1, 0);
  const Scalar _tmp572 = _tmp125 + matches_0_15_source_coords(0, 0);
  const Scalar _tmp573 = std::pow(
      Scalar(_tmp127 * std::pow(_tmp572, Scalar(2)) + _tmp130 * std::pow(_tmp571, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp574 = _tmp572 * _tmp573;
  const Scalar _tmp575 = _tmp571 * _tmp573;
  const Scalar _tmp576 = _tmp134 * _tmp574 + _tmp136 * _tmp575 + _tmp53 * _tmp573;
  const Scalar _tmp577 = _tmp146 * _tmp575 + _tmp147 * _tmp574 + _tmp54 * _tmp573;
  const Scalar _tmp578 = _tmp143 * _tmp574 + _tmp144 * _tmp575 + _tmp52 * _tmp573;
  const Scalar _tmp579 =
      _tmp142 * landmarks_15_ + _tmp576 * _tmp72 + _tmp577 * _tmp80 + _tmp578 * _tmp75;
  const Scalar _tmp580 =
      _tmp112 * _tmp578 + _tmp113 * _tmp577 + _tmp114 * _tmp576 + _tmp150 * landmarks_15_;
  const Scalar _tmp581 = std::fabs(_tmp580);
  const Scalar _tmp582 = std::max<Scalar>(_tmp581, epsilon);
  const Scalar _tmp583 = Scalar(1.0) / (_tmp582);
  const Scalar _tmp584 = _tmp583 * views_1_calibration(0, 0);
  const Scalar _tmp585 =
      _tmp579 * _tmp584 - matches_0_15_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp586 =
      _tmp157 * landmarks_15_ + _tmp576 * _tmp85 + _tmp577 * _tmp87 + _tmp578 * _tmp90;
  const Scalar _tmp587 = _tmp583 * views_1_calibration(1, 0);
  const Scalar _tmp588 =
      _tmp586 * _tmp587 - matches_0_15_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp589 = std::pow(_tmp585, Scalar(2)) + std::pow(_tmp588, Scalar(2)) + epsilon;
  const Scalar _tmp590 = std::pow(_tmp589, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp591 = (((_tmp580) > 0) - ((_tmp580) < 0));
  const Scalar _tmp592 = std::sqrt(matches_0_15_weight) * std::sqrt(std::max<Scalar>(0, _tmp591));
  const Scalar _tmp593 = _tmp166 * _tmp589 + 1;
  const Scalar _tmp594 = std::sqrt(_tmp171 * (std::pow(_tmp593, _tmp170) - 1));
  const Scalar _tmp595 = _tmp592 * _tmp594;
  const Scalar _tmp596 = _tmp590 * _tmp595;
  const Scalar _tmp597 = _tmp585 * _tmp596;
  const Scalar _tmp598 = _tmp588 * _tmp596;
  const Scalar _tmp599 = _tmp128 + matches_0_16_source_coords(1, 0);
  const Scalar _tmp600 = _tmp125 + matches_0_16_source_coords(0, 0);
  const Scalar _tmp601 = std::pow(
      Scalar(_tmp127 * std::pow(_tmp600, Scalar(2)) + _tmp130 * std::pow(_tmp599, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp602 = _tmp599 * _tmp601;
  const Scalar _tmp603 = _tmp600 * _tmp601;
  const Scalar _tmp604 = _tmp146 * _tmp602 + _tmp147 * _tmp603 + _tmp54 * _tmp601;
  const Scalar _tmp605 = _tmp143 * _tmp603 + _tmp144 * _tmp602 + _tmp52 * _tmp601;
  const Scalar _tmp606 = _tmp134 * _tmp603 + _tmp136 * _tmp602 + _tmp53 * _tmp601;
  const Scalar _tmp607 =
      _tmp142 * landmarks_16_ + _tmp604 * _tmp80 + _tmp605 * _tmp75 + _tmp606 * _tmp72;
  const Scalar _tmp608 =
      _tmp112 * _tmp605 + _tmp113 * _tmp604 + _tmp114 * _tmp606 + _tmp150 * landmarks_16_;
  const Scalar _tmp609 = std::fabs(_tmp608);
  const Scalar _tmp610 = std::max<Scalar>(_tmp609, epsilon);
  const Scalar _tmp611 = Scalar(1.0) / (_tmp610);
  const Scalar _tmp612 = _tmp611 * views_1_calibration(0, 0);
  const Scalar _tmp613 =
      _tmp607 * _tmp612 - matches_0_16_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp614 =
      _tmp157 * landmarks_16_ + _tmp604 * _tmp87 + _tmp605 * _tmp90 + _tmp606 * _tmp85;
  const Scalar _tmp615 = _tmp611 * views_1_calibration(1, 0);
  const Scalar _tmp616 =
      _tmp614 * _tmp615 - matches_0_16_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp617 = std::pow(_tmp613, Scalar(2)) + std::pow(_tmp616, Scalar(2)) + epsilon;
  const Scalar _tmp618 = std::pow(_tmp617, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp619 = _tmp166 * _tmp617 + 1;
  const Scalar _tmp620 = std::sqrt(_tmp171 * (std::pow(_tmp619, _tmp170) - 1));
  const Scalar _tmp621 = (((_tmp608) > 0) - ((_tmp608) < 0));
  const Scalar _tmp622 = std::sqrt(matches_0_16_weight) * std::sqrt(std::max<Scalar>(0, _tmp621));
  const Scalar _tmp623 = _tmp620 * _tmp622;
  const Scalar _tmp624 = _tmp618 * _tmp623;
  const Scalar _tmp625 = _tmp613 * _tmp624;
  const Scalar _tmp626 = _tmp616 * _tmp624;
  const Scalar _tmp627 = _tmp128 + matches_0_17_source_coords(1, 0);
  const Scalar _tmp628 = _tmp125 + matches_0_17_source_coords(0, 0);
  const Scalar _tmp629 = std::pow(
      Scalar(_tmp127 * std::pow(_tmp628, Scalar(2)) + _tmp130 * std::pow(_tmp627, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp630 = _tmp627 * _tmp629;
  const Scalar _tmp631 = _tmp628 * _tmp629;
  const Scalar _tmp632 = _tmp146 * _tmp630 + _tmp147 * _tmp631 + _tmp54 * _tmp629;
  const Scalar _tmp633 = _tmp143 * _tmp631 + _tmp144 * _tmp630 + _tmp52 * _tmp629;
  const Scalar _tmp634 = _tmp134 * _tmp631 + _tmp136 * _tmp630 + _tmp53 * _tmp629;
  const Scalar _tmp635 =
      _tmp142 * landmarks_17_ + _tmp632 * _tmp80 + _tmp633 * _tmp75 + _tmp634 * _tmp72;
  const Scalar _tmp636 =
      _tmp112 * _tmp633 + _tmp113 * _tmp632 + _tmp114 * _tmp634 + _tmp150 * landmarks_17_;
  const Scalar _tmp637 = std::fabs(_tmp636);
  const Scalar _tmp638 = std::max<Scalar>(_tmp637, epsilon);
  const Scalar _tmp639 = Scalar(1.0) / (_tmp638);
  const Scalar _tmp640 = _tmp639 * views_1_calibration(0, 0);
  const Scalar _tmp641 =
      _tmp635 * _tmp640 - matches_0_17_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp642 =
      _tmp157 * landmarks_17_ + _tmp632 * _tmp87 + _tmp633 * _tmp90 + _tmp634 * _tmp85;
  const Scalar _tmp643 = _tmp639 * views_1_calibration(1, 0);
  const Scalar _tmp644 =
      _tmp642 * _tmp643 - matches_0_17_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp645 = std::pow(_tmp641, Scalar(2)) + std::pow(_tmp644, Scalar(2)) + epsilon;
  const Scalar _tmp646 = std::pow(_tmp645, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp647 = _tmp166 * _tmp645 + 1;
  const Scalar _tmp648 = std::sqrt(_tmp171 * (std::pow(_tmp647, _tmp170) - 1));
  const Scalar _tmp649 = (((_tmp636) > 0) - ((_tmp636) < 0));
  const Scalar _tmp650 = std::sqrt(matches_0_17_weight) * std::sqrt(std::max<Scalar>(0, _tmp649));
  const Scalar _tmp651 = _tmp648 * _tmp650;
  const Scalar _tmp652 = _tmp646 * _tmp651;
  const Scalar _tmp653 = _tmp641 * _tmp652;
  const Scalar _tmp654 = _tmp644 * _tmp652;
  const Scalar _tmp655 = _tmp128 + matches_0_18_source_coords(1, 0);
  const Scalar _tmp656 = _tmp125 + matches_0_18_source_coords(0, 0);
  const Scalar _tmp657 = std::pow(
      Scalar(_tmp127 * std::pow(_tmp656, Scalar(2)) + _tmp130 * std::pow(_tmp655, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp658 = _tmp656 * _tmp657;
  const Scalar _tmp659 = _tmp655 * _tmp657;
  const Scalar _tmp660 = _tmp143 * _tmp658 + _tmp144 * _tmp659 + _tmp52 * _tmp657;
  const Scalar _tmp661 = _tmp146 * _tmp659 + _tmp147 * _tmp658 + _tmp54 * _tmp657;
  const Scalar _tmp662 = _tmp134 * _tmp658 + _tmp136 * _tmp659 + _tmp53 * _tmp657;
  const Scalar _tmp663 =
      _tmp142 * landmarks_18_ + _tmp660 * _tmp75 + _tmp661 * _tmp80 + _tmp662 * _tmp72;
  const Scalar _tmp664 =
      _tmp112 * _tmp660 + _tmp113 * _tmp661 + _tmp114 * _tmp662 + _tmp150 * landmarks_18_;
  const Scalar _tmp665 = std::fabs(_tmp664);
  const Scalar _tmp666 = std::max<Scalar>(_tmp665, epsilon);
  const Scalar _tmp667 = Scalar(1.0) / (_tmp666);
  const Scalar _tmp668 = _tmp667 * views_1_calibration(0, 0);
  const Scalar _tmp669 =
      _tmp663 * _tmp668 - matches_0_18_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp670 =
      _tmp157 * landmarks_18_ + _tmp660 * _tmp90 + _tmp661 * _tmp87 + _tmp662 * _tmp85;
  const Scalar _tmp671 = _tmp667 * views_1_calibration(1, 0);
  const Scalar _tmp672 =
      _tmp670 * _tmp671 - matches_0_18_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp673 = std::pow(_tmp669, Scalar(2)) + std::pow(_tmp672, Scalar(2)) + epsilon;
  const Scalar _tmp674 = std::pow(_tmp673, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp675 = _tmp166 * _tmp673 + 1;
  const Scalar _tmp676 = std::sqrt(_tmp171 * (std::pow(_tmp675, _tmp170) - 1));
  const Scalar _tmp677 = (((_tmp664) > 0) - ((_tmp664) < 0));
  const Scalar _tmp678 = std::sqrt(matches_0_18_weight) * std::sqrt(std::max<Scalar>(0, _tmp677));
  const Scalar _tmp679 = _tmp676 * _tmp678;
  const Scalar _tmp680 = _tmp674 * _tmp679;
  const Scalar _tmp681 = _tmp669 * _tmp680;
  const Scalar _tmp682 = _tmp672 * _tmp680;
  const Scalar _tmp683 = _tmp128 + matches_0_19_source_coords(1, 0);
  const Scalar _tmp684 = _tmp125 + matches_0_19_source_coords(0, 0);
  const Scalar _tmp685 = std::pow(
      Scalar(_tmp127 * std::pow(_tmp684, Scalar(2)) + _tmp130 * std::pow(_tmp683, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp686 = _tmp683 * _tmp685;
  const Scalar _tmp687 = _tmp684 * _tmp685;
  const Scalar _tmp688 = _tmp146 * _tmp686 + _tmp147 * _tmp687 + _tmp54 * _tmp685;
  const Scalar _tmp689 = _tmp134 * _tmp687 + _tmp136 * _tmp686 + _tmp53 * _tmp685;
  const Scalar _tmp690 = _tmp143 * _tmp687 + _tmp144 * _tmp686 + _tmp52 * _tmp685;
  const Scalar _tmp691 =
      _tmp142 * landmarks_19_ + _tmp688 * _tmp80 + _tmp689 * _tmp72 + _tmp690 * _tmp75;
  const Scalar _tmp692 =
      _tmp112 * _tmp690 + _tmp113 * _tmp688 + _tmp114 * _tmp689 + _tmp150 * landmarks_19_;
  const Scalar _tmp693 = std::fabs(_tmp692);
  const Scalar _tmp694 = std::max<Scalar>(_tmp693, epsilon);
  const Scalar _tmp695 = Scalar(1.0) / (_tmp694);
  const Scalar _tmp696 = _tmp695 * views_1_calibration(0, 0);
  const Scalar _tmp697 =
      _tmp691 * _tmp696 - matches_0_19_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp698 =
      _tmp157 * landmarks_19_ + _tmp688 * _tmp87 + _tmp689 * _tmp85 + _tmp690 * _tmp90;
  const Scalar _tmp699 = _tmp695 * views_1_calibration(1, 0);
  const Scalar _tmp700 =
      _tmp698 * _tmp699 - matches_0_19_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp701 = std::pow(_tmp697, Scalar(2)) + std::pow(_tmp700, Scalar(2)) + epsilon;
  const Scalar _tmp702 = std::pow(_tmp701, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp703 = (((_tmp692) > 0) - ((_tmp692) < 0));
  const Scalar _tmp704 = std::sqrt(matches_0_19_weight) * std::sqrt(std::max<Scalar>(0, _tmp703));
  const Scalar _tmp705 = _tmp166 * _tmp701 + 1;
  const Scalar _tmp706 = std::sqrt(_tmp171 * (std::pow(_tmp705, _tmp170) - 1));
  const Scalar _tmp707 = _tmp704 * _tmp706;
  const Scalar _tmp708 = _tmp702 * _tmp707;
  const Scalar _tmp709 = _tmp697 * _tmp708;
  const Scalar _tmp710 = _tmp700 * _tmp708;
  const Scalar _tmp711 = landmarks_0_ - matches_0_0_inverse_range_prior;
  const Scalar _tmp712 = epsilon + matches_0_0_inverse_range_prior_sigma;
  const Scalar _tmp713 = matches_0_0_weight / _tmp712;
  const Scalar _tmp714 = landmarks_1_ - matches_0_1_inverse_range_prior;
  const Scalar _tmp715 = epsilon + matches_0_1_inverse_range_prior_sigma;
  const Scalar _tmp716 = matches_0_1_weight / _tmp715;
  const Scalar _tmp717 = landmarks_2_ - matches_0_2_inverse_range_prior;
  const Scalar _tmp718 = epsilon + matches_0_2_inverse_range_prior_sigma;
  const Scalar _tmp719 = matches_0_2_weight / _tmp718;
  const Scalar _tmp720 = landmarks_3_ - matches_0_3_inverse_range_prior;
  const Scalar _tmp721 = epsilon + matches_0_3_inverse_range_prior_sigma;
  const Scalar _tmp722 = matches_0_3_weight / _tmp721;
  const Scalar _tmp723 = landmarks_4_ - matches_0_4_inverse_range_prior;
  const Scalar _tmp724 = epsilon + matches_0_4_inverse_range_prior_sigma;
  const Scalar _tmp725 = matches_0_4_weight / _tmp724;
  const Scalar _tmp726 = landmarks_5_ - matches_0_5_inverse_range_prior;
  const Scalar _tmp727 = epsilon + matches_0_5_inverse_range_prior_sigma;
  const Scalar _tmp728 = matches_0_5_weight / _tmp727;
  const Scalar _tmp729 = landmarks_6_ - matches_0_6_inverse_range_prior;
  const Scalar _tmp730 = epsilon + matches_0_6_inverse_range_prior_sigma;
  const Scalar _tmp731 = matches_0_6_weight / _tmp730;
  const Scalar _tmp732 = landmarks_7_ - matches_0_7_inverse_range_prior;
  const Scalar _tmp733 = epsilon + matches_0_7_inverse_range_prior_sigma;
  const Scalar _tmp734 = matches_0_7_weight / _tmp733;
  const Scalar _tmp735 = landmarks_8_ - matches_0_8_inverse_range_prior;
  const Scalar _tmp736 = epsilon + matches_0_8_inverse_range_prior_sigma;
  const Scalar _tmp737 = matches_0_8_weight / _tmp736;
  const Scalar _tmp738 = landmarks_9_ - matches_0_9_inverse_range_prior;
  const Scalar _tmp739 = epsilon + matches_0_9_inverse_range_prior_sigma;
  const Scalar _tmp740 = matches_0_9_weight / _tmp739;
  const Scalar _tmp741 = landmarks_10_ - matches_0_10_inverse_range_prior;
  const Scalar _tmp742 = epsilon + matches_0_10_inverse_range_prior_sigma;
  const Scalar _tmp743 = matches_0_10_weight / _tmp742;
  const Scalar _tmp744 = landmarks_11_ - matches_0_11_inverse_range_prior;
  const Scalar _tmp745 = epsilon + matches_0_11_inverse_range_prior_sigma;
  const Scalar _tmp746 = matches_0_11_weight / _tmp745;
  const Scalar _tmp747 = landmarks_12_ - matches_0_12_inverse_range_prior;
  const Scalar _tmp748 = epsilon + matches_0_12_inverse_range_prior_sigma;
  const Scalar _tmp749 = matches_0_12_weight / _tmp748;
  const Scalar _tmp750 = landmarks_13_ - matches_0_13_inverse_range_prior;
  const Scalar _tmp751 = epsilon + matches_0_13_inverse_range_prior_sigma;
  const Scalar _tmp752 = matches_0_13_weight / _tmp751;
  const Scalar _tmp753 = landmarks_14_ - matches_0_14_inverse_range_prior;
  const Scalar _tmp754 = epsilon + matches_0_14_inverse_range_prior_sigma;
  const Scalar _tmp755 = matches_0_14_weight / _tmp754;
  const Scalar _tmp756 = landmarks_15_ - matches_0_15_inverse_range_prior;
  const Scalar _tmp757 = epsilon + matches_0_15_inverse_range_prior_sigma;
  const Scalar _tmp758 = matches_0_15_weight / _tmp757;
  const Scalar _tmp759 = landmarks_16_ - matches_0_16_inverse_range_prior;
  const Scalar _tmp760 = epsilon + matches_0_16_inverse_range_prior_sigma;
  const Scalar _tmp761 = matches_0_16_weight / _tmp760;
  const Scalar _tmp762 = landmarks_17_ - matches_0_17_inverse_range_prior;
  const Scalar _tmp763 = epsilon + matches_0_17_inverse_range_prior_sigma;
  const Scalar _tmp764 = matches_0_17_weight / _tmp763;
  const Scalar _tmp765 = landmarks_18_ - matches_0_18_inverse_range_prior;
  const Scalar _tmp766 = epsilon + matches_0_18_inverse_range_prior_sigma;
  const Scalar _tmp767 = matches_0_18_weight / _tmp766;
  const Scalar _tmp768 = landmarks_19_ - matches_0_19_inverse_range_prior;
  const Scalar _tmp769 = epsilon + matches_0_19_inverse_range_prior_sigma;
  const Scalar _tmp770 = matches_0_19_weight / _tmp769;
  const Scalar _tmp771 = _priors_0_1_target_T_src[2] * _views_0_pose[1];
  const Scalar _tmp772 = _priors_0_1_target_T_src[1] * _views_0_pose[2];
  const Scalar _tmp773 = _priors_0_1_target_T_src[0] * _views_0_pose[3];
  const Scalar _tmp774 = _priors_0_1_target_T_src[3] * _views_0_pose[0];
  const Scalar _tmp775 = -_tmp771 + _tmp772 - _tmp773 - _tmp774;
  const Scalar _tmp776 = _tmp39 * _tmp775;
  const Scalar _tmp777 = _priors_0_1_target_T_src[3] * _views_0_pose[1];
  const Scalar _tmp778 = _priors_0_1_target_T_src[0] * _views_0_pose[2];
  const Scalar _tmp779 = _priors_0_1_target_T_src[1] * _views_0_pose[3];
  const Scalar _tmp780 = _priors_0_1_target_T_src[2] * _views_0_pose[0];
  const Scalar _tmp781 = _tmp777 + _tmp778 + _tmp779 - _tmp780;
  const Scalar _tmp782 = (((-_tmp32 + _tmp34) > 0) - ((-_tmp32 + _tmp34) < 0)) + 1;
  const Scalar _tmp783 = _tmp30 * _tmp31 * _tmp782;
  const Scalar _tmp784 = _tmp35 * _tmp37 / (_tmp36 * std::sqrt(_tmp36));
  const Scalar _tmp785 = _tmp783 * _tmp784;
  const Scalar _tmp786 = _tmp43 * _tmp785;
  const Scalar _tmp787 = _tmp781 * _tmp786;
  const Scalar _tmp788 = _tmp28 * _tmp785;
  const Scalar _tmp789 = _tmp788 * priors_0_1_sqrt_info(0, 2);
  const Scalar _tmp790 = Scalar(1.0) / (_tmp36);
  const Scalar _tmp791 = _tmp783 * _tmp790;
  const Scalar _tmp792 = _tmp28 * _tmp791;
  const Scalar _tmp793 = _tmp792 * priors_0_1_sqrt_info(0, 2);
  const Scalar _tmp794 = _tmp43 * _tmp791;
  const Scalar _tmp795 = _tmp794 * priors_0_1_sqrt_info(0, 1);
  const Scalar _tmp796 = _tmp41 * _tmp781;
  const Scalar _tmp797 = _tmp791 * priors_0_1_sqrt_info(0, 0);
  const Scalar _tmp798 = _priors_0_1_target_T_src[0] * _views_0_pose[1];
  const Scalar _tmp799 = _priors_0_1_target_T_src[3] * _views_0_pose[2];
  const Scalar _tmp800 = _priors_0_1_target_T_src[2] * _views_0_pose[3];
  const Scalar _tmp801 = _priors_0_1_target_T_src[1] * _views_0_pose[0];
  const Scalar _tmp802 = -_tmp798 + _tmp799 + _tmp800 + _tmp801;
  const Scalar _tmp803 = _tmp785 * _tmp796;
  const Scalar _tmp804 = -_priors_0_1_target_T_src[0] * _views_0_pose[0] -
                         _priors_0_1_target_T_src[1] * _views_0_pose[1] -
                         _priors_0_1_target_T_src[2] * _views_0_pose[2] +
                         _priors_0_1_target_T_src[3] * _views_0_pose[3];
  const Scalar _tmp805 = _tmp39 * _tmp804;
  const Scalar _tmp806 = _tmp42 * _tmp802 + _tmp776 * priors_0_1_sqrt_info(0, 2) +
                         _tmp781 * _tmp789 - _tmp781 * _tmp793 - _tmp781 * _tmp795 +
                         _tmp787 * priors_0_1_sqrt_info(0, 1) - _tmp796 * _tmp797 +
                         _tmp803 * priors_0_1_sqrt_info(0, 0) +
                         _tmp805 * priors_0_1_sqrt_info(0, 1);
  const Scalar _tmp807 = (Scalar(1) / Scalar(2)) * _views_1_pose[2];
  const Scalar _tmp808 = -_tmp777 - _tmp778 - _tmp779 + _tmp780;
  const Scalar _tmp809 = _tmp41 * _tmp804;
  const Scalar _tmp810 = _tmp785 * _tmp809;
  const Scalar _tmp811 = _tmp798 - _tmp799 - _tmp800 - _tmp801;
  const Scalar _tmp812 = _tmp786 * _tmp804;
  const Scalar _tmp813 =
      _tmp40 * _tmp811 + _tmp44 * _tmp808 + _tmp776 * priors_0_1_sqrt_info(0, 0) +
      _tmp789 * _tmp804 - _tmp793 * _tmp804 - _tmp795 * _tmp804 - _tmp797 * _tmp809 +
      _tmp810 * priors_0_1_sqrt_info(0, 0) + _tmp812 * priors_0_1_sqrt_info(0, 1);
  const Scalar _tmp814 = (Scalar(1) / Scalar(2)) * _views_1_pose[0];
  const Scalar _tmp815 = _tmp771 - _tmp772 + _tmp773 + _tmp774;
  const Scalar _tmp816 = _tmp41 * _tmp802;
  const Scalar _tmp817 = _tmp785 * _tmp816;
  const Scalar _tmp818 = _tmp788 * _tmp802;
  const Scalar _tmp819 = _tmp786 * _tmp802;
  const Scalar _tmp820 =
      _tmp42 * _tmp808 + _tmp44 * _tmp815 - _tmp793 * _tmp802 - _tmp795 * _tmp802 -
      _tmp797 * _tmp816 + _tmp805 * priors_0_1_sqrt_info(0, 2) +
      _tmp817 * priors_0_1_sqrt_info(0, 0) + _tmp818 * priors_0_1_sqrt_info(0, 2) +
      _tmp819 * priors_0_1_sqrt_info(0, 1);
  const Scalar _tmp821 = (Scalar(1) / Scalar(2)) * _views_1_pose[1];
  const Scalar _tmp822 = _tmp41 * _tmp815;
  const Scalar _tmp823 = _tmp786 * _tmp815;
  const Scalar _tmp824 = _tmp785 * _tmp822;
  const Scalar _tmp825 =
      _tmp40 * _tmp781 + _tmp44 * _tmp811 + _tmp789 * _tmp815 - _tmp793 * _tmp815 -
      _tmp795 * _tmp815 - _tmp797 * _tmp822 + _tmp805 * priors_0_1_sqrt_info(0, 0) +
      _tmp823 * priors_0_1_sqrt_info(0, 1) + _tmp824 * priors_0_1_sqrt_info(0, 0);
  const Scalar _tmp826 = (Scalar(1) / Scalar(2)) * _views_1_pose[3];
  const Scalar _tmp827 =
      _tmp806 * _tmp807 - _tmp813 * _tmp814 - _tmp820 * _tmp821 + _tmp825 * _tmp826;
  const Scalar _tmp828 =
      _tmp806 * _tmp826 - _tmp807 * _tmp825 - _tmp813 * _tmp821 + _tmp814 * _tmp820;
  const Scalar _tmp829 =
      -_tmp806 * _tmp814 - _tmp807 * _tmp813 + _tmp820 * _tmp826 + _tmp821 * _tmp825;
  const Scalar _tmp830 = _tmp2 * priors_0_1_sqrt_info(0, 3) + _tmp50 * priors_0_1_sqrt_info(0, 4) +
                         _tmp54 * priors_0_1_sqrt_info(0, 5);
  const Scalar _tmp831 = _tmp49 * priors_0_1_sqrt_info(0, 4) + _tmp52 * priors_0_1_sqrt_info(0, 5) +
                         _tmp6 * priors_0_1_sqrt_info(0, 3);
  const Scalar _tmp832 = _tmp10 * priors_0_1_sqrt_info(0, 3) + _tmp47 * priors_0_1_sqrt_info(0, 4) +
                         _tmp53 * priors_0_1_sqrt_info(0, 5);
  const Scalar _tmp833 = _tmp791 * priors_0_1_sqrt_info(1, 0);
  const Scalar _tmp834 = _tmp794 * priors_0_1_sqrt_info(1, 1);
  const Scalar _tmp835 = _tmp792 * priors_0_1_sqrt_info(1, 2);
  const Scalar _tmp836 = _tmp39 * _tmp802;
  const Scalar _tmp837 = _tmp788 * priors_0_1_sqrt_info(1, 2);
  const Scalar _tmp838 =
      _tmp776 * priors_0_1_sqrt_info(1, 2) - _tmp781 * _tmp834 - _tmp781 * _tmp835 +
      _tmp781 * _tmp837 + _tmp787 * priors_0_1_sqrt_info(1, 1) - _tmp796 * _tmp833 +
      _tmp803 * priors_0_1_sqrt_info(1, 0) + _tmp805 * priors_0_1_sqrt_info(1, 1) +
      _tmp836 * priors_0_1_sqrt_info(1, 0);
  const Scalar _tmp839 = _tmp39 * _tmp808;
  const Scalar _tmp840 = _tmp39 * _tmp811;
  const Scalar _tmp841 =
      _tmp776 * priors_0_1_sqrt_info(1, 0) - _tmp804 * _tmp834 - _tmp804 * _tmp835 +
      _tmp804 * _tmp837 - _tmp809 * _tmp833 + _tmp810 * priors_0_1_sqrt_info(1, 0) +
      _tmp812 * priors_0_1_sqrt_info(1, 1) + _tmp839 * priors_0_1_sqrt_info(1, 1) +
      _tmp840 * priors_0_1_sqrt_info(1, 2);
  const Scalar _tmp842 = _tmp39 * _tmp815;
  const Scalar _tmp843 =
      -_tmp802 * _tmp834 - _tmp802 * _tmp835 + _tmp805 * priors_0_1_sqrt_info(1, 2) -
      _tmp816 * _tmp833 + _tmp817 * priors_0_1_sqrt_info(1, 0) +
      _tmp818 * priors_0_1_sqrt_info(1, 2) + _tmp819 * priors_0_1_sqrt_info(1, 1) +
      _tmp839 * priors_0_1_sqrt_info(1, 0) + _tmp842 * priors_0_1_sqrt_info(1, 1);
  const Scalar _tmp844 = _tmp39 * _tmp781;
  const Scalar _tmp845 =
      _tmp805 * priors_0_1_sqrt_info(1, 0) - _tmp815 * _tmp834 - _tmp815 * _tmp835 +
      _tmp815 * _tmp837 - _tmp822 * _tmp833 + _tmp823 * priors_0_1_sqrt_info(1, 1) +
      _tmp824 * priors_0_1_sqrt_info(1, 0) + _tmp840 * priors_0_1_sqrt_info(1, 1) +
      _tmp844 * priors_0_1_sqrt_info(1, 2);
  const Scalar _tmp846 =
      _tmp807 * _tmp838 - _tmp814 * _tmp841 - _tmp821 * _tmp843 + _tmp826 * _tmp845;
  const Scalar _tmp847 =
      -_tmp807 * _tmp845 + _tmp814 * _tmp843 - _tmp821 * _tmp841 + _tmp826 * _tmp838;
  const Scalar _tmp848 =
      -_tmp807 * _tmp841 - _tmp814 * _tmp838 + _tmp821 * _tmp845 + _tmp826 * _tmp843;
  const Scalar _tmp849 = _tmp2 * priors_0_1_sqrt_info(1, 3) + _tmp50 * priors_0_1_sqrt_info(1, 4) +
                         _tmp54 * priors_0_1_sqrt_info(1, 5);
  const Scalar _tmp850 = _tmp49 * priors_0_1_sqrt_info(1, 4) + _tmp52 * priors_0_1_sqrt_info(1, 5) +
                         _tmp6 * priors_0_1_sqrt_info(1, 3);
  const Scalar _tmp851 = _tmp10 * priors_0_1_sqrt_info(1, 3) + _tmp47 * priors_0_1_sqrt_info(1, 4) +
                         _tmp53 * priors_0_1_sqrt_info(1, 5);
  const Scalar _tmp852 = _tmp788 * priors_0_1_sqrt_info(2, 2);
  const Scalar _tmp853 = _tmp794 * _tmp804;
  const Scalar _tmp854 = _tmp792 * _tmp804;
  const Scalar _tmp855 = _tmp791 * _tmp809;
  const Scalar _tmp856 =
      _tmp776 * priors_0_1_sqrt_info(2, 0) + _tmp804 * _tmp852 +
      _tmp810 * priors_0_1_sqrt_info(2, 0) + _tmp812 * priors_0_1_sqrt_info(2, 1) +
      _tmp839 * priors_0_1_sqrt_info(2, 1) + _tmp840 * priors_0_1_sqrt_info(2, 2) -
      _tmp853 * priors_0_1_sqrt_info(2, 1) - _tmp854 * priors_0_1_sqrt_info(2, 2) -
      _tmp855 * priors_0_1_sqrt_info(2, 0);
  const Scalar _tmp857 = _tmp791 * _tmp796;
  const Scalar _tmp858 = _tmp781 * _tmp792;
  const Scalar _tmp859 = _tmp781 * _tmp794;
  const Scalar _tmp860 =
      _tmp776 * priors_0_1_sqrt_info(2, 2) + _tmp781 * _tmp852 +
      _tmp787 * priors_0_1_sqrt_info(2, 1) + _tmp803 * priors_0_1_sqrt_info(2, 0) +
      _tmp805 * priors_0_1_sqrt_info(2, 1) + _tmp836 * priors_0_1_sqrt_info(2, 0) -
      _tmp857 * priors_0_1_sqrt_info(2, 0) - _tmp858 * priors_0_1_sqrt_info(2, 2) -
      _tmp859 * priors_0_1_sqrt_info(2, 1);
  const Scalar _tmp861 = _tmp794 * _tmp815;
  const Scalar _tmp862 = _tmp791 * _tmp822;
  const Scalar _tmp863 = _tmp792 * _tmp815;
  const Scalar _tmp864 =
      _tmp805 * priors_0_1_sqrt_info(2, 0) + _tmp815 * _tmp852 +
      _tmp823 * priors_0_1_sqrt_info(2, 1) + _tmp824 * priors_0_1_sqrt_info(2, 0) +
      _tmp840 * priors_0_1_sqrt_info(2, 1) + _tmp844 * priors_0_1_sqrt_info(2, 2) -
      _tmp861 * priors_0_1_sqrt_info(2, 1) - _tmp862 * priors_0_1_sqrt_info(2, 0) -
      _tmp863 * priors_0_1_sqrt_info(2, 2);
  const Scalar _tmp865 = _tmp794 * _tmp802;
  const Scalar _tmp866 = _tmp791 * _tmp816;
  const Scalar _tmp867 = _tmp792 * _tmp802;
  const Scalar _tmp868 =
      _tmp805 * priors_0_1_sqrt_info(2, 2) + _tmp817 * priors_0_1_sqrt_info(2, 0) +
      _tmp818 * priors_0_1_sqrt_info(2, 2) + _tmp819 * priors_0_1_sqrt_info(2, 1) +
      _tmp839 * priors_0_1_sqrt_info(2, 0) + _tmp842 * priors_0_1_sqrt_info(2, 1) -
      _tmp865 * priors_0_1_sqrt_info(2, 1) - _tmp866 * priors_0_1_sqrt_info(2, 0) -
      _tmp867 * priors_0_1_sqrt_info(2, 2);
  const Scalar _tmp869 =
      _tmp807 * _tmp860 - _tmp814 * _tmp856 - _tmp821 * _tmp868 + _tmp826 * _tmp864;
  const Scalar _tmp870 =
      -_tmp807 * _tmp864 + _tmp814 * _tmp868 - _tmp821 * _tmp856 + _tmp826 * _tmp860;
  const Scalar _tmp871 =
      -_tmp807 * _tmp856 - _tmp814 * _tmp860 + _tmp821 * _tmp864 + _tmp826 * _tmp868;
  const Scalar _tmp872 = _tmp2 * priors_0_1_sqrt_info(2, 3) + _tmp50 * priors_0_1_sqrt_info(2, 4) +
                         _tmp54 * priors_0_1_sqrt_info(2, 5);
  const Scalar _tmp873 = _tmp49 * priors_0_1_sqrt_info(2, 4) + _tmp52 * priors_0_1_sqrt_info(2, 5) +
                         _tmp6 * priors_0_1_sqrt_info(2, 3);
  const Scalar _tmp874 = _tmp10 * priors_0_1_sqrt_info(2, 3) + _tmp47 * priors_0_1_sqrt_info(2, 4) +
                         _tmp53 * priors_0_1_sqrt_info(2, 5);
  const Scalar _tmp875 =
      _tmp805 * priors_0_1_sqrt_info(3, 2) + _tmp817 * priors_0_1_sqrt_info(3, 0) +
      _tmp818 * priors_0_1_sqrt_info(3, 2) + _tmp819 * priors_0_1_sqrt_info(3, 1) +
      _tmp839 * priors_0_1_sqrt_info(3, 0) + _tmp842 * priors_0_1_sqrt_info(3, 1) -
      _tmp865 * priors_0_1_sqrt_info(3, 1) - _tmp866 * priors_0_1_sqrt_info(3, 0) -
      _tmp867 * priors_0_1_sqrt_info(3, 2);
  const Scalar _tmp876 = _tmp788 * priors_0_1_sqrt_info(3, 2);
  const Scalar _tmp877 =
      _tmp805 * priors_0_1_sqrt_info(3, 0) + _tmp815 * _tmp876 +
      _tmp823 * priors_0_1_sqrt_info(3, 1) + _tmp824 * priors_0_1_sqrt_info(3, 0) +
      _tmp840 * priors_0_1_sqrt_info(3, 1) + _tmp844 * priors_0_1_sqrt_info(3, 2) -
      _tmp861 * priors_0_1_sqrt_info(3, 1) - _tmp862 * priors_0_1_sqrt_info(3, 0) -
      _tmp863 * priors_0_1_sqrt_info(3, 2);
  const Scalar _tmp878 =
      _tmp776 * priors_0_1_sqrt_info(3, 2) + _tmp781 * _tmp876 +
      _tmp787 * priors_0_1_sqrt_info(3, 1) + _tmp803 * priors_0_1_sqrt_info(3, 0) +
      _tmp805 * priors_0_1_sqrt_info(3, 1) + _tmp836 * priors_0_1_sqrt_info(3, 0) -
      _tmp857 * priors_0_1_sqrt_info(3, 0) - _tmp858 * priors_0_1_sqrt_info(3, 2) -
      _tmp859 * priors_0_1_sqrt_info(3, 1);
  const Scalar _tmp879 =
      _tmp776 * priors_0_1_sqrt_info(3, 0) + _tmp804 * _tmp876 +
      _tmp810 * priors_0_1_sqrt_info(3, 0) + _tmp812 * priors_0_1_sqrt_info(3, 1) +
      _tmp839 * priors_0_1_sqrt_info(3, 1) + _tmp840 * priors_0_1_sqrt_info(3, 2) -
      _tmp853 * priors_0_1_sqrt_info(3, 1) - _tmp854 * priors_0_1_sqrt_info(3, 2) -
      _tmp855 * priors_0_1_sqrt_info(3, 0);
  const Scalar _tmp880 =
      _tmp807 * _tmp878 - _tmp814 * _tmp879 - _tmp821 * _tmp875 + _tmp826 * _tmp877;
  const Scalar _tmp881 =
      -_tmp807 * _tmp877 + _tmp814 * _tmp875 - _tmp821 * _tmp879 + _tmp826 * _tmp878;
  const Scalar _tmp882 =
      -_tmp807 * _tmp879 - _tmp814 * _tmp878 + _tmp821 * _tmp877 + _tmp826 * _tmp875;
  const Scalar _tmp883 = _tmp2 * priors_0_1_sqrt_info(3, 3) + _tmp50 * priors_0_1_sqrt_info(3, 4) +
                         _tmp54 * priors_0_1_sqrt_info(3, 5);
  const Scalar _tmp884 = _tmp49 * priors_0_1_sqrt_info(3, 4) + _tmp52 * priors_0_1_sqrt_info(3, 5) +
                         _tmp6 * priors_0_1_sqrt_info(3, 3);
  const Scalar _tmp885 = _tmp10 * priors_0_1_sqrt_info(3, 3) + _tmp47 * priors_0_1_sqrt_info(3, 4) +
                         _tmp53 * priors_0_1_sqrt_info(3, 5);
  const Scalar _tmp886 = _tmp794 * priors_0_1_sqrt_info(4, 1);
  const Scalar _tmp887 = _tmp788 * priors_0_1_sqrt_info(4, 2);
  const Scalar _tmp888 =
      _tmp776 * priors_0_1_sqrt_info(4, 2) - _tmp781 * _tmp886 + _tmp781 * _tmp887 +
      _tmp787 * priors_0_1_sqrt_info(4, 1) + _tmp803 * priors_0_1_sqrt_info(4, 0) +
      _tmp805 * priors_0_1_sqrt_info(4, 1) + _tmp836 * priors_0_1_sqrt_info(4, 0) -
      _tmp857 * priors_0_1_sqrt_info(4, 0) - _tmp858 * priors_0_1_sqrt_info(4, 2);
  const Scalar _tmp889 =
      -_tmp802 * _tmp886 + _tmp805 * priors_0_1_sqrt_info(4, 2) +
      _tmp817 * priors_0_1_sqrt_info(4, 0) + _tmp818 * priors_0_1_sqrt_info(4, 2) +
      _tmp819 * priors_0_1_sqrt_info(4, 1) + _tmp839 * priors_0_1_sqrt_info(4, 0) +
      _tmp842 * priors_0_1_sqrt_info(4, 1) - _tmp866 * priors_0_1_sqrt_info(4, 0) -
      _tmp867 * priors_0_1_sqrt_info(4, 2);
  const Scalar _tmp890 =
      _tmp776 * priors_0_1_sqrt_info(4, 0) - _tmp804 * _tmp886 + _tmp804 * _tmp887 +
      _tmp810 * priors_0_1_sqrt_info(4, 0) + _tmp812 * priors_0_1_sqrt_info(4, 1) +
      _tmp839 * priors_0_1_sqrt_info(4, 1) + _tmp840 * priors_0_1_sqrt_info(4, 2) -
      _tmp854 * priors_0_1_sqrt_info(4, 2) - _tmp855 * priors_0_1_sqrt_info(4, 0);
  const Scalar _tmp891 =
      _tmp805 * priors_0_1_sqrt_info(4, 0) - _tmp815 * _tmp886 + _tmp815 * _tmp887 +
      _tmp823 * priors_0_1_sqrt_info(4, 1) + _tmp824 * priors_0_1_sqrt_info(4, 0) +
      _tmp840 * priors_0_1_sqrt_info(4, 1) + _tmp844 * priors_0_1_sqrt_info(4, 2) -
      _tmp862 * priors_0_1_sqrt_info(4, 0) - _tmp863 * priors_0_1_sqrt_info(4, 2);
  const Scalar _tmp892 =
      _tmp807 * _tmp888 - _tmp814 * _tmp890 - _tmp821 * _tmp889 + _tmp826 * _tmp891;
  const Scalar _tmp893 =
      -_tmp807 * _tmp891 + _tmp814 * _tmp889 - _tmp821 * _tmp890 + _tmp826 * _tmp888;
  const Scalar _tmp894 =
      -_tmp807 * _tmp890 - _tmp814 * _tmp888 + _tmp821 * _tmp891 + _tmp826 * _tmp889;
  const Scalar _tmp895 = _tmp2 * priors_0_1_sqrt_info(4, 3) + _tmp50 * priors_0_1_sqrt_info(4, 4) +
                         _tmp54 * priors_0_1_sqrt_info(4, 5);
  const Scalar _tmp896 = _tmp49 * priors_0_1_sqrt_info(4, 4) + _tmp52 * priors_0_1_sqrt_info(4, 5) +
                         _tmp6 * priors_0_1_sqrt_info(4, 3);
  const Scalar _tmp897 = _tmp10 * priors_0_1_sqrt_info(4, 3) + _tmp47 * priors_0_1_sqrt_info(4, 4) +
                         _tmp53 * priors_0_1_sqrt_info(4, 5);
  const Scalar _tmp898 = _tmp30 * _tmp782;
  const Scalar _tmp899 = _tmp784 * _tmp898;
  const Scalar _tmp900 = _tmp64 * _tmp899;
  const Scalar _tmp901 = _tmp790 * _tmp898;
  const Scalar _tmp902 = _tmp64 * _tmp901;
  const Scalar _tmp903 =
      _tmp65 * _tmp808 + _tmp805 * priors_0_1_sqrt_info(5, 2) + _tmp816 * _tmp900 -
      _tmp816 * _tmp902 + _tmp818 * priors_0_1_sqrt_info(5, 2) +
      _tmp819 * priors_0_1_sqrt_info(5, 1) + _tmp842 * priors_0_1_sqrt_info(5, 1) -
      _tmp865 * priors_0_1_sqrt_info(5, 1) - _tmp867 * priors_0_1_sqrt_info(5, 2);
  const Scalar _tmp904 = _tmp64 * _tmp804;
  const Scalar _tmp905 = _tmp41 * _tmp904;
  const Scalar _tmp906 = _tmp788 * priors_0_1_sqrt_info(5, 2);
  const Scalar _tmp907 =
      _tmp65 * _tmp775 + _tmp804 * _tmp906 + _tmp812 * priors_0_1_sqrt_info(5, 1) +
      _tmp839 * priors_0_1_sqrt_info(5, 1) + _tmp840 * priors_0_1_sqrt_info(5, 2) -
      _tmp853 * priors_0_1_sqrt_info(5, 1) - _tmp854 * priors_0_1_sqrt_info(5, 2) +
      _tmp899 * _tmp905 - _tmp901 * _tmp905;
  const Scalar _tmp908 =
      _tmp38 * _tmp904 + _tmp815 * _tmp906 + _tmp822 * _tmp900 - _tmp822 * _tmp902 +
      _tmp823 * priors_0_1_sqrt_info(5, 1) + _tmp840 * priors_0_1_sqrt_info(5, 1) +
      _tmp844 * priors_0_1_sqrt_info(5, 2) - _tmp861 * priors_0_1_sqrt_info(5, 1) -
      _tmp863 * priors_0_1_sqrt_info(5, 2);
  const Scalar _tmp909 =
      _tmp65 * _tmp802 + _tmp776 * priors_0_1_sqrt_info(5, 2) + _tmp781 * _tmp906 +
      _tmp787 * priors_0_1_sqrt_info(5, 1) + _tmp796 * _tmp900 - _tmp796 * _tmp902 +
      _tmp805 * priors_0_1_sqrt_info(5, 1) - _tmp858 * priors_0_1_sqrt_info(5, 2) -
      _tmp859 * priors_0_1_sqrt_info(5, 1);
  const Scalar _tmp910 =
      _tmp807 * _tmp909 - _tmp814 * _tmp907 - _tmp821 * _tmp903 + _tmp826 * _tmp908;
  const Scalar _tmp911 =
      -_tmp807 * _tmp908 + _tmp814 * _tmp903 - _tmp821 * _tmp907 + _tmp826 * _tmp909;
  const Scalar _tmp912 =
      -_tmp807 * _tmp907 - _tmp814 * _tmp909 + _tmp821 * _tmp908 + _tmp826 * _tmp903;
  const Scalar _tmp913 = _tmp2 * priors_0_1_sqrt_info(5, 3) + _tmp50 * priors_0_1_sqrt_info(5, 4) +
                         _tmp54 * priors_0_1_sqrt_info(5, 5);
  const Scalar _tmp914 = _tmp49 * priors_0_1_sqrt_info(5, 4) + _tmp52 * priors_0_1_sqrt_info(5, 5) +
                         _tmp6 * priors_0_1_sqrt_info(5, 3);
  const Scalar _tmp915 = _tmp10 * priors_0_1_sqrt_info(5, 3) + _tmp47 * priors_0_1_sqrt_info(5, 4) +
                         _tmp53 * priors_0_1_sqrt_info(5, 5);
  const Scalar _tmp916 = _priors_1_0_target_T_src[0] * _views_0_pose[1];
  const Scalar _tmp917 = -_tmp916;
  const Scalar _tmp918 = _priors_1_0_target_T_src[1] * _views_0_pose[0];
  const Scalar _tmp919 = _priors_1_0_target_T_src[3] * _views_0_pose[2];
  const Scalar _tmp920 = _priors_1_0_target_T_src[2] * _views_0_pose[3];
  const Scalar _tmp921 = -_tmp920;
  const Scalar _tmp922 = _tmp919 + _tmp921;
  const Scalar _tmp923 = _tmp105 * (_tmp917 + _tmp918 + _tmp922);
  const Scalar _tmp924 = _priors_1_0_target_T_src[0] * _views_0_pose[0];
  const Scalar _tmp925 = _priors_1_0_target_T_src[3] * _views_0_pose[3];
  const Scalar _tmp926 = _priors_1_0_target_T_src[1] * _views_0_pose[1];
  const Scalar _tmp927 = _priors_1_0_target_T_src[2] * _views_0_pose[2];
  const Scalar _tmp928 = _tmp926 + _tmp927;
  const Scalar _tmp929 = _tmp924 + _tmp925 + _tmp928;
  const Scalar _tmp930 = _tmp101 * ((((_tmp34 - _tmp97) > 0) - ((_tmp34 - _tmp97) < 0)) + 1);
  const Scalar _tmp931 = _tmp930 * _tmp98 / (_tmp99 * std::sqrt(_tmp99));
  const Scalar _tmp932 = _tmp104 * _tmp931;
  const Scalar _tmp933 = _tmp109 * _tmp932;
  const Scalar _tmp934 = _tmp929 * _tmp933;
  const Scalar _tmp935 = _tmp930 / _tmp99;
  const Scalar _tmp936 = _tmp102 * _tmp935;
  const Scalar _tmp937 = _tmp929 * _tmp936;
  const Scalar _tmp938 = _tmp107 * _tmp937;
  const Scalar _tmp939 = _tmp937 * _tmp95;
  const Scalar _tmp940 = _tmp109 * _tmp937;
  const Scalar _tmp941 = _tmp107 * _tmp929;
  const Scalar _tmp942 = _tmp932 * priors_1_0_sqrt_info(0, 1);
  const Scalar _tmp943 = _priors_1_0_target_T_src[2] * _views_0_pose[0];
  const Scalar _tmp944 = -_tmp943;
  const Scalar _tmp945 = _priors_1_0_target_T_src[0] * _views_0_pose[2];
  const Scalar _tmp946 = _priors_1_0_target_T_src[1] * _views_0_pose[3];
  const Scalar _tmp947 = -_tmp946;
  const Scalar _tmp948 = _priors_1_0_target_T_src[3] * _views_0_pose[1];
  const Scalar _tmp949 = _tmp947 + _tmp948;
  const Scalar _tmp950 = _tmp100 * (_tmp944 + _tmp945 + _tmp949);
  const Scalar _tmp951 = _tmp104 * _tmp950;
  const Scalar _tmp952 = _tmp70 * _views_1_pose[5];
  const Scalar _tmp953 = _tmp70 * _views_0_pose[5];
  const Scalar _tmp954 = _tmp83 * _views_0_pose[4] - _tmp83 * _views_1_pose[4];
  const Scalar _tmp955 = _tmp952 - _tmp953 + _tmp954;
  const Scalar _tmp956 = _tmp83 * _views_1_pose[6];
  const Scalar _tmp957 = _tmp83 * _views_0_pose[6];
  const Scalar _tmp958 = 2 * _views_1_pose[2];
  const Scalar _tmp959 = _tmp958 * _views_0_pose[5] - _tmp958 * _views_1_pose[5];
  const Scalar _tmp960 = _tmp956 - _tmp957 + _tmp959;
  const Scalar _tmp961 = _tmp958 * _views_1_pose[4];
  const Scalar _tmp962 = _tmp958 * _views_0_pose[4];
  const Scalar _tmp963 = _tmp70 * _views_0_pose[6] - _tmp70 * _views_1_pose[6];
  const Scalar _tmp964 = _tmp961 - _tmp962 + _tmp963;
  const Scalar _tmp965 = _priors_1_0_target_T_src[0] * _views_0_pose[3];
  const Scalar _tmp966 = -_tmp965;
  const Scalar _tmp967 = _priors_1_0_target_T_src[2] * _views_0_pose[1];
  const Scalar _tmp968 = _priors_1_0_target_T_src[1] * _views_0_pose[2];
  const Scalar _tmp969 = -_tmp968;
  const Scalar _tmp970 = _priors_1_0_target_T_src[3] * _views_0_pose[0];
  const Scalar _tmp971 = _tmp969 + _tmp970;
  const Scalar _tmp972 = _tmp105 * (_tmp966 + _tmp967 + _tmp971);
  const Scalar _tmp973 = _tmp929 * _tmp932;
  const Scalar _tmp974 = _tmp95 * priors_1_0_sqrt_info(0, 0);
  const Scalar _tmp975 =
      _tmp923 * priors_1_0_sqrt_info(0, 2) + _tmp934 * priors_1_0_sqrt_info(0, 2) -
      _tmp938 * priors_1_0_sqrt_info(0, 1) - _tmp939 * priors_1_0_sqrt_info(0, 0) -
      _tmp940 * priors_1_0_sqrt_info(0, 2) + _tmp941 * _tmp942 +
      _tmp951 * priors_1_0_sqrt_info(0, 1) + _tmp955 * priors_1_0_sqrt_info(0, 5) +
      _tmp960 * priors_1_0_sqrt_info(0, 3) + _tmp964 * priors_1_0_sqrt_info(0, 4) +
      _tmp972 * priors_1_0_sqrt_info(0, 0) + _tmp973 * _tmp974;
  const Scalar _tmp976 = -_tmp945;
  const Scalar _tmp977 = _tmp944 + _tmp976;
  const Scalar _tmp978 = _tmp105 * (_tmp947 - _tmp948 + _tmp977);
  const Scalar _tmp979 = -_tmp967;
  const Scalar _tmp980 = _tmp966 + _tmp979;
  const Scalar _tmp981 = _tmp968 + _tmp970 + _tmp980;
  const Scalar _tmp982 = _tmp936 * _tmp981;
  const Scalar _tmp983 = _tmp95 * _tmp982;
  const Scalar _tmp984 = _tmp109 * _tmp982;
  const Scalar _tmp985 = _tmp107 * _tmp982;
  const Scalar _tmp986 = _tmp933 * _tmp981;
  const Scalar _tmp987 = _tmp932 * _tmp981;
  const Scalar _tmp988 = -_tmp925;
  const Scalar _tmp989 = _tmp105 * (-_tmp924 + _tmp928 + _tmp988);
  const Scalar _tmp990 = _tmp107 * _tmp987;
  const Scalar _tmp991 = -_tmp918;
  const Scalar _tmp992 = _tmp917 + _tmp991;
  const Scalar _tmp993 = _tmp919 + _tmp920 + _tmp992;
  const Scalar _tmp994 = _tmp105 * _tmp993;
  const Scalar _tmp995 = _tmp67 * _views_1_pose[6];
  const Scalar _tmp996 = 4 * _views_1_pose[0];
  const Scalar _tmp997 = _tmp67 * _views_0_pose[6];
  const Scalar _tmp998 =
      _tmp954 - _tmp995 - _tmp996 * _views_0_pose[5] + _tmp996 * _views_1_pose[5] + _tmp997;
  const Scalar _tmp999 = _tmp83 * _views_0_pose[5] - _tmp83 * _views_1_pose[5];
  const Scalar _tmp1000 = _tmp958 * _views_0_pose[6] - _tmp958 * _views_1_pose[6];
  const Scalar _tmp1001 = _tmp1000 + _tmp999;
  const Scalar _tmp1002 = _tmp67 * _views_1_pose[5];
  const Scalar _tmp1003 = _tmp67 * _views_0_pose[5];
  const Scalar _tmp1004 = _tmp1002 - _tmp1003 - _tmp961 + _tmp962 - _tmp996 * _views_0_pose[6] +
                          _tmp996 * _views_1_pose[6];
  const Scalar _tmp1005 =
      _tmp1001 * priors_1_0_sqrt_info(0, 3) + _tmp1004 * priors_1_0_sqrt_info(0, 5) +
      _tmp974 * _tmp987 + _tmp978 * priors_1_0_sqrt_info(0, 2) -
      _tmp983 * priors_1_0_sqrt_info(0, 0) - _tmp984 * priors_1_0_sqrt_info(0, 2) -
      _tmp985 * priors_1_0_sqrt_info(0, 1) + _tmp986 * priors_1_0_sqrt_info(0, 2) +
      _tmp989 * priors_1_0_sqrt_info(0, 0) + _tmp990 * priors_1_0_sqrt_info(0, 1) +
      _tmp994 * priors_1_0_sqrt_info(0, 1) + _tmp998 * priors_1_0_sqrt_info(0, 4);
  const Scalar _tmp1006 = _tmp916 + _tmp922 + _tmp991;
  const Scalar _tmp1007 = _tmp1006 * _tmp933;
  const Scalar _tmp1008 = _tmp924 + _tmp988;
  const Scalar _tmp1009 = _tmp105 * (_tmp1008 + _tmp926 - _tmp927);
  const Scalar _tmp1010 = _tmp105 * (_tmp946 + _tmp948 + _tmp977);
  const Scalar _tmp1011 = _tmp1006 * _tmp932;
  const Scalar _tmp1012 = _tmp969 - _tmp970 + _tmp980;
  const Scalar _tmp1013 = _tmp1012 * _tmp105;
  const Scalar _tmp1014 = _tmp70 * _views_0_pose[4] - _tmp70 * _views_1_pose[4];
  const Scalar _tmp1015 = _tmp1014 + _tmp999;
  const Scalar _tmp1016 = _tmp67 * _views_1_pose[4];
  const Scalar _tmp1017 = _tmp67 * _views_0_pose[4];
  const Scalar _tmp1018 = 4 * _views_1_pose[2];
  const Scalar _tmp1019 = _tmp1016 - _tmp1017 - _tmp1018 * _views_0_pose[5] +
                          _tmp1018 * _views_1_pose[5] - _tmp956 + _tmp957;
  const Scalar _tmp1020 =
      -_tmp1002 + _tmp1003 - _tmp1018 * _views_0_pose[4] + _tmp1018 * _views_1_pose[4] + _tmp963;
  const Scalar _tmp1021 = _tmp1006 * _tmp936;
  const Scalar _tmp1022 = _tmp1021 * _tmp109;
  const Scalar _tmp1023 = _tmp1021 * _tmp107;
  const Scalar _tmp1024 = _tmp1021 * _tmp95;
  const Scalar _tmp1025 =
      _tmp1006 * _tmp107 * _tmp942 + _tmp1007 * priors_1_0_sqrt_info(0, 2) +
      _tmp1009 * priors_1_0_sqrt_info(0, 2) + _tmp1010 * priors_1_0_sqrt_info(0, 0) +
      _tmp1011 * _tmp974 + _tmp1013 * priors_1_0_sqrt_info(0, 1) +
      _tmp1015 * priors_1_0_sqrt_info(0, 5) + _tmp1019 * priors_1_0_sqrt_info(0, 4) +
      _tmp1020 * priors_1_0_sqrt_info(0, 3) - _tmp1022 * priors_1_0_sqrt_info(0, 2) -
      _tmp1023 * priors_1_0_sqrt_info(0, 1) - _tmp1024 * priors_1_0_sqrt_info(0, 0);
  const Scalar _tmp1026 = _tmp1008 - _tmp926 + _tmp927;
  const Scalar _tmp1027 = _tmp1026 * _tmp105;
  const Scalar _tmp1028 = _tmp943 + _tmp949 + _tmp976;
  const Scalar _tmp1029 = _tmp1028 * _tmp932;
  const Scalar _tmp1030 = _tmp1028 * _tmp107;
  const Scalar _tmp1031 = _tmp105 * (_tmp965 + _tmp971 + _tmp979);
  const Scalar _tmp1032 = _tmp1028 * _tmp936;
  const Scalar _tmp1033 = _tmp1032 * _tmp95;
  const Scalar _tmp1034 = _tmp1032 * _tmp109;
  const Scalar _tmp1035 = _tmp1032 * _tmp107;
  const Scalar _tmp1036 = 4 * _views_1_pose[1];
  const Scalar _tmp1037 = -_tmp1036 * _views_0_pose[4] + _tmp1036 * _views_1_pose[4] - _tmp952 +
                          _tmp953 + _tmp995 - _tmp997;
  const Scalar _tmp1038 =
      -_tmp1016 + _tmp1017 - _tmp1036 * _views_0_pose[6] + _tmp1036 * _views_1_pose[6] + _tmp959;
  const Scalar _tmp1039 = _tmp1000 + _tmp1014;
  const Scalar _tmp1040 = _tmp1028 * _tmp933;
  const Scalar _tmp1041 = _tmp105 * (-_tmp919 + _tmp921 + _tmp992);
  const Scalar _tmp1042 =
      _tmp1027 * priors_1_0_sqrt_info(0, 1) + _tmp1029 * _tmp974 + _tmp1030 * _tmp942 +
      _tmp1031 * priors_1_0_sqrt_info(0, 2) - _tmp1033 * priors_1_0_sqrt_info(0, 0) -
      _tmp1034 * priors_1_0_sqrt_info(0, 2) - _tmp1035 * priors_1_0_sqrt_info(0, 1) +
      _tmp1037 * priors_1_0_sqrt_info(0, 3) + _tmp1038 * priors_1_0_sqrt_info(0, 5) +
      _tmp1039 * priors_1_0_sqrt_info(0, 4) + _tmp1040 * priors_1_0_sqrt_info(0, 2) +
      _tmp1041 * priors_1_0_sqrt_info(0, 0);
  const Scalar _tmp1043 =
      _tmp1005 * _tmp826 - _tmp1025 * _tmp821 + _tmp1042 * _tmp807 - _tmp814 * _tmp975;
  const Scalar _tmp1044 =
      -_tmp1005 * _tmp807 + _tmp1025 * _tmp814 + _tmp1042 * _tmp826 - _tmp821 * _tmp975;
  const Scalar _tmp1045 =
      _tmp1005 * _tmp821 + _tmp1025 * _tmp826 - _tmp1042 * _tmp814 - _tmp807 * _tmp975;
  const Scalar _tmp1046 = -_tmp71;
  const Scalar _tmp1047 = _tmp1046 + _tmp69;
  const Scalar _tmp1048 = -_tmp73;
  const Scalar _tmp1049 = _tmp1048 + _tmp74;
  const Scalar _tmp1050 = _tmp78 - 1;
  const Scalar _tmp1051 = _tmp1050 + _tmp76;
  const Scalar _tmp1052 = _tmp1047 * priors_1_0_sqrt_info(0, 5) +
                          _tmp1049 * priors_1_0_sqrt_info(0, 4) +
                          _tmp1051 * priors_1_0_sqrt_info(0, 3);
  const Scalar _tmp1053 = _tmp1048 + _tmp86;
  const Scalar _tmp1054 = -_tmp84;
  const Scalar _tmp1055 = _tmp1054 + _tmp82;
  const Scalar _tmp1056 = _tmp76 + _tmp88 - 1;
  const Scalar _tmp1057 = _tmp1053 * priors_1_0_sqrt_info(0, 3) +
                          _tmp1055 * priors_1_0_sqrt_info(0, 5) +
                          _tmp1056 * priors_1_0_sqrt_info(0, 4);
  const Scalar _tmp1058 = _tmp1046 + _tmp68;
  const Scalar _tmp1059 = _tmp1054 + _tmp111;
  const Scalar _tmp1060 = _tmp1050 + _tmp88;
  const Scalar _tmp1061 = _tmp1058 * priors_1_0_sqrt_info(0, 3) +
                          _tmp1059 * priors_1_0_sqrt_info(0, 4) +
                          _tmp1060 * priors_1_0_sqrt_info(0, 5);
  const Scalar _tmp1062 = _tmp118 * _tmp931;
  const Scalar _tmp1063 = _tmp1062 * _tmp107;
  const Scalar _tmp1064 = _tmp95 * priors_1_0_sqrt_info(1, 0);
  const Scalar _tmp1065 = _tmp117 * _tmp935;
  const Scalar _tmp1066 = _tmp1065 * _tmp107;
  const Scalar _tmp1067 =
      _tmp1006 * _tmp1063 - _tmp1006 * _tmp1066 + _tmp1007 * priors_1_0_sqrt_info(1, 2) +
      _tmp1009 * priors_1_0_sqrt_info(1, 2) + _tmp1010 * priors_1_0_sqrt_info(1, 0) +
      _tmp1011 * _tmp1064 + _tmp1012 * _tmp119 + _tmp1015 * priors_1_0_sqrt_info(1, 5) +
      _tmp1019 * priors_1_0_sqrt_info(1, 4) + _tmp1020 * priors_1_0_sqrt_info(1, 3) -
      _tmp1022 * priors_1_0_sqrt_info(1, 2) - _tmp1024 * priors_1_0_sqrt_info(1, 0);
  const Scalar _tmp1068 =
      _tmp1001 * priors_1_0_sqrt_info(1, 3) + _tmp1004 * priors_1_0_sqrt_info(1, 5) +
      _tmp1063 * _tmp981 + _tmp1064 * _tmp987 - _tmp1066 * _tmp981 + _tmp119 * _tmp993 +
      _tmp978 * priors_1_0_sqrt_info(1, 2) - _tmp983 * priors_1_0_sqrt_info(1, 0) -
      _tmp984 * priors_1_0_sqrt_info(1, 2) + _tmp986 * priors_1_0_sqrt_info(1, 2) +
      _tmp989 * priors_1_0_sqrt_info(1, 0) + _tmp998 * priors_1_0_sqrt_info(1, 4);
  const Scalar _tmp1069 =
      _tmp1026 * _tmp119 - _tmp1028 * _tmp1066 + _tmp1029 * _tmp1064 + _tmp1030 * _tmp1062 +
      _tmp1031 * priors_1_0_sqrt_info(1, 2) - _tmp1033 * priors_1_0_sqrt_info(1, 0) -
      _tmp1034 * priors_1_0_sqrt_info(1, 2) + _tmp1037 * priors_1_0_sqrt_info(1, 3) +
      _tmp1038 * priors_1_0_sqrt_info(1, 5) + _tmp1039 * priors_1_0_sqrt_info(1, 4) +
      _tmp1040 * priors_1_0_sqrt_info(1, 2) + _tmp1041 * priors_1_0_sqrt_info(1, 0);
  const Scalar _tmp1070 =
      _tmp1062 * _tmp941 + _tmp1064 * _tmp973 - _tmp1065 * _tmp941 + _tmp118 * _tmp950 +
      _tmp923 * priors_1_0_sqrt_info(1, 2) + _tmp934 * priors_1_0_sqrt_info(1, 2) -
      _tmp939 * priors_1_0_sqrt_info(1, 0) - _tmp940 * priors_1_0_sqrt_info(1, 2) +
      _tmp955 * priors_1_0_sqrt_info(1, 5) + _tmp960 * priors_1_0_sqrt_info(1, 3) +
      _tmp964 * priors_1_0_sqrt_info(1, 4) + _tmp972 * priors_1_0_sqrt_info(1, 0);
  const Scalar _tmp1071 =
      -_tmp1067 * _tmp821 + _tmp1068 * _tmp826 + _tmp1069 * _tmp807 - _tmp1070 * _tmp814;
  const Scalar _tmp1072 =
      _tmp1067 * _tmp814 - _tmp1068 * _tmp807 + _tmp1069 * _tmp826 - _tmp1070 * _tmp821;
  const Scalar _tmp1073 =
      _tmp1067 * _tmp826 + _tmp1068 * _tmp821 - _tmp1069 * _tmp814 - _tmp1070 * _tmp807;
  const Scalar _tmp1074 = _tmp1047 * priors_1_0_sqrt_info(1, 5) +
                          _tmp1049 * priors_1_0_sqrt_info(1, 4) +
                          _tmp1051 * priors_1_0_sqrt_info(1, 3);
  const Scalar _tmp1075 = _tmp1053 * priors_1_0_sqrt_info(1, 3) +
                          _tmp1055 * priors_1_0_sqrt_info(1, 5) +
                          _tmp1056 * priors_1_0_sqrt_info(1, 4);
  const Scalar _tmp1076 = _tmp1058 * priors_1_0_sqrt_info(1, 3) +
                          _tmp1059 * priors_1_0_sqrt_info(1, 4) +
                          _tmp1060 * priors_1_0_sqrt_info(1, 5);
  const Scalar _tmp1077 = _tmp107 * priors_1_0_sqrt_info(2, 1);
  const Scalar _tmp1078 = _tmp109 * priors_1_0_sqrt_info(2, 2);
  const Scalar _tmp1079 = _tmp1078 * _tmp932;
  const Scalar _tmp1080 = _tmp95 * priors_1_0_sqrt_info(2, 0);
  const Scalar _tmp1081 =
      -_tmp1077 * _tmp937 + _tmp1077 * _tmp973 + _tmp1079 * _tmp929 + _tmp1080 * _tmp973 +
      _tmp923 * priors_1_0_sqrt_info(2, 2) - _tmp939 * priors_1_0_sqrt_info(2, 0) -
      _tmp940 * priors_1_0_sqrt_info(2, 2) + _tmp951 * priors_1_0_sqrt_info(2, 1) +
      _tmp955 * priors_1_0_sqrt_info(2, 5) + _tmp960 * priors_1_0_sqrt_info(2, 3) +
      _tmp964 * priors_1_0_sqrt_info(2, 4) + _tmp972 * priors_1_0_sqrt_info(2, 0);
  const Scalar _tmp1082 =
      _tmp1027 * priors_1_0_sqrt_info(2, 1) + _tmp1028 * _tmp1079 + _tmp1029 * _tmp1077 +
      _tmp1029 * _tmp1080 + _tmp1031 * priors_1_0_sqrt_info(2, 2) - _tmp1032 * _tmp1077 -
      _tmp1033 * priors_1_0_sqrt_info(2, 0) - _tmp1034 * priors_1_0_sqrt_info(2, 2) +
      _tmp1037 * priors_1_0_sqrt_info(2, 3) + _tmp1038 * priors_1_0_sqrt_info(2, 5) +
      _tmp1039 * priors_1_0_sqrt_info(2, 4) + _tmp1041 * priors_1_0_sqrt_info(2, 0);
  const Scalar _tmp1083 =
      _tmp1001 * priors_1_0_sqrt_info(2, 3) + _tmp1004 * priors_1_0_sqrt_info(2, 5) -
      _tmp1077 * _tmp982 + _tmp1077 * _tmp987 + _tmp1079 * _tmp981 + _tmp1080 * _tmp987 +
      _tmp978 * priors_1_0_sqrt_info(2, 2) - _tmp983 * priors_1_0_sqrt_info(2, 0) -
      _tmp984 * priors_1_0_sqrt_info(2, 2) + _tmp989 * priors_1_0_sqrt_info(2, 0) +
      _tmp994 * priors_1_0_sqrt_info(2, 1) + _tmp998 * priors_1_0_sqrt_info(2, 4);
  const Scalar _tmp1084 =
      _tmp1006 * _tmp1079 + _tmp1009 * priors_1_0_sqrt_info(2, 2) +
      _tmp1010 * priors_1_0_sqrt_info(2, 0) + _tmp1011 * _tmp1077 + _tmp1011 * _tmp1080 +
      _tmp1013 * priors_1_0_sqrt_info(2, 1) + _tmp1015 * priors_1_0_sqrt_info(2, 5) +
      _tmp1019 * priors_1_0_sqrt_info(2, 4) + _tmp1020 * priors_1_0_sqrt_info(2, 3) -
      _tmp1021 * _tmp1077 - _tmp1021 * _tmp1078 - _tmp1024 * priors_1_0_sqrt_info(2, 0);
  const Scalar _tmp1085 =
      -_tmp1081 * _tmp814 + _tmp1082 * _tmp807 + _tmp1083 * _tmp826 - _tmp1084 * _tmp821;
  const Scalar _tmp1086 =
      -_tmp1081 * _tmp821 + _tmp1082 * _tmp826 - _tmp1083 * _tmp807 + _tmp1084 * _tmp814;
  const Scalar _tmp1087 =
      -_tmp1081 * _tmp807 - _tmp1082 * _tmp814 + _tmp1083 * _tmp821 + _tmp1084 * _tmp826;
  const Scalar _tmp1088 = _tmp1047 * priors_1_0_sqrt_info(2, 5) +
                          _tmp1049 * priors_1_0_sqrt_info(2, 4) +
                          _tmp1051 * priors_1_0_sqrt_info(2, 3);
  const Scalar _tmp1089 = _tmp1053 * priors_1_0_sqrt_info(2, 3) +
                          _tmp1055 * priors_1_0_sqrt_info(2, 5) +
                          _tmp1056 * priors_1_0_sqrt_info(2, 4);
  const Scalar _tmp1090 = _tmp1058 * priors_1_0_sqrt_info(2, 3) +
                          _tmp1059 * priors_1_0_sqrt_info(2, 4) +
                          _tmp1060 * priors_1_0_sqrt_info(2, 5);
  const Scalar _tmp1091 = _tmp933 * priors_1_0_sqrt_info(3, 2);
  const Scalar _tmp1092 = _tmp95 * priors_1_0_sqrt_info(3, 0);
  const Scalar _tmp1093 = _tmp932 * priors_1_0_sqrt_info(3, 1);
  const Scalar _tmp1094 = _tmp107 * _tmp1093;
  const Scalar _tmp1095 =
      _tmp1006 * _tmp1091 + _tmp1006 * _tmp1094 + _tmp1009 * priors_1_0_sqrt_info(3, 2) +
      _tmp1010 * priors_1_0_sqrt_info(3, 0) + _tmp1011 * _tmp1092 +
      _tmp1013 * priors_1_0_sqrt_info(3, 1) + _tmp1015 * priors_1_0_sqrt_info(3, 5) +
      _tmp1019 * priors_1_0_sqrt_info(3, 4) + _tmp1020 * priors_1_0_sqrt_info(3, 3) -
      _tmp1022 * priors_1_0_sqrt_info(3, 2) - _tmp1023 * priors_1_0_sqrt_info(3, 1) -
      _tmp1024 * priors_1_0_sqrt_info(3, 0);
  const Scalar _tmp1096 =
      _tmp1091 * _tmp929 + _tmp1092 * _tmp973 + _tmp1093 * _tmp941 +
      _tmp923 * priors_1_0_sqrt_info(3, 2) - _tmp938 * priors_1_0_sqrt_info(3, 1) -
      _tmp939 * priors_1_0_sqrt_info(3, 0) - _tmp940 * priors_1_0_sqrt_info(3, 2) +
      _tmp951 * priors_1_0_sqrt_info(3, 1) + _tmp955 * priors_1_0_sqrt_info(3, 5) +
      _tmp960 * priors_1_0_sqrt_info(3, 3) + _tmp964 * priors_1_0_sqrt_info(3, 4) +
      _tmp972 * priors_1_0_sqrt_info(3, 0);
  const Scalar _tmp1097 =
      _tmp1027 * priors_1_0_sqrt_info(3, 1) + _tmp1028 * _tmp1091 + _tmp1029 * _tmp1092 +
      _tmp1030 * _tmp1093 + _tmp1031 * priors_1_0_sqrt_info(3, 2) -
      _tmp1033 * priors_1_0_sqrt_info(3, 0) - _tmp1034 * priors_1_0_sqrt_info(3, 2) -
      _tmp1035 * priors_1_0_sqrt_info(3, 1) + _tmp1037 * priors_1_0_sqrt_info(3, 3) +
      _tmp1038 * priors_1_0_sqrt_info(3, 5) + _tmp1039 * priors_1_0_sqrt_info(3, 4) +
      _tmp1041 * priors_1_0_sqrt_info(3, 0);
  const Scalar _tmp1098 =
      _tmp1001 * priors_1_0_sqrt_info(3, 3) + _tmp1004 * priors_1_0_sqrt_info(3, 5) +
      _tmp1091 * _tmp981 + _tmp1092 * _tmp987 + _tmp1094 * _tmp981 +
      _tmp978 * priors_1_0_sqrt_info(3, 2) - _tmp983 * priors_1_0_sqrt_info(3, 0) -
      _tmp984 * priors_1_0_sqrt_info(3, 2) - _tmp985 * priors_1_0_sqrt_info(3, 1) +
      _tmp989 * priors_1_0_sqrt_info(3, 0) + _tmp994 * priors_1_0_sqrt_info(3, 1) +
      _tmp998 * priors_1_0_sqrt_info(3, 4);
  const Scalar _tmp1099 =
      -_tmp1095 * _tmp821 - _tmp1096 * _tmp814 + _tmp1097 * _tmp807 + _tmp1098 * _tmp826;
  const Scalar _tmp1100 =
      _tmp1095 * _tmp814 - _tmp1096 * _tmp821 + _tmp1097 * _tmp826 - _tmp1098 * _tmp807;
  const Scalar _tmp1101 =
      _tmp1095 * _tmp826 - _tmp1096 * _tmp807 - _tmp1097 * _tmp814 + _tmp1098 * _tmp821;
  const Scalar _tmp1102 = _tmp1047 * priors_1_0_sqrt_info(3, 5) +
                          _tmp1049 * priors_1_0_sqrt_info(3, 4) +
                          _tmp1051 * priors_1_0_sqrt_info(3, 3);
  const Scalar _tmp1103 = _tmp1053 * priors_1_0_sqrt_info(3, 3) +
                          _tmp1055 * priors_1_0_sqrt_info(3, 5) +
                          _tmp1056 * priors_1_0_sqrt_info(3, 4);
  const Scalar _tmp1104 = _tmp1058 * priors_1_0_sqrt_info(3, 3) +
                          _tmp1059 * priors_1_0_sqrt_info(3, 4) +
                          _tmp1060 * priors_1_0_sqrt_info(3, 5);
  const Scalar _tmp1105 = _tmp107 * priors_1_0_sqrt_info(4, 1);
  const Scalar _tmp1106 = _tmp95 * priors_1_0_sqrt_info(4, 0);
  const Scalar _tmp1107 =
      _tmp1001 * priors_1_0_sqrt_info(4, 3) + _tmp1004 * priors_1_0_sqrt_info(4, 5) -
      _tmp1105 * _tmp982 + _tmp1105 * _tmp987 - _tmp1106 * _tmp982 + _tmp1106 * _tmp987 +
      _tmp978 * priors_1_0_sqrt_info(4, 2) - _tmp984 * priors_1_0_sqrt_info(4, 2) +
      _tmp986 * priors_1_0_sqrt_info(4, 2) + _tmp989 * priors_1_0_sqrt_info(4, 0) +
      _tmp994 * priors_1_0_sqrt_info(4, 1) + _tmp998 * priors_1_0_sqrt_info(4, 4);
  const Scalar _tmp1108 = _tmp1106 * _tmp932;
  const Scalar _tmp1109 = _tmp1105 * _tmp932;
  const Scalar _tmp1110 =
      _tmp1006 * _tmp1108 + _tmp1006 * _tmp1109 + _tmp1007 * priors_1_0_sqrt_info(4, 2) +
      _tmp1009 * priors_1_0_sqrt_info(4, 2) + _tmp1010 * priors_1_0_sqrt_info(4, 0) +
      _tmp1013 * priors_1_0_sqrt_info(4, 1) + _tmp1015 * priors_1_0_sqrt_info(4, 5) +
      _tmp1019 * priors_1_0_sqrt_info(4, 4) + _tmp1020 * priors_1_0_sqrt_info(4, 3) -
      _tmp1021 * _tmp1105 - _tmp1021 * _tmp1106 - _tmp1022 * priors_1_0_sqrt_info(4, 2);
  const Scalar _tmp1111 =
      -_tmp1105 * _tmp937 + _tmp1105 * _tmp973 - _tmp1106 * _tmp937 + _tmp1108 * _tmp929 +
      _tmp923 * priors_1_0_sqrt_info(4, 2) + _tmp934 * priors_1_0_sqrt_info(4, 2) -
      _tmp940 * priors_1_0_sqrt_info(4, 2) + _tmp951 * priors_1_0_sqrt_info(4, 1) +
      _tmp955 * priors_1_0_sqrt_info(4, 5) + _tmp960 * priors_1_0_sqrt_info(4, 3) +
      _tmp964 * priors_1_0_sqrt_info(4, 4) + _tmp972 * priors_1_0_sqrt_info(4, 0);
  const Scalar _tmp1112 =
      _tmp1027 * priors_1_0_sqrt_info(4, 1) + _tmp1028 * _tmp1108 + _tmp1028 * _tmp1109 +
      _tmp1031 * priors_1_0_sqrt_info(4, 2) - _tmp1032 * _tmp1105 - _tmp1032 * _tmp1106 -
      _tmp1034 * priors_1_0_sqrt_info(4, 2) + _tmp1037 * priors_1_0_sqrt_info(4, 3) +
      _tmp1038 * priors_1_0_sqrt_info(4, 5) + _tmp1039 * priors_1_0_sqrt_info(4, 4) +
      _tmp1040 * priors_1_0_sqrt_info(4, 2) + _tmp1041 * priors_1_0_sqrt_info(4, 0);
  const Scalar _tmp1113 =
      _tmp1107 * _tmp826 - _tmp1110 * _tmp821 - _tmp1111 * _tmp814 + _tmp1112 * _tmp807;
  const Scalar _tmp1114 =
      -_tmp1107 * _tmp807 + _tmp1110 * _tmp814 - _tmp1111 * _tmp821 + _tmp1112 * _tmp826;
  const Scalar _tmp1115 =
      _tmp1107 * _tmp821 + _tmp1110 * _tmp826 - _tmp1111 * _tmp807 - _tmp1112 * _tmp814;
  const Scalar _tmp1116 = _tmp1047 * priors_1_0_sqrt_info(4, 5) +
                          _tmp1049 * priors_1_0_sqrt_info(4, 4) +
                          _tmp1051 * priors_1_0_sqrt_info(4, 3);
  const Scalar _tmp1117 = _tmp1053 * priors_1_0_sqrt_info(4, 3) +
                          _tmp1055 * priors_1_0_sqrt_info(4, 5) +
                          _tmp1056 * priors_1_0_sqrt_info(4, 4);
  const Scalar _tmp1118 = _tmp1058 * priors_1_0_sqrt_info(4, 3) +
                          _tmp1059 * priors_1_0_sqrt_info(4, 4) +
                          _tmp1060 * priors_1_0_sqrt_info(4, 5);
  const Scalar _tmp1119 = _tmp933 * priors_1_0_sqrt_info(5, 2);
  const Scalar _tmp1120 = _tmp932 * priors_1_0_sqrt_info(5, 1);
  const Scalar _tmp1121 = _tmp95 * priors_1_0_sqrt_info(5, 0);
  const Scalar _tmp1122 =
      _tmp1119 * _tmp929 + _tmp1120 * _tmp941 + _tmp1121 * _tmp973 +
      _tmp923 * priors_1_0_sqrt_info(5, 2) - _tmp938 * priors_1_0_sqrt_info(5, 1) -
      _tmp939 * priors_1_0_sqrt_info(5, 0) - _tmp940 * priors_1_0_sqrt_info(5, 2) +
      _tmp951 * priors_1_0_sqrt_info(5, 1) + _tmp955 * priors_1_0_sqrt_info(5, 5) +
      _tmp960 * priors_1_0_sqrt_info(5, 3) + _tmp964 * priors_1_0_sqrt_info(5, 4) +
      _tmp972 * priors_1_0_sqrt_info(5, 0);
  const Scalar _tmp1123 =
      _tmp1027 * priors_1_0_sqrt_info(5, 1) + _tmp1028 * _tmp1119 + _tmp1029 * _tmp1121 +
      _tmp1030 * _tmp1120 + _tmp1031 * priors_1_0_sqrt_info(5, 2) -
      _tmp1033 * priors_1_0_sqrt_info(5, 0) - _tmp1034 * priors_1_0_sqrt_info(5, 2) -
      _tmp1035 * priors_1_0_sqrt_info(5, 1) + _tmp1037 * priors_1_0_sqrt_info(5, 3) +
      _tmp1038 * priors_1_0_sqrt_info(5, 5) + _tmp1039 * priors_1_0_sqrt_info(5, 4) +
      _tmp1041 * priors_1_0_sqrt_info(5, 0);
  const Scalar _tmp1124 =
      _tmp1006 * _tmp1119 + _tmp1009 * priors_1_0_sqrt_info(5, 2) +
      _tmp1010 * priors_1_0_sqrt_info(5, 0) + _tmp1011 * _tmp107 * priors_1_0_sqrt_info(5, 1) +
      _tmp1011 * _tmp1121 + _tmp1013 * priors_1_0_sqrt_info(5, 1) +
      _tmp1015 * priors_1_0_sqrt_info(5, 5) + _tmp1019 * priors_1_0_sqrt_info(5, 4) +
      _tmp1020 * priors_1_0_sqrt_info(5, 3) - _tmp1022 * priors_1_0_sqrt_info(5, 2) -
      _tmp1023 * priors_1_0_sqrt_info(5, 1) - _tmp1024 * priors_1_0_sqrt_info(5, 0);
  const Scalar _tmp1125 =
      _tmp1001 * priors_1_0_sqrt_info(5, 3) + _tmp1004 * priors_1_0_sqrt_info(5, 5) +
      _tmp1121 * _tmp987 + _tmp978 * priors_1_0_sqrt_info(5, 2) -
      _tmp983 * priors_1_0_sqrt_info(5, 0) - _tmp984 * priors_1_0_sqrt_info(5, 2) -
      _tmp985 * priors_1_0_sqrt_info(5, 1) + _tmp986 * priors_1_0_sqrt_info(5, 2) +
      _tmp989 * priors_1_0_sqrt_info(5, 0) + _tmp990 * priors_1_0_sqrt_info(5, 1) +
      _tmp994 * priors_1_0_sqrt_info(5, 1) + _tmp998 * priors_1_0_sqrt_info(5, 4);
  const Scalar _tmp1126 =
      -_tmp1122 * _tmp814 + _tmp1123 * _tmp807 - _tmp1124 * _tmp821 + _tmp1125 * _tmp826;
  const Scalar _tmp1127 =
      -_tmp1122 * _tmp821 + _tmp1123 * _tmp826 + _tmp1124 * _tmp814 - _tmp1125 * _tmp807;
  const Scalar _tmp1128 =
      -_tmp1122 * _tmp807 - _tmp1123 * _tmp814 + _tmp1124 * _tmp826 + _tmp1125 * _tmp821;
  const Scalar _tmp1129 = _tmp1047 * priors_1_0_sqrt_info(5, 5) +
                          _tmp1049 * priors_1_0_sqrt_info(5, 4) +
                          _tmp1051 * priors_1_0_sqrt_info(5, 3);
  const Scalar _tmp1130 = _tmp1053 * priors_1_0_sqrt_info(5, 3) +
                          _tmp1055 * priors_1_0_sqrt_info(5, 5) +
                          _tmp1056 * priors_1_0_sqrt_info(5, 4);
  const Scalar _tmp1131 = _tmp1058 * priors_1_0_sqrt_info(5, 3) +
                          _tmp1059 * priors_1_0_sqrt_info(5, 4) +
                          _tmp1060 * priors_1_0_sqrt_info(5, 5);
  const Scalar _tmp1132 = _tmp148 * _tmp70;
  const Scalar _tmp1133 = _tmp145 * _tmp83;
  const Scalar _tmp1134 = _tmp139 * _tmp70;
  const Scalar _tmp1135 = _tmp140 * _tmp83;
  const Scalar _tmp1136 = _tmp1134 + _tmp1135;
  const Scalar _tmp1137 = _tmp1132 + _tmp1133 + _tmp1136 * landmarks_0_;
  const Scalar _tmp1138 = _tmp173 * ((((_tmp152 + _tmp33) > 0) - ((_tmp152 + _tmp33) < 0)) + 1) /
                          std::pow(_tmp153, Scalar(2));
  const Scalar _tmp1139 = (Scalar(1) / Scalar(2)) * views_1_calibration(1, 0);
  const Scalar _tmp1140 = _tmp1139 * _tmp158;
  const Scalar _tmp1141 = _tmp1138 * _tmp1140;
  const Scalar _tmp1142 = _tmp148 * _tmp67;
  const Scalar _tmp1143 = _tmp139 * _tmp67;
  const Scalar _tmp1144 = _tmp141 * _tmp83;
  const Scalar _tmp1145 = -_tmp1018 * _tmp140 - _tmp1143 + _tmp1144;
  const Scalar _tmp1146 = _tmp138 * _tmp83;
  const Scalar _tmp1147 = -_tmp1137 * _tmp1141 + _tmp159 * (-_tmp1018 * _tmp145 - _tmp1142 +
                                                            _tmp1145 * landmarks_0_ + _tmp1146);
  const Scalar _tmp1148 = 2 * _tmp160;
  const Scalar _tmp1149 = (Scalar(1) / Scalar(2)) * views_1_calibration(0, 0);
  const Scalar _tmp1150 = _tmp1149 * _tmp149;
  const Scalar _tmp1151 = _tmp1138 * _tmp1150;
  const Scalar _tmp1152 = _tmp141 * _tmp70;
  const Scalar _tmp1153 = _tmp140 * _tmp67;
  const Scalar _tmp1154 = -_tmp1018 * _tmp139 + _tmp1152 + _tmp1153;
  const Scalar _tmp1155 = _tmp145 * _tmp67;
  const Scalar _tmp1156 = _tmp138 * _tmp70;
  const Scalar _tmp1157 =
      -_tmp1137 * _tmp1151 +
      _tmp155 * (-_tmp1018 * _tmp148 + _tmp1154 * landmarks_0_ + _tmp1155 + _tmp1156);
  const Scalar _tmp1158 = 2 * _tmp156;
  const Scalar _tmp1159 = _tmp1147 * _tmp1148 + _tmp1157 * _tmp1158;
  const Scalar _tmp1160 = (Scalar(1) / Scalar(2)) * _tmp156;
  const Scalar _tmp1161 = _tmp170 - 1;
  const Scalar _tmp1162 = _tmp162 * _tmp163 * std::pow(_tmp167, _tmp1161) * _tmp174 / _tmp172;
  const Scalar _tmp1163 = _tmp1160 * _tmp1162;
  const Scalar _tmp1164 = _tmp175 / (_tmp161 * std::sqrt(_tmp161));
  const Scalar _tmp1165 = _tmp1160 * _tmp1164;
  const Scalar _tmp1166 = _tmp1157 * _tmp176 + _tmp1159 * _tmp1163 - _tmp1159 * _tmp1165;
  const Scalar _tmp1167 = _tmp148 * _tmp958;
  const Scalar _tmp1168 = _tmp139 * _tmp958;
  const Scalar _tmp1169 = -_tmp1153 + _tmp1168 - _tmp141 * _tmp996;
  const Scalar _tmp1170 = -_tmp1155 + _tmp1167 + _tmp1169 * landmarks_0_ - _tmp138 * _tmp996;
  const Scalar _tmp1171 = _tmp138 * _tmp958;
  const Scalar _tmp1172 = _tmp141 * _tmp958;
  const Scalar _tmp1173 = _tmp1135 + _tmp1172;
  const Scalar _tmp1174 =
      -_tmp1151 * _tmp1170 + _tmp155 * (_tmp1133 + _tmp1171 + _tmp1173 * landmarks_0_);
  const Scalar _tmp1175 = _tmp148 * _tmp83;
  const Scalar _tmp1176 = _tmp139 * _tmp83;
  const Scalar _tmp1177 = _tmp141 * _tmp67;
  const Scalar _tmp1178 = _tmp1176 + _tmp1177 - _tmp140 * _tmp996;
  const Scalar _tmp1179 = _tmp138 * _tmp67;
  const Scalar _tmp1180 = -_tmp1141 * _tmp1170 + _tmp159 * (_tmp1175 + _tmp1178 * landmarks_0_ +
                                                            _tmp1179 - _tmp145 * _tmp996);
  const Scalar _tmp1181 = _tmp1148 * _tmp1180 + _tmp1158 * _tmp1174;
  const Scalar _tmp1182 = _tmp1163 * _tmp1181 - _tmp1165 * _tmp1181 + _tmp1174 * _tmp176;
  const Scalar _tmp1183 = _tmp1152 - _tmp1168;
  const Scalar _tmp1184 = _tmp145 * _tmp70;
  const Scalar _tmp1185 = _tmp140 * _tmp70;
  const Scalar _tmp1186 = _tmp1176 - _tmp1185;
  const Scalar _tmp1187 = _tmp1175 - _tmp1184 + _tmp1186 * landmarks_0_;
  const Scalar _tmp1188 =
      -_tmp1141 * _tmp1187 + _tmp159 * (_tmp1156 - _tmp1167 + _tmp1183 * landmarks_0_);
  const Scalar _tmp1189 = _tmp145 * _tmp958;
  const Scalar _tmp1190 = _tmp140 * _tmp958;
  const Scalar _tmp1191 = -_tmp1144 + _tmp1190;
  const Scalar _tmp1192 =
      -_tmp1151 * _tmp1187 + _tmp155 * (-_tmp1146 + _tmp1189 + _tmp1191 * landmarks_0_);
  const Scalar _tmp1193 = _tmp1148 * _tmp1188 + _tmp1158 * _tmp1192;
  const Scalar _tmp1194 = _tmp1163 * _tmp1193 - _tmp1165 * _tmp1193 + _tmp1192 * _tmp176;
  const Scalar _tmp1195 = _tmp1134 + _tmp1172;
  const Scalar _tmp1196 = -_tmp1036 * _tmp141 + _tmp1143 + _tmp1190;
  const Scalar _tmp1197 =
      _tmp1138 * (-_tmp1036 * _tmp138 + _tmp1142 + _tmp1189 + _tmp1196 * landmarks_0_);
  const Scalar _tmp1198 =
      -_tmp1140 * _tmp1197 + _tmp159 * (_tmp1132 + _tmp1171 + _tmp1195 * landmarks_0_);
  const Scalar _tmp1199 = -_tmp1036 * _tmp139 - _tmp1177 + _tmp1185;
  const Scalar _tmp1200 = -_tmp1150 * _tmp1197 + _tmp155 * (-_tmp1036 * _tmp148 - _tmp1179 +
                                                            _tmp1184 + _tmp1199 * landmarks_0_);
  const Scalar _tmp1201 = _tmp1148 * _tmp1198 + _tmp1158 * _tmp1200;
  const Scalar _tmp1202 = _tmp1163 * _tmp1201 - _tmp1165 * _tmp1201 + _tmp1200 * _tmp176;
  const Scalar _tmp1203 =
      -_tmp1166 * _tmp821 + _tmp1182 * _tmp826 - _tmp1194 * _tmp814 + _tmp1202 * _tmp807;
  const Scalar _tmp1204 =
      _tmp1166 * _tmp814 - _tmp1182 * _tmp807 - _tmp1194 * _tmp821 + _tmp1202 * _tmp826;
  const Scalar _tmp1205 =
      _tmp1166 * _tmp826 + _tmp1182 * _tmp821 - _tmp1194 * _tmp807 - _tmp1202 * _tmp814;
  const Scalar _tmp1206 = _tmp159 * landmarks_0_;
  const Scalar _tmp1207 = _tmp113 * landmarks_0_;
  const Scalar _tmp1208 = _tmp1141 * _tmp1207 - _tmp1206 * _tmp87;
  const Scalar _tmp1209 = _tmp155 * landmarks_0_;
  const Scalar _tmp1210 = _tmp1151 * _tmp1207 - _tmp1209 * _tmp80;
  const Scalar _tmp1211 = _tmp1148 * _tmp1208 + _tmp1158 * _tmp1210;
  const Scalar _tmp1212 = _tmp1163 * _tmp1211 - _tmp1165 * _tmp1211 + _tmp1210 * _tmp176;
  const Scalar _tmp1213 = _tmp1151 * landmarks_0_;
  const Scalar _tmp1214 = _tmp112 * _tmp1213 - _tmp1209 * _tmp75;
  const Scalar _tmp1215 = _tmp1141 * landmarks_0_;
  const Scalar _tmp1216 = _tmp112 * _tmp1215 - _tmp1206 * _tmp90;
  const Scalar _tmp1217 = _tmp1148 * _tmp1216 + _tmp1158 * _tmp1214;
  const Scalar _tmp1218 = _tmp1160 * _tmp1217;
  const Scalar _tmp1219 = _tmp1162 * _tmp1218 - _tmp1164 * _tmp1218 + _tmp1214 * _tmp176;
  const Scalar _tmp1220 = _tmp114 * _tmp1215 - _tmp1206 * _tmp85;
  const Scalar _tmp1221 = _tmp114 * _tmp1213 - _tmp1209 * _tmp72;
  const Scalar _tmp1222 = _tmp1148 * _tmp1220 + _tmp1158 * _tmp1221;
  const Scalar _tmp1223 = _tmp1163 * _tmp1222 - _tmp1165 * _tmp1222 + _tmp1221 * _tmp176;
  const Scalar _tmp1224 = _tmp142 * views_1_calibration(0, 0);
  const Scalar _tmp1225 = -_tmp1151 * _tmp150 + _tmp1224 * _tmp154;
  const Scalar _tmp1226 = _tmp1139 * _tmp150;
  const Scalar _tmp1227 = -_tmp1138 * _tmp1226 * _tmp158 + _tmp157 * _tmp159;
  const Scalar _tmp1228 = _tmp1148 * _tmp1227 + _tmp1158 * _tmp1225;
  const Scalar _tmp1229 = _tmp1163 * _tmp1228 - _tmp1165 * _tmp1228 + _tmp1225 * _tmp176;
  const Scalar _tmp1230 = (Scalar(1) / Scalar(2)) * _tmp160;
  const Scalar _tmp1231 = _tmp1164 * _tmp1230;
  const Scalar _tmp1232 = _tmp1162 * _tmp1230;
  const Scalar _tmp1233 = _tmp1188 * _tmp176 - _tmp1193 * _tmp1231 + _tmp1193 * _tmp1232;
  const Scalar _tmp1234 = _tmp1198 * _tmp176 - _tmp1201 * _tmp1231 + _tmp1201 * _tmp1232;
  const Scalar _tmp1235 = _tmp1180 * _tmp176 - _tmp1181 * _tmp1231 + _tmp1181 * _tmp1232;
  const Scalar _tmp1236 = _tmp1147 * _tmp176 - _tmp1159 * _tmp1231 + _tmp1159 * _tmp1232;
  const Scalar _tmp1237 =
      -_tmp1233 * _tmp814 + _tmp1234 * _tmp807 + _tmp1235 * _tmp826 - _tmp1236 * _tmp821;
  const Scalar _tmp1238 =
      -_tmp1233 * _tmp821 + _tmp1234 * _tmp826 - _tmp1235 * _tmp807 + _tmp1236 * _tmp814;
  const Scalar _tmp1239 =
      -_tmp1233 * _tmp807 - _tmp1234 * _tmp814 + _tmp1235 * _tmp821 + _tmp1236 * _tmp826;
  const Scalar _tmp1240 = _tmp1208 * _tmp176 - _tmp1211 * _tmp1231 + _tmp1211 * _tmp1232;
  const Scalar _tmp1241 = _tmp1216 * _tmp176 - _tmp1217 * _tmp1231 + _tmp1217 * _tmp1232;
  const Scalar _tmp1242 = _tmp1220 * _tmp176 - _tmp1222 * _tmp1231 + _tmp1222 * _tmp1232;
  const Scalar _tmp1243 = _tmp1227 * _tmp176 - _tmp1228 * _tmp1231 + _tmp1228 * _tmp1232;
  const Scalar _tmp1244 = _tmp203 / (_tmp197 * std::sqrt(_tmp197));
  const Scalar _tmp1245 = _tmp186 * _tmp83;
  const Scalar _tmp1246 = _tmp185 * _tmp958;
  const Scalar _tmp1247 = _tmp186 * _tmp67;
  const Scalar _tmp1248 = _tmp184 * _tmp958;
  const Scalar _tmp1249 = _tmp1169 * landmarks_1_ - _tmp1247 + _tmp1248 - _tmp185 * _tmp996;
  const Scalar _tmp1250 = _tmp201 * ((((_tmp189 + _tmp33) > 0) - ((_tmp189 + _tmp33) < 0)) + 1) /
                          std::pow(_tmp190, Scalar(2));
  const Scalar _tmp1251 = _tmp1149 * _tmp187;
  const Scalar _tmp1252 = _tmp1250 * _tmp1251;
  const Scalar _tmp1253 =
      -_tmp1249 * _tmp1252 + _tmp192 * (_tmp1173 * landmarks_1_ + _tmp1245 + _tmp1246);
  const Scalar _tmp1254 = 2 * _tmp193;
  const Scalar _tmp1255 = _tmp184 * _tmp83;
  const Scalar _tmp1256 = _tmp185 * _tmp67;
  const Scalar _tmp1257 = _tmp1250 * _tmp194;
  const Scalar _tmp1258 = _tmp1139 * _tmp1257;
  const Scalar _tmp1259 = -_tmp1249 * _tmp1258 + _tmp195 * (_tmp1178 * landmarks_1_ + _tmp1255 +
                                                            _tmp1256 - _tmp186 * _tmp996);
  const Scalar _tmp1260 = 2 * _tmp196;
  const Scalar _tmp1261 = _tmp1253 * _tmp1254 + _tmp1259 * _tmp1260;
  const Scalar _tmp1262 = (Scalar(1) / Scalar(2)) * _tmp193;
  const Scalar _tmp1263 = _tmp1261 * _tmp1262;
  const Scalar _tmp1264 = _tmp163 * _tmp198 * std::pow(_tmp199, _tmp1161) * _tmp202 / _tmp200;
  const Scalar _tmp1265 = -_tmp1244 * _tmp1263 + _tmp1253 * _tmp204 + _tmp1263 * _tmp1264;
  const Scalar _tmp1266 = _tmp186 * _tmp958;
  const Scalar _tmp1267 = _tmp184 * _tmp67;
  const Scalar _tmp1268 = -_tmp1036 * _tmp185 + _tmp1196 * landmarks_1_ + _tmp1266 + _tmp1267;
  const Scalar _tmp1269 = _tmp186 * _tmp70;
  const Scalar _tmp1270 =
      -_tmp1252 * _tmp1268 +
      _tmp192 * (-_tmp1036 * _tmp184 + _tmp1199 * landmarks_1_ - _tmp1256 + _tmp1269);
  const Scalar _tmp1271 = _tmp184 * _tmp70;
  const Scalar _tmp1272 =
      -_tmp1258 * _tmp1268 + _tmp195 * (_tmp1195 * landmarks_1_ + _tmp1246 + _tmp1271);
  const Scalar _tmp1273 = _tmp1254 * _tmp1270 + _tmp1260 * _tmp1272;
  const Scalar _tmp1274 = _tmp1262 * _tmp1264;
  const Scalar _tmp1275 = _tmp1244 * _tmp1262;
  const Scalar _tmp1276 = _tmp1270 * _tmp204 + _tmp1273 * _tmp1274 - _tmp1273 * _tmp1275;
  const Scalar _tmp1277 = _tmp185 * _tmp83;
  const Scalar _tmp1278 = _tmp1250 * (_tmp1186 * landmarks_1_ + _tmp1255 - _tmp1269);
  const Scalar _tmp1279 =
      -_tmp1251 * _tmp1278 + _tmp192 * (_tmp1191 * landmarks_1_ + _tmp1266 - _tmp1277);
  const Scalar _tmp1280 = _tmp185 * _tmp70;
  const Scalar _tmp1281 =
      -_tmp1139 * _tmp1278 * _tmp194 + _tmp195 * (_tmp1183 * landmarks_1_ - _tmp1248 + _tmp1280);
  const Scalar _tmp1282 = _tmp1254 * _tmp1279 + _tmp1260 * _tmp1281;
  const Scalar _tmp1283 = _tmp1274 * _tmp1282 - _tmp1275 * _tmp1282 + _tmp1279 * _tmp204;
  const Scalar _tmp1284 = _tmp1136 * landmarks_1_ + _tmp1245 + _tmp1271;
  const Scalar _tmp1285 =
      -_tmp1258 * _tmp1284 +
      _tmp195 * (-_tmp1018 * _tmp186 + _tmp1145 * landmarks_1_ - _tmp1267 + _tmp1277);
  const Scalar _tmp1286 =
      -_tmp1252 * _tmp1284 +
      _tmp192 * (-_tmp1018 * _tmp184 + _tmp1154 * landmarks_1_ + _tmp1247 + _tmp1280);
  const Scalar _tmp1287 = _tmp1254 * _tmp1286 + _tmp1260 * _tmp1285;
  const Scalar _tmp1288 = _tmp1274 * _tmp1287 - _tmp1275 * _tmp1287 + _tmp1286 * _tmp204;
  const Scalar _tmp1289 =
      _tmp1265 * _tmp826 + _tmp1276 * _tmp807 - _tmp1283 * _tmp814 - _tmp1288 * _tmp821;
  const Scalar _tmp1290 =
      -_tmp1265 * _tmp807 + _tmp1276 * _tmp826 - _tmp1283 * _tmp821 + _tmp1288 * _tmp814;
  const Scalar _tmp1291 =
      _tmp1265 * _tmp821 - _tmp1276 * _tmp814 - _tmp1283 * _tmp807 + _tmp1288 * _tmp826;
  const Scalar _tmp1292 = _tmp195 * landmarks_1_;
  const Scalar _tmp1293 = _tmp1258 * landmarks_1_;
  const Scalar _tmp1294 = _tmp113 * _tmp1293 - _tmp1292 * _tmp87;
  const Scalar _tmp1295 = _tmp192 * landmarks_1_;
  const Scalar _tmp1296 = _tmp1252 * landmarks_1_;
  const Scalar _tmp1297 = _tmp113 * _tmp1296 - _tmp1295 * _tmp80;
  const Scalar _tmp1298 = _tmp1254 * _tmp1297 + _tmp1260 * _tmp1294;
  const Scalar _tmp1299 = _tmp1244 * _tmp1298;
  const Scalar _tmp1300 = -_tmp1262 * _tmp1299 + _tmp1274 * _tmp1298 + _tmp1297 * _tmp204;
  const Scalar _tmp1301 = _tmp112 * _tmp1296 - _tmp1295 * _tmp75;
  const Scalar _tmp1302 = _tmp112 * _tmp1293 - _tmp1292 * _tmp90;
  const Scalar _tmp1303 = _tmp1254 * _tmp1301 + _tmp1260 * _tmp1302;
  const Scalar _tmp1304 = _tmp1274 * _tmp1303 - _tmp1275 * _tmp1303 + _tmp1301 * _tmp204;
  const Scalar _tmp1305 = _tmp114 * _tmp1296 - _tmp1295 * _tmp72;
  const Scalar _tmp1306 = _tmp114 * _tmp1293 - _tmp1292 * _tmp85;
  const Scalar _tmp1307 = _tmp1254 * _tmp1305 + _tmp1260 * _tmp1306;
  const Scalar _tmp1308 = _tmp1274 * _tmp1307 - _tmp1275 * _tmp1307 + _tmp1305 * _tmp204;
  const Scalar _tmp1309 = _tmp1224 * _tmp191 - _tmp1252 * _tmp150;
  const Scalar _tmp1310 = _tmp157 * views_1_calibration(1, 0);
  const Scalar _tmp1311 = -_tmp1226 * _tmp1257 + _tmp1310 * _tmp191;
  const Scalar _tmp1312 = _tmp1254 * _tmp1309 + _tmp1260 * _tmp1311;
  const Scalar _tmp1313 = _tmp1274 * _tmp1312 - _tmp1275 * _tmp1312 + _tmp1309 * _tmp204;
  const Scalar _tmp1314 = (Scalar(1) / Scalar(2)) * _tmp196;
  const Scalar _tmp1315 = _tmp1244 * _tmp1314;
  const Scalar _tmp1316 = _tmp1264 * _tmp1314;
  const Scalar _tmp1317 = _tmp1285 * _tmp204 - _tmp1287 * _tmp1315 + _tmp1287 * _tmp1316;
  const Scalar _tmp1318 = _tmp1281 * _tmp204 - _tmp1282 * _tmp1315 + _tmp1282 * _tmp1316;
  const Scalar _tmp1319 = _tmp1259 * _tmp204 - _tmp1261 * _tmp1315 + _tmp1261 * _tmp1316;
  const Scalar _tmp1320 = _tmp1272 * _tmp204 - _tmp1273 * _tmp1315 + _tmp1273 * _tmp1316;
  const Scalar _tmp1321 =
      -_tmp1317 * _tmp821 - _tmp1318 * _tmp814 + _tmp1319 * _tmp826 + _tmp1320 * _tmp807;
  const Scalar _tmp1322 =
      _tmp1317 * _tmp814 - _tmp1318 * _tmp821 - _tmp1319 * _tmp807 + _tmp1320 * _tmp826;
  const Scalar _tmp1323 =
      _tmp1317 * _tmp826 - _tmp1318 * _tmp807 + _tmp1319 * _tmp821 - _tmp1320 * _tmp814;
  const Scalar _tmp1324 = _tmp1294 * _tmp204 + _tmp1298 * _tmp1316 - _tmp1299 * _tmp1314;
  const Scalar _tmp1325 = _tmp1302 * _tmp204 - _tmp1303 * _tmp1315 + _tmp1303 * _tmp1316;
  const Scalar _tmp1326 = _tmp1306 * _tmp204 - _tmp1307 * _tmp1315 + _tmp1307 * _tmp1316;
  const Scalar _tmp1327 = _tmp1311 * _tmp204 - _tmp1312 * _tmp1315 + _tmp1312 * _tmp1316;
  const Scalar _tmp1328 = _tmp213 * _tmp83;
  const Scalar _tmp1329 = _tmp212 * _tmp70;
  const Scalar _tmp1330 = _tmp229 * ((((_tmp217 + _tmp33) > 0) - ((_tmp217 + _tmp33) < 0)) + 1) /
                          std::pow(_tmp218, Scalar(2));
  const Scalar _tmp1331 = _tmp1330 * (_tmp1186 * landmarks_2_ + _tmp1328 - _tmp1329);
  const Scalar _tmp1332 = _tmp213 * _tmp958;
  const Scalar _tmp1333 = _tmp214 * _tmp70;
  const Scalar _tmp1334 =
      -_tmp1139 * _tmp1331 * _tmp222 + _tmp223 * (_tmp1183 * landmarks_2_ - _tmp1332 + _tmp1333);
  const Scalar _tmp1335 = 2 * _tmp224;
  const Scalar _tmp1336 = _tmp1149 * _tmp215;
  const Scalar _tmp1337 = _tmp214 * _tmp83;
  const Scalar _tmp1338 = _tmp212 * _tmp958;
  const Scalar _tmp1339 =
      -_tmp1331 * _tmp1336 + _tmp220 * (_tmp1191 * landmarks_2_ - _tmp1337 + _tmp1338);
  const Scalar _tmp1340 = 2 * _tmp221;
  const Scalar _tmp1341 = _tmp1334 * _tmp1335 + _tmp1339 * _tmp1340;
  const Scalar _tmp1342 = (Scalar(1) / Scalar(2)) * _tmp221;
  const Scalar _tmp1343 = _tmp231 / (_tmp225 * std::sqrt(_tmp225));
  const Scalar _tmp1344 = _tmp1342 * _tmp1343;
  const Scalar _tmp1345 = _tmp163 * _tmp226 * std::pow(_tmp227, _tmp1161) * _tmp230 / _tmp228;
  const Scalar _tmp1346 = _tmp1342 * _tmp1345;
  const Scalar _tmp1347 = _tmp1339 * _tmp232 - _tmp1341 * _tmp1344 + _tmp1341 * _tmp1346;
  const Scalar _tmp1348 = _tmp213 * _tmp67;
  const Scalar _tmp1349 = -_tmp1036 * _tmp214 + _tmp1196 * landmarks_2_ + _tmp1338 + _tmp1348;
  const Scalar _tmp1350 = _tmp1330 * _tmp1336;
  const Scalar _tmp1351 = _tmp214 * _tmp67;
  const Scalar _tmp1352 =
      -_tmp1349 * _tmp1350 +
      _tmp220 * (-_tmp1036 * _tmp213 + _tmp1199 * landmarks_2_ + _tmp1329 - _tmp1351);
  const Scalar _tmp1353 = _tmp213 * _tmp70;
  const Scalar _tmp1354 = _tmp214 * _tmp958;
  const Scalar _tmp1355 = _tmp1330 * _tmp222;
  const Scalar _tmp1356 = _tmp1139 * _tmp1355;
  const Scalar _tmp1357 =
      -_tmp1349 * _tmp1356 + _tmp223 * (_tmp1195 * landmarks_2_ + _tmp1353 + _tmp1354);
  const Scalar _tmp1358 = _tmp1335 * _tmp1357 + _tmp1340 * _tmp1352;
  const Scalar _tmp1359 = -_tmp1344 * _tmp1358 + _tmp1346 * _tmp1358 + _tmp1352 * _tmp232;
  const Scalar _tmp1360 = _tmp212 * _tmp67;
  const Scalar _tmp1361 = _tmp212 * _tmp83;
  const Scalar _tmp1362 = _tmp1136 * landmarks_2_ + _tmp1353 + _tmp1361;
  const Scalar _tmp1363 =
      -_tmp1350 * _tmp1362 +
      _tmp220 * (-_tmp1018 * _tmp213 + _tmp1154 * landmarks_2_ + _tmp1333 + _tmp1360);
  const Scalar _tmp1364 =
      -_tmp1356 * _tmp1362 +
      _tmp223 * (-_tmp1018 * _tmp212 + _tmp1145 * landmarks_2_ + _tmp1337 - _tmp1348);
  const Scalar _tmp1365 = _tmp1335 * _tmp1364 + _tmp1340 * _tmp1363;
  const Scalar _tmp1366 = _tmp1342 * _tmp1365;
  const Scalar _tmp1367 = -Scalar(1) / Scalar(2) * _tmp1343 * _tmp1366 +
                          (Scalar(1) / Scalar(2)) * _tmp1345 * _tmp1366 +
                          (Scalar(1) / Scalar(2)) * _tmp1363 * _tmp232;
  const Scalar _tmp1368 = _tmp1169 * landmarks_2_ + _tmp1332 - _tmp1360 - _tmp214 * _tmp996;
  const Scalar _tmp1369 =
      -_tmp1350 * _tmp1368 + _tmp220 * (_tmp1173 * landmarks_2_ + _tmp1354 + _tmp1361);
  const Scalar _tmp1370 = -_tmp1356 * _tmp1368 + _tmp223 * (_tmp1178 * landmarks_2_ + _tmp1328 +
                                                            _tmp1351 - _tmp212 * _tmp996);
  const Scalar _tmp1371 = _tmp1335 * _tmp1370 + _tmp1340 * _tmp1369;
  const Scalar _tmp1372 = -_tmp1344 * _tmp1371 + _tmp1346 * _tmp1371 + _tmp1369 * _tmp232;
  const Scalar _tmp1373 =
      -_tmp1347 * _tmp814 + _tmp1359 * _tmp807 - _tmp1367 * _views_1_pose[1] + _tmp1372 * _tmp826;
  const Scalar _tmp1374 =
      -_tmp1347 * _tmp821 + _tmp1359 * _tmp826 + _tmp1367 * _views_1_pose[0] - _tmp1372 * _tmp807;
  const Scalar _tmp1375 =
      -_tmp1347 * _tmp807 - _tmp1359 * _tmp814 + _tmp1367 * _views_1_pose[3] + _tmp1372 * _tmp821;
  const Scalar _tmp1376 = _tmp1356 * landmarks_2_;
  const Scalar _tmp1377 = _tmp223 * landmarks_2_;
  const Scalar _tmp1378 = _tmp113 * _tmp1376 - _tmp1377 * _tmp87;
  const Scalar _tmp1379 = _tmp220 * landmarks_2_;
  const Scalar _tmp1380 = _tmp1350 * landmarks_2_;
  const Scalar _tmp1381 = _tmp113 * _tmp1380 - _tmp1379 * _tmp80;
  const Scalar _tmp1382 = _tmp1335 * _tmp1378 + _tmp1340 * _tmp1381;
  const Scalar _tmp1383 = -_tmp1344 * _tmp1382 + _tmp1346 * _tmp1382 + _tmp1381 * _tmp232;
  const Scalar _tmp1384 = _tmp112 * landmarks_2_;
  const Scalar _tmp1385 = _tmp1350 * _tmp1384 - _tmp1379 * _tmp75;
  const Scalar _tmp1386 = _tmp1356 * _tmp1384 - _tmp1377 * _tmp90;
  const Scalar _tmp1387 = _tmp1335 * _tmp1386 + _tmp1340 * _tmp1385;
  const Scalar _tmp1388 = -_tmp1344 * _tmp1387 + _tmp1346 * _tmp1387 + _tmp1385 * _tmp232;
  const Scalar _tmp1389 = _tmp114 * _tmp1376 - _tmp1377 * _tmp85;
  const Scalar _tmp1390 = _tmp114 * _tmp1380 - _tmp1379 * _tmp72;
  const Scalar _tmp1391 = _tmp1335 * _tmp1389 + _tmp1340 * _tmp1390;
  const Scalar _tmp1392 = -_tmp1344 * _tmp1391 + _tmp1346 * _tmp1391 + _tmp1390 * _tmp232;
  const Scalar _tmp1393 = _tmp1224 * _tmp219 - _tmp1350 * _tmp150;
  const Scalar _tmp1394 = -_tmp1226 * _tmp1355 + _tmp1310 * _tmp219;
  const Scalar _tmp1395 = _tmp1335 * _tmp1394 + _tmp1340 * _tmp1393;
  const Scalar _tmp1396 = -_tmp1344 * _tmp1395 + _tmp1346 * _tmp1395 + _tmp1393 * _tmp232;
  const Scalar _tmp1397 = (Scalar(1) / Scalar(2)) * _tmp224;
  const Scalar _tmp1398 = _tmp1343 * _tmp1397;
  const Scalar _tmp1399 = _tmp1345 * _tmp1397;
  const Scalar _tmp1400 = _tmp1364 * _tmp232 - _tmp1365 * _tmp1398 + _tmp1365 * _tmp1399;
  const Scalar _tmp1401 = _tmp1370 * _tmp232 - _tmp1371 * _tmp1398 + _tmp1371 * _tmp1399;
  const Scalar _tmp1402 = _tmp1357 * _tmp232 - _tmp1358 * _tmp1398 + _tmp1358 * _tmp1399;
  const Scalar _tmp1403 = _tmp1334 * _tmp232 - _tmp1341 * _tmp1398 + _tmp1341 * _tmp1399;
  const Scalar _tmp1404 = (Scalar(1) / Scalar(2)) * _tmp1403;
  const Scalar _tmp1405 =
      -_tmp1400 * _tmp821 + _tmp1401 * _tmp826 + _tmp1402 * _tmp807 - _tmp1404 * _views_1_pose[0];
  const Scalar _tmp1406 =
      _tmp1400 * _tmp814 - _tmp1401 * _tmp807 + _tmp1402 * _tmp826 - _tmp1404 * _views_1_pose[1];
  const Scalar _tmp1407 =
      _tmp1400 * _tmp826 + _tmp1401 * _tmp821 - _tmp1402 * _tmp814 - _tmp1403 * _tmp807;
  const Scalar _tmp1408 = _tmp1378 * _tmp232 - _tmp1382 * _tmp1398 + _tmp1382 * _tmp1399;
  const Scalar _tmp1409 = _tmp1386 * _tmp232 - _tmp1387 * _tmp1398 + _tmp1387 * _tmp1399;
  const Scalar _tmp1410 = _tmp1389 * _tmp232 - _tmp1391 * _tmp1398 + _tmp1391 * _tmp1399;
  const Scalar _tmp1411 = _tmp1394 * _tmp232 - _tmp1395 * _tmp1398 + _tmp1395 * _tmp1399;
  const Scalar _tmp1412 = _tmp242 * _tmp83;
  const Scalar _tmp1413 = _tmp241 * _tmp70;
  const Scalar _tmp1414 = _tmp1186 * landmarks_3_ + _tmp1412 - _tmp1413;
  const Scalar _tmp1415 = _tmp255 * ((((_tmp245 + _tmp33) > 0) - ((_tmp245 + _tmp33) < 0)) + 1) /
                          std::pow(_tmp246, Scalar(2));
  const Scalar _tmp1416 = _tmp1415 * _tmp250;
  const Scalar _tmp1417 = _tmp1139 * _tmp1416;
  const Scalar _tmp1418 = _tmp242 * _tmp958;
  const Scalar _tmp1419 = _tmp240 * _tmp70;
  const Scalar _tmp1420 =
      -_tmp1414 * _tmp1417 + _tmp251 * (_tmp1183 * landmarks_3_ - _tmp1418 + _tmp1419);
  const Scalar _tmp1421 = 2 * _tmp252;
  const Scalar _tmp1422 = _tmp1415 * _tmp243;
  const Scalar _tmp1423 = _tmp1149 * _tmp1422;
  const Scalar _tmp1424 = _tmp240 * _tmp83;
  const Scalar _tmp1425 = _tmp241 * _tmp958;
  const Scalar _tmp1426 =
      -_tmp1414 * _tmp1423 + _tmp248 * (_tmp1191 * landmarks_3_ - _tmp1424 + _tmp1425);
  const Scalar _tmp1427 = 2 * _tmp249;
  const Scalar _tmp1428 = _tmp1420 * _tmp1421 + _tmp1426 * _tmp1427;
  const Scalar _tmp1429 = _tmp259 / (_tmp253 * std::sqrt(_tmp253));
  const Scalar _tmp1430 = (Scalar(1) / Scalar(2)) * _tmp249;
  const Scalar _tmp1431 = _tmp1429 * _tmp1430;
  const Scalar _tmp1432 = _tmp163 * _tmp254 * _tmp256 * std::pow(_tmp257, _tmp1161) / _tmp258;
  const Scalar _tmp1433 = _tmp1430 * _tmp1432;
  const Scalar _tmp1434 = _tmp1426 * _tmp260 - _tmp1428 * _tmp1431 + _tmp1428 * _tmp1433;
  const Scalar _tmp1435 = _tmp240 * _tmp958;
  const Scalar _tmp1436 = _tmp241 * _tmp83;
  const Scalar _tmp1437 = _tmp241 * _tmp67;
  const Scalar _tmp1438 = _tmp1169 * landmarks_3_ + _tmp1418 - _tmp1437 - _tmp240 * _tmp996;
  const Scalar _tmp1439 =
      -_tmp1423 * _tmp1438 + _tmp248 * (_tmp1173 * landmarks_3_ + _tmp1435 + _tmp1436);
  const Scalar _tmp1440 = _tmp240 * _tmp67;
  const Scalar _tmp1441 = -_tmp1417 * _tmp1438 + _tmp251 * (_tmp1178 * landmarks_3_ + _tmp1412 +
                                                            _tmp1440 - _tmp241 * _tmp996);
  const Scalar _tmp1442 = _tmp1421 * _tmp1441 + _tmp1427 * _tmp1439;
  const Scalar _tmp1443 = _tmp1429 * _tmp1442;
  const Scalar _tmp1444 = -_tmp1430 * _tmp1443 + _tmp1433 * _tmp1442 + _tmp1439 * _tmp260;
  const Scalar _tmp1445 = _tmp242 * _tmp67;
  const Scalar _tmp1446 = -_tmp1036 * _tmp240 + _tmp1196 * landmarks_3_ + _tmp1425 + _tmp1445;
  const Scalar _tmp1447 =
      -_tmp1423 * _tmp1446 +
      _tmp248 * (-_tmp1036 * _tmp242 + _tmp1199 * landmarks_3_ + _tmp1413 - _tmp1440);
  const Scalar _tmp1448 = _tmp242 * _tmp70;
  const Scalar _tmp1449 =
      -_tmp1417 * _tmp1446 + _tmp251 * (_tmp1195 * landmarks_3_ + _tmp1435 + _tmp1448);
  const Scalar _tmp1450 = _tmp1421 * _tmp1449 + _tmp1427 * _tmp1447;
  const Scalar _tmp1451 = -_tmp1431 * _tmp1450 + _tmp1433 * _tmp1450 + _tmp1447 * _tmp260;
  const Scalar _tmp1452 = _tmp1136 * landmarks_3_ + _tmp1436 + _tmp1448;
  const Scalar _tmp1453 =
      -_tmp1423 * _tmp1452 +
      _tmp248 * (-_tmp1018 * _tmp242 + _tmp1154 * landmarks_3_ + _tmp1419 + _tmp1437);
  const Scalar _tmp1454 =
      -_tmp1417 * _tmp1452 +
      _tmp251 * (-_tmp1018 * _tmp241 + _tmp1145 * landmarks_3_ + _tmp1424 - _tmp1445);
  const Scalar _tmp1455 = _tmp1421 * _tmp1454 + _tmp1427 * _tmp1453;
  const Scalar _tmp1456 = -Scalar(1) / Scalar(2) * _tmp1431 * _tmp1455 +
                          (Scalar(1) / Scalar(2)) * _tmp1433 * _tmp1455 +
                          (Scalar(1) / Scalar(2)) * _tmp1453 * _tmp260;
  const Scalar _tmp1457 =
      -_tmp1434 * _tmp814 + _tmp1444 * _tmp826 + _tmp1451 * _tmp807 - _tmp1456 * _views_1_pose[1];
  const Scalar _tmp1458 =
      -_tmp1434 * _tmp821 - _tmp1444 * _tmp807 + _tmp1451 * _tmp826 + _tmp1456 * _views_1_pose[0];
  const Scalar _tmp1459 =
      -_tmp1434 * _tmp807 + _tmp1444 * _tmp821 - _tmp1451 * _tmp814 + _tmp1456 * _views_1_pose[3];
  const Scalar _tmp1460 = _tmp251 * landmarks_3_;
  const Scalar _tmp1461 = _tmp113 * landmarks_3_;
  const Scalar _tmp1462 = _tmp1417 * _tmp1461 - _tmp1460 * _tmp87;
  const Scalar _tmp1463 = _tmp248 * landmarks_3_;
  const Scalar _tmp1464 = _tmp1423 * _tmp1461 - _tmp1463 * _tmp80;
  const Scalar _tmp1465 = _tmp1421 * _tmp1462 + _tmp1427 * _tmp1464;
  const Scalar _tmp1466 = -_tmp1431 * _tmp1465 + _tmp1433 * _tmp1465 + _tmp1464 * _tmp260;
  const Scalar _tmp1467 = _tmp1423 * landmarks_3_;
  const Scalar _tmp1468 = _tmp112 * _tmp1467 - _tmp1463 * _tmp75;
  const Scalar _tmp1469 = _tmp1417 * landmarks_3_;
  const Scalar _tmp1470 = _tmp112 * _tmp1469 - _tmp1460 * _tmp90;
  const Scalar _tmp1471 = _tmp1421 * _tmp1470 + _tmp1427 * _tmp1468;
  const Scalar _tmp1472 = -_tmp1431 * _tmp1471 + _tmp1433 * _tmp1471 + _tmp1468 * _tmp260;
  const Scalar _tmp1473 = _tmp114 * _tmp1467 - _tmp1463 * _tmp72;
  const Scalar _tmp1474 = _tmp114 * _tmp1469 - _tmp1460 * _tmp85;
  const Scalar _tmp1475 = _tmp1421 * _tmp1474 + _tmp1427 * _tmp1473;
  const Scalar _tmp1476 = -_tmp1431 * _tmp1475 + _tmp1433 * _tmp1475 + _tmp1473 * _tmp260;
  const Scalar _tmp1477 = -_tmp1226 * _tmp1416 + _tmp1310 * _tmp247;
  const Scalar _tmp1478 = _tmp1149 * _tmp150;
  const Scalar _tmp1479 = _tmp1224 * _tmp247 - _tmp1422 * _tmp1478;
  const Scalar _tmp1480 = _tmp1421 * _tmp1477 + _tmp1427 * _tmp1479;
  const Scalar _tmp1481 = -_tmp1431 * _tmp1480 + _tmp1433 * _tmp1480 + _tmp1479 * _tmp260;
  const Scalar _tmp1482 = (Scalar(1) / Scalar(2)) * _tmp252;
  const Scalar _tmp1483 = _tmp1429 * _tmp1482;
  const Scalar _tmp1484 = _tmp1432 * _tmp1482;
  const Scalar _tmp1485 = _tmp1420 * _tmp260 - _tmp1428 * _tmp1483 + _tmp1428 * _tmp1484;
  const Scalar _tmp1486 = _tmp1454 * _tmp260 - _tmp1455 * _tmp1483 + _tmp1455 * _tmp1484;
  const Scalar _tmp1487 = _tmp1450 * _tmp1482;
  const Scalar _tmp1488 = -_tmp1429 * _tmp1487 + _tmp1432 * _tmp1487 + _tmp1449 * _tmp260;
  const Scalar _tmp1489 = _tmp1441 * _tmp260 + _tmp1442 * _tmp1484 - _tmp1443 * _tmp1482;
  const Scalar _tmp1490 =
      -_tmp1485 * _tmp814 - _tmp1486 * _tmp821 + _tmp1488 * _tmp807 + _tmp1489 * _tmp826;
  const Scalar _tmp1491 =
      -_tmp1485 * _tmp821 + _tmp1486 * _tmp814 + _tmp1488 * _tmp826 - _tmp1489 * _tmp807;
  const Scalar _tmp1492 =
      -_tmp1485 * _tmp807 + _tmp1486 * _tmp826 - _tmp1488 * _tmp814 + _tmp1489 * _tmp821;
  const Scalar _tmp1493 = _tmp1462 * _tmp260 - _tmp1465 * _tmp1483 + _tmp1465 * _tmp1484;
  const Scalar _tmp1494 = _tmp1470 * _tmp260 - _tmp1471 * _tmp1483 + _tmp1471 * _tmp1484;
  const Scalar _tmp1495 = _tmp1474 * _tmp260 - _tmp1475 * _tmp1483 + _tmp1475 * _tmp1484;
  const Scalar _tmp1496 = _tmp1477 * _tmp260 - _tmp1480 * _tmp1483 + _tmp1480 * _tmp1484;
  const Scalar _tmp1497 = _tmp268 * _tmp70;
  const Scalar _tmp1498 = _tmp269 * _tmp67;
  const Scalar _tmp1499 = _tmp270 * _tmp70;
  const Scalar _tmp1500 = _tmp269 * _tmp83;
  const Scalar _tmp1501 = _tmp285 * ((((_tmp273 + _tmp33) > 0) - ((_tmp273 + _tmp33) < 0)) + 1) /
                          std::pow(_tmp274, Scalar(2));
  const Scalar _tmp1502 = _tmp1501 * (_tmp1136 * landmarks_4_ + _tmp1499 + _tmp1500);
  const Scalar _tmp1503 = _tmp1149 * _tmp271;
  const Scalar _tmp1504 =
      -_tmp1502 * _tmp1503 +
      _tmp276 * (-_tmp1018 * _tmp270 + _tmp1154 * landmarks_4_ + _tmp1497 + _tmp1498);
  const Scalar _tmp1505 = _tmp268 * _tmp83;
  const Scalar _tmp1506 = _tmp270 * _tmp67;
  const Scalar _tmp1507 = _tmp1139 * _tmp278;
  const Scalar _tmp1508 =
      -_tmp1502 * _tmp1507 +
      _tmp279 * (-_tmp1018 * _tmp269 + _tmp1145 * landmarks_4_ + _tmp1505 - _tmp1506);
  const Scalar _tmp1509 = 2 * _tmp280;
  const Scalar _tmp1510 = 2 * _tmp277;
  const Scalar _tmp1511 = _tmp1504 * _tmp1510 + _tmp1508 * _tmp1509;
  const Scalar _tmp1512 = (Scalar(1) / Scalar(2)) * _tmp277;
  const Scalar _tmp1513 = _tmp287 / (_tmp281 * std::sqrt(_tmp281));
  const Scalar _tmp1514 = _tmp1512 * _tmp1513;
  const Scalar _tmp1515 = _tmp163 * _tmp282 * std::pow(_tmp283, _tmp1161) * _tmp286 / _tmp284;
  const Scalar _tmp1516 = _tmp1512 * _tmp1515;
  const Scalar _tmp1517 = _tmp1504 * _tmp288 - _tmp1511 * _tmp1514 + _tmp1511 * _tmp1516;
  const Scalar _tmp1518 = _tmp268 * _tmp958;
  const Scalar _tmp1519 = _tmp269 * _tmp958;
  const Scalar _tmp1520 =
      _tmp1501 * (-_tmp1036 * _tmp268 + _tmp1196 * landmarks_4_ + _tmp1506 + _tmp1519);
  const Scalar _tmp1521 =
      -_tmp1507 * _tmp1520 + _tmp279 * (_tmp1195 * landmarks_4_ + _tmp1499 + _tmp1518);
  const Scalar _tmp1522 = _tmp268 * _tmp67;
  const Scalar _tmp1523 = _tmp269 * _tmp70;
  const Scalar _tmp1524 =
      -_tmp1503 * _tmp1520 +
      _tmp276 * (-_tmp1036 * _tmp270 + _tmp1199 * landmarks_4_ - _tmp1522 + _tmp1523);
  const Scalar _tmp1525 = _tmp1509 * _tmp1521 + _tmp1510 * _tmp1524;
  const Scalar _tmp1526 = -_tmp1514 * _tmp1525 + _tmp1516 * _tmp1525 + _tmp1524 * _tmp288;
  const Scalar _tmp1527 = _tmp270 * _tmp83;
  const Scalar _tmp1528 = _tmp1501 * (_tmp1186 * landmarks_4_ - _tmp1523 + _tmp1527);
  const Scalar _tmp1529 =
      -_tmp1503 * _tmp1528 + _tmp276 * (_tmp1191 * landmarks_4_ - _tmp1505 + _tmp1519);
  const Scalar _tmp1530 = _tmp270 * _tmp958;
  const Scalar _tmp1531 =
      -_tmp1507 * _tmp1528 + _tmp279 * (_tmp1183 * landmarks_4_ + _tmp1497 - _tmp1530);
  const Scalar _tmp1532 = _tmp1509 * _tmp1531 + _tmp1510 * _tmp1529;
  const Scalar _tmp1533 = -_tmp1514 * _tmp1532 + _tmp1516 * _tmp1532 + _tmp1529 * _tmp288;
  const Scalar _tmp1534 =
      _tmp1501 * (_tmp1169 * landmarks_4_ - _tmp1498 + _tmp1530 - _tmp268 * _tmp996);
  const Scalar _tmp1535 =
      -_tmp1503 * _tmp1534 + _tmp276 * (_tmp1173 * landmarks_4_ + _tmp1500 + _tmp1518);
  const Scalar _tmp1536 = -_tmp1507 * _tmp1534 + _tmp279 * (_tmp1178 * landmarks_4_ + _tmp1522 +
                                                            _tmp1527 - _tmp269 * _tmp996);
  const Scalar _tmp1537 = _tmp1509 * _tmp1536 + _tmp1510 * _tmp1535;
  const Scalar _tmp1538 = -_tmp1514 * _tmp1537 + _tmp1516 * _tmp1537 + _tmp1535 * _tmp288;
  const Scalar _tmp1539 =
      -_tmp1517 * _tmp821 + _tmp1526 * _tmp807 - _tmp1533 * _tmp814 + _tmp1538 * _tmp826;
  const Scalar _tmp1540 =
      _tmp1517 * _tmp814 + _tmp1526 * _tmp826 - _tmp1533 * _tmp821 - _tmp1538 * _tmp807;
  const Scalar _tmp1541 =
      _tmp1517 * _tmp826 - _tmp1526 * _tmp814 - _tmp1533 * _tmp807 + _tmp1538 * _tmp821;
  const Scalar _tmp1542 = _tmp279 * landmarks_4_;
  const Scalar _tmp1543 = _tmp1501 * landmarks_4_;
  const Scalar _tmp1544 = _tmp1507 * _tmp1543;
  const Scalar _tmp1545 = _tmp113 * _tmp1544 - _tmp1542 * _tmp87;
  const Scalar _tmp1546 = _tmp276 * landmarks_4_;
  const Scalar _tmp1547 = _tmp1503 * _tmp1543;
  const Scalar _tmp1548 = _tmp113 * _tmp1547 - _tmp1546 * _tmp80;
  const Scalar _tmp1549 = _tmp1509 * _tmp1545 + _tmp1510 * _tmp1548;
  const Scalar _tmp1550 = -_tmp1514 * _tmp1549 + _tmp1516 * _tmp1549 + _tmp1548 * _tmp288;
  const Scalar _tmp1551 = _tmp112 * _tmp1544 - _tmp1542 * _tmp90;
  const Scalar _tmp1552 = _tmp112 * _tmp1547 - _tmp1546 * _tmp75;
  const Scalar _tmp1553 = _tmp1509 * _tmp1551 + _tmp1510 * _tmp1552;
  const Scalar _tmp1554 = _tmp1512 * _tmp1553;
  const Scalar _tmp1555 = -_tmp1513 * _tmp1554 + _tmp1515 * _tmp1554 + _tmp1552 * _tmp288;
  const Scalar _tmp1556 = _tmp114 * _tmp1544 - _tmp1542 * _tmp85;
  const Scalar _tmp1557 = _tmp114 * _tmp1547 - _tmp1546 * _tmp72;
  const Scalar _tmp1558 = _tmp1509 * _tmp1556 + _tmp1510 * _tmp1557;
  const Scalar _tmp1559 = _tmp1513 * _tmp1558;
  const Scalar _tmp1560 = -_tmp1512 * _tmp1559 + _tmp1516 * _tmp1558 + _tmp1557 * _tmp288;
  const Scalar _tmp1561 = _tmp150 * _tmp1501;
  const Scalar _tmp1562 = _tmp1310 * _tmp275 - _tmp1507 * _tmp1561;
  const Scalar _tmp1563 = _tmp1224 * _tmp275 - _tmp1503 * _tmp1561;
  const Scalar _tmp1564 = _tmp1509 * _tmp1562 + _tmp1510 * _tmp1563;
  const Scalar _tmp1565 = -_tmp1514 * _tmp1564 + _tmp1516 * _tmp1564 + _tmp1563 * _tmp288;
  const Scalar _tmp1566 = (Scalar(1) / Scalar(2)) * _tmp280;
  const Scalar _tmp1567 = _tmp1515 * _tmp1566;
  const Scalar _tmp1568 = _tmp1513 * _tmp1566;
  const Scalar _tmp1569 = _tmp1521 * _tmp288 + _tmp1525 * _tmp1567 - _tmp1525 * _tmp1568;
  const Scalar _tmp1570 = _tmp1531 * _tmp288 + _tmp1532 * _tmp1567 - _tmp1532 * _tmp1568;
  const Scalar _tmp1571 = _tmp1536 * _tmp288 + _tmp1537 * _tmp1567 - _tmp1537 * _tmp1568;
  const Scalar _tmp1572 = _tmp1508 * _tmp288 + _tmp1511 * _tmp1567 - _tmp1511 * _tmp1568;
  const Scalar _tmp1573 =
      _tmp1569 * _tmp807 - _tmp1570 * _tmp814 + _tmp1571 * _tmp826 - _tmp1572 * _tmp821;
  const Scalar _tmp1574 =
      _tmp1569 * _tmp826 - _tmp1570 * _tmp821 - _tmp1571 * _tmp807 + _tmp1572 * _tmp814;
  const Scalar _tmp1575 =
      -_tmp1569 * _tmp814 - _tmp1570 * _tmp807 + _tmp1571 * _tmp821 + _tmp1572 * _tmp826;
  const Scalar _tmp1576 = _tmp1545 * _tmp288 + _tmp1549 * _tmp1567 - _tmp1549 * _tmp1568;
  const Scalar _tmp1577 = _tmp1551 * _tmp288 + _tmp1553 * _tmp1567 - _tmp1553 * _tmp1568;
  const Scalar _tmp1578 = _tmp1556 * _tmp288 + _tmp1558 * _tmp1567 - _tmp1559 * _tmp1566;
  const Scalar _tmp1579 = _tmp1562 * _tmp288 + _tmp1564 * _tmp1567 - _tmp1564 * _tmp1568;
  const Scalar _tmp1580 = _tmp298 * _tmp958;
  const Scalar _tmp1581 = _tmp296 * _tmp83;
  const Scalar _tmp1582 = _tmp1149 * _tmp299;
  const Scalar _tmp1583 = _tmp296 * _tmp67;
  const Scalar _tmp1584 = _tmp297 * _tmp958;
  const Scalar _tmp1585 = _tmp311 * ((((_tmp301 + _tmp33) > 0) - ((_tmp301 + _tmp33) < 0)) + 1) /
                          std::pow(_tmp302, Scalar(2));
  const Scalar _tmp1586 =
      _tmp1585 * (_tmp1169 * landmarks_5_ - _tmp1583 + _tmp1584 - _tmp298 * _tmp996);
  const Scalar _tmp1587 =
      -_tmp1582 * _tmp1586 + _tmp304 * (_tmp1173 * landmarks_5_ + _tmp1580 + _tmp1581);
  const Scalar _tmp1588 = 2 * _tmp305;
  const Scalar _tmp1589 = _tmp298 * _tmp67;
  const Scalar _tmp1590 = _tmp297 * _tmp83;
  const Scalar _tmp1591 = _tmp1139 * _tmp306;
  const Scalar _tmp1592 = -_tmp1586 * _tmp1591 + _tmp307 * (_tmp1178 * landmarks_5_ + _tmp1589 +
                                                            _tmp1590 - _tmp296 * _tmp996);
  const Scalar _tmp1593 = 2 * _tmp308;
  const Scalar _tmp1594 = _tmp1587 * _tmp1588 + _tmp1592 * _tmp1593;
  const Scalar _tmp1595 = (Scalar(1) / Scalar(2)) * _tmp305;
  const Scalar _tmp1596 = _tmp315 / (_tmp309 * std::sqrt(_tmp309));
  const Scalar _tmp1597 = _tmp1595 * _tmp1596;
  const Scalar _tmp1598 = _tmp163 * _tmp310 * _tmp312 * std::pow(_tmp313, _tmp1161) / _tmp314;
  const Scalar _tmp1599 = _tmp1595 * _tmp1598;
  const Scalar _tmp1600 = _tmp1587 * _tmp316 - _tmp1594 * _tmp1597 + _tmp1594 * _tmp1599;
  const Scalar _tmp1601 = _tmp296 * _tmp958;
  const Scalar _tmp1602 = _tmp297 * _tmp67;
  const Scalar _tmp1603 =
      _tmp1585 * (-_tmp1036 * _tmp298 + _tmp1196 * landmarks_5_ + _tmp1601 + _tmp1602);
  const Scalar _tmp1604 = _tmp296 * _tmp70;
  const Scalar _tmp1605 =
      -_tmp1582 * _tmp1603 +
      _tmp304 * (-_tmp1036 * _tmp297 + _tmp1199 * landmarks_5_ - _tmp1589 + _tmp1604);
  const Scalar _tmp1606 = _tmp297 * _tmp70;
  const Scalar _tmp1607 =
      -_tmp1591 * _tmp1603 + _tmp307 * (_tmp1195 * landmarks_5_ + _tmp1580 + _tmp1606);
  const Scalar _tmp1608 = _tmp1588 * _tmp1605 + _tmp1593 * _tmp1607;
  const Scalar _tmp1609 = -_tmp1597 * _tmp1608 + _tmp1599 * _tmp1608 + _tmp1605 * _tmp316;
  const Scalar _tmp1610 = _tmp298 * _tmp83;
  const Scalar _tmp1611 = _tmp1585 * (_tmp1186 * landmarks_5_ + _tmp1590 - _tmp1604);
  const Scalar _tmp1612 =
      -_tmp1582 * _tmp1611 + _tmp304 * (_tmp1191 * landmarks_5_ + _tmp1601 - _tmp1610);
  const Scalar _tmp1613 = _tmp298 * _tmp70;
  const Scalar _tmp1614 =
      -_tmp1591 * _tmp1611 + _tmp307 * (_tmp1183 * landmarks_5_ - _tmp1584 + _tmp1613);
  const Scalar _tmp1615 = _tmp1588 * _tmp1612 + _tmp1593 * _tmp1614;
  const Scalar _tmp1616 = -_tmp1597 * _tmp1615 + _tmp1599 * _tmp1615 + _tmp1612 * _tmp316;
  const Scalar _tmp1617 = _tmp1585 * (_tmp1136 * landmarks_5_ + _tmp1581 + _tmp1606);
  const Scalar _tmp1618 =
      -_tmp1591 * _tmp1617 +
      _tmp307 * (-_tmp1018 * _tmp296 + _tmp1145 * landmarks_5_ - _tmp1602 + _tmp1610);
  const Scalar _tmp1619 =
      -_tmp1582 * _tmp1617 +
      _tmp304 * (-_tmp1018 * _tmp297 + _tmp1154 * landmarks_5_ + _tmp1583 + _tmp1613);
  const Scalar _tmp1620 = _tmp1588 * _tmp1619 + _tmp1593 * _tmp1618;
  const Scalar _tmp1621 = -_tmp1597 * _tmp1620 + _tmp1599 * _tmp1620 + _tmp1619 * _tmp316;
  const Scalar _tmp1622 =
      _tmp1600 * _tmp826 + _tmp1609 * _tmp807 - _tmp1616 * _tmp814 - _tmp1621 * _tmp821;
  const Scalar _tmp1623 =
      -_tmp1600 * _tmp807 + _tmp1609 * _tmp826 - _tmp1616 * _tmp821 + _tmp1621 * _tmp814;
  const Scalar _tmp1624 =
      _tmp1600 * _tmp821 - _tmp1609 * _tmp814 - _tmp1616 * _tmp807 + _tmp1621 * _tmp826;
  const Scalar _tmp1625 = _tmp1582 * _tmp1585;
  const Scalar _tmp1626 = _tmp113 * landmarks_5_;
  const Scalar _tmp1627 = _tmp304 * landmarks_5_;
  const Scalar _tmp1628 = _tmp1625 * _tmp1626 - _tmp1627 * _tmp80;
  const Scalar _tmp1629 = _tmp307 * landmarks_5_;
  const Scalar _tmp1630 = _tmp1585 * _tmp1591;
  const Scalar _tmp1631 = _tmp1626 * _tmp1630 - _tmp1629 * _tmp87;
  const Scalar _tmp1632 = _tmp1588 * _tmp1628 + _tmp1593 * _tmp1631;
  const Scalar _tmp1633 = _tmp1598 * _tmp1632;
  const Scalar _tmp1634 = _tmp1595 * _tmp1633 - _tmp1597 * _tmp1632 + _tmp1628 * _tmp316;
  const Scalar _tmp1635 = _tmp112 * landmarks_5_;
  const Scalar _tmp1636 = -_tmp1629 * _tmp90 + _tmp1630 * _tmp1635;
  const Scalar _tmp1637 = _tmp1625 * _tmp1635 - _tmp1627 * _tmp75;
  const Scalar _tmp1638 = _tmp1588 * _tmp1637 + _tmp1593 * _tmp1636;
  const Scalar _tmp1639 = -_tmp1597 * _tmp1638 + _tmp1599 * _tmp1638 + _tmp1637 * _tmp316;
  const Scalar _tmp1640 = _tmp114 * landmarks_5_;
  const Scalar _tmp1641 = -_tmp1629 * _tmp85 + _tmp1630 * _tmp1640;
  const Scalar _tmp1642 = _tmp1625 * _tmp1640 - _tmp1627 * _tmp72;
  const Scalar _tmp1643 = _tmp1588 * _tmp1642 + _tmp1593 * _tmp1641;
  const Scalar _tmp1644 = _tmp1595 * _tmp1643;
  const Scalar _tmp1645 = -_tmp1596 * _tmp1644 + _tmp1598 * _tmp1644 + _tmp1642 * _tmp316;
  const Scalar _tmp1646 = _tmp1224 * _tmp303 - _tmp150 * _tmp1625;
  const Scalar _tmp1647 = -_tmp1226 * _tmp1585 * _tmp306 + _tmp1310 * _tmp303;
  const Scalar _tmp1648 = _tmp1588 * _tmp1646 + _tmp1593 * _tmp1647;
  const Scalar _tmp1649 = -_tmp1597 * _tmp1648 + _tmp1599 * _tmp1648 + _tmp1646 * _tmp316;
  const Scalar _tmp1650 = (Scalar(1) / Scalar(2)) * _tmp308;
  const Scalar _tmp1651 = _tmp1598 * _tmp1650;
  const Scalar _tmp1652 = _tmp1596 * _tmp1650;
  const Scalar _tmp1653 = _tmp1618 * _tmp316 + _tmp1620 * _tmp1651 - _tmp1620 * _tmp1652;
  const Scalar _tmp1654 = _tmp1592 * _tmp316 + _tmp1594 * _tmp1651 - _tmp1594 * _tmp1652;
  const Scalar _tmp1655 = _tmp1607 * _tmp316 + _tmp1608 * _tmp1651 - _tmp1608 * _tmp1652;
  const Scalar _tmp1656 = _tmp1614 * _tmp316 + _tmp1615 * _tmp1651 - _tmp1615 * _tmp1652;
  const Scalar _tmp1657 =
      -_tmp1653 * _tmp821 + _tmp1654 * _tmp826 + _tmp1655 * _tmp807 - _tmp1656 * _tmp814;
  const Scalar _tmp1658 =
      _tmp1653 * _tmp814 - _tmp1654 * _tmp807 + _tmp1655 * _tmp826 - _tmp1656 * _tmp821;
  const Scalar _tmp1659 =
      _tmp1653 * _tmp826 + _tmp1654 * _tmp821 - _tmp1655 * _tmp814 - _tmp1656 * _tmp807;
  const Scalar _tmp1660 = _tmp1631 * _tmp316 - _tmp1632 * _tmp1652 + _tmp1633 * _tmp1650;
  const Scalar _tmp1661 = _tmp1636 * _tmp316 + _tmp1638 * _tmp1651 - _tmp1638 * _tmp1652;
  const Scalar _tmp1662 = _tmp1641 * _tmp316 + _tmp1643 * _tmp1651 - _tmp1643 * _tmp1652;
  const Scalar _tmp1663 = _tmp1647 * _tmp316 + _tmp1648 * _tmp1651 - _tmp1648 * _tmp1652;
  const Scalar _tmp1664 = (Scalar(1) / Scalar(2)) * _tmp333;
  const Scalar _tmp1665 = _tmp326 * _tmp70;
  const Scalar _tmp1666 = _tmp324 * _views_1_pose[2];
  const Scalar _tmp1667 = 2 * _tmp1666;
  const Scalar _tmp1668 = _tmp325 * _tmp70;
  const Scalar _tmp1669 = _tmp324 * _tmp83;
  const Scalar _tmp1670 = _tmp339 * ((((_tmp329 + _tmp33) > 0) - ((_tmp329 + _tmp33) < 0)) + 1) /
                          std::pow(_tmp330, Scalar(2));
  const Scalar _tmp1671 = _tmp1670 * (_tmp1186 * landmarks_6_ - _tmp1668 + _tmp1669);
  const Scalar _tmp1672 = _tmp1139 * _tmp334;
  const Scalar _tmp1673 =
      -_tmp1671 * _tmp1672 + _tmp335 * (_tmp1183 * landmarks_6_ + _tmp1665 - _tmp1667);
  const Scalar _tmp1674 = 2 * _tmp336;
  const Scalar _tmp1675 = _tmp326 * _tmp83;
  const Scalar _tmp1676 = _tmp325 * _tmp958;
  const Scalar _tmp1677 = _tmp1149 * _tmp327;
  const Scalar _tmp1678 =
      -_tmp1671 * _tmp1677 + _tmp332 * (_tmp1191 * landmarks_6_ - _tmp1675 + _tmp1676);
  const Scalar _tmp1679 = 2 * _tmp333;
  const Scalar _tmp1680 = _tmp1673 * _tmp1674 + _tmp1678 * _tmp1679;
  const Scalar _tmp1681 = _tmp163 * _tmp338 * _tmp340 * std::pow(_tmp341, _tmp1161) / _tmp342;
  const Scalar _tmp1682 = _tmp1680 * _tmp1681;
  const Scalar _tmp1683 = _tmp343 / (_tmp337 * std::sqrt(_tmp337));
  const Scalar _tmp1684 = _tmp1664 * _tmp1683;
  const Scalar _tmp1685 = _tmp1664 * _tmp1682 + _tmp1678 * _tmp344 - _tmp1680 * _tmp1684;
  const Scalar _tmp1686 = _tmp325 * _tmp67;
  const Scalar _tmp1687 = _tmp1169 * landmarks_6_ + _tmp1667 - _tmp1686 - _tmp326 * _tmp996;
  const Scalar _tmp1688 = _tmp1670 * _tmp1677;
  const Scalar _tmp1689 = _tmp326 * _tmp958;
  const Scalar _tmp1690 = _tmp325 * _tmp83;
  const Scalar _tmp1691 =
      -_tmp1687 * _tmp1688 + _tmp332 * (_tmp1173 * landmarks_6_ + _tmp1689 + _tmp1690);
  const Scalar _tmp1692 = _tmp1670 * _tmp1672;
  const Scalar _tmp1693 = _tmp326 * _tmp67;
  const Scalar _tmp1694 = -_tmp1687 * _tmp1692 + _tmp335 * (_tmp1178 * landmarks_6_ + _tmp1669 +
                                                            _tmp1693 - _tmp325 * _tmp996);
  const Scalar _tmp1695 = _tmp1674 * _tmp1694 + _tmp1679 * _tmp1691;
  const Scalar _tmp1696 = _tmp1664 * _tmp1681;
  const Scalar _tmp1697 = -_tmp1684 * _tmp1695 + _tmp1691 * _tmp344 + _tmp1695 * _tmp1696;
  const Scalar _tmp1698 = _tmp324 * _tmp67;
  const Scalar _tmp1699 = -_tmp1036 * _tmp326 + _tmp1196 * landmarks_6_ + _tmp1676 + _tmp1698;
  const Scalar _tmp1700 = _tmp324 * _tmp70;
  const Scalar _tmp1701 =
      -_tmp1692 * _tmp1699 + _tmp335 * (_tmp1195 * landmarks_6_ + _tmp1689 + _tmp1700);
  const Scalar _tmp1702 =
      -_tmp1688 * _tmp1699 +
      _tmp332 * (-_tmp1036 * _tmp324 + _tmp1199 * landmarks_6_ + _tmp1668 - _tmp1693);
  const Scalar _tmp1703 = _tmp1674 * _tmp1701 + _tmp1679 * _tmp1702;
  const Scalar _tmp1704 = _tmp1683 * _tmp1703;
  const Scalar _tmp1705 = -_tmp1664 * _tmp1704 + _tmp1696 * _tmp1703 + _tmp1702 * _tmp344;
  const Scalar _tmp1706 = _tmp1136 * landmarks_6_ + _tmp1690 + _tmp1700;
  const Scalar _tmp1707 = -_tmp1688 * _tmp1706 +
                          _tmp332 * (_tmp1154 * landmarks_6_ + _tmp1665 - 4 * _tmp1666 + _tmp1686);
  const Scalar _tmp1708 =
      -_tmp1692 * _tmp1706 +
      _tmp335 * (-_tmp1018 * _tmp325 + _tmp1145 * landmarks_6_ + _tmp1675 - _tmp1698);
  const Scalar _tmp1709 = _tmp1674 * _tmp1708 + _tmp1679 * _tmp1707;
  const Scalar _tmp1710 = -_tmp1684 * _tmp1709 + _tmp1696 * _tmp1709 + _tmp1707 * _tmp344;
  const Scalar _tmp1711 =
      -_tmp1685 * _tmp814 + _tmp1697 * _tmp826 + _tmp1705 * _tmp807 - _tmp1710 * _tmp821;
  const Scalar _tmp1712 =
      -_tmp1685 * _tmp821 - _tmp1697 * _tmp807 + _tmp1705 * _tmp826 + _tmp1710 * _tmp814;
  const Scalar _tmp1713 =
      -_tmp1685 * _tmp807 + _tmp1697 * _tmp821 - _tmp1705 * _tmp814 + _tmp1710 * _tmp826;
  const Scalar _tmp1714 = _tmp1688 * landmarks_6_;
  const Scalar _tmp1715 = _tmp332 * landmarks_6_;
  const Scalar _tmp1716 = _tmp113 * _tmp1714 - _tmp1715 * _tmp80;
  const Scalar _tmp1717 = _tmp335 * landmarks_6_;
  const Scalar _tmp1718 = _tmp1692 * landmarks_6_;
  const Scalar _tmp1719 = _tmp113 * _tmp1718 - _tmp1717 * _tmp87;
  const Scalar _tmp1720 = _tmp1674 * _tmp1719 + _tmp1679 * _tmp1716;
  const Scalar _tmp1721 = _tmp1664 * _tmp1720;
  const Scalar _tmp1722 = _tmp1681 * _tmp1721 - _tmp1683 * _tmp1721 + _tmp1716 * _tmp344;
  const Scalar _tmp1723 = _tmp112 * _tmp1718 - _tmp1717 * _tmp90;
  const Scalar _tmp1724 = _tmp112 * _tmp1714 - _tmp1715 * _tmp75;
  const Scalar _tmp1725 = _tmp1674 * _tmp1723 + _tmp1679 * _tmp1724;
  const Scalar _tmp1726 = -_tmp1684 * _tmp1725 + _tmp1696 * _tmp1725 + _tmp1724 * _tmp344;
  const Scalar _tmp1727 = _tmp114 * landmarks_6_;
  const Scalar _tmp1728 = _tmp1688 * _tmp1727 - _tmp1715 * _tmp72;
  const Scalar _tmp1729 = _tmp1692 * _tmp1727 - _tmp1717 * _tmp85;
  const Scalar _tmp1730 = _tmp1674 * _tmp1729 + _tmp1679 * _tmp1728;
  const Scalar _tmp1731 = -_tmp1684 * _tmp1730 + _tmp1696 * _tmp1730 + _tmp1728 * _tmp344;
  const Scalar _tmp1732 = -_tmp1226 * _tmp1670 * _tmp334 + _tmp1310 * _tmp331;
  const Scalar _tmp1733 = _tmp1224 * _tmp331 - _tmp150 * _tmp1688;
  const Scalar _tmp1734 = _tmp1674 * _tmp1732 + _tmp1679 * _tmp1733;
  const Scalar _tmp1735 = -_tmp1684 * _tmp1734 + _tmp1696 * _tmp1734 + _tmp1733 * _tmp344;
  const Scalar _tmp1736 = (Scalar(1) / Scalar(2)) * _tmp336;
  const Scalar _tmp1737 = _tmp1681 * _tmp1736;
  const Scalar _tmp1738 = _tmp1701 * _tmp344 + _tmp1703 * _tmp1737 - _tmp1704 * _tmp1736;
  const Scalar _tmp1739 = _tmp1683 * _tmp1736;
  const Scalar _tmp1740 = _tmp1673 * _tmp344 - _tmp1680 * _tmp1739 + _tmp1682 * _tmp1736;
  const Scalar _tmp1741 = _tmp1694 * _tmp344 + _tmp1695 * _tmp1737 - _tmp1695 * _tmp1739;
  const Scalar _tmp1742 = _tmp1708 * _tmp344 + _tmp1709 * _tmp1737 - _tmp1709 * _tmp1739;
  const Scalar _tmp1743 =
      _tmp1738 * _tmp807 - _tmp1740 * _tmp814 + _tmp1741 * _tmp826 - _tmp1742 * _tmp821;
  const Scalar _tmp1744 =
      _tmp1738 * _tmp826 - _tmp1740 * _tmp821 - _tmp1741 * _tmp807 + _tmp1742 * _tmp814;
  const Scalar _tmp1745 =
      -_tmp1738 * _tmp814 - _tmp1740 * _tmp807 + _tmp1741 * _tmp821 + _tmp1742 * _tmp826;
  const Scalar _tmp1746 = _tmp1719 * _tmp344 + _tmp1720 * _tmp1737 - _tmp1720 * _tmp1739;
  const Scalar _tmp1747 = _tmp1723 * _tmp344 + _tmp1725 * _tmp1737 - _tmp1725 * _tmp1739;
  const Scalar _tmp1748 = _tmp1729 * _tmp344 + _tmp1730 * _tmp1737 - _tmp1730 * _tmp1739;
  const Scalar _tmp1749 = _tmp1732 * _tmp344 + _tmp1734 * _tmp1737 - _tmp1734 * _tmp1739;
  const Scalar _tmp1750 = 2 * _tmp354;
  const Scalar _tmp1751 = _tmp1750 * _views_1_pose[2];
  const Scalar _tmp1752 = _tmp352 * _tmp67;
  const Scalar _tmp1753 = -_tmp1036 * _tmp353 + _tmp1196 * landmarks_7_ + _tmp1751 + _tmp1752;
  const Scalar _tmp1754 = _tmp369 * ((((_tmp33 + _tmp357) > 0) - ((_tmp33 + _tmp357) < 0)) + 1) /
                          std::pow(_tmp358, Scalar(2));
  const Scalar _tmp1755 = _tmp1754 * _tmp362;
  const Scalar _tmp1756 = _tmp1139 * _tmp1755;
  const Scalar _tmp1757 = _tmp352 * _tmp70;
  const Scalar _tmp1758 = _tmp353 * _tmp958;
  const Scalar _tmp1759 =
      -_tmp1753 * _tmp1756 + _tmp363 * (_tmp1195 * landmarks_7_ + _tmp1757 + _tmp1758);
  const Scalar _tmp1760 = 2 * _tmp364;
  const Scalar _tmp1761 = _tmp354 * _tmp70;
  const Scalar _tmp1762 = _tmp353 * _tmp67;
  const Scalar _tmp1763 = _tmp1754 * _tmp355;
  const Scalar _tmp1764 = _tmp1149 * _tmp1763;
  const Scalar _tmp1765 =
      -_tmp1753 * _tmp1764 +
      _tmp360 * (-_tmp1036 * _tmp352 + _tmp1199 * landmarks_7_ + _tmp1761 - _tmp1762);
  const Scalar _tmp1766 = 2 * _tmp361;
  const Scalar _tmp1767 = _tmp1759 * _tmp1760 + _tmp1765 * _tmp1766;
  const Scalar _tmp1768 = (Scalar(1) / Scalar(2)) * _tmp361;
  const Scalar _tmp1769 = _tmp371 / (_tmp365 * std::sqrt(_tmp365));
  const Scalar _tmp1770 = _tmp1768 * _tmp1769;
  const Scalar _tmp1771 = _tmp163 * _tmp366 * std::pow(_tmp367, _tmp1161) * _tmp370 / _tmp368;
  const Scalar _tmp1772 = _tmp1768 * _tmp1771;
  const Scalar _tmp1773 = _tmp1765 * _tmp372 - _tmp1767 * _tmp1770 + _tmp1767 * _tmp1772;
  const Scalar _tmp1774 = _tmp354 * _tmp67;
  const Scalar _tmp1775 = _tmp352 * _tmp958;
  const Scalar _tmp1776 = _tmp1169 * landmarks_7_ - _tmp1774 + _tmp1775 - _tmp353 * _tmp996;
  const Scalar _tmp1777 = 4 * _tmp354;
  const Scalar _tmp1778 = _tmp352 * _tmp83;
  const Scalar _tmp1779 = -_tmp1756 * _tmp1776 + _tmp363 * (_tmp1178 * landmarks_7_ + _tmp1762 -
                                                            _tmp1777 * _views_1_pose[0] + _tmp1778);
  const Scalar _tmp1780 = _tmp1750 * _views_1_pose[1];
  const Scalar _tmp1781 =
      -_tmp1764 * _tmp1776 + _tmp360 * (_tmp1173 * landmarks_7_ + _tmp1758 + _tmp1780);
  const Scalar _tmp1782 = _tmp1760 * _tmp1779 + _tmp1766 * _tmp1781;
  const Scalar _tmp1783 = -Scalar(1) / Scalar(2) * _tmp1770 * _tmp1782 +
                          (Scalar(1) / Scalar(2)) * _tmp1772 * _tmp1782 +
                          (Scalar(1) / Scalar(2)) * _tmp1781 * _tmp372;
  const Scalar _tmp1784 = _tmp1136 * landmarks_7_ + _tmp1757 + _tmp1780;
  const Scalar _tmp1785 = _tmp353 * _tmp83;
  const Scalar _tmp1786 = -_tmp1756 * _tmp1784 + _tmp363 * (_tmp1145 * landmarks_7_ - _tmp1752 -
                                                            _tmp1777 * _views_1_pose[2] + _tmp1785);
  const Scalar _tmp1787 = _tmp353 * _tmp70;
  const Scalar _tmp1788 =
      -_tmp1764 * _tmp1784 +
      _tmp360 * (-_tmp1018 * _tmp352 + _tmp1154 * landmarks_7_ + _tmp1774 + _tmp1787);
  const Scalar _tmp1789 = _tmp1760 * _tmp1786 + _tmp1766 * _tmp1788;
  const Scalar _tmp1790 = -_tmp1770 * _tmp1789 + _tmp1772 * _tmp1789 + _tmp1788 * _tmp372;
  const Scalar _tmp1791 = _tmp1186 * landmarks_7_ - _tmp1761 + _tmp1778;
  const Scalar _tmp1792 =
      -_tmp1764 * _tmp1791 + _tmp360 * (_tmp1191 * landmarks_7_ + _tmp1751 - _tmp1785);
  const Scalar _tmp1793 =
      -_tmp1756 * _tmp1791 + _tmp363 * (_tmp1183 * landmarks_7_ - _tmp1775 + _tmp1787);
  const Scalar _tmp1794 = _tmp1760 * _tmp1793 + _tmp1766 * _tmp1792;
  const Scalar _tmp1795 = _tmp1771 * _tmp1794;
  const Scalar _tmp1796 = _tmp1768 * _tmp1795 - _tmp1770 * _tmp1794 + _tmp1792 * _tmp372;
  const Scalar _tmp1797 =
      _tmp1773 * _tmp807 + _tmp1783 * _views_1_pose[3] - _tmp1790 * _tmp821 - _tmp1796 * _tmp814;
  const Scalar _tmp1798 =
      _tmp1773 * _tmp826 - _tmp1783 * _views_1_pose[2] + _tmp1790 * _tmp814 - _tmp1796 * _tmp821;
  const Scalar _tmp1799 =
      -_tmp1773 * _tmp814 + _tmp1783 * _views_1_pose[1] + _tmp1790 * _tmp826 - _tmp1796 * _tmp807;
  const Scalar _tmp1800 = _tmp360 * landmarks_7_;
  const Scalar _tmp1801 = _tmp113 * landmarks_7_;
  const Scalar _tmp1802 = _tmp1764 * _tmp1801 - _tmp1800 * _tmp80;
  const Scalar _tmp1803 = _tmp363 * landmarks_7_;
  const Scalar _tmp1804 = _tmp1756 * _tmp1801 - _tmp1803 * _tmp87;
  const Scalar _tmp1805 = _tmp1760 * _tmp1804 + _tmp1766 * _tmp1802;
  const Scalar _tmp1806 = -_tmp1770 * _tmp1805 + _tmp1772 * _tmp1805 + _tmp1802 * _tmp372;
  const Scalar _tmp1807 = _tmp112 * landmarks_7_;
  const Scalar _tmp1808 = _tmp1764 * _tmp1807 - _tmp1800 * _tmp75;
  const Scalar _tmp1809 = _tmp1756 * _tmp1807 - _tmp1803 * _tmp90;
  const Scalar _tmp1810 = _tmp1760 * _tmp1809 + _tmp1766 * _tmp1808;
  const Scalar _tmp1811 = _tmp1768 * _tmp1810;
  const Scalar _tmp1812 = -_tmp1769 * _tmp1811 + _tmp1771 * _tmp1811 + _tmp1808 * _tmp372;
  const Scalar _tmp1813 = _tmp114 * landmarks_7_;
  const Scalar _tmp1814 = _tmp1756 * _tmp1813 - _tmp1803 * _tmp85;
  const Scalar _tmp1815 = _tmp1764 * _tmp1813 - _tmp1800 * _tmp72;
  const Scalar _tmp1816 = _tmp1760 * _tmp1814 + _tmp1766 * _tmp1815;
  const Scalar _tmp1817 = -_tmp1770 * _tmp1816 + _tmp1772 * _tmp1816 + _tmp1815 * _tmp372;
  const Scalar _tmp1818 = _tmp1224 * _tmp359 - _tmp1478 * _tmp1763;
  const Scalar _tmp1819 = -_tmp1226 * _tmp1755 + _tmp157 * _tmp363;
  const Scalar _tmp1820 = _tmp1760 * _tmp1819 + _tmp1766 * _tmp1818;
  const Scalar _tmp1821 = -_tmp1770 * _tmp1820 + _tmp1772 * _tmp1820 + _tmp1818 * _tmp372;
  const Scalar _tmp1822 = (Scalar(1) / Scalar(2)) * _tmp364;
  const Scalar _tmp1823 = _tmp1769 * _tmp1822;
  const Scalar _tmp1824 = _tmp1771 * _tmp1822;
  const Scalar _tmp1825 = _tmp1779 * _tmp372 - _tmp1782 * _tmp1823 + _tmp1782 * _tmp1824;
  const Scalar _tmp1826 = _tmp1759 * _tmp372 - _tmp1767 * _tmp1823 + _tmp1767 * _tmp1824;
  const Scalar _tmp1827 = _tmp1793 * _tmp372 - _tmp1794 * _tmp1823 + _tmp1795 * _tmp1822;
  const Scalar _tmp1828 = _tmp1786 * _tmp372 - _tmp1789 * _tmp1823 + _tmp1789 * _tmp1824;
  const Scalar _tmp1829 =
      _tmp1825 * _tmp826 + _tmp1826 * _tmp807 - _tmp1827 * _tmp814 - _tmp1828 * _tmp821;
  const Scalar _tmp1830 =
      -_tmp1825 * _tmp807 + _tmp1826 * _tmp826 - _tmp1827 * _tmp821 + _tmp1828 * _tmp814;
  const Scalar _tmp1831 =
      _tmp1825 * _tmp821 - _tmp1826 * _tmp814 - _tmp1827 * _tmp807 + _tmp1828 * _tmp826;
  const Scalar _tmp1832 = _tmp1804 * _tmp372 - _tmp1805 * _tmp1823 + _tmp1805 * _tmp1824;
  const Scalar _tmp1833 = _tmp1809 * _tmp372 - _tmp1810 * _tmp1823 + _tmp1810 * _tmp1824;
  const Scalar _tmp1834 = _tmp1814 * _tmp372 - _tmp1816 * _tmp1823 + _tmp1816 * _tmp1824;
  const Scalar _tmp1835 = _tmp1819 * _tmp372 - _tmp1820 * _tmp1823 + _tmp1820 * _tmp1824;
  const Scalar _tmp1836 = _tmp380 * _tmp67;
  const Scalar _tmp1837 = _tmp381 * _tmp70;
  const Scalar _tmp1838 = 2 * _tmp381;
  const Scalar _tmp1839 = _tmp1838 * _views_1_pose[2];
  const Scalar _tmp1840 = _tmp382 * _tmp67;
  const Scalar _tmp1841 = -_tmp1036 * _tmp380 + _tmp1196 * landmarks_8_ + _tmp1839 + _tmp1840;
  const Scalar _tmp1842 = _tmp397 * ((((_tmp33 + _tmp385) > 0) - ((_tmp33 + _tmp385) < 0)) + 1) /
                          std::pow(_tmp386, Scalar(2));
  const Scalar _tmp1843 = _tmp1149 * _tmp383;
  const Scalar _tmp1844 = _tmp1842 * _tmp1843;
  const Scalar _tmp1845 =
      -_tmp1841 * _tmp1844 +
      _tmp388 * (-_tmp1036 * _tmp382 + _tmp1199 * landmarks_8_ - _tmp1836 + _tmp1837);
  const Scalar _tmp1846 = _tmp380 * _tmp958;
  const Scalar _tmp1847 = _tmp382 * _tmp70;
  const Scalar _tmp1848 = _tmp1139 * _tmp390;
  const Scalar _tmp1849 = _tmp1842 * _tmp1848;
  const Scalar _tmp1850 =
      -_tmp1841 * _tmp1849 + _tmp391 * (_tmp1195 * landmarks_8_ + _tmp1846 + _tmp1847);
  const Scalar _tmp1851 = 2 * _tmp392;
  const Scalar _tmp1852 = 2 * _tmp389;
  const Scalar _tmp1853 = _tmp1845 * _tmp1852 + _tmp1850 * _tmp1851;
  const Scalar _tmp1854 = (Scalar(1) / Scalar(2)) * _tmp389;
  const Scalar _tmp1855 = _tmp163 * _tmp394 * std::pow(_tmp395, _tmp1161) * _tmp398 / _tmp396;
  const Scalar _tmp1856 = _tmp1854 * _tmp1855;
  const Scalar _tmp1857 = _tmp399 / (_tmp393 * std::sqrt(_tmp393));
  const Scalar _tmp1858 = _tmp1854 * _tmp1857;
  const Scalar _tmp1859 = _tmp1845 * _tmp400 + _tmp1853 * _tmp1856 - _tmp1853 * _tmp1858;
  const Scalar _tmp1860 = _tmp380 * _tmp83;
  const Scalar _tmp1861 = 4 * _tmp381;
  const Scalar _tmp1862 = _tmp1838 * _views_1_pose[1];
  const Scalar _tmp1863 = _tmp1136 * landmarks_8_ + _tmp1847 + _tmp1862;
  const Scalar _tmp1864 = -_tmp1849 * _tmp1863 + _tmp391 * (_tmp1145 * landmarks_8_ - _tmp1840 +
                                                            _tmp1860 - _tmp1861 * _views_1_pose[2]);
  const Scalar _tmp1865 = _tmp380 * _tmp70;
  const Scalar _tmp1866 = _tmp381 * _tmp67;
  const Scalar _tmp1867 =
      -_tmp1844 * _tmp1863 +
      _tmp388 * (-_tmp1018 * _tmp382 + _tmp1154 * landmarks_8_ + _tmp1865 + _tmp1866);
  const Scalar _tmp1868 = _tmp1851 * _tmp1864 + _tmp1852 * _tmp1867;
  const Scalar _tmp1869 = _tmp1856 * _tmp1868 - _tmp1858 * _tmp1868 + _tmp1867 * _tmp400;
  const Scalar _tmp1870 = _tmp382 * _tmp958;
  const Scalar _tmp1871 = _tmp1169 * landmarks_8_ - _tmp1866 + _tmp1870 - _tmp380 * _tmp996;
  const Scalar _tmp1872 =
      -_tmp1844 * _tmp1871 + _tmp388 * (_tmp1173 * landmarks_8_ + _tmp1846 + _tmp1862);
  const Scalar _tmp1873 = _tmp382 * _tmp83;
  const Scalar _tmp1874 = -_tmp1849 * _tmp1871 + _tmp391 * (_tmp1178 * landmarks_8_ + _tmp1836 -
                                                            _tmp1861 * _views_1_pose[0] + _tmp1873);
  const Scalar _tmp1875 = _tmp1851 * _tmp1874 + _tmp1852 * _tmp1872;
  const Scalar _tmp1876 = _tmp1856 * _tmp1875 - _tmp1858 * _tmp1875 + _tmp1872 * _tmp400;
  const Scalar _tmp1877 = _tmp1842 * (_tmp1186 * landmarks_8_ - _tmp1837 + _tmp1873);
  const Scalar _tmp1878 =
      -_tmp1843 * _tmp1877 + _tmp388 * (_tmp1191 * landmarks_8_ + _tmp1839 - _tmp1860);
  const Scalar _tmp1879 =
      -_tmp1848 * _tmp1877 + _tmp391 * (_tmp1183 * landmarks_8_ + _tmp1865 - _tmp1870);
  const Scalar _tmp1880 = _tmp1851 * _tmp1879 + _tmp1852 * _tmp1878;
  const Scalar _tmp1881 = _tmp1857 * _tmp1880;
  const Scalar _tmp1882 = -_tmp1854 * _tmp1881 + _tmp1856 * _tmp1880 + _tmp1878 * _tmp400;
  const Scalar _tmp1883 =
      _tmp1859 * _tmp807 - _tmp1869 * _tmp821 + _tmp1876 * _tmp826 - _tmp1882 * _tmp814;
  const Scalar _tmp1884 =
      _tmp1859 * _tmp826 + _tmp1869 * _tmp814 - _tmp1876 * _tmp807 - _tmp1882 * _tmp821;
  const Scalar _tmp1885 =
      -_tmp1859 * _tmp814 + _tmp1869 * _tmp826 + _tmp1876 * _tmp821 - _tmp1882 * _tmp807;
  const Scalar _tmp1886 = _tmp388 * landmarks_8_;
  const Scalar _tmp1887 = _tmp1844 * landmarks_8_;
  const Scalar _tmp1888 = _tmp113 * _tmp1887 - _tmp1886 * _tmp80;
  const Scalar _tmp1889 = _tmp1849 * landmarks_8_;
  const Scalar _tmp1890 = _tmp391 * landmarks_8_;
  const Scalar _tmp1891 = _tmp113 * _tmp1889 - _tmp1890 * _tmp87;
  const Scalar _tmp1892 = _tmp1851 * _tmp1891 + _tmp1852 * _tmp1888;
  const Scalar _tmp1893 = _tmp1856 * _tmp1892 - _tmp1858 * _tmp1892 + _tmp1888 * _tmp400;
  const Scalar _tmp1894 = _tmp112 * _tmp1887 - _tmp1886 * _tmp75;
  const Scalar _tmp1895 = _tmp112 * _tmp1889 - _tmp1890 * _tmp90;
  const Scalar _tmp1896 = _tmp1851 * _tmp1895 + _tmp1852 * _tmp1894;
  const Scalar _tmp1897 = _tmp1856 * _tmp1896 - _tmp1858 * _tmp1896 + _tmp1894 * _tmp400;
  const Scalar _tmp1898 = _tmp114 * _tmp1887 - _tmp1886 * _tmp72;
  const Scalar _tmp1899 = _tmp114 * _tmp1889 - _tmp1890 * _tmp85;
  const Scalar _tmp1900 = _tmp1851 * _tmp1899 + _tmp1852 * _tmp1898;
  const Scalar _tmp1901 = _tmp1856 * _tmp1900 - _tmp1858 * _tmp1900 + _tmp1898 * _tmp400;
  const Scalar _tmp1902 = _tmp1310 * _tmp387 - _tmp150 * _tmp1849;
  const Scalar _tmp1903 = _tmp1224 * _tmp387 - _tmp150 * _tmp1844;
  const Scalar _tmp1904 = _tmp1851 * _tmp1902 + _tmp1852 * _tmp1903;
  const Scalar _tmp1905 = _tmp1856 * _tmp1904 - _tmp1858 * _tmp1904 + _tmp1903 * _tmp400;
  const Scalar _tmp1906 = (Scalar(1) / Scalar(2)) * _tmp392;
  const Scalar _tmp1907 = _tmp1855 * _tmp1906;
  const Scalar _tmp1908 = _tmp1857 * _tmp1906;
  const Scalar _tmp1909 = _tmp1874 * _tmp400 + _tmp1875 * _tmp1907 - _tmp1875 * _tmp1908;
  const Scalar _tmp1910 = _tmp1850 * _tmp400 + _tmp1853 * _tmp1907 - _tmp1853 * _tmp1908;
  const Scalar _tmp1911 = _tmp1879 * _tmp400 + _tmp1880 * _tmp1907 - _tmp1881 * _tmp1906;
  const Scalar _tmp1912 = _tmp1864 * _tmp400 + _tmp1868 * _tmp1907 - _tmp1868 * _tmp1908;
  const Scalar _tmp1913 =
      _tmp1909 * _tmp826 + _tmp1910 * _tmp807 - _tmp1911 * _tmp814 - _tmp1912 * _tmp821;
  const Scalar _tmp1914 =
      -_tmp1909 * _tmp807 + _tmp1910 * _tmp826 - _tmp1911 * _tmp821 + _tmp1912 * _tmp814;
  const Scalar _tmp1915 =
      _tmp1909 * _tmp821 - _tmp1910 * _tmp814 - _tmp1911 * _tmp807 + _tmp1912 * _tmp826;
  const Scalar _tmp1916 = _tmp1891 * _tmp400 + _tmp1892 * _tmp1907 - _tmp1892 * _tmp1908;
  const Scalar _tmp1917 = _tmp1895 * _tmp400 + _tmp1896 * _tmp1907 - _tmp1896 * _tmp1908;
  const Scalar _tmp1918 = _tmp1899 * _tmp400 + _tmp1900 * _tmp1907 - _tmp1900 * _tmp1908;
  const Scalar _tmp1919 = _tmp1904 * _tmp1906;
  const Scalar _tmp1920 = _tmp1855 * _tmp1919 - _tmp1857 * _tmp1919 + _tmp1902 * _tmp400;
  const Scalar _tmp1921 = _tmp409 * _tmp958;
  const Scalar _tmp1922 = _tmp410 * _tmp70;
  const Scalar _tmp1923 = _tmp408 * _tmp958;
  const Scalar _tmp1924 = _tmp410 * _tmp67;
  const Scalar _tmp1925 = -_tmp1036 * _tmp409 + _tmp1196 * landmarks_9_ + _tmp1923 + _tmp1924;
  const Scalar _tmp1926 = _tmp425 * ((((_tmp33 + _tmp413) > 0) - ((_tmp33 + _tmp413) < 0)) + 1) /
                          std::pow(_tmp414, Scalar(2));
  const Scalar _tmp1927 = _tmp1139 * _tmp418;
  const Scalar _tmp1928 = _tmp1926 * _tmp1927;
  const Scalar _tmp1929 =
      -_tmp1925 * _tmp1928 + _tmp419 * (_tmp1195 * landmarks_9_ + _tmp1921 + _tmp1922);
  const Scalar _tmp1930 = 2 * _tmp420;
  const Scalar _tmp1931 = _tmp408 * _tmp70;
  const Scalar _tmp1932 = _tmp409 * _tmp67;
  const Scalar _tmp1933 = _tmp1149 * _tmp411;
  const Scalar _tmp1934 = _tmp1926 * _tmp1933;
  const Scalar _tmp1935 =
      -_tmp1925 * _tmp1934 +
      _tmp416 * (-_tmp1036 * _tmp410 + _tmp1199 * landmarks_9_ + _tmp1931 - _tmp1932);
  const Scalar _tmp1936 = 2 * _tmp417;
  const Scalar _tmp1937 = _tmp1929 * _tmp1930 + _tmp1935 * _tmp1936;
  const Scalar _tmp1938 = _tmp427 / (_tmp421 * std::sqrt(_tmp421));
  const Scalar _tmp1939 = (Scalar(1) / Scalar(2)) * _tmp417;
  const Scalar _tmp1940 = _tmp1938 * _tmp1939;
  const Scalar _tmp1941 = _tmp163 * _tmp422 * std::pow(_tmp423, _tmp1161) * _tmp426 / _tmp424;
  const Scalar _tmp1942 = _tmp1939 * _tmp1941;
  const Scalar _tmp1943 = _tmp1935 * _tmp428 - _tmp1937 * _tmp1940 + _tmp1937 * _tmp1942;
  const Scalar _tmp1944 = _tmp409 * _tmp83;
  const Scalar _tmp1945 = _tmp410 * _tmp83;
  const Scalar _tmp1946 = _tmp1186 * landmarks_9_ - _tmp1931 + _tmp1945;
  const Scalar _tmp1947 =
      -_tmp1934 * _tmp1946 + _tmp416 * (_tmp1191 * landmarks_9_ + _tmp1923 - _tmp1944);
  const Scalar _tmp1948 = _tmp409 * _tmp70;
  const Scalar _tmp1949 = _tmp410 * _tmp958;
  const Scalar _tmp1950 =
      -_tmp1928 * _tmp1946 + _tmp419 * (_tmp1183 * landmarks_9_ + _tmp1948 - _tmp1949);
  const Scalar _tmp1951 = _tmp1930 * _tmp1950 + _tmp1936 * _tmp1947;
  const Scalar _tmp1952 = -_tmp1940 * _tmp1951 + _tmp1942 * _tmp1951 + _tmp1947 * _tmp428;
  const Scalar _tmp1953 = _tmp408 * _tmp83;
  const Scalar _tmp1954 = _tmp1136 * landmarks_9_ + _tmp1922 + _tmp1953;
  const Scalar _tmp1955 = _tmp408 * _tmp67;
  const Scalar _tmp1956 =
      -_tmp1934 * _tmp1954 +
      _tmp416 * (-_tmp1018 * _tmp410 + _tmp1154 * landmarks_9_ + _tmp1948 + _tmp1955);
  const Scalar _tmp1957 =
      -_tmp1928 * _tmp1954 +
      _tmp419 * (-_tmp1018 * _tmp408 + _tmp1145 * landmarks_9_ - _tmp1924 + _tmp1944);
  const Scalar _tmp1958 = _tmp1930 * _tmp1957 + _tmp1936 * _tmp1956;
  const Scalar _tmp1959 = -_tmp1940 * _tmp1958 + _tmp1942 * _tmp1958 + _tmp1956 * _tmp428;
  const Scalar _tmp1960 =
      _tmp1926 * (_tmp1169 * landmarks_9_ + _tmp1949 - _tmp1955 - _tmp409 * _tmp996);
  const Scalar _tmp1961 =
      -_tmp1933 * _tmp1960 + _tmp416 * (_tmp1173 * landmarks_9_ + _tmp1921 + _tmp1953);
  const Scalar _tmp1962 = -_tmp1927 * _tmp1960 + _tmp419 * (_tmp1178 * landmarks_9_ + _tmp1932 +
                                                            _tmp1945 - _tmp408 * _tmp996);
  const Scalar _tmp1963 = _tmp1930 * _tmp1962 + _tmp1936 * _tmp1961;
  const Scalar _tmp1964 = -_tmp1940 * _tmp1963 + _tmp1942 * _tmp1963 + _tmp1961 * _tmp428;
  const Scalar _tmp1965 =
      _tmp1943 * _tmp807 - _tmp1952 * _tmp814 - _tmp1959 * _tmp821 + _tmp1964 * _tmp826;
  const Scalar _tmp1966 =
      _tmp1943 * _tmp826 - _tmp1952 * _tmp821 + _tmp1959 * _tmp814 - _tmp1964 * _tmp807;
  const Scalar _tmp1967 =
      -_tmp1943 * _tmp814 - _tmp1952 * _tmp807 + _tmp1959 * _tmp826 + _tmp1964 * _tmp821;
  const Scalar _tmp1968 = _tmp419 * landmarks_9_;
  const Scalar _tmp1969 = _tmp1928 * landmarks_9_;
  const Scalar _tmp1970 = _tmp113 * _tmp1969 - _tmp1968 * _tmp87;
  const Scalar _tmp1971 = _tmp1934 * landmarks_9_;
  const Scalar _tmp1972 = _tmp416 * landmarks_9_;
  const Scalar _tmp1973 = _tmp113 * _tmp1971 - _tmp1972 * _tmp80;
  const Scalar _tmp1974 = _tmp1930 * _tmp1970 + _tmp1936 * _tmp1973;
  const Scalar _tmp1975 = -_tmp1940 * _tmp1974 + _tmp1942 * _tmp1974 + _tmp1973 * _tmp428;
  const Scalar _tmp1976 = _tmp112 * _tmp1971 - _tmp1972 * _tmp75;
  const Scalar _tmp1977 = _tmp112 * _tmp1969 - _tmp1968 * _tmp90;
  const Scalar _tmp1978 = _tmp1930 * _tmp1977 + _tmp1936 * _tmp1976;
  const Scalar _tmp1979 = -_tmp1940 * _tmp1978 + _tmp1942 * _tmp1978 + _tmp1976 * _tmp428;
  const Scalar _tmp1980 = _tmp114 * landmarks_9_;
  const Scalar _tmp1981 = _tmp1928 * _tmp1980 - _tmp1968 * _tmp85;
  const Scalar _tmp1982 = _tmp1934 * _tmp1980 - _tmp1972 * _tmp72;
  const Scalar _tmp1983 = _tmp1930 * _tmp1981 + _tmp1936 * _tmp1982;
  const Scalar _tmp1984 = _tmp1938 * _tmp1983;
  const Scalar _tmp1985 = -_tmp1939 * _tmp1984 + _tmp1942 * _tmp1983 + _tmp1982 * _tmp428;
  const Scalar _tmp1986 = -_tmp1226 * _tmp1926 * _tmp418 + _tmp1310 * _tmp415;
  const Scalar _tmp1987 = _tmp1224 * _tmp415 - _tmp150 * _tmp1934;
  const Scalar _tmp1988 = _tmp1930 * _tmp1986 + _tmp1936 * _tmp1987;
  const Scalar _tmp1989 = -_tmp1940 * _tmp1988 + _tmp1942 * _tmp1988 + _tmp1987 * _tmp428;
  const Scalar _tmp1990 = (Scalar(1) / Scalar(2)) * _tmp420;
  const Scalar _tmp1991 = _tmp1938 * _tmp1990;
  const Scalar _tmp1992 = _tmp1941 * _tmp1990;
  const Scalar _tmp1993 = _tmp1957 * _tmp428 - _tmp1958 * _tmp1991 + _tmp1958 * _tmp1992;
  const Scalar _tmp1994 = _tmp1963 * _tmp1990;
  const Scalar _tmp1995 = -_tmp1938 * _tmp1994 + _tmp1941 * _tmp1994 + _tmp1962 * _tmp428;
  const Scalar _tmp1996 = _tmp1929 * _tmp428 - _tmp1937 * _tmp1991 + _tmp1937 * _tmp1992;
  const Scalar _tmp1997 = _tmp1950 * _tmp428 - _tmp1951 * _tmp1991 + _tmp1951 * _tmp1992;
  const Scalar _tmp1998 =
      -_tmp1993 * _tmp821 + _tmp1995 * _tmp826 + _tmp1996 * _tmp807 - _tmp1997 * _tmp814;
  const Scalar _tmp1999 =
      _tmp1993 * _tmp814 - _tmp1995 * _tmp807 + _tmp1996 * _tmp826 - _tmp1997 * _tmp821;
  const Scalar _tmp2000 =
      _tmp1993 * _tmp826 + _tmp1995 * _tmp821 - _tmp1996 * _tmp814 - _tmp1997 * _tmp807;
  const Scalar _tmp2001 = _tmp1970 * _tmp428 - _tmp1974 * _tmp1991 + _tmp1974 * _tmp1992;
  const Scalar _tmp2002 = _tmp1977 * _tmp428 - _tmp1978 * _tmp1991 + _tmp1978 * _tmp1992;
  const Scalar _tmp2003 = _tmp1981 * _tmp428 + _tmp1983 * _tmp1992 - _tmp1984 * _tmp1990;
  const Scalar _tmp2004 = _tmp1986 * _tmp428 - _tmp1988 * _tmp1991 + _tmp1988 * _tmp1992;
  const Scalar _tmp2005 = _tmp1149 * _tmp439;
  const Scalar _tmp2006 = _tmp438 * _tmp67;
  const Scalar _tmp2007 = 2 * _tmp436;
  const Scalar _tmp2008 = _tmp2007 * _views_1_pose[2];
  const Scalar _tmp2009 = _tmp451 * ((((_tmp33 + _tmp441) > 0) - ((_tmp33 + _tmp441) < 0)) + 1) /
                          std::pow(_tmp442, Scalar(2));
  const Scalar _tmp2010 =
      _tmp2009 * (-_tmp1036 * _tmp437 + _tmp1196 * landmarks_10_ + _tmp2006 + _tmp2008);
  const Scalar _tmp2011 = _tmp437 * _tmp67;
  const Scalar _tmp2012 = _tmp436 * _tmp70;
  const Scalar _tmp2013 =
      -_tmp2005 * _tmp2010 +
      _tmp444 * (-_tmp1036 * _tmp438 + _tmp1199 * landmarks_10_ - _tmp2011 + _tmp2012);
  const Scalar _tmp2014 = 2 * _tmp445;
  const Scalar _tmp2015 = _tmp438 * _tmp70;
  const Scalar _tmp2016 = _tmp437 * _tmp958;
  const Scalar _tmp2017 = _tmp1139 * _tmp446;
  const Scalar _tmp2018 =
      -_tmp2010 * _tmp2017 + _tmp447 * (_tmp1195 * landmarks_10_ + _tmp2015 + _tmp2016);
  const Scalar _tmp2019 = 2 * _tmp448;
  const Scalar _tmp2020 = _tmp2013 * _tmp2014 + _tmp2018 * _tmp2019;
  const Scalar _tmp2021 = (Scalar(1) / Scalar(2)) * _tmp445;
  const Scalar _tmp2022 = _tmp455 / (_tmp449 * std::sqrt(_tmp449));
  const Scalar _tmp2023 = _tmp2021 * _tmp2022;
  const Scalar _tmp2024 = _tmp163 * _tmp450 * _tmp452 * std::pow(_tmp453, _tmp1161) / _tmp454;
  const Scalar _tmp2025 = _tmp2021 * _tmp2024;
  const Scalar _tmp2026 = _tmp2013 * _tmp456 - _tmp2020 * _tmp2023 + _tmp2020 * _tmp2025;
  const Scalar _tmp2027 = _tmp438 * _tmp958;
  const Scalar _tmp2028 = _tmp437 * _tmp70;
  const Scalar _tmp2029 = _tmp438 * _tmp83;
  const Scalar _tmp2030 = _tmp1186 * landmarks_10_ - _tmp2012 + _tmp2029;
  const Scalar _tmp2031 = _tmp2009 * _tmp2017;
  const Scalar _tmp2032 =
      -_tmp2030 * _tmp2031 + _tmp447 * (_tmp1183 * landmarks_10_ - _tmp2027 + _tmp2028);
  const Scalar _tmp2033 = _tmp2005 * _tmp2009;
  const Scalar _tmp2034 = _tmp437 * _tmp83;
  const Scalar _tmp2035 =
      -_tmp2030 * _tmp2033 + _tmp444 * (_tmp1191 * landmarks_10_ + _tmp2008 - _tmp2034);
  const Scalar _tmp2036 = _tmp2014 * _tmp2035 + _tmp2019 * _tmp2032;
  const Scalar _tmp2037 = _tmp2021 * _tmp2036;
  const Scalar _tmp2038 = -_tmp2022 * _tmp2037 + _tmp2024 * _tmp2037 + _tmp2035 * _tmp456;
  const Scalar _tmp2039 = _tmp2007 * _views_1_pose[1];
  const Scalar _tmp2040 = _tmp2009 * (_tmp1136 * landmarks_10_ + _tmp2015 + _tmp2039);
  const Scalar _tmp2041 = _tmp436 * _tmp67;
  const Scalar _tmp2042 =
      -_tmp2005 * _tmp2040 +
      _tmp444 * (-_tmp1018 * _tmp438 + _tmp1154 * landmarks_10_ + _tmp2028 + _tmp2041);
  const Scalar _tmp2043 = 4 * _tmp436;
  const Scalar _tmp2044 = -_tmp2017 * _tmp2040 + _tmp447 * (_tmp1145 * landmarks_10_ - _tmp2006 +
                                                            _tmp2034 - _tmp2043 * _views_1_pose[2]);
  const Scalar _tmp2045 = _tmp2014 * _tmp2042 + _tmp2019 * _tmp2044;
  const Scalar _tmp2046 = -_tmp2023 * _tmp2045 + _tmp2025 * _tmp2045 + _tmp2042 * _tmp456;
  const Scalar _tmp2047 = _tmp1169 * landmarks_10_ + _tmp2027 - _tmp2041 - _tmp437 * _tmp996;
  const Scalar _tmp2048 =
      -_tmp2033 * _tmp2047 + _tmp444 * (_tmp1173 * landmarks_10_ + _tmp2016 + _tmp2039);
  const Scalar _tmp2049 = -_tmp2031 * _tmp2047 + _tmp447 * (_tmp1178 * landmarks_10_ + _tmp2011 +
                                                            _tmp2029 - _tmp2043 * _views_1_pose[0]);
  const Scalar _tmp2050 = _tmp2014 * _tmp2048 + _tmp2019 * _tmp2049;
  const Scalar _tmp2051 = -_tmp2023 * _tmp2050 + _tmp2025 * _tmp2050 + _tmp2048 * _tmp456;
  const Scalar _tmp2052 =
      _tmp2026 * _tmp807 - _tmp2038 * _tmp814 - _tmp2046 * _tmp821 + _tmp2051 * _tmp826;
  const Scalar _tmp2053 =
      _tmp2026 * _tmp826 - _tmp2038 * _tmp821 + _tmp2046 * _tmp814 - _tmp2051 * _tmp807;
  const Scalar _tmp2054 =
      -_tmp2026 * _tmp814 - _tmp2038 * _tmp807 + _tmp2046 * _tmp826 + _tmp2051 * _tmp821;
  const Scalar _tmp2055 = _tmp447 * landmarks_10_;
  const Scalar _tmp2056 = _tmp2031 * landmarks_10_;
  const Scalar _tmp2057 = _tmp113 * _tmp2056 - _tmp2055 * _tmp87;
  const Scalar _tmp2058 = _tmp444 * landmarks_10_;
  const Scalar _tmp2059 = _tmp2033 * landmarks_10_;
  const Scalar _tmp2060 = _tmp113 * _tmp2059 - _tmp2058 * _tmp80;
  const Scalar _tmp2061 = _tmp2014 * _tmp2060 + _tmp2019 * _tmp2057;
  const Scalar _tmp2062 = -_tmp2023 * _tmp2061 + _tmp2025 * _tmp2061 + _tmp2060 * _tmp456;
  const Scalar _tmp2063 = _tmp112 * _tmp2059 - _tmp2058 * _tmp75;
  const Scalar _tmp2064 = _tmp112 * _tmp2056 - _tmp2055 * _tmp90;
  const Scalar _tmp2065 = _tmp2014 * _tmp2063 + _tmp2019 * _tmp2064;
  const Scalar _tmp2066 = -_tmp2023 * _tmp2065 + _tmp2025 * _tmp2065 + _tmp2063 * _tmp456;
  const Scalar _tmp2067 = _tmp114 * _tmp2059 - _tmp2058 * _tmp72;
  const Scalar _tmp2068 = _tmp114 * _tmp2056 - _tmp2055 * _tmp85;
  const Scalar _tmp2069 = _tmp2014 * _tmp2067 + _tmp2019 * _tmp2068;
  const Scalar _tmp2070 = -_tmp2023 * _tmp2069 + _tmp2025 * _tmp2069 + _tmp2067 * _tmp456;
  const Scalar _tmp2071 = _tmp150 * _tmp2009;
  const Scalar _tmp2072 = _tmp1310 * _tmp443 - _tmp2017 * _tmp2071;
  const Scalar _tmp2073 = _tmp1224 * _tmp443 - _tmp2005 * _tmp2071;
  const Scalar _tmp2074 = _tmp2014 * _tmp2073 + _tmp2019 * _tmp2072;
  const Scalar _tmp2075 = _tmp2022 * _tmp2074;
  const Scalar _tmp2076 = -_tmp2021 * _tmp2075 + _tmp2025 * _tmp2074 + _tmp2073 * _tmp456;
  const Scalar _tmp2077 = (Scalar(1) / Scalar(2)) * _tmp448;
  const Scalar _tmp2078 = _tmp2022 * _tmp2077;
  const Scalar _tmp2079 = _tmp2024 * _tmp2077;
  const Scalar _tmp2080 = _tmp2044 * _tmp456 - _tmp2045 * _tmp2078 + _tmp2045 * _tmp2079;
  const Scalar _tmp2081 = _tmp2032 * _tmp456 - _tmp2036 * _tmp2078 + _tmp2036 * _tmp2079;
  const Scalar _tmp2082 = _tmp2049 * _tmp456 - _tmp2050 * _tmp2078 + _tmp2050 * _tmp2079;
  const Scalar _tmp2083 = _tmp2018 * _tmp456 - _tmp2020 * _tmp2078 + _tmp2020 * _tmp2079;
  const Scalar _tmp2084 =
      -_tmp2080 * _tmp821 - _tmp2081 * _tmp814 + _tmp2082 * _tmp826 + _tmp2083 * _tmp807;
  const Scalar _tmp2085 =
      _tmp2080 * _tmp814 - _tmp2081 * _tmp821 - _tmp2082 * _tmp807 + _tmp2083 * _tmp826;
  const Scalar _tmp2086 =
      _tmp2080 * _tmp826 - _tmp2081 * _tmp807 + _tmp2082 * _tmp821 - _tmp2083 * _tmp814;
  const Scalar _tmp2087 = _tmp2057 * _tmp456 - _tmp2061 * _tmp2078 + _tmp2061 * _tmp2079;
  const Scalar _tmp2088 = _tmp2064 * _tmp456 - _tmp2065 * _tmp2078 + _tmp2065 * _tmp2079;
  const Scalar _tmp2089 = _tmp2068 * _tmp456 - _tmp2069 * _tmp2078 + _tmp2069 * _tmp2079;
  const Scalar _tmp2090 = _tmp2072 * _tmp456 + _tmp2074 * _tmp2079 - _tmp2075 * _tmp2077;
  const Scalar _tmp2091 = _tmp1149 * _tmp467;
  const Scalar _tmp2092 = _tmp465 * _tmp83;
  const Scalar _tmp2093 = _tmp464 * _tmp70;
  const Scalar _tmp2094 = _tmp481 * ((((_tmp33 + _tmp469) > 0) - ((_tmp33 + _tmp469) < 0)) + 1) /
                          std::pow(_tmp470, Scalar(2));
  const Scalar _tmp2095 = _tmp2094 * (_tmp1136 * landmarks_11_ + _tmp2092 + _tmp2093);
  const Scalar _tmp2096 = _tmp466 * _tmp70;
  const Scalar _tmp2097 = _tmp465 * _tmp67;
  const Scalar _tmp2098 =
      -_tmp2091 * _tmp2095 +
      _tmp472 * (-_tmp1018 * _tmp464 + _tmp1154 * landmarks_11_ + _tmp2096 + _tmp2097);
  const Scalar _tmp2099 = _tmp466 * _tmp83;
  const Scalar _tmp2100 = _tmp465 * _views_1_pose[2];
  const Scalar _tmp2101 = _tmp464 * _tmp67;
  const Scalar _tmp2102 = _tmp1139 * _tmp474;
  const Scalar _tmp2103 = -_tmp2095 * _tmp2102 +
                          _tmp475 * (_tmp1145 * landmarks_11_ + _tmp2099 - 4 * _tmp2100 - _tmp2101);
  const Scalar _tmp2104 = 2 * _tmp476;
  const Scalar _tmp2105 = 2 * _tmp473;
  const Scalar _tmp2106 = _tmp2098 * _tmp2105 + _tmp2103 * _tmp2104;
  const Scalar _tmp2107 = _tmp483 / (_tmp477 * std::sqrt(_tmp477));
  const Scalar _tmp2108 = (Scalar(1) / Scalar(2)) * _tmp473;
  const Scalar _tmp2109 = _tmp2107 * _tmp2108;
  const Scalar _tmp2110 = _tmp163 * _tmp478 * std::pow(_tmp479, _tmp1161) * _tmp482 / _tmp480;
  const Scalar _tmp2111 = _tmp2108 * _tmp2110;
  const Scalar _tmp2112 = _tmp2098 * _tmp484 - _tmp2106 * _tmp2109 + _tmp2106 * _tmp2111;
  const Scalar _tmp2113 = _tmp465 * _tmp70;
  const Scalar _tmp2114 = _tmp464 * _tmp83;
  const Scalar _tmp2115 = _tmp1186 * landmarks_11_ - _tmp2113 + _tmp2114;
  const Scalar _tmp2116 = _tmp2094 * _tmp2102;
  const Scalar _tmp2117 = _tmp464 * _tmp958;
  const Scalar _tmp2118 =
      -_tmp2115 * _tmp2116 + _tmp475 * (_tmp1183 * landmarks_11_ + _tmp2096 - _tmp2117);
  const Scalar _tmp2119 = _tmp2091 * _tmp2094;
  const Scalar _tmp2120 = 2 * _tmp2100;
  const Scalar _tmp2121 =
      -_tmp2115 * _tmp2119 + _tmp472 * (_tmp1191 * landmarks_11_ - _tmp2099 + _tmp2120);
  const Scalar _tmp2122 = _tmp2104 * _tmp2118 + _tmp2105 * _tmp2121;
  const Scalar _tmp2123 = -_tmp2109 * _tmp2122 + _tmp2111 * _tmp2122 + _tmp2121 * _tmp484;
  const Scalar _tmp2124 = _tmp1169 * landmarks_11_ - _tmp2097 + _tmp2117 - _tmp466 * _tmp996;
  const Scalar _tmp2125 = _tmp466 * _tmp958;
  const Scalar _tmp2126 =
      -_tmp2119 * _tmp2124 + _tmp472 * (_tmp1173 * landmarks_11_ + _tmp2092 + _tmp2125);
  const Scalar _tmp2127 = _tmp466 * _tmp67;
  const Scalar _tmp2128 = -_tmp2116 * _tmp2124 + _tmp475 * (_tmp1178 * landmarks_11_ + _tmp2114 +
                                                            _tmp2127 - _tmp465 * _tmp996);
  const Scalar _tmp2129 = _tmp2104 * _tmp2128 + _tmp2105 * _tmp2126;
  const Scalar _tmp2130 = -_tmp2109 * _tmp2129 + _tmp2111 * _tmp2129 + _tmp2126 * _tmp484;
  const Scalar _tmp2131 =
      _tmp2094 * (-_tmp1036 * _tmp466 + _tmp1196 * landmarks_11_ + _tmp2101 + _tmp2120);
  const Scalar _tmp2132 =
      -_tmp2091 * _tmp2131 +
      _tmp472 * (-_tmp1036 * _tmp464 + _tmp1199 * landmarks_11_ + _tmp2113 - _tmp2127);
  const Scalar _tmp2133 =
      -_tmp2102 * _tmp2131 + _tmp475 * (_tmp1195 * landmarks_11_ + _tmp2093 + _tmp2125);
  const Scalar _tmp2134 = _tmp2104 * _tmp2133 + _tmp2105 * _tmp2132;
  const Scalar _tmp2135 = -_tmp2109 * _tmp2134 + _tmp2111 * _tmp2134 + _tmp2132 * _tmp484;
  const Scalar _tmp2136 =
      -_tmp2112 * _tmp821 - _tmp2123 * _tmp814 + _tmp2130 * _tmp826 + _tmp2135 * _tmp807;
  const Scalar _tmp2137 =
      _tmp2112 * _tmp814 - _tmp2123 * _tmp821 - _tmp2130 * _tmp807 + _tmp2135 * _tmp826;
  const Scalar _tmp2138 =
      _tmp2112 * _tmp826 - _tmp2123 * _tmp807 + _tmp2130 * _tmp821 - _tmp2135 * _tmp814;
  const Scalar _tmp2139 = _tmp2119 * landmarks_11_;
  const Scalar _tmp2140 = _tmp472 * landmarks_11_;
  const Scalar _tmp2141 = _tmp113 * _tmp2139 - _tmp2140 * _tmp80;
  const Scalar _tmp2142 = _tmp2116 * landmarks_11_;
  const Scalar _tmp2143 = _tmp475 * landmarks_11_;
  const Scalar _tmp2144 = _tmp113 * _tmp2142 - _tmp2143 * _tmp87;
  const Scalar _tmp2145 = _tmp2104 * _tmp2144 + _tmp2105 * _tmp2141;
  const Scalar _tmp2146 = -_tmp2109 * _tmp2145 + _tmp2111 * _tmp2145 + _tmp2141 * _tmp484;
  const Scalar _tmp2147 = _tmp112 * _tmp2142 - _tmp2143 * _tmp90;
  const Scalar _tmp2148 = _tmp112 * _tmp2139 - _tmp2140 * _tmp75;
  const Scalar _tmp2149 = _tmp2104 * _tmp2147 + _tmp2105 * _tmp2148;
  const Scalar _tmp2150 = _tmp2107 * _tmp2149;
  const Scalar _tmp2151 = -_tmp2108 * _tmp2150 + _tmp2111 * _tmp2149 + _tmp2148 * _tmp484;
  const Scalar _tmp2152 = _tmp114 * _tmp2139 - _tmp2140 * _tmp72;
  const Scalar _tmp2153 = _tmp114 * _tmp2142 - _tmp2143 * _tmp85;
  const Scalar _tmp2154 = _tmp2104 * _tmp2153 + _tmp2105 * _tmp2152;
  const Scalar _tmp2155 = -_tmp2109 * _tmp2154 + _tmp2111 * _tmp2154 + _tmp2152 * _tmp484;
  const Scalar _tmp2156 = _tmp1224 * _tmp471 - _tmp150 * _tmp2119;
  const Scalar _tmp2157 = -_tmp1226 * _tmp2094 * _tmp474 + _tmp1310 * _tmp471;
  const Scalar _tmp2158 = _tmp2104 * _tmp2157 + _tmp2105 * _tmp2156;
  const Scalar _tmp2159 = _tmp2107 * _tmp2158;
  const Scalar _tmp2160 = -_tmp2108 * _tmp2159 + _tmp2111 * _tmp2158 + _tmp2156 * _tmp484;
  const Scalar _tmp2161 = (Scalar(1) / Scalar(2)) * _tmp476;
  const Scalar _tmp2162 = _tmp2107 * _tmp2161;
  const Scalar _tmp2163 = _tmp2110 * _tmp2161;
  const Scalar _tmp2164 = _tmp2133 * _tmp484 - _tmp2134 * _tmp2162 + _tmp2134 * _tmp2163;
  const Scalar _tmp2165 = _tmp2103 * _tmp484 - _tmp2106 * _tmp2162 + _tmp2106 * _tmp2163;
  const Scalar _tmp2166 = _tmp2118 * _tmp484 - _tmp2122 * _tmp2162 + _tmp2122 * _tmp2163;
  const Scalar _tmp2167 = _tmp2128 * _tmp484 - _tmp2129 * _tmp2162 + _tmp2129 * _tmp2163;
  const Scalar _tmp2168 =
      _tmp2164 * _tmp807 - _tmp2165 * _tmp821 - _tmp2166 * _tmp814 + _tmp2167 * _tmp826;
  const Scalar _tmp2169 =
      _tmp2164 * _tmp826 + _tmp2165 * _tmp814 - _tmp2166 * _tmp821 - _tmp2167 * _tmp807;
  const Scalar _tmp2170 =
      -_tmp2164 * _tmp814 + _tmp2165 * _tmp826 - _tmp2166 * _tmp807 + _tmp2167 * _tmp821;
  const Scalar _tmp2171 = _tmp2145 * _tmp2161;
  const Scalar _tmp2172 = -_tmp2107 * _tmp2171 + _tmp2110 * _tmp2171 + _tmp2144 * _tmp484;
  const Scalar _tmp2173 = _tmp2147 * _tmp484 + _tmp2149 * _tmp2163 - _tmp2150 * _tmp2161;
  const Scalar _tmp2174 = _tmp2153 * _tmp484 - _tmp2154 * _tmp2162 + _tmp2154 * _tmp2163;
  const Scalar _tmp2175 = _tmp2157 * _tmp484 + _tmp2158 * _tmp2163 - _tmp2159 * _tmp2161;
  const Scalar _tmp2176 = _tmp493 * _tmp70;
  const Scalar _tmp2177 = _tmp494 * _tmp67;
  const Scalar _tmp2178 = _tmp492 * _tmp67;
  const Scalar _tmp2179 = _tmp493 * _tmp958;
  const Scalar _tmp2180 = -_tmp1036 * _tmp494 + _tmp1196 * landmarks_12_ + _tmp2178 + _tmp2179;
  const Scalar _tmp2181 = _tmp509 * ((((_tmp33 + _tmp497) > 0) - ((_tmp33 + _tmp497) < 0)) + 1) /
                          std::pow(_tmp498, Scalar(2));
  const Scalar _tmp2182 = _tmp1149 * _tmp2181 * _tmp495;
  const Scalar _tmp2183 =
      -_tmp2180 * _tmp2182 +
      _tmp500 * (-_tmp1036 * _tmp492 + _tmp1199 * landmarks_12_ + _tmp2176 - _tmp2177);
  const Scalar _tmp2184 = _tmp2181 * _tmp502;
  const Scalar _tmp2185 = _tmp1139 * _tmp2184;
  const Scalar _tmp2186 = _tmp492 * _tmp70;
  const Scalar _tmp2187 = _tmp494 * _tmp958;
  const Scalar _tmp2188 =
      -_tmp2180 * _tmp2185 + _tmp503 * (_tmp1195 * landmarks_12_ + _tmp2186 + _tmp2187);
  const Scalar _tmp2189 = 2 * _tmp504;
  const Scalar _tmp2190 = 2 * _tmp501;
  const Scalar _tmp2191 = _tmp2183 * _tmp2190 + _tmp2188 * _tmp2189;
  const Scalar _tmp2192 = (Scalar(1) / Scalar(2)) * _tmp501;
  const Scalar _tmp2193 = _tmp511 / (_tmp505 * std::sqrt(_tmp505));
  const Scalar _tmp2194 = _tmp2192 * _tmp2193;
  const Scalar _tmp2195 = _tmp163 * _tmp506 * std::pow(_tmp507, _tmp1161) * _tmp510 / _tmp508;
  const Scalar _tmp2196 = _tmp2192 * _tmp2195;
  const Scalar _tmp2197 = (Scalar(1) / Scalar(2)) * _tmp2183 * _tmp512 -
                          Scalar(1) / Scalar(2) * _tmp2191 * _tmp2194 +
                          (Scalar(1) / Scalar(2)) * _tmp2191 * _tmp2196;
  const Scalar _tmp2198 = _tmp492 * _tmp83;
  const Scalar _tmp2199 = _tmp1186 * landmarks_12_ - _tmp2176 + _tmp2198;
  const Scalar _tmp2200 = _tmp494 * _tmp83;
  const Scalar _tmp2201 =
      -_tmp2182 * _tmp2199 + _tmp500 * (_tmp1191 * landmarks_12_ + _tmp2179 - _tmp2200);
  const Scalar _tmp2202 = _tmp492 * _tmp958;
  const Scalar _tmp2203 = _tmp494 * _tmp70;
  const Scalar _tmp2204 =
      -_tmp2185 * _tmp2199 + _tmp503 * (_tmp1183 * landmarks_12_ - _tmp2202 + _tmp2203);
  const Scalar _tmp2205 = _tmp2189 * _tmp2204 + _tmp2190 * _tmp2201;
  const Scalar _tmp2206 = -_tmp2194 * _tmp2205 + _tmp2196 * _tmp2205 + _tmp2201 * _tmp512;
  const Scalar _tmp2207 = _tmp493 * _tmp67;
  const Scalar _tmp2208 = _tmp1169 * landmarks_12_ + _tmp2202 - _tmp2207 - _tmp494 * _tmp996;
  const Scalar _tmp2209 = -_tmp2185 * _tmp2208 + _tmp503 * (_tmp1178 * landmarks_12_ + _tmp2177 +
                                                            _tmp2198 - _tmp493 * _tmp996);
  const Scalar _tmp2210 = _tmp493 * _tmp83;
  const Scalar _tmp2211 =
      -_tmp2182 * _tmp2208 + _tmp500 * (_tmp1173 * landmarks_12_ + _tmp2187 + _tmp2210);
  const Scalar _tmp2212 = _tmp2189 * _tmp2209 + _tmp2190 * _tmp2211;
  const Scalar _tmp2213 = -_tmp2194 * _tmp2212 + _tmp2196 * _tmp2212 + _tmp2211 * _tmp512;
  const Scalar _tmp2214 = _tmp1136 * landmarks_12_ + _tmp2186 + _tmp2210;
  const Scalar _tmp2215 =
      -_tmp2182 * _tmp2214 +
      _tmp500 * (-_tmp1018 * _tmp492 + _tmp1154 * landmarks_12_ + _tmp2203 + _tmp2207);
  const Scalar _tmp2216 =
      -_tmp2185 * _tmp2214 +
      _tmp503 * (-_tmp1018 * _tmp493 + _tmp1145 * landmarks_12_ - _tmp2178 + _tmp2200);
  const Scalar _tmp2217 = _tmp2189 * _tmp2216 + _tmp2190 * _tmp2215;
  const Scalar _tmp2218 = -_tmp2194 * _tmp2217 + _tmp2196 * _tmp2217 + _tmp2215 * _tmp512;
  const Scalar _tmp2219 =
      _tmp2197 * _views_1_pose[2] - _tmp2206 * _tmp814 + _tmp2213 * _tmp826 - _tmp2218 * _tmp821;
  const Scalar _tmp2220 =
      _tmp2197 * _views_1_pose[3] - _tmp2206 * _tmp821 - _tmp2213 * _tmp807 + _tmp2218 * _tmp814;
  const Scalar _tmp2221 =
      -_tmp2197 * _views_1_pose[0] - _tmp2206 * _tmp807 + _tmp2213 * _tmp821 + _tmp2218 * _tmp826;
  const Scalar _tmp2222 = _tmp500 * landmarks_12_;
  const Scalar _tmp2223 = _tmp2182 * landmarks_12_;
  const Scalar _tmp2224 = _tmp113 * _tmp2223 - _tmp2222 * _tmp80;
  const Scalar _tmp2225 = _tmp503 * landmarks_12_;
  const Scalar _tmp2226 = _tmp2185 * landmarks_12_;
  const Scalar _tmp2227 = _tmp113 * _tmp2226 - _tmp2225 * _tmp87;
  const Scalar _tmp2228 = _tmp2189 * _tmp2227 + _tmp2190 * _tmp2224;
  const Scalar _tmp2229 = -_tmp2194 * _tmp2228 + _tmp2196 * _tmp2228 + _tmp2224 * _tmp512;
  const Scalar _tmp2230 = _tmp112 * _tmp2223 - _tmp2222 * _tmp75;
  const Scalar _tmp2231 = _tmp112 * _tmp2226 - _tmp2225 * _tmp90;
  const Scalar _tmp2232 = _tmp2189 * _tmp2231 + _tmp2190 * _tmp2230;
  const Scalar _tmp2233 = _tmp2192 * _tmp2232;
  const Scalar _tmp2234 = -_tmp2193 * _tmp2233 + _tmp2195 * _tmp2233 + _tmp2230 * _tmp512;
  const Scalar _tmp2235 = _tmp114 * _tmp2226 - _tmp2225 * _tmp85;
  const Scalar _tmp2236 = _tmp114 * _tmp2223 - _tmp2222 * _tmp72;
  const Scalar _tmp2237 = _tmp2189 * _tmp2235 + _tmp2190 * _tmp2236;
  const Scalar _tmp2238 = -_tmp2194 * _tmp2237 + _tmp2196 * _tmp2237 + _tmp2236 * _tmp512;
  const Scalar _tmp2239 = _tmp1224 * _tmp499 - _tmp150 * _tmp2182;
  const Scalar _tmp2240 = -_tmp1226 * _tmp2184 + _tmp1310 * _tmp499;
  const Scalar _tmp2241 = _tmp2189 * _tmp2240 + _tmp2190 * _tmp2239;
  const Scalar _tmp2242 = -_tmp2194 * _tmp2241 + _tmp2196 * _tmp2241 + _tmp2239 * _tmp512;
  const Scalar _tmp2243 = (Scalar(1) / Scalar(2)) * _tmp504;
  const Scalar _tmp2244 = _tmp2193 * _tmp2243;
  const Scalar _tmp2245 = _tmp2195 * _tmp2243;
  const Scalar _tmp2246 = _tmp2216 * _tmp512 - _tmp2217 * _tmp2244 + _tmp2217 * _tmp2245;
  const Scalar _tmp2247 = _tmp2188 * _tmp512 - _tmp2191 * _tmp2244 + _tmp2191 * _tmp2245;
  const Scalar _tmp2248 = _tmp2204 * _tmp512 - _tmp2205 * _tmp2244 + _tmp2205 * _tmp2245;
  const Scalar _tmp2249 = _tmp2209 * _tmp512 - _tmp2212 * _tmp2244 + _tmp2212 * _tmp2245;
  const Scalar _tmp2250 =
      -_tmp2246 * _tmp821 + _tmp2247 * _tmp807 - _tmp2248 * _tmp814 + _tmp2249 * _tmp826;
  const Scalar _tmp2251 =
      _tmp2246 * _tmp814 + _tmp2247 * _tmp826 - _tmp2248 * _tmp821 - _tmp2249 * _tmp807;
  const Scalar _tmp2252 =
      _tmp2246 * _tmp826 - _tmp2247 * _tmp814 - _tmp2248 * _tmp807 + _tmp2249 * _tmp821;
  const Scalar _tmp2253 = _tmp2227 * _tmp512 - _tmp2228 * _tmp2244 + _tmp2228 * _tmp2245;
  const Scalar _tmp2254 = _tmp2231 * _tmp512 - _tmp2232 * _tmp2244 + _tmp2232 * _tmp2245;
  const Scalar _tmp2255 = _tmp2235 * _tmp512 - _tmp2237 * _tmp2244 + _tmp2237 * _tmp2245;
  const Scalar _tmp2256 = _tmp2240 * _tmp512 - _tmp2241 * _tmp2244 + _tmp2241 * _tmp2245;
  const Scalar _tmp2257 = _tmp1139 * _tmp530;
  const Scalar _tmp2258 = _tmp522 * _tmp83;
  const Scalar _tmp2259 = _tmp521 * _tmp70;
  const Scalar _tmp2260 = _tmp537 * ((((_tmp33 + _tmp525) > 0) - ((_tmp33 + _tmp525) < 0)) + 1) /
                          std::pow(_tmp526, Scalar(2));
  const Scalar _tmp2261 = _tmp2260 * (_tmp1136 * landmarks_13_ + _tmp2258 + _tmp2259);
  const Scalar _tmp2262 = _tmp520 * _tmp83;
  const Scalar _tmp2263 = _tmp521 * _tmp67;
  const Scalar _tmp2264 =
      -_tmp2257 * _tmp2261 +
      _tmp531 * (-_tmp1018 * _tmp522 + _tmp1145 * landmarks_13_ + _tmp2262 - _tmp2263);
  const Scalar _tmp2265 = 2 * _tmp532;
  const Scalar _tmp2266 = _tmp522 * _tmp67;
  const Scalar _tmp2267 = _tmp520 * _tmp70;
  const Scalar _tmp2268 = _tmp1149 * _tmp523;
  const Scalar _tmp2269 =
      -_tmp2261 * _tmp2268 +
      _tmp528 * (-_tmp1018 * _tmp521 + _tmp1154 * landmarks_13_ + _tmp2266 + _tmp2267);
  const Scalar _tmp2270 = 2 * _tmp529;
  const Scalar _tmp2271 = _tmp2264 * _tmp2265 + _tmp2269 * _tmp2270;
  const Scalar _tmp2272 = (Scalar(1) / Scalar(2)) * _tmp529;
  const Scalar _tmp2273 = _tmp163 * _tmp534 * std::pow(_tmp535, _tmp1161) * _tmp538 / _tmp536;
  const Scalar _tmp2274 = _tmp2272 * _tmp2273;
  const Scalar _tmp2275 = _tmp539 / (_tmp533 * std::sqrt(_tmp533));
  const Scalar _tmp2276 = _tmp2272 * _tmp2275;
  const Scalar _tmp2277 = _tmp2269 * _tmp540 + _tmp2271 * _tmp2274 - _tmp2271 * _tmp2276;
  const Scalar _tmp2278 = _tmp520 * _tmp958;
  const Scalar _tmp2279 = _tmp522 * _tmp958;
  const Scalar _tmp2280 =
      _tmp2260 * (-_tmp1036 * _tmp520 + _tmp1196 * landmarks_13_ + _tmp2263 + _tmp2279);
  const Scalar _tmp2281 =
      -_tmp2257 * _tmp2280 + _tmp531 * (_tmp1195 * landmarks_13_ + _tmp2259 + _tmp2278);
  const Scalar _tmp2282 = _tmp522 * _tmp70;
  const Scalar _tmp2283 = _tmp520 * _tmp67;
  const Scalar _tmp2284 =
      -_tmp2268 * _tmp2280 +
      _tmp528 * (-_tmp1036 * _tmp521 + _tmp1199 * landmarks_13_ + _tmp2282 - _tmp2283);
  const Scalar _tmp2285 = _tmp2265 * _tmp2281 + _tmp2270 * _tmp2284;
  const Scalar _tmp2286 = _tmp2274 * _tmp2285 - _tmp2276 * _tmp2285 + _tmp2284 * _tmp540;
  const Scalar _tmp2287 = _tmp521 * _tmp958;
  const Scalar _tmp2288 =
      _tmp2260 * (_tmp1169 * landmarks_13_ - _tmp2266 + _tmp2287 - _tmp520 * _tmp996);
  const Scalar _tmp2289 =
      -_tmp2268 * _tmp2288 + _tmp528 * (_tmp1173 * landmarks_13_ + _tmp2258 + _tmp2278);
  const Scalar _tmp2290 = _tmp521 * _tmp83;
  const Scalar _tmp2291 = -_tmp2257 * _tmp2288 + _tmp531 * (_tmp1178 * landmarks_13_ + _tmp2283 +
                                                            _tmp2290 - _tmp522 * _tmp996);
  const Scalar _tmp2292 = _tmp2265 * _tmp2291 + _tmp2270 * _tmp2289;
  const Scalar _tmp2293 = _tmp2274 * _tmp2292 - _tmp2276 * _tmp2292 + _tmp2289 * _tmp540;
  const Scalar _tmp2294 = _tmp2260 * (_tmp1186 * landmarks_13_ - _tmp2282 + _tmp2290);
  const Scalar _tmp2295 =
      -_tmp2268 * _tmp2294 + _tmp528 * (_tmp1191 * landmarks_13_ - _tmp2262 + _tmp2279);
  const Scalar _tmp2296 =
      -_tmp2257 * _tmp2294 + _tmp531 * (_tmp1183 * landmarks_13_ + _tmp2267 - _tmp2287);
  const Scalar _tmp2297 = _tmp2265 * _tmp2296 + _tmp2270 * _tmp2295;
  const Scalar _tmp2298 = _tmp2274 * _tmp2297 - _tmp2276 * _tmp2297 + _tmp2295 * _tmp540;
  const Scalar _tmp2299 =
      -_tmp2277 * _tmp821 + _tmp2286 * _tmp807 + _tmp2293 * _tmp826 - _tmp2298 * _tmp814;
  const Scalar _tmp2300 =
      _tmp2277 * _tmp814 + _tmp2286 * _tmp826 - _tmp2293 * _tmp807 - _tmp2298 * _tmp821;
  const Scalar _tmp2301 =
      _tmp2277 * _tmp826 - _tmp2286 * _tmp814 + _tmp2293 * _tmp821 - _tmp2298 * _tmp807;
  const Scalar _tmp2302 = _tmp528 * landmarks_13_;
  const Scalar _tmp2303 = _tmp2260 * landmarks_13_;
  const Scalar _tmp2304 = _tmp113 * _tmp2303;
  const Scalar _tmp2305 = _tmp2268 * _tmp2304 - _tmp2302 * _tmp80;
  const Scalar _tmp2306 = _tmp531 * landmarks_13_;
  const Scalar _tmp2307 = _tmp2257 * _tmp2304 - _tmp2306 * _tmp87;
  const Scalar _tmp2308 = _tmp2265 * _tmp2307 + _tmp2270 * _tmp2305;
  const Scalar _tmp2309 = _tmp2272 * _tmp2308;
  const Scalar _tmp2310 = _tmp2273 * _tmp2309 - _tmp2275 * _tmp2309 + _tmp2305 * _tmp540;
  const Scalar _tmp2311 = _tmp112 * _tmp2303;
  const Scalar _tmp2312 = _tmp2257 * _tmp2311 - _tmp2306 * _tmp90;
  const Scalar _tmp2313 = _tmp2268 * _tmp2311 - _tmp2302 * _tmp75;
  const Scalar _tmp2314 = _tmp2265 * _tmp2312 + _tmp2270 * _tmp2313;
  const Scalar _tmp2315 = _tmp2275 * _tmp2314;
  const Scalar _tmp2316 = -_tmp2272 * _tmp2315 + _tmp2274 * _tmp2314 + _tmp2313 * _tmp540;
  const Scalar _tmp2317 = _tmp114 * _tmp2303;
  const Scalar _tmp2318 = _tmp2268 * _tmp2317 - _tmp2302 * _tmp72;
  const Scalar _tmp2319 = _tmp2257 * _tmp2317 - _tmp2306 * _tmp85;
  const Scalar _tmp2320 = _tmp2265 * _tmp2319 + _tmp2270 * _tmp2318;
  const Scalar _tmp2321 = _tmp2274 * _tmp2320 - _tmp2276 * _tmp2320 + _tmp2318 * _tmp540;
  const Scalar _tmp2322 = _tmp150 * _tmp2260;
  const Scalar _tmp2323 = _tmp1224 * _tmp527 - _tmp2268 * _tmp2322;
  const Scalar _tmp2324 = _tmp157 * _tmp531 - _tmp2257 * _tmp2322;
  const Scalar _tmp2325 = _tmp2265 * _tmp2324 + _tmp2270 * _tmp2323;
  const Scalar _tmp2326 = _tmp2274 * _tmp2325 - _tmp2276 * _tmp2325 + _tmp2323 * _tmp540;
  const Scalar _tmp2327 = (Scalar(1) / Scalar(2)) * _tmp532;
  const Scalar _tmp2328 = _tmp2275 * _tmp2327;
  const Scalar _tmp2329 = _tmp2273 * _tmp2327;
  const Scalar _tmp2330 = _tmp2264 * _tmp540 - _tmp2271 * _tmp2328 + _tmp2271 * _tmp2329;
  const Scalar _tmp2331 = _tmp2296 * _tmp540 - _tmp2297 * _tmp2328 + _tmp2297 * _tmp2329;
  const Scalar _tmp2332 = _tmp2281 * _tmp540 - _tmp2285 * _tmp2328 + _tmp2285 * _tmp2329;
  const Scalar _tmp2333 = _tmp2291 * _tmp540 - _tmp2292 * _tmp2328 + _tmp2292 * _tmp2329;
  const Scalar _tmp2334 =
      -_tmp2330 * _tmp821 - _tmp2331 * _tmp814 + _tmp2332 * _tmp807 + _tmp2333 * _tmp826;
  const Scalar _tmp2335 =
      _tmp2330 * _tmp814 - _tmp2331 * _tmp821 + _tmp2332 * _tmp826 - _tmp2333 * _tmp807;
  const Scalar _tmp2336 =
      _tmp2330 * _tmp826 - _tmp2331 * _tmp807 - _tmp2332 * _tmp814 + _tmp2333 * _tmp821;
  const Scalar _tmp2337 = _tmp2307 * _tmp540 - _tmp2308 * _tmp2328 + _tmp2308 * _tmp2329;
  const Scalar _tmp2338 = _tmp2312 * _tmp540 + _tmp2314 * _tmp2329 - _tmp2315 * _tmp2327;
  const Scalar _tmp2339 = _tmp2319 * _tmp540 - _tmp2320 * _tmp2328 + _tmp2320 * _tmp2329;
  const Scalar _tmp2340 = _tmp2324 * _tmp540 - _tmp2325 * _tmp2328 + _tmp2325 * _tmp2329;
  const Scalar _tmp2341 = _tmp550 * _tmp83;
  const Scalar _tmp2342 = _tmp549 * _tmp70;
  const Scalar _tmp2343 = _tmp1186 * landmarks_14_ + _tmp2341 - _tmp2342;
  const Scalar _tmp2344 = _tmp565 * ((((_tmp33 + _tmp553) > 0) - ((_tmp33 + _tmp553) < 0)) + 1) /
                          std::pow(_tmp554, Scalar(2));
  const Scalar _tmp2345 = _tmp1149 * _tmp2344 * _tmp551;
  const Scalar _tmp2346 = _tmp549 * _tmp958;
  const Scalar _tmp2347 = 2 * _tmp548;
  const Scalar _tmp2348 = _tmp2347 * _views_1_pose[1];
  const Scalar _tmp2349 =
      -_tmp2343 * _tmp2345 + _tmp556 * (_tmp1191 * landmarks_14_ + _tmp2346 - _tmp2348);
  const Scalar _tmp2350 = 2 * _tmp557;
  const Scalar _tmp2351 = _tmp2344 * _tmp558;
  const Scalar _tmp2352 = _tmp1139 * _tmp2351;
  const Scalar _tmp2353 = _tmp550 * _tmp958;
  const Scalar _tmp2354 = _tmp548 * _tmp70;
  const Scalar _tmp2355 =
      -_tmp2343 * _tmp2352 + _tmp559 * (_tmp1183 * landmarks_14_ - _tmp2353 + _tmp2354);
  const Scalar _tmp2356 = 2 * _tmp560;
  const Scalar _tmp2357 = _tmp2349 * _tmp2350 + _tmp2355 * _tmp2356;
  const Scalar _tmp2358 = _tmp163 * _tmp562 * std::pow(_tmp563, _tmp1161) * _tmp566 / _tmp564;
  const Scalar _tmp2359 = (Scalar(1) / Scalar(2)) * _tmp2358;
  const Scalar _tmp2360 = _tmp2359 * _tmp557;
  const Scalar _tmp2361 = _tmp567 / (_tmp561 * std::sqrt(_tmp561));
  const Scalar _tmp2362 = (Scalar(1) / Scalar(2)) * _tmp2361;
  const Scalar _tmp2363 = _tmp2362 * _tmp557;
  const Scalar _tmp2364 = _tmp2349 * _tmp568 + _tmp2357 * _tmp2360 - _tmp2357 * _tmp2363;
  const Scalar _tmp2365 = _tmp549 * _tmp67;
  const Scalar _tmp2366 = _tmp1169 * landmarks_14_ + _tmp2353 - _tmp2365 - _tmp548 * _tmp996;
  const Scalar _tmp2367 = _tmp549 * _tmp83;
  const Scalar _tmp2368 = _tmp2347 * _views_1_pose[2];
  const Scalar _tmp2369 =
      -_tmp2345 * _tmp2366 + _tmp556 * (_tmp1173 * landmarks_14_ + _tmp2367 + _tmp2368);
  const Scalar _tmp2370 = _tmp548 * _tmp67;
  const Scalar _tmp2371 = -_tmp2352 * _tmp2366 + _tmp559 * (_tmp1178 * landmarks_14_ + _tmp2341 +
                                                            _tmp2370 - _tmp549 * _tmp996);
  const Scalar _tmp2372 = _tmp2350 * _tmp2369 + _tmp2356 * _tmp2371;
  const Scalar _tmp2373 = _tmp2360 * _tmp2372 - _tmp2363 * _tmp2372 + _tmp2369 * _tmp568;
  const Scalar _tmp2374 = _tmp550 * _tmp67;
  const Scalar _tmp2375 = -_tmp1036 * _tmp548 + _tmp1196 * landmarks_14_ + _tmp2346 + _tmp2374;
  const Scalar _tmp2376 = _tmp550 * _tmp70;
  const Scalar _tmp2377 =
      -_tmp2352 * _tmp2375 + _tmp559 * (_tmp1195 * landmarks_14_ + _tmp2368 + _tmp2376);
  const Scalar _tmp2378 =
      -_tmp2345 * _tmp2375 +
      _tmp556 * (-_tmp1036 * _tmp550 + _tmp1199 * landmarks_14_ + _tmp2342 - _tmp2370);
  const Scalar _tmp2379 = _tmp2350 * _tmp2378 + _tmp2356 * _tmp2377;
  const Scalar _tmp2380 = _tmp2360 * _tmp2379 - _tmp2363 * _tmp2379 + _tmp2378 * _tmp568;
  const Scalar _tmp2381 = _tmp1136 * landmarks_14_ + _tmp2367 + _tmp2376;
  const Scalar _tmp2382 =
      -_tmp2345 * _tmp2381 +
      _tmp556 * (-_tmp1018 * _tmp550 + _tmp1154 * landmarks_14_ + _tmp2354 + _tmp2365);
  const Scalar _tmp2383 =
      -_tmp2352 * _tmp2381 +
      _tmp559 * (-_tmp1018 * _tmp549 + _tmp1145 * landmarks_14_ + _tmp2348 - _tmp2374);
  const Scalar _tmp2384 = _tmp2350 * _tmp2382 + _tmp2356 * _tmp2383;
  const Scalar _tmp2385 = _tmp2360 * _tmp2384 - _tmp2363 * _tmp2384 + _tmp2382 * _tmp568;
  const Scalar _tmp2386 =
      -_tmp2364 * _tmp814 + _tmp2373 * _tmp826 + _tmp2380 * _tmp807 - _tmp2385 * _tmp821;
  const Scalar _tmp2387 =
      -_tmp2364 * _tmp821 - _tmp2373 * _tmp807 + _tmp2380 * _tmp826 + _tmp2385 * _tmp814;
  const Scalar _tmp2388 =
      -_tmp2364 * _tmp807 + _tmp2373 * _tmp821 - _tmp2380 * _tmp814 + _tmp2385 * _tmp826;
  const Scalar _tmp2389 = _tmp2352 * landmarks_14_;
  const Scalar _tmp2390 = _tmp559 * landmarks_14_;
  const Scalar _tmp2391 = _tmp113 * _tmp2389 - _tmp2390 * _tmp87;
  const Scalar _tmp2392 = _tmp556 * landmarks_14_;
  const Scalar _tmp2393 = _tmp2345 * landmarks_14_;
  const Scalar _tmp2394 = _tmp113 * _tmp2393 - _tmp2392 * _tmp80;
  const Scalar _tmp2395 = _tmp2350 * _tmp2394 + _tmp2356 * _tmp2391;
  const Scalar _tmp2396 = _tmp2360 * _tmp2395 - _tmp2363 * _tmp2395 + _tmp2394 * _tmp568;
  const Scalar _tmp2397 = _tmp112 * _tmp2393 - _tmp2392 * _tmp75;
  const Scalar _tmp2398 = _tmp112 * _tmp2389 - _tmp2390 * _tmp90;
  const Scalar _tmp2399 =
      (Scalar(1) / Scalar(2)) * _tmp2350 * _tmp2397 + (Scalar(1) / Scalar(2)) * _tmp2356 * _tmp2398;
  const Scalar _tmp2400 = _tmp2399 * _tmp557;
  const Scalar _tmp2401 = _tmp2358 * _tmp2400 - _tmp2361 * _tmp2400 + _tmp2397 * _tmp568;
  const Scalar _tmp2402 = _tmp114 * _tmp2393 - _tmp2392 * _tmp72;
  const Scalar _tmp2403 = _tmp114 * _tmp2389 - _tmp2390 * _tmp85;
  const Scalar _tmp2404 = _tmp2350 * _tmp2402 + _tmp2356 * _tmp2403;
  const Scalar _tmp2405 = _tmp2360 * _tmp2404 - _tmp2363 * _tmp2404 + _tmp2402 * _tmp568;
  const Scalar _tmp2406 = _tmp1224 * _tmp555 - _tmp150 * _tmp2345;
  const Scalar _tmp2407 = -_tmp1226 * _tmp2351 + _tmp157 * _tmp559;
  const Scalar _tmp2408 = _tmp2350 * _tmp2406 + _tmp2356 * _tmp2407;
  const Scalar _tmp2409 = _tmp2360 * _tmp2408 - _tmp2363 * _tmp2408 + _tmp2406 * _tmp568;
  const Scalar _tmp2410 = _tmp2362 * _tmp560;
  const Scalar _tmp2411 = _tmp2359 * _tmp560;
  const Scalar _tmp2412 = _tmp2383 * _tmp568 - _tmp2384 * _tmp2410 + _tmp2384 * _tmp2411;
  const Scalar _tmp2413 = _tmp2377 * _tmp568 - _tmp2379 * _tmp2410 + _tmp2379 * _tmp2411;
  const Scalar _tmp2414 = _tmp2371 * _tmp568 - _tmp2372 * _tmp2410 + _tmp2372 * _tmp2411;
  const Scalar _tmp2415 = _tmp2355 * _tmp568 - _tmp2357 * _tmp2410 + _tmp2357 * _tmp2411;
  const Scalar _tmp2416 =
      -_tmp2412 * _tmp821 + _tmp2413 * _tmp807 + _tmp2414 * _tmp826 - _tmp2415 * _tmp814;
  const Scalar _tmp2417 =
      _tmp2412 * _tmp814 + _tmp2413 * _tmp826 - _tmp2414 * _tmp807 - _tmp2415 * _tmp821;
  const Scalar _tmp2418 =
      _tmp2412 * _tmp826 - _tmp2413 * _tmp814 + _tmp2414 * _tmp821 - _tmp2415 * _tmp807;
  const Scalar _tmp2419 = _tmp2391 * _tmp568 - _tmp2395 * _tmp2410 + _tmp2395 * _tmp2411;
  const Scalar _tmp2420 = _tmp2399 * _tmp560;
  const Scalar _tmp2421 = _tmp2358 * _tmp2420 - _tmp2361 * _tmp2420 + _tmp2398 * _tmp568;
  const Scalar _tmp2422 = _tmp2403 * _tmp568 - _tmp2404 * _tmp2410 + _tmp2404 * _tmp2411;
  const Scalar _tmp2423 = _tmp2407 * _tmp568 - _tmp2408 * _tmp2410 + _tmp2408 * _tmp2411;
  const Scalar _tmp2424 = _tmp577 * _tmp70;
  const Scalar _tmp2425 = _tmp576 * _tmp958;
  const Scalar _tmp2426 = _tmp577 * _tmp67;
  const Scalar _tmp2427 = _tmp578 * _tmp958;
  const Scalar _tmp2428 = -_tmp1036 * _tmp576 + _tmp1196 * landmarks_15_ + _tmp2426 + _tmp2427;
  const Scalar _tmp2429 = _tmp591 * ((((_tmp33 + _tmp581) > 0) - ((_tmp33 + _tmp581) < 0)) + 1) /
                          std::pow(_tmp582, Scalar(2));
  const Scalar _tmp2430 = _tmp2429 * _tmp586;
  const Scalar _tmp2431 = _tmp1139 * _tmp2430;
  const Scalar _tmp2432 =
      -_tmp2428 * _tmp2431 + _tmp587 * (_tmp1195 * landmarks_15_ + _tmp2424 + _tmp2425);
  const Scalar _tmp2433 = 2 * _tmp588;
  const Scalar _tmp2434 = _tmp578 * _tmp70;
  const Scalar _tmp2435 = _tmp576 * _tmp67;
  const Scalar _tmp2436 = _tmp1149 * _tmp579;
  const Scalar _tmp2437 = _tmp2429 * _tmp2436;
  const Scalar _tmp2438 =
      -_tmp2428 * _tmp2437 +
      _tmp584 * (-_tmp1036 * _tmp577 + _tmp1199 * landmarks_15_ + _tmp2434 - _tmp2435);
  const Scalar _tmp2439 = 2 * _tmp585;
  const Scalar _tmp2440 = _tmp2432 * _tmp2433 + _tmp2438 * _tmp2439;
  const Scalar _tmp2441 = (Scalar(1) / Scalar(2)) * _tmp585;
  const Scalar _tmp2442 = _tmp163 * _tmp590 * _tmp592 * std::pow(_tmp593, _tmp1161) / _tmp594;
  const Scalar _tmp2443 = _tmp2441 * _tmp2442;
  const Scalar _tmp2444 = _tmp595 / (_tmp589 * std::sqrt(_tmp589));
  const Scalar _tmp2445 = _tmp2441 * _tmp2444;
  const Scalar _tmp2446 = _tmp2438 * _tmp596 + _tmp2440 * _tmp2443 - _tmp2440 * _tmp2445;
  const Scalar _tmp2447 = _tmp577 * _tmp958;
  const Scalar _tmp2448 = _tmp576 * _tmp70;
  const Scalar _tmp2449 = _tmp577 * _tmp83;
  const Scalar _tmp2450 = _tmp2429 * (_tmp1186 * landmarks_15_ - _tmp2434 + _tmp2449);
  const Scalar _tmp2451 =
      -_tmp1139 * _tmp2450 * _tmp586 + _tmp587 * (_tmp1183 * landmarks_15_ - _tmp2447 + _tmp2448);
  const Scalar _tmp2452 = _tmp576 * _tmp83;
  const Scalar _tmp2453 =
      -_tmp2436 * _tmp2450 + _tmp584 * (_tmp1191 * landmarks_15_ + _tmp2427 - _tmp2452);
  const Scalar _tmp2454 = _tmp2433 * _tmp2451 + _tmp2439 * _tmp2453;
  const Scalar _tmp2455 = _tmp2443 * _tmp2454 - _tmp2445 * _tmp2454 + _tmp2453 * _tmp596;
  const Scalar _tmp2456 = _tmp578 * _tmp67;
  const Scalar _tmp2457 = _tmp1169 * landmarks_15_ + _tmp2447 - _tmp2456 - _tmp576 * _tmp996;
  const Scalar _tmp2458 = -_tmp2431 * _tmp2457 + _tmp587 * (_tmp1178 * landmarks_15_ + _tmp2435 +
                                                            _tmp2449 - _tmp578 * _tmp996);
  const Scalar _tmp2459 = _tmp578 * _tmp83;
  const Scalar _tmp2460 =
      -_tmp2437 * _tmp2457 + _tmp584 * (_tmp1173 * landmarks_15_ + _tmp2425 + _tmp2459);
  const Scalar _tmp2461 = _tmp2433 * _tmp2458 + _tmp2439 * _tmp2460;
  const Scalar _tmp2462 = _tmp2443 * _tmp2461 - _tmp2445 * _tmp2461 + _tmp2460 * _tmp596;
  const Scalar _tmp2463 = _tmp1136 * landmarks_15_ + _tmp2424 + _tmp2459;
  const Scalar _tmp2464 =
      -_tmp2431 * _tmp2463 +
      _tmp587 * (-_tmp1018 * _tmp578 + _tmp1145 * landmarks_15_ - _tmp2426 + _tmp2452);
  const Scalar _tmp2465 =
      -_tmp2437 * _tmp2463 +
      _tmp584 * (-_tmp1018 * _tmp577 + _tmp1154 * landmarks_15_ + _tmp2448 + _tmp2456);
  const Scalar _tmp2466 = _tmp2433 * _tmp2464 + _tmp2439 * _tmp2465;
  const Scalar _tmp2467 = _tmp2443 * _tmp2466 - _tmp2445 * _tmp2466 + _tmp2465 * _tmp596;
  const Scalar _tmp2468 =
      _tmp2446 * _tmp807 - _tmp2455 * _tmp814 + _tmp2462 * _tmp826 - _tmp2467 * _tmp821;
  const Scalar _tmp2469 =
      _tmp2446 * _tmp826 - _tmp2455 * _tmp821 - _tmp2462 * _tmp807 + _tmp2467 * _tmp814;
  const Scalar _tmp2470 =
      -_tmp2446 * _tmp814 - _tmp2455 * _tmp807 + _tmp2462 * _tmp821 + _tmp2467 * _tmp826;
  const Scalar _tmp2471 = _tmp2431 * landmarks_15_;
  const Scalar _tmp2472 = _tmp587 * landmarks_15_;
  const Scalar _tmp2473 = _tmp113 * _tmp2471 - _tmp2472 * _tmp87;
  const Scalar _tmp2474 = _tmp584 * landmarks_15_;
  const Scalar _tmp2475 = _tmp2437 * landmarks_15_;
  const Scalar _tmp2476 = _tmp113 * _tmp2475 - _tmp2474 * _tmp80;
  const Scalar _tmp2477 = _tmp2433 * _tmp2473 + _tmp2439 * _tmp2476;
  const Scalar _tmp2478 = _tmp2442 * _tmp2477;
  const Scalar _tmp2479 = _tmp2441 * _tmp2478 - _tmp2445 * _tmp2477 + _tmp2476 * _tmp596;
  const Scalar _tmp2480 = _tmp112 * _tmp2471 - _tmp2472 * _tmp90;
  const Scalar _tmp2481 = _tmp112 * _tmp2475 - _tmp2474 * _tmp75;
  const Scalar _tmp2482 = _tmp2433 * _tmp2480 + _tmp2439 * _tmp2481;
  const Scalar _tmp2483 = _tmp2443 * _tmp2482 - _tmp2445 * _tmp2482 + _tmp2481 * _tmp596;
  const Scalar _tmp2484 = _tmp114 * _tmp2471 - _tmp2472 * _tmp85;
  const Scalar _tmp2485 = _tmp114 * _tmp2475 - _tmp2474 * _tmp72;
  const Scalar _tmp2486 = _tmp2433 * _tmp2484 + _tmp2439 * _tmp2485;
  const Scalar _tmp2487 = _tmp2443 * _tmp2486 - _tmp2445 * _tmp2486 + _tmp2485 * _tmp596;
  const Scalar _tmp2488 = _tmp1224 * _tmp583 - _tmp150 * _tmp2437;
  const Scalar _tmp2489 = -_tmp1226 * _tmp2430 + _tmp1310 * _tmp583;
  const Scalar _tmp2490 = _tmp2433 * _tmp2489 + _tmp2439 * _tmp2488;
  const Scalar _tmp2491 = _tmp2443 * _tmp2490 - _tmp2445 * _tmp2490 + _tmp2488 * _tmp596;
  const Scalar _tmp2492 = (Scalar(1) / Scalar(2)) * _tmp588;
  const Scalar _tmp2493 = _tmp2442 * _tmp2492;
  const Scalar _tmp2494 = _tmp2444 * _tmp2492;
  const Scalar _tmp2495 = _tmp2458 * _tmp596 + _tmp2461 * _tmp2493 - _tmp2461 * _tmp2494;
  const Scalar _tmp2496 = _tmp2451 * _tmp596 + _tmp2454 * _tmp2493 - _tmp2454 * _tmp2494;
  const Scalar _tmp2497 = _tmp2432 * _tmp596 + _tmp2440 * _tmp2493 - _tmp2440 * _tmp2494;
  const Scalar _tmp2498 = _tmp2464 * _tmp596 + _tmp2466 * _tmp2493 - _tmp2466 * _tmp2494;
  const Scalar _tmp2499 =
      _tmp2495 * _tmp826 - _tmp2496 * _tmp814 + _tmp2497 * _tmp807 - _tmp2498 * _tmp821;
  const Scalar _tmp2500 =
      -_tmp2495 * _tmp807 - _tmp2496 * _tmp821 + _tmp2497 * _tmp826 + _tmp2498 * _tmp814;
  const Scalar _tmp2501 =
      _tmp2495 * _tmp821 - _tmp2496 * _tmp807 - _tmp2497 * _tmp814 + _tmp2498 * _tmp826;
  const Scalar _tmp2502 = _tmp2473 * _tmp596 - _tmp2477 * _tmp2494 + _tmp2478 * _tmp2492;
  const Scalar _tmp2503 = _tmp2482 * _tmp2492;
  const Scalar _tmp2504 = _tmp2442 * _tmp2503 - _tmp2444 * _tmp2503 + _tmp2480 * _tmp596;
  const Scalar _tmp2505 = _tmp2484 * _tmp596 + _tmp2486 * _tmp2493 - _tmp2486 * _tmp2494;
  const Scalar _tmp2506 = _tmp2489 * _tmp596 + _tmp2490 * _tmp2493 - _tmp2490 * _tmp2494;
  const Scalar _tmp2507 = _tmp606 * _tmp83;
  const Scalar _tmp2508 = _tmp605 * _tmp958;
  const Scalar _tmp2509 = _tmp604 * _tmp83;
  const Scalar _tmp2510 = _tmp605 * _tmp70;
  const Scalar _tmp2511 = _tmp1186 * landmarks_16_ + _tmp2509 - _tmp2510;
  const Scalar _tmp2512 = _tmp621 * ((((_tmp33 + _tmp609) > 0) - ((_tmp33 + _tmp609) < 0)) + 1) /
                          std::pow(_tmp610, Scalar(2));
  const Scalar _tmp2513 = _tmp1149 * _tmp607;
  const Scalar _tmp2514 = _tmp2512 * _tmp2513;
  const Scalar _tmp2515 =
      -_tmp2511 * _tmp2514 + _tmp612 * (_tmp1191 * landmarks_16_ - _tmp2507 + _tmp2508);
  const Scalar _tmp2516 = 2 * _tmp613;
  const Scalar _tmp2517 = _tmp606 * _tmp70;
  const Scalar _tmp2518 = _tmp604 * _tmp958;
  const Scalar _tmp2519 = _tmp1139 * _tmp614;
  const Scalar _tmp2520 = _tmp2512 * _tmp2519;
  const Scalar _tmp2521 =
      -_tmp2511 * _tmp2520 + _tmp615 * (_tmp1183 * landmarks_16_ + _tmp2517 - _tmp2518);
  const Scalar _tmp2522 = 2 * _tmp616;
  const Scalar _tmp2523 = _tmp2515 * _tmp2516 + _tmp2521 * _tmp2522;
  const Scalar _tmp2524 = (Scalar(1) / Scalar(2)) * _tmp613;
  const Scalar _tmp2525 = _tmp163 * _tmp618 * std::pow(_tmp619, _tmp1161) * _tmp622 / _tmp620;
  const Scalar _tmp2526 = _tmp2524 * _tmp2525;
  const Scalar _tmp2527 = _tmp623 / (_tmp617 * std::sqrt(_tmp617));
  const Scalar _tmp2528 = _tmp2524 * _tmp2527;
  const Scalar _tmp2529 = _tmp2515 * _tmp624 + _tmp2523 * _tmp2526 - _tmp2523 * _tmp2528;
  const Scalar _tmp2530 = _tmp604 * _tmp67;
  const Scalar _tmp2531 = _tmp604 * _tmp70;
  const Scalar _tmp2532 = _tmp605 * _tmp83;
  const Scalar _tmp2533 = _tmp1136 * landmarks_16_ + _tmp2531 + _tmp2532;
  const Scalar _tmp2534 =
      -_tmp2520 * _tmp2533 +
      _tmp615 * (-_tmp1018 * _tmp605 + _tmp1145 * landmarks_16_ + _tmp2507 - _tmp2530);
  const Scalar _tmp2535 = _tmp605 * _tmp67;
  const Scalar _tmp2536 =
      -_tmp2514 * _tmp2533 +
      _tmp612 * (-_tmp1018 * _tmp604 + _tmp1154 * landmarks_16_ + _tmp2517 + _tmp2535);
  const Scalar _tmp2537 = _tmp2516 * _tmp2536 + _tmp2522 * _tmp2534;
  const Scalar _tmp2538 = _tmp2526 * _tmp2537 - _tmp2528 * _tmp2537 + _tmp2536 * _tmp624;
  const Scalar _tmp2539 =
      _tmp2512 * (_tmp1169 * landmarks_16_ + _tmp2518 - _tmp2535 - _tmp606 * _tmp996);
  const Scalar _tmp2540 = _tmp606 * _tmp958;
  const Scalar _tmp2541 =
      -_tmp2513 * _tmp2539 + _tmp612 * (_tmp1173 * landmarks_16_ + _tmp2532 + _tmp2540);
  const Scalar _tmp2542 = _tmp606 * _tmp67;
  const Scalar _tmp2543 = -_tmp2519 * _tmp2539 + _tmp615 * (_tmp1178 * landmarks_16_ + _tmp2509 +
                                                            _tmp2542 - _tmp605 * _tmp996);
  const Scalar _tmp2544 = _tmp2516 * _tmp2541 + _tmp2522 * _tmp2543;
  const Scalar _tmp2545 = _tmp2526 * _tmp2544 - _tmp2528 * _tmp2544 + _tmp2541 * _tmp624;
  const Scalar _tmp2546 = -_tmp1036 * _tmp606 + _tmp1196 * landmarks_16_ + _tmp2508 + _tmp2530;
  const Scalar _tmp2547 =
      -_tmp2514 * _tmp2546 +
      _tmp612 * (-_tmp1036 * _tmp604 + _tmp1199 * landmarks_16_ + _tmp2510 - _tmp2542);
  const Scalar _tmp2548 =
      -_tmp2520 * _tmp2546 + _tmp615 * (_tmp1195 * landmarks_16_ + _tmp2531 + _tmp2540);
  const Scalar _tmp2549 = _tmp2516 * _tmp2547 + _tmp2522 * _tmp2548;
  const Scalar _tmp2550 = _tmp2524 * _tmp2549;
  const Scalar _tmp2551 = _tmp2525 * _tmp2550 - _tmp2527 * _tmp2550 + _tmp2547 * _tmp624;
  const Scalar _tmp2552 =
      -_tmp2529 * _tmp814 - _tmp2538 * _tmp821 + _tmp2545 * _tmp826 + _tmp2551 * _tmp807;
  const Scalar _tmp2553 =
      -_tmp2529 * _tmp821 + _tmp2538 * _tmp814 - _tmp2545 * _tmp807 + _tmp2551 * _tmp826;
  const Scalar _tmp2554 =
      -_tmp2529 * _tmp807 + _tmp2538 * _tmp826 + _tmp2545 * _tmp821 - _tmp2551 * _tmp814;
  const Scalar _tmp2555 = _tmp615 * landmarks_16_;
  const Scalar _tmp2556 = _tmp2520 * landmarks_16_;
  const Scalar _tmp2557 = _tmp113 * _tmp2556 - _tmp2555 * _tmp87;
  const Scalar _tmp2558 = _tmp2514 * landmarks_16_;
  const Scalar _tmp2559 = _tmp612 * landmarks_16_;
  const Scalar _tmp2560 = _tmp113 * _tmp2558 - _tmp2559 * _tmp80;
  const Scalar _tmp2561 = _tmp2516 * _tmp2560 + _tmp2522 * _tmp2557;
  const Scalar _tmp2562 = _tmp2526 * _tmp2561 - _tmp2528 * _tmp2561 + _tmp2560 * _tmp624;
  const Scalar _tmp2563 = _tmp112 * _tmp2558 - _tmp2559 * _tmp75;
  const Scalar _tmp2564 = _tmp112 * _tmp2556 - _tmp2555 * _tmp90;
  const Scalar _tmp2565 = _tmp2516 * _tmp2563 + _tmp2522 * _tmp2564;
  const Scalar _tmp2566 = _tmp2526 * _tmp2565 - _tmp2528 * _tmp2565 + _tmp2563 * _tmp624;
  const Scalar _tmp2567 = _tmp114 * _tmp2556 - _tmp2555 * _tmp85;
  const Scalar _tmp2568 = _tmp114 * _tmp2558 - _tmp2559 * _tmp72;
  const Scalar _tmp2569 = _tmp2516 * _tmp2568 + _tmp2522 * _tmp2567;
  const Scalar _tmp2570 = _tmp2526 * _tmp2569 - _tmp2528 * _tmp2569 + _tmp2568 * _tmp624;
  const Scalar _tmp2571 = _tmp142 * _tmp612 - _tmp150 * _tmp2514;
  const Scalar _tmp2572 = -_tmp1226 * _tmp2512 * _tmp614 + _tmp1310 * _tmp611;
  const Scalar _tmp2573 = _tmp2516 * _tmp2571 + _tmp2522 * _tmp2572;
  const Scalar _tmp2574 = _tmp2526 * _tmp2573 - _tmp2528 * _tmp2573 + _tmp2571 * _tmp624;
  const Scalar _tmp2575 = (Scalar(1) / Scalar(2)) * _tmp616;
  const Scalar _tmp2576 = _tmp2527 * _tmp2575;
  const Scalar _tmp2577 = _tmp2525 * _tmp2575;
  const Scalar _tmp2578 = _tmp2543 * _tmp624 - _tmp2544 * _tmp2576 + _tmp2544 * _tmp2577;
  const Scalar _tmp2579 = _tmp2534 * _tmp624 - _tmp2537 * _tmp2576 + _tmp2537 * _tmp2577;
  const Scalar _tmp2580 = _tmp2521 * _tmp624 - _tmp2523 * _tmp2576 + _tmp2523 * _tmp2577;
  const Scalar _tmp2581 = _tmp2548 * _tmp624 - _tmp2549 * _tmp2576 + _tmp2549 * _tmp2577;
  const Scalar _tmp2582 =
      _tmp2578 * _tmp826 - _tmp2579 * _tmp821 - _tmp2580 * _tmp814 + _tmp2581 * _tmp807;
  const Scalar _tmp2583 =
      -_tmp2578 * _tmp807 + _tmp2579 * _tmp814 - _tmp2580 * _tmp821 + _tmp2581 * _tmp826;
  const Scalar _tmp2584 =
      _tmp2578 * _tmp821 + _tmp2579 * _tmp826 - _tmp2580 * _tmp807 - _tmp2581 * _tmp814;
  const Scalar _tmp2585 = _tmp2557 * _tmp624 - _tmp2561 * _tmp2576 + _tmp2561 * _tmp2577;
  const Scalar _tmp2586 = _tmp2564 * _tmp624 - _tmp2565 * _tmp2576 + _tmp2565 * _tmp2577;
  const Scalar _tmp2587 = _tmp2567 * _tmp624 - _tmp2569 * _tmp2576 + _tmp2569 * _tmp2577;
  const Scalar _tmp2588 = _tmp2572 * _tmp624 - _tmp2573 * _tmp2576 + _tmp2573 * _tmp2577;
  const Scalar _tmp2589 = 2 * _tmp634;
  const Scalar _tmp2590 = _tmp2589 * _views_1_pose[1];
  const Scalar _tmp2591 = _tmp632 * _tmp67;
  const Scalar _tmp2592 = _tmp633 * _tmp83;
  const Scalar _tmp2593 = _tmp632 * _tmp70;
  const Scalar _tmp2594 = _tmp1136 * landmarks_17_ + _tmp2592 + _tmp2593;
  const Scalar _tmp2595 = _tmp649 * ((((_tmp33 + _tmp637) > 0) - ((_tmp33 + _tmp637) < 0)) + 1) /
                          std::pow(_tmp638, Scalar(2));
  const Scalar _tmp2596 = _tmp2595 * _tmp642;
  const Scalar _tmp2597 = _tmp1139 * _tmp2596;
  const Scalar _tmp2598 =
      -_tmp2594 * _tmp2597 +
      _tmp643 * (-_tmp1018 * _tmp633 + _tmp1145 * landmarks_17_ + _tmp2590 - _tmp2591);
  const Scalar _tmp2599 = 2 * _tmp644;
  const Scalar _tmp2600 = _tmp634 * _tmp70;
  const Scalar _tmp2601 = _tmp633 * _tmp67;
  const Scalar _tmp2602 = _tmp632 * _views_1_pose[2];
  const Scalar _tmp2603 = _tmp1149 * _tmp2595 * _tmp635;
  const Scalar _tmp2604 = -_tmp2594 * _tmp2603 +
                          _tmp640 * (_tmp1154 * landmarks_17_ + _tmp2600 + _tmp2601 - 4 * _tmp2602);
  const Scalar _tmp2605 = 2 * _tmp641;
  const Scalar _tmp2606 = _tmp2598 * _tmp2599 + _tmp2604 * _tmp2605;
  const Scalar _tmp2607 = _tmp651 / (_tmp645 * std::sqrt(_tmp645));
  const Scalar _tmp2608 = _tmp2606 * _tmp2607;
  const Scalar _tmp2609 = (Scalar(1) / Scalar(2)) * _tmp641;
  const Scalar _tmp2610 = _tmp163 * _tmp646 * std::pow(_tmp647, _tmp1161) * _tmp650 / _tmp648;
  const Scalar _tmp2611 = _tmp2609 * _tmp2610;
  const Scalar _tmp2612 = _tmp2604 * _tmp652 + _tmp2606 * _tmp2611 - _tmp2608 * _tmp2609;
  const Scalar _tmp2613 = _tmp634 * _tmp67;
  const Scalar _tmp2614 = _tmp632 * _tmp83;
  const Scalar _tmp2615 = 2 * _tmp2602;
  const Scalar _tmp2616 = _tmp1169 * landmarks_17_ - _tmp2601 + _tmp2615 - _tmp634 * _tmp996;
  const Scalar _tmp2617 = -_tmp2597 * _tmp2616 + _tmp643 * (_tmp1178 * landmarks_17_ + _tmp2613 +
                                                            _tmp2614 - _tmp633 * _tmp996);
  const Scalar _tmp2618 = _tmp2589 * _views_1_pose[2];
  const Scalar _tmp2619 =
      -_tmp2603 * _tmp2616 + _tmp640 * (_tmp1173 * landmarks_17_ + _tmp2592 + _tmp2618);
  const Scalar _tmp2620 = _tmp2599 * _tmp2617 + _tmp2605 * _tmp2619;
  const Scalar _tmp2621 = _tmp2607 * _tmp2609;
  const Scalar _tmp2622 = _tmp2611 * _tmp2620 + _tmp2619 * _tmp652 - _tmp2620 * _tmp2621;
  const Scalar _tmp2623 = _tmp633 * _tmp958;
  const Scalar _tmp2624 = -_tmp1036 * _tmp634 + _tmp1196 * landmarks_17_ + _tmp2591 + _tmp2623;
  const Scalar _tmp2625 =
      -_tmp2597 * _tmp2624 + _tmp643 * (_tmp1195 * landmarks_17_ + _tmp2593 + _tmp2618);
  const Scalar _tmp2626 = _tmp633 * _tmp70;
  const Scalar _tmp2627 =
      -_tmp2603 * _tmp2624 +
      _tmp640 * (-_tmp1036 * _tmp632 + _tmp1199 * landmarks_17_ - _tmp2613 + _tmp2626);
  const Scalar _tmp2628 = _tmp2599 * _tmp2625 + _tmp2605 * _tmp2627;
  const Scalar _tmp2629 = _tmp2611 * _tmp2628 - _tmp2621 * _tmp2628 + _tmp2627 * _tmp652;
  const Scalar _tmp2630 = _tmp1186 * landmarks_17_ + _tmp2614 - _tmp2626;
  const Scalar _tmp2631 =
      -_tmp2603 * _tmp2630 + _tmp640 * (_tmp1191 * landmarks_17_ - _tmp2590 + _tmp2623);
  const Scalar _tmp2632 =
      -_tmp2597 * _tmp2630 + _tmp643 * (_tmp1183 * landmarks_17_ + _tmp2600 - _tmp2615);
  const Scalar _tmp2633 = _tmp2599 * _tmp2632 + _tmp2605 * _tmp2631;
  const Scalar _tmp2634 = _tmp2611 * _tmp2633 - _tmp2621 * _tmp2633 + _tmp2631 * _tmp652;
  const Scalar _tmp2635 =
      -_tmp2612 * _tmp821 + _tmp2622 * _tmp826 + _tmp2629 * _tmp807 - _tmp2634 * _tmp814;
  const Scalar _tmp2636 =
      _tmp2612 * _tmp814 - _tmp2622 * _tmp807 + _tmp2629 * _tmp826 - _tmp2634 * _tmp821;
  const Scalar _tmp2637 =
      _tmp2612 * _tmp826 + _tmp2622 * _tmp821 - _tmp2629 * _tmp814 - _tmp2634 * _tmp807;
  const Scalar _tmp2638 = _tmp2603 * landmarks_17_;
  const Scalar _tmp2639 = _tmp640 * landmarks_17_;
  const Scalar _tmp2640 = _tmp113 * _tmp2638 - _tmp2639 * _tmp80;
  const Scalar _tmp2641 = _tmp2597 * landmarks_17_;
  const Scalar _tmp2642 = _tmp643 * landmarks_17_;
  const Scalar _tmp2643 = _tmp113 * _tmp2641 - _tmp2642 * _tmp87;
  const Scalar _tmp2644 = _tmp2599 * _tmp2643 + _tmp2605 * _tmp2640;
  const Scalar _tmp2645 = _tmp2611 * _tmp2644 - _tmp2621 * _tmp2644 + _tmp2640 * _tmp652;
  const Scalar _tmp2646 = _tmp112 * _tmp2638 - _tmp2639 * _tmp75;
  const Scalar _tmp2647 = _tmp112 * _tmp2641 - _tmp2642 * _tmp90;
  const Scalar _tmp2648 = _tmp2599 * _tmp2647 + _tmp2605 * _tmp2646;
  const Scalar _tmp2649 = _tmp2611 * _tmp2648 - _tmp2621 * _tmp2648 + _tmp2646 * _tmp652;
  const Scalar _tmp2650 = _tmp114 * _tmp2641 - _tmp2642 * _tmp85;
  const Scalar _tmp2651 = _tmp114 * _tmp2638 - _tmp2639 * _tmp72;
  const Scalar _tmp2652 = _tmp2599 * _tmp2650 + _tmp2605 * _tmp2651;
  const Scalar _tmp2653 = _tmp2611 * _tmp2652 - _tmp2621 * _tmp2652 + _tmp2651 * _tmp652;
  const Scalar _tmp2654 = _tmp1224 * _tmp639 - _tmp150 * _tmp2603;
  const Scalar _tmp2655 = -_tmp1226 * _tmp2596 + _tmp1310 * _tmp639;
  const Scalar _tmp2656 = _tmp2599 * _tmp2655 + _tmp2605 * _tmp2654;
  const Scalar _tmp2657 = _tmp2611 * _tmp2656 - _tmp2621 * _tmp2656 + _tmp2654 * _tmp652;
  const Scalar _tmp2658 = (Scalar(1) / Scalar(2)) * _tmp644;
  const Scalar _tmp2659 = _tmp2610 * _tmp2658;
  const Scalar _tmp2660 = _tmp2598 * _tmp652 + _tmp2606 * _tmp2659 - _tmp2608 * _tmp2658;
  const Scalar _tmp2661 = _tmp2607 * _tmp2658;
  const Scalar _tmp2662 = _tmp2632 * _tmp652 + _tmp2633 * _tmp2659 - _tmp2633 * _tmp2661;
  const Scalar _tmp2663 = _tmp2620 * _tmp2658;
  const Scalar _tmp2664 = -_tmp2607 * _tmp2663 + _tmp2610 * _tmp2663 + _tmp2617 * _tmp652;
  const Scalar _tmp2665 = _tmp2625 * _tmp652 + _tmp2628 * _tmp2659 - _tmp2628 * _tmp2661;
  const Scalar _tmp2666 =
      -_tmp2660 * _tmp821 - _tmp2662 * _tmp814 + _tmp2664 * _tmp826 + _tmp2665 * _tmp807;
  const Scalar _tmp2667 =
      _tmp2660 * _tmp814 - _tmp2662 * _tmp821 - _tmp2664 * _tmp807 + _tmp2665 * _tmp826;
  const Scalar _tmp2668 =
      _tmp2660 * _tmp826 - _tmp2662 * _tmp807 + _tmp2664 * _tmp821 - _tmp2665 * _tmp814;
  const Scalar _tmp2669 = _tmp2643 * _tmp652 + _tmp2644 * _tmp2659 - _tmp2644 * _tmp2661;
  const Scalar _tmp2670 = _tmp2647 * _tmp652 + _tmp2648 * _tmp2659 - _tmp2648 * _tmp2661;
  const Scalar _tmp2671 = _tmp2650 * _tmp652 + _tmp2652 * _tmp2659 - _tmp2652 * _tmp2661;
  const Scalar _tmp2672 = _tmp2655 * _tmp652 + _tmp2656 * _tmp2659 - _tmp2656 * _tmp2661;
  const Scalar _tmp2673 = _tmp662 * _tmp67;
  const Scalar _tmp2674 = _tmp661 * _views_1_pose[1];
  const Scalar _tmp2675 = 2 * _tmp2674;
  const Scalar _tmp2676 = _tmp660 * _tmp67;
  const Scalar _tmp2677 = _tmp661 * _views_1_pose[2];
  const Scalar _tmp2678 = 2 * _tmp2677;
  const Scalar _tmp2679 = _tmp1169 * landmarks_18_ - _tmp2676 + _tmp2678 - _tmp662 * _tmp996;
  const Scalar _tmp2680 = _tmp677 * ((((_tmp33 + _tmp665) > 0) - ((_tmp33 + _tmp665) < 0)) + 1) /
                          std::pow(_tmp666, Scalar(2));
  const Scalar _tmp2681 = _tmp2680 * _tmp670;
  const Scalar _tmp2682 = _tmp1139 * _tmp2681;
  const Scalar _tmp2683 = -_tmp2679 * _tmp2682 + _tmp671 * (_tmp1178 * landmarks_18_ + _tmp2673 +
                                                            _tmp2675 - _tmp660 * _tmp996);
  const Scalar _tmp2684 = 2 * _tmp672;
  const Scalar _tmp2685 = _tmp1149 * _tmp2680 * _tmp663;
  const Scalar _tmp2686 = _tmp660 * _tmp83;
  const Scalar _tmp2687 = _tmp662 * _tmp958;
  const Scalar _tmp2688 =
      -_tmp2679 * _tmp2685 + _tmp668 * (_tmp1173 * landmarks_18_ + _tmp2686 + _tmp2687);
  const Scalar _tmp2689 = 2 * _tmp669;
  const Scalar _tmp2690 = _tmp2683 * _tmp2684 + _tmp2688 * _tmp2689;
  const Scalar _tmp2691 = (Scalar(1) / Scalar(2)) * _tmp669;
  const Scalar _tmp2692 = _tmp163 * _tmp674 * std::pow(_tmp675, _tmp1161) * _tmp678 / _tmp676;
  const Scalar _tmp2693 = _tmp2691 * _tmp2692;
  const Scalar _tmp2694 = _tmp679 / (_tmp673 * std::sqrt(_tmp673));
  const Scalar _tmp2695 = _tmp2691 * _tmp2694;
  const Scalar _tmp2696 = _tmp2688 * _tmp680 + _tmp2690 * _tmp2693 - _tmp2690 * _tmp2695;
  const Scalar _tmp2697 = _tmp662 * _tmp70;
  const Scalar _tmp2698 = _tmp661 * _tmp70;
  const Scalar _tmp2699 = _tmp1136 * landmarks_18_ + _tmp2686 + _tmp2698;
  const Scalar _tmp2700 = -_tmp2685 * _tmp2699 +
                          _tmp668 * (_tmp1154 * landmarks_18_ + _tmp2676 - 4 * _tmp2677 + _tmp2697);
  const Scalar _tmp2701 = _tmp662 * _tmp83;
  const Scalar _tmp2702 = _tmp661 * _tmp67;
  const Scalar _tmp2703 =
      -_tmp2682 * _tmp2699 +
      _tmp671 * (-_tmp1018 * _tmp660 + _tmp1145 * landmarks_18_ + _tmp2701 - _tmp2702);
  const Scalar _tmp2704 = _tmp2684 * _tmp2703 + _tmp2689 * _tmp2700;
  const Scalar _tmp2705 = _tmp2693 * _tmp2704 - _tmp2695 * _tmp2704 + _tmp2700 * _tmp680;
  const Scalar _tmp2706 = _tmp660 * _tmp70;
  const Scalar _tmp2707 = _tmp1186 * landmarks_18_ + _tmp2675 - _tmp2706;
  const Scalar _tmp2708 =
      -_tmp2682 * _tmp2707 + _tmp671 * (_tmp1183 * landmarks_18_ - _tmp2678 + _tmp2697);
  const Scalar _tmp2709 = _tmp660 * _tmp958;
  const Scalar _tmp2710 =
      -_tmp2685 * _tmp2707 + _tmp668 * (_tmp1191 * landmarks_18_ - _tmp2701 + _tmp2709);
  const Scalar _tmp2711 = _tmp2684 * _tmp2708 + _tmp2689 * _tmp2710;
  const Scalar _tmp2712 = _tmp2693 * _tmp2711 - _tmp2695 * _tmp2711 + _tmp2710 * _tmp680;
  const Scalar _tmp2713 = -_tmp1036 * _tmp662 + _tmp1196 * landmarks_18_ + _tmp2702 + _tmp2709;
  const Scalar _tmp2714 =
      -_tmp2682 * _tmp2713 + _tmp671 * (_tmp1195 * landmarks_18_ + _tmp2687 + _tmp2698);
  const Scalar _tmp2715 = -_tmp2685 * _tmp2713 +
                          _tmp668 * (_tmp1199 * landmarks_18_ - _tmp2673 - 4 * _tmp2674 + _tmp2706);
  const Scalar _tmp2716 = _tmp2684 * _tmp2714 + _tmp2689 * _tmp2715;
  const Scalar _tmp2717 = _tmp2693 * _tmp2716 - _tmp2695 * _tmp2716 + _tmp2715 * _tmp680;
  const Scalar _tmp2718 =
      _tmp2696 * _tmp826 - _tmp2705 * _tmp821 - _tmp2712 * _tmp814 + _tmp2717 * _tmp807;
  const Scalar _tmp2719 =
      -_tmp2696 * _tmp807 + _tmp2705 * _tmp814 - _tmp2712 * _tmp821 + _tmp2717 * _tmp826;
  const Scalar _tmp2720 =
      _tmp2696 * _tmp821 + _tmp2705 * _tmp826 - _tmp2712 * _tmp807 - _tmp2717 * _tmp814;
  const Scalar _tmp2721 = _tmp668 * landmarks_18_;
  const Scalar _tmp2722 = _tmp2685 * landmarks_18_;
  const Scalar _tmp2723 = _tmp113 * _tmp2722 - _tmp2721 * _tmp80;
  const Scalar _tmp2724 = _tmp671 * landmarks_18_;
  const Scalar _tmp2725 = _tmp2682 * landmarks_18_;
  const Scalar _tmp2726 = _tmp113 * _tmp2725 - _tmp2724 * _tmp87;
  const Scalar _tmp2727 = _tmp2684 * _tmp2726 + _tmp2689 * _tmp2723;
  const Scalar _tmp2728 = _tmp2693 * _tmp2727 - _tmp2695 * _tmp2727 + _tmp2723 * _tmp680;
  const Scalar _tmp2729 = _tmp112 * _tmp2722 - _tmp2721 * _tmp75;
  const Scalar _tmp2730 = _tmp112 * _tmp2725 - _tmp2724 * _tmp90;
  const Scalar _tmp2731 = _tmp2684 * _tmp2730 + _tmp2689 * _tmp2729;
  const Scalar _tmp2732 = _tmp2693 * _tmp2731 - _tmp2695 * _tmp2731 + _tmp2729 * _tmp680;
  const Scalar _tmp2733 = _tmp114 * _tmp2722 - _tmp2721 * _tmp72;
  const Scalar _tmp2734 = _tmp114 * _tmp2725 - _tmp2724 * _tmp85;
  const Scalar _tmp2735 = _tmp2684 * _tmp2734 + _tmp2689 * _tmp2733;
  const Scalar _tmp2736 = _tmp2693 * _tmp2735 - _tmp2695 * _tmp2735 + _tmp2733 * _tmp680;
  const Scalar _tmp2737 = -_tmp1226 * _tmp2681 + _tmp1310 * _tmp667;
  const Scalar _tmp2738 = _tmp1224 * _tmp667 - _tmp150 * _tmp2685;
  const Scalar _tmp2739 = _tmp2684 * _tmp2737 + _tmp2689 * _tmp2738;
  const Scalar _tmp2740 = _tmp2693 * _tmp2739 - _tmp2695 * _tmp2739 + _tmp2738 * _tmp680;
  const Scalar _tmp2741 = (Scalar(1) / Scalar(2)) * _tmp672;
  const Scalar _tmp2742 = _tmp2694 * _tmp2741;
  const Scalar _tmp2743 = _tmp2692 * _tmp2741;
  const Scalar _tmp2744 = _tmp2714 * _tmp680 - _tmp2716 * _tmp2742 + _tmp2716 * _tmp2743;
  const Scalar _tmp2745 = _tmp2708 * _tmp680 - _tmp2711 * _tmp2742 + _tmp2711 * _tmp2743;
  const Scalar _tmp2746 = _tmp2683 * _tmp680 - _tmp2690 * _tmp2742 + _tmp2690 * _tmp2743;
  const Scalar _tmp2747 = _tmp2703 * _tmp680 - _tmp2704 * _tmp2742 + _tmp2704 * _tmp2743;
  const Scalar _tmp2748 =
      _tmp2744 * _tmp807 - _tmp2745 * _tmp814 + _tmp2746 * _tmp826 - _tmp2747 * _tmp821;
  const Scalar _tmp2749 =
      _tmp2744 * _tmp826 - _tmp2745 * _tmp821 - _tmp2746 * _tmp807 + _tmp2747 * _tmp814;
  const Scalar _tmp2750 =
      -_tmp2744 * _tmp814 - _tmp2745 * _tmp807 + _tmp2746 * _tmp821 + _tmp2747 * _tmp826;
  const Scalar _tmp2751 = _tmp2726 * _tmp680 - _tmp2727 * _tmp2742 + _tmp2727 * _tmp2743;
  const Scalar _tmp2752 = _tmp2730 * _tmp680 - _tmp2731 * _tmp2742 + _tmp2731 * _tmp2743;
  const Scalar _tmp2753 = _tmp2734 * _tmp680 - _tmp2735 * _tmp2742 + _tmp2735 * _tmp2743;
  const Scalar _tmp2754 = _tmp2739 * _tmp2741;
  const Scalar _tmp2755 = _tmp2692 * _tmp2754 - _tmp2694 * _tmp2754 + _tmp2737 * _tmp680;
  const Scalar _tmp2756 = _tmp690 * _tmp70;
  const Scalar _tmp2757 = _tmp688 * _views_1_pose[1];
  const Scalar _tmp2758 = 2 * _tmp2757;
  const Scalar _tmp2759 = _tmp1186 * landmarks_19_ - _tmp2756 + _tmp2758;
  const Scalar _tmp2760 = _tmp703 * ((((_tmp33 + _tmp693) > 0) - ((_tmp33 + _tmp693) < 0)) + 1) /
                          std::pow(_tmp694, Scalar(2));
  const Scalar _tmp2761 = _tmp1149 * _tmp691;
  const Scalar _tmp2762 = _tmp2760 * _tmp2761;
  const Scalar _tmp2763 = _tmp690 * _tmp958;
  const Scalar _tmp2764 = _tmp689 * _tmp83;
  const Scalar _tmp2765 =
      -_tmp2759 * _tmp2762 + _tmp696 * (_tmp1191 * landmarks_19_ + _tmp2763 - _tmp2764);
  const Scalar _tmp2766 = _tmp1139 * _tmp698;
  const Scalar _tmp2767 = _tmp2760 * _tmp2766;
  const Scalar _tmp2768 = _tmp688 * _views_1_pose[2];
  const Scalar _tmp2769 = 2 * _tmp2768;
  const Scalar _tmp2770 = _tmp689 * _tmp70;
  const Scalar _tmp2771 =
      -_tmp2759 * _tmp2767 + _tmp699 * (_tmp1183 * landmarks_19_ - _tmp2769 + _tmp2770);
  const Scalar _tmp2772 = 2 * _tmp700;
  const Scalar _tmp2773 = 2 * _tmp697;
  const Scalar _tmp2774 = _tmp2765 * _tmp2773 + _tmp2771 * _tmp2772;
  const Scalar _tmp2775 = (Scalar(1) / Scalar(2)) * _tmp697;
  const Scalar _tmp2776 = _tmp163 * _tmp702 * _tmp704 * std::pow(_tmp705, _tmp1161) / _tmp706;
  const Scalar _tmp2777 = _tmp2775 * _tmp2776;
  const Scalar _tmp2778 = _tmp707 / (_tmp701 * std::sqrt(_tmp701));
  const Scalar _tmp2779 = _tmp2775 * _tmp2778;
  const Scalar _tmp2780 = _tmp2765 * _tmp708 + _tmp2774 * _tmp2777 - _tmp2774 * _tmp2779;
  const Scalar _tmp2781 = _tmp67 * _tmp690;
  const Scalar _tmp2782 = _tmp690 * _tmp83;
  const Scalar _tmp2783 = _tmp688 * _tmp70;
  const Scalar _tmp2784 = _tmp2760 * (_tmp1136 * landmarks_19_ + _tmp2782 + _tmp2783);
  const Scalar _tmp2785 = -_tmp2761 * _tmp2784 +
                          _tmp696 * (_tmp1154 * landmarks_19_ - 4 * _tmp2768 + _tmp2770 + _tmp2781);
  const Scalar _tmp2786 = _tmp67 * _tmp688;
  const Scalar _tmp2787 =
      -_tmp2766 * _tmp2784 +
      _tmp699 * (-_tmp1018 * _tmp690 + _tmp1145 * landmarks_19_ + _tmp2764 - _tmp2786);
  const Scalar _tmp2788 = _tmp2772 * _tmp2787 + _tmp2773 * _tmp2785;
  const Scalar _tmp2789 = _tmp2777 * _tmp2788 - _tmp2779 * _tmp2788 + _tmp2785 * _tmp708;
  const Scalar _tmp2790 = _tmp1169 * landmarks_19_ + _tmp2769 - _tmp2781 - _tmp689 * _tmp996;
  const Scalar _tmp2791 = _tmp67 * _tmp689;
  const Scalar _tmp2792 = -_tmp2767 * _tmp2790 + _tmp699 * (_tmp1178 * landmarks_19_ + _tmp2758 +
                                                            _tmp2791 - _tmp690 * _tmp996);
  const Scalar _tmp2793 = _tmp689 * _tmp958;
  const Scalar _tmp2794 =
      -_tmp2762 * _tmp2790 + _tmp696 * (_tmp1173 * landmarks_19_ + _tmp2782 + _tmp2793);
  const Scalar _tmp2795 = _tmp2772 * _tmp2792 + _tmp2773 * _tmp2794;
  const Scalar _tmp2796 = _tmp2777 * _tmp2795 - _tmp2779 * _tmp2795 + _tmp2794 * _tmp708;
  const Scalar _tmp2797 = -_tmp1036 * _tmp689 + _tmp1196 * landmarks_19_ + _tmp2763 + _tmp2786;
  const Scalar _tmp2798 = -_tmp2762 * _tmp2797 +
                          _tmp696 * (_tmp1199 * landmarks_19_ + _tmp2756 - 4 * _tmp2757 - _tmp2791);
  const Scalar _tmp2799 =
      -_tmp2767 * _tmp2797 + _tmp699 * (_tmp1195 * landmarks_19_ + _tmp2783 + _tmp2793);
  const Scalar _tmp2800 = _tmp2772 * _tmp2799 + _tmp2773 * _tmp2798;
  const Scalar _tmp2801 = _tmp2777 * _tmp2800 - _tmp2779 * _tmp2800 + _tmp2798 * _tmp708;
  const Scalar _tmp2802 =
      -_tmp2780 * _tmp814 - _tmp2789 * _tmp821 + _tmp2796 * _tmp826 + _tmp2801 * _tmp807;
  const Scalar _tmp2803 =
      -_tmp2780 * _tmp821 + _tmp2789 * _tmp814 - _tmp2796 * _tmp807 + _tmp2801 * _tmp826;
  const Scalar _tmp2804 =
      -_tmp2780 * _tmp807 + _tmp2789 * _tmp826 + _tmp2796 * _tmp821 - _tmp2801 * _tmp814;
  const Scalar _tmp2805 = _tmp2767 * landmarks_19_;
  const Scalar _tmp2806 = _tmp699 * landmarks_19_;
  const Scalar _tmp2807 = _tmp113 * _tmp2805 - _tmp2806 * _tmp87;
  const Scalar _tmp2808 = _tmp696 * landmarks_19_;
  const Scalar _tmp2809 = _tmp2762 * landmarks_19_;
  const Scalar _tmp2810 = _tmp113 * _tmp2809 - _tmp2808 * _tmp80;
  const Scalar _tmp2811 = _tmp2772 * _tmp2807 + _tmp2773 * _tmp2810;
  const Scalar _tmp2812 = _tmp2777 * _tmp2811 - _tmp2779 * _tmp2811 + _tmp2810 * _tmp708;
  const Scalar _tmp2813 = _tmp112 * _tmp2809 - _tmp2808 * _tmp75;
  const Scalar _tmp2814 = _tmp112 * _tmp2805 - _tmp2806 * _tmp90;
  const Scalar _tmp2815 = _tmp2772 * _tmp2814 + _tmp2773 * _tmp2813;
  const Scalar _tmp2816 = _tmp2777 * _tmp2815 - _tmp2779 * _tmp2815 + _tmp2813 * _tmp708;
  const Scalar _tmp2817 = _tmp114 * _tmp2809 - _tmp2808 * _tmp72;
  const Scalar _tmp2818 = _tmp114 * _tmp2805 - _tmp2806 * _tmp85;
  const Scalar _tmp2819 = _tmp2772 * _tmp2818 + _tmp2773 * _tmp2817;
  const Scalar _tmp2820 = _tmp2778 * _tmp2819;
  const Scalar _tmp2821 = -_tmp2775 * _tmp2820 + _tmp2777 * _tmp2819 + _tmp2817 * _tmp708;
  const Scalar _tmp2822 = _tmp142 * _tmp696 - _tmp150 * _tmp2762;
  const Scalar _tmp2823 = _tmp1310 * _tmp695 - _tmp150 * _tmp2767;
  const Scalar _tmp2824 = _tmp2772 * _tmp2823 + _tmp2773 * _tmp2822;
  const Scalar _tmp2825 = _tmp2775 * _tmp2824;
  const Scalar _tmp2826 = _tmp2776 * _tmp2825 - _tmp2778 * _tmp2825 + _tmp2822 * _tmp708;
  const Scalar _tmp2827 = (Scalar(1) / Scalar(2)) * _tmp700;
  const Scalar _tmp2828 = _tmp2776 * _tmp2827;
  const Scalar _tmp2829 = _tmp2778 * _tmp2827;
  const Scalar _tmp2830 = _tmp2799 * _tmp708 + _tmp2800 * _tmp2828 - _tmp2800 * _tmp2829;
  const Scalar _tmp2831 = _tmp2787 * _tmp708 + _tmp2788 * _tmp2828 - _tmp2788 * _tmp2829;
  const Scalar _tmp2832 = _tmp2771 * _tmp708 + _tmp2774 * _tmp2828 - _tmp2774 * _tmp2829;
  const Scalar _tmp2833 = _tmp2792 * _tmp708 + _tmp2795 * _tmp2828 - _tmp2795 * _tmp2829;
  const Scalar _tmp2834 =
      _tmp2830 * _tmp807 - _tmp2831 * _tmp821 - _tmp2832 * _tmp814 + _tmp2833 * _tmp826;
  const Scalar _tmp2835 =
      _tmp2830 * _tmp826 + _tmp2831 * _tmp814 - _tmp2832 * _tmp821 - _tmp2833 * _tmp807;
  const Scalar _tmp2836 =
      -_tmp2830 * _tmp814 + _tmp2831 * _tmp826 - _tmp2832 * _tmp807 + _tmp2833 * _tmp821;
  const Scalar _tmp2837 = _tmp2807 * _tmp708 + _tmp2811 * _tmp2828 - _tmp2811 * _tmp2829;
  const Scalar _tmp2838 = _tmp2814 * _tmp708 + _tmp2815 * _tmp2828 - _tmp2815 * _tmp2829;
  const Scalar _tmp2839 = _tmp2818 * _tmp708 + _tmp2819 * _tmp2828 - _tmp2820 * _tmp2827;
  const Scalar _tmp2840 = _tmp2823 * _tmp708 + _tmp2824 * _tmp2828 - _tmp2824 * _tmp2829;
  const Scalar _tmp2841 = std::pow(matches_0_0_weight, Scalar(2)) / std::pow(_tmp712, Scalar(2));
  const Scalar _tmp2842 = std::pow(matches_0_1_weight, Scalar(2)) / std::pow(_tmp715, Scalar(2));
  const Scalar _tmp2843 = std::pow(matches_0_2_weight, Scalar(2)) / std::pow(_tmp718, Scalar(2));
  const Scalar _tmp2844 = std::pow(matches_0_3_weight, Scalar(2)) / std::pow(_tmp721, Scalar(2));
  const Scalar _tmp2845 = std::pow(matches_0_4_weight, Scalar(2)) / std::pow(_tmp724, Scalar(2));
  const Scalar _tmp2846 = std::pow(matches_0_5_weight, Scalar(2)) / std::pow(_tmp727, Scalar(2));
  const Scalar _tmp2847 = std::pow(matches_0_6_weight, Scalar(2)) / std::pow(_tmp730, Scalar(2));
  const Scalar _tmp2848 = std::pow(matches_0_7_weight, Scalar(2)) / std::pow(_tmp733, Scalar(2));
  const Scalar _tmp2849 = std::pow(matches_0_8_weight, Scalar(2)) / std::pow(_tmp736, Scalar(2));
  const Scalar _tmp2850 = std::pow(matches_0_9_weight, Scalar(2)) / std::pow(_tmp739, Scalar(2));
  const Scalar _tmp2851 = std::pow(matches_0_10_weight, Scalar(2)) / std::pow(_tmp742, Scalar(2));
  const Scalar _tmp2852 = std::pow(matches_0_11_weight, Scalar(2)) / std::pow(_tmp745, Scalar(2));
  const Scalar _tmp2853 = std::pow(matches_0_12_weight, Scalar(2)) / std::pow(_tmp748, Scalar(2));
  const Scalar _tmp2854 = std::pow(matches_0_13_weight, Scalar(2)) / std::pow(_tmp751, Scalar(2));
  const Scalar _tmp2855 = std::pow(matches_0_14_weight, Scalar(2)) / std::pow(_tmp754, Scalar(2));
  const Scalar _tmp2856 = std::pow(matches_0_15_weight, Scalar(2)) / std::pow(_tmp757, Scalar(2));
  const Scalar _tmp2857 = std::pow(matches_0_16_weight, Scalar(2)) / std::pow(_tmp760, Scalar(2));
  const Scalar _tmp2858 = std::pow(matches_0_17_weight, Scalar(2)) / std::pow(_tmp763, Scalar(2));
  const Scalar _tmp2859 = std::pow(matches_0_18_weight, Scalar(2)) / std::pow(_tmp766, Scalar(2));
  const Scalar _tmp2860 = std::pow(matches_0_19_weight, Scalar(2)) / std::pow(_tmp769, Scalar(2));

  // Output terms (4)
  if (b != nullptr) {
    Eigen::Matrix<Scalar, 72, 1>& _b = (*b);

    _b(0, 0) = _tmp56;
    _b(1, 0) = _tmp60;
    _b(2, 0) = _tmp61;
    _b(3, 0) = _tmp62;
    _b(4, 0) = _tmp63;
    _b(5, 0) = _tmp66;
    _b(6, 0) = _tmp116;
    _b(7, 0) = _tmp120;
    _b(8, 0) = _tmp121;
    _b(9, 0) = _tmp122;
    _b(10, 0) = _tmp123;
    _b(11, 0) = _tmp124;
    _b(12, 0) = _tmp177;
    _b(13, 0) = _tmp178;
    _b(14, 0) = _tmp205;
    _b(15, 0) = _tmp206;
    _b(16, 0) = _tmp233;
    _b(17, 0) = _tmp234;
    _b(18, 0) = _tmp261;
    _b(19, 0) = _tmp262;
    _b(20, 0) = _tmp289;
    _b(21, 0) = _tmp290;
    _b(22, 0) = _tmp317;
    _b(23, 0) = _tmp318;
    _b(24, 0) = _tmp345;
    _b(25, 0) = _tmp346;
    _b(26, 0) = _tmp373;
    _b(27, 0) = _tmp374;
    _b(28, 0) = _tmp401;
    _b(29, 0) = _tmp402;
    _b(30, 0) = _tmp429;
    _b(31, 0) = _tmp430;
    _b(32, 0) = _tmp457;
    _b(33, 0) = _tmp458;
    _b(34, 0) = _tmp485;
    _b(35, 0) = _tmp486;
    _b(36, 0) = _tmp513;
    _b(37, 0) = _tmp514;
    _b(38, 0) = _tmp541;
    _b(39, 0) = _tmp542;
    _b(40, 0) = _tmp569;
    _b(41, 0) = _tmp570;
    _b(42, 0) = _tmp597;
    _b(43, 0) = _tmp598;
    _b(44, 0) = _tmp625;
    _b(45, 0) = _tmp626;
    _b(46, 0) = _tmp653;
    _b(47, 0) = _tmp654;
    _b(48, 0) = _tmp681;
    _b(49, 0) = _tmp682;
    _b(50, 0) = _tmp709;
    _b(51, 0) = _tmp710;
    _b(52, 0) = _tmp711 * _tmp713;
    _b(53, 0) = _tmp714 * _tmp716;
    _b(54, 0) = _tmp717 * _tmp719;
    _b(55, 0) = _tmp720 * _tmp722;
    _b(56, 0) = _tmp723 * _tmp725;
    _b(57, 0) = _tmp726 * _tmp728;
    _b(58, 0) = _tmp729 * _tmp731;
    _b(59, 0) = _tmp732 * _tmp734;
    _b(60, 0) = _tmp735 * _tmp737;
    _b(61, 0) = _tmp738 * _tmp740;
    _b(62, 0) = _tmp741 * _tmp743;
    _b(63, 0) = _tmp744 * _tmp746;
    _b(64, 0) = _tmp747 * _tmp749;
    _b(65, 0) = _tmp750 * _tmp752;
    _b(66, 0) = _tmp753 * _tmp755;
    _b(67, 0) = _tmp756 * _tmp758;
    _b(68, 0) = _tmp759 * _tmp761;
    _b(69, 0) = _tmp762 * _tmp764;
    _b(70, 0) = _tmp765 * _tmp767;
    _b(71, 0) = _tmp768 * _tmp770;
  }

  if (J != nullptr) {
    Eigen::Matrix<Scalar, 72, 26>& _J = (*J);

    _J(0, 0) = _tmp827;
    _J(0, 1) = _tmp828;
    _J(0, 2) = _tmp829;
    _J(0, 3) = _tmp830;
    _J(0, 4) = _tmp831;
    _J(0, 5) = _tmp832;
    _J(0, 6) = 0;
    _J(0, 7) = 0;
    _J(0, 8) = 0;
    _J(0, 9) = 0;
    _J(0, 10) = 0;
    _J(0, 11) = 0;
    _J(0, 12) = 0;
    _J(0, 13) = 0;
    _J(0, 14) = 0;
    _J(0, 15) = 0;
    _J(0, 16) = 0;
    _J(0, 17) = 0;
    _J(0, 18) = 0;
    _J(0, 19) = 0;
    _J(0, 20) = 0;
    _J(0, 21) = 0;
    _J(0, 22) = 0;
    _J(0, 23) = 0;
    _J(0, 24) = 0;
    _J(0, 25) = 0;
    _J(1, 0) = _tmp846;
    _J(1, 1) = _tmp847;
    _J(1, 2) = _tmp848;
    _J(1, 3) = _tmp849;
    _J(1, 4) = _tmp850;
    _J(1, 5) = _tmp851;
    _J(1, 6) = 0;
    _J(1, 7) = 0;
    _J(1, 8) = 0;
    _J(1, 9) = 0;
    _J(1, 10) = 0;
    _J(1, 11) = 0;
    _J(1, 12) = 0;
    _J(1, 13) = 0;
    _J(1, 14) = 0;
    _J(1, 15) = 0;
    _J(1, 16) = 0;
    _J(1, 17) = 0;
    _J(1, 18) = 0;
    _J(1, 19) = 0;
    _J(1, 20) = 0;
    _J(1, 21) = 0;
    _J(1, 22) = 0;
    _J(1, 23) = 0;
    _J(1, 24) = 0;
    _J(1, 25) = 0;
    _J(2, 0) = _tmp869;
    _J(2, 1) = _tmp870;
    _J(2, 2) = _tmp871;
    _J(2, 3) = _tmp872;
    _J(2, 4) = _tmp873;
    _J(2, 5) = _tmp874;
    _J(2, 6) = 0;
    _J(2, 7) = 0;
    _J(2, 8) = 0;
    _J(2, 9) = 0;
    _J(2, 10) = 0;
    _J(2, 11) = 0;
    _J(2, 12) = 0;
    _J(2, 13) = 0;
    _J(2, 14) = 0;
    _J(2, 15) = 0;
    _J(2, 16) = 0;
    _J(2, 17) = 0;
    _J(2, 18) = 0;
    _J(2, 19) = 0;
    _J(2, 20) = 0;
    _J(2, 21) = 0;
    _J(2, 22) = 0;
    _J(2, 23) = 0;
    _J(2, 24) = 0;
    _J(2, 25) = 0;
    _J(3, 0) = _tmp880;
    _J(3, 1) = _tmp881;
    _J(3, 2) = _tmp882;
    _J(3, 3) = _tmp883;
    _J(3, 4) = _tmp884;
    _J(3, 5) = _tmp885;
    _J(3, 6) = 0;
    _J(3, 7) = 0;
    _J(3, 8) = 0;
    _J(3, 9) = 0;
    _J(3, 10) = 0;
    _J(3, 11) = 0;
    _J(3, 12) = 0;
    _J(3, 13) = 0;
    _J(3, 14) = 0;
    _J(3, 15) = 0;
    _J(3, 16) = 0;
    _J(3, 17) = 0;
    _J(3, 18) = 0;
    _J(3, 19) = 0;
    _J(3, 20) = 0;
    _J(3, 21) = 0;
    _J(3, 22) = 0;
    _J(3, 23) = 0;
    _J(3, 24) = 0;
    _J(3, 25) = 0;
    _J(4, 0) = _tmp892;
    _J(4, 1) = _tmp893;
    _J(4, 2) = _tmp894;
    _J(4, 3) = _tmp895;
    _J(4, 4) = _tmp896;
    _J(4, 5) = _tmp897;
    _J(4, 6) = 0;
    _J(4, 7) = 0;
    _J(4, 8) = 0;
    _J(4, 9) = 0;
    _J(4, 10) = 0;
    _J(4, 11) = 0;
    _J(4, 12) = 0;
    _J(4, 13) = 0;
    _J(4, 14) = 0;
    _J(4, 15) = 0;
    _J(4, 16) = 0;
    _J(4, 17) = 0;
    _J(4, 18) = 0;
    _J(4, 19) = 0;
    _J(4, 20) = 0;
    _J(4, 21) = 0;
    _J(4, 22) = 0;
    _J(4, 23) = 0;
    _J(4, 24) = 0;
    _J(4, 25) = 0;
    _J(5, 0) = _tmp910;
    _J(5, 1) = _tmp911;
    _J(5, 2) = _tmp912;
    _J(5, 3) = _tmp913;
    _J(5, 4) = _tmp914;
    _J(5, 5) = _tmp915;
    _J(5, 6) = 0;
    _J(5, 7) = 0;
    _J(5, 8) = 0;
    _J(5, 9) = 0;
    _J(5, 10) = 0;
    _J(5, 11) = 0;
    _J(5, 12) = 0;
    _J(5, 13) = 0;
    _J(5, 14) = 0;
    _J(5, 15) = 0;
    _J(5, 16) = 0;
    _J(5, 17) = 0;
    _J(5, 18) = 0;
    _J(5, 19) = 0;
    _J(5, 20) = 0;
    _J(5, 21) = 0;
    _J(5, 22) = 0;
    _J(5, 23) = 0;
    _J(5, 24) = 0;
    _J(5, 25) = 0;
    _J(6, 0) = _tmp1043;
    _J(6, 1) = _tmp1044;
    _J(6, 2) = _tmp1045;
    _J(6, 3) = _tmp1052;
    _J(6, 4) = _tmp1057;
    _J(6, 5) = _tmp1061;
    _J(6, 6) = 0;
    _J(6, 7) = 0;
    _J(6, 8) = 0;
    _J(6, 9) = 0;
    _J(6, 10) = 0;
    _J(6, 11) = 0;
    _J(6, 12) = 0;
    _J(6, 13) = 0;
    _J(6, 14) = 0;
    _J(6, 15) = 0;
    _J(6, 16) = 0;
    _J(6, 17) = 0;
    _J(6, 18) = 0;
    _J(6, 19) = 0;
    _J(6, 20) = 0;
    _J(6, 21) = 0;
    _J(6, 22) = 0;
    _J(6, 23) = 0;
    _J(6, 24) = 0;
    _J(6, 25) = 0;
    _J(7, 0) = _tmp1071;
    _J(7, 1) = _tmp1072;
    _J(7, 2) = _tmp1073;
    _J(7, 3) = _tmp1074;
    _J(7, 4) = _tmp1075;
    _J(7, 5) = _tmp1076;
    _J(7, 6) = 0;
    _J(7, 7) = 0;
    _J(7, 8) = 0;
    _J(7, 9) = 0;
    _J(7, 10) = 0;
    _J(7, 11) = 0;
    _J(7, 12) = 0;
    _J(7, 13) = 0;
    _J(7, 14) = 0;
    _J(7, 15) = 0;
    _J(7, 16) = 0;
    _J(7, 17) = 0;
    _J(7, 18) = 0;
    _J(7, 19) = 0;
    _J(7, 20) = 0;
    _J(7, 21) = 0;
    _J(7, 22) = 0;
    _J(7, 23) = 0;
    _J(7, 24) = 0;
    _J(7, 25) = 0;
    _J(8, 0) = _tmp1085;
    _J(8, 1) = _tmp1086;
    _J(8, 2) = _tmp1087;
    _J(8, 3) = _tmp1088;
    _J(8, 4) = _tmp1089;
    _J(8, 5) = _tmp1090;
    _J(8, 6) = 0;
    _J(8, 7) = 0;
    _J(8, 8) = 0;
    _J(8, 9) = 0;
    _J(8, 10) = 0;
    _J(8, 11) = 0;
    _J(8, 12) = 0;
    _J(8, 13) = 0;
    _J(8, 14) = 0;
    _J(8, 15) = 0;
    _J(8, 16) = 0;
    _J(8, 17) = 0;
    _J(8, 18) = 0;
    _J(8, 19) = 0;
    _J(8, 20) = 0;
    _J(8, 21) = 0;
    _J(8, 22) = 0;
    _J(8, 23) = 0;
    _J(8, 24) = 0;
    _J(8, 25) = 0;
    _J(9, 0) = _tmp1099;
    _J(9, 1) = _tmp1100;
    _J(9, 2) = _tmp1101;
    _J(9, 3) = _tmp1102;
    _J(9, 4) = _tmp1103;
    _J(9, 5) = _tmp1104;
    _J(9, 6) = 0;
    _J(9, 7) = 0;
    _J(9, 8) = 0;
    _J(9, 9) = 0;
    _J(9, 10) = 0;
    _J(9, 11) = 0;
    _J(9, 12) = 0;
    _J(9, 13) = 0;
    _J(9, 14) = 0;
    _J(9, 15) = 0;
    _J(9, 16) = 0;
    _J(9, 17) = 0;
    _J(9, 18) = 0;
    _J(9, 19) = 0;
    _J(9, 20) = 0;
    _J(9, 21) = 0;
    _J(9, 22) = 0;
    _J(9, 23) = 0;
    _J(9, 24) = 0;
    _J(9, 25) = 0;
    _J(10, 0) = _tmp1113;
    _J(10, 1) = _tmp1114;
    _J(10, 2) = _tmp1115;
    _J(10, 3) = _tmp1116;
    _J(10, 4) = _tmp1117;
    _J(10, 5) = _tmp1118;
    _J(10, 6) = 0;
    _J(10, 7) = 0;
    _J(10, 8) = 0;
    _J(10, 9) = 0;
    _J(10, 10) = 0;
    _J(10, 11) = 0;
    _J(10, 12) = 0;
    _J(10, 13) = 0;
    _J(10, 14) = 0;
    _J(10, 15) = 0;
    _J(10, 16) = 0;
    _J(10, 17) = 0;
    _J(10, 18) = 0;
    _J(10, 19) = 0;
    _J(10, 20) = 0;
    _J(10, 21) = 0;
    _J(10, 22) = 0;
    _J(10, 23) = 0;
    _J(10, 24) = 0;
    _J(10, 25) = 0;
    _J(11, 0) = _tmp1126;
    _J(11, 1) = _tmp1127;
    _J(11, 2) = _tmp1128;
    _J(11, 3) = _tmp1129;
    _J(11, 4) = _tmp1130;
    _J(11, 5) = _tmp1131;
    _J(11, 6) = 0;
    _J(11, 7) = 0;
    _J(11, 8) = 0;
    _J(11, 9) = 0;
    _J(11, 10) = 0;
    _J(11, 11) = 0;
    _J(11, 12) = 0;
    _J(11, 13) = 0;
    _J(11, 14) = 0;
    _J(11, 15) = 0;
    _J(11, 16) = 0;
    _J(11, 17) = 0;
    _J(11, 18) = 0;
    _J(11, 19) = 0;
    _J(11, 20) = 0;
    _J(11, 21) = 0;
    _J(11, 22) = 0;
    _J(11, 23) = 0;
    _J(11, 24) = 0;
    _J(11, 25) = 0;
    _J(12, 0) = _tmp1203;
    _J(12, 1) = _tmp1204;
    _J(12, 2) = _tmp1205;
    _J(12, 3) = _tmp1212;
    _J(12, 4) = _tmp1219;
    _J(12, 5) = _tmp1223;
    _J(12, 6) = _tmp1229;
    _J(12, 7) = 0;
    _J(12, 8) = 0;
    _J(12, 9) = 0;
    _J(12, 10) = 0;
    _J(12, 11) = 0;
    _J(12, 12) = 0;
    _J(12, 13) = 0;
    _J(12, 14) = 0;
    _J(12, 15) = 0;
    _J(12, 16) = 0;
    _J(12, 17) = 0;
    _J(12, 18) = 0;
    _J(12, 19) = 0;
    _J(12, 20) = 0;
    _J(12, 21) = 0;
    _J(12, 22) = 0;
    _J(12, 23) = 0;
    _J(12, 24) = 0;
    _J(12, 25) = 0;
    _J(13, 0) = _tmp1237;
    _J(13, 1) = _tmp1238;
    _J(13, 2) = _tmp1239;
    _J(13, 3) = _tmp1240;
    _J(13, 4) = _tmp1241;
    _J(13, 5) = _tmp1242;
    _J(13, 6) = _tmp1243;
    _J(13, 7) = 0;
    _J(13, 8) = 0;
    _J(13, 9) = 0;
    _J(13, 10) = 0;
    _J(13, 11) = 0;
    _J(13, 12) = 0;
    _J(13, 13) = 0;
    _J(13, 14) = 0;
    _J(13, 15) = 0;
    _J(13, 16) = 0;
    _J(13, 17) = 0;
    _J(13, 18) = 0;
    _J(13, 19) = 0;
    _J(13, 20) = 0;
    _J(13, 21) = 0;
    _J(13, 22) = 0;
    _J(13, 23) = 0;
    _J(13, 24) = 0;
    _J(13, 25) = 0;
    _J(14, 0) = _tmp1289;
    _J(14, 1) = _tmp1290;
    _J(14, 2) = _tmp1291;
    _J(14, 3) = _tmp1300;
    _J(14, 4) = _tmp1304;
    _J(14, 5) = _tmp1308;
    _J(14, 6) = 0;
    _J(14, 7) = _tmp1313;
    _J(14, 8) = 0;
    _J(14, 9) = 0;
    _J(14, 10) = 0;
    _J(14, 11) = 0;
    _J(14, 12) = 0;
    _J(14, 13) = 0;
    _J(14, 14) = 0;
    _J(14, 15) = 0;
    _J(14, 16) = 0;
    _J(14, 17) = 0;
    _J(14, 18) = 0;
    _J(14, 19) = 0;
    _J(14, 20) = 0;
    _J(14, 21) = 0;
    _J(14, 22) = 0;
    _J(14, 23) = 0;
    _J(14, 24) = 0;
    _J(14, 25) = 0;
    _J(15, 0) = _tmp1321;
    _J(15, 1) = _tmp1322;
    _J(15, 2) = _tmp1323;
    _J(15, 3) = _tmp1324;
    _J(15, 4) = _tmp1325;
    _J(15, 5) = _tmp1326;
    _J(15, 6) = 0;
    _J(15, 7) = _tmp1327;
    _J(15, 8) = 0;
    _J(15, 9) = 0;
    _J(15, 10) = 0;
    _J(15, 11) = 0;
    _J(15, 12) = 0;
    _J(15, 13) = 0;
    _J(15, 14) = 0;
    _J(15, 15) = 0;
    _J(15, 16) = 0;
    _J(15, 17) = 0;
    _J(15, 18) = 0;
    _J(15, 19) = 0;
    _J(15, 20) = 0;
    _J(15, 21) = 0;
    _J(15, 22) = 0;
    _J(15, 23) = 0;
    _J(15, 24) = 0;
    _J(15, 25) = 0;
    _J(16, 0) = _tmp1373;
    _J(16, 1) = _tmp1374;
    _J(16, 2) = _tmp1375;
    _J(16, 3) = _tmp1383;
    _J(16, 4) = _tmp1388;
    _J(16, 5) = _tmp1392;
    _J(16, 6) = 0;
    _J(16, 7) = 0;
    _J(16, 8) = _tmp1396;
    _J(16, 9) = 0;
    _J(16, 10) = 0;
    _J(16, 11) = 0;
    _J(16, 12) = 0;
    _J(16, 13) = 0;
    _J(16, 14) = 0;
    _J(16, 15) = 0;
    _J(16, 16) = 0;
    _J(16, 17) = 0;
    _J(16, 18) = 0;
    _J(16, 19) = 0;
    _J(16, 20) = 0;
    _J(16, 21) = 0;
    _J(16, 22) = 0;
    _J(16, 23) = 0;
    _J(16, 24) = 0;
    _J(16, 25) = 0;
    _J(17, 0) = _tmp1405;
    _J(17, 1) = _tmp1406;
    _J(17, 2) = _tmp1407;
    _J(17, 3) = _tmp1408;
    _J(17, 4) = _tmp1409;
    _J(17, 5) = _tmp1410;
    _J(17, 6) = 0;
    _J(17, 7) = 0;
    _J(17, 8) = _tmp1411;
    _J(17, 9) = 0;
    _J(17, 10) = 0;
    _J(17, 11) = 0;
    _J(17, 12) = 0;
    _J(17, 13) = 0;
    _J(17, 14) = 0;
    _J(17, 15) = 0;
    _J(17, 16) = 0;
    _J(17, 17) = 0;
    _J(17, 18) = 0;
    _J(17, 19) = 0;
    _J(17, 20) = 0;
    _J(17, 21) = 0;
    _J(17, 22) = 0;
    _J(17, 23) = 0;
    _J(17, 24) = 0;
    _J(17, 25) = 0;
    _J(18, 0) = _tmp1457;
    _J(18, 1) = _tmp1458;
    _J(18, 2) = _tmp1459;
    _J(18, 3) = _tmp1466;
    _J(18, 4) = _tmp1472;
    _J(18, 5) = _tmp1476;
    _J(18, 6) = 0;
    _J(18, 7) = 0;
    _J(18, 8) = 0;
    _J(18, 9) = _tmp1481;
    _J(18, 10) = 0;
    _J(18, 11) = 0;
    _J(18, 12) = 0;
    _J(18, 13) = 0;
    _J(18, 14) = 0;
    _J(18, 15) = 0;
    _J(18, 16) = 0;
    _J(18, 17) = 0;
    _J(18, 18) = 0;
    _J(18, 19) = 0;
    _J(18, 20) = 0;
    _J(18, 21) = 0;
    _J(18, 22) = 0;
    _J(18, 23) = 0;
    _J(18, 24) = 0;
    _J(18, 25) = 0;
    _J(19, 0) = _tmp1490;
    _J(19, 1) = _tmp1491;
    _J(19, 2) = _tmp1492;
    _J(19, 3) = _tmp1493;
    _J(19, 4) = _tmp1494;
    _J(19, 5) = _tmp1495;
    _J(19, 6) = 0;
    _J(19, 7) = 0;
    _J(19, 8) = 0;
    _J(19, 9) = _tmp1496;
    _J(19, 10) = 0;
    _J(19, 11) = 0;
    _J(19, 12) = 0;
    _J(19, 13) = 0;
    _J(19, 14) = 0;
    _J(19, 15) = 0;
    _J(19, 16) = 0;
    _J(19, 17) = 0;
    _J(19, 18) = 0;
    _J(19, 19) = 0;
    _J(19, 20) = 0;
    _J(19, 21) = 0;
    _J(19, 22) = 0;
    _J(19, 23) = 0;
    _J(19, 24) = 0;
    _J(19, 25) = 0;
    _J(20, 0) = _tmp1539;
    _J(20, 1) = _tmp1540;
    _J(20, 2) = _tmp1541;
    _J(20, 3) = _tmp1550;
    _J(20, 4) = _tmp1555;
    _J(20, 5) = _tmp1560;
    _J(20, 6) = 0;
    _J(20, 7) = 0;
    _J(20, 8) = 0;
    _J(20, 9) = 0;
    _J(20, 10) = _tmp1565;
    _J(20, 11) = 0;
    _J(20, 12) = 0;
    _J(20, 13) = 0;
    _J(20, 14) = 0;
    _J(20, 15) = 0;
    _J(20, 16) = 0;
    _J(20, 17) = 0;
    _J(20, 18) = 0;
    _J(20, 19) = 0;
    _J(20, 20) = 0;
    _J(20, 21) = 0;
    _J(20, 22) = 0;
    _J(20, 23) = 0;
    _J(20, 24) = 0;
    _J(20, 25) = 0;
    _J(21, 0) = _tmp1573;
    _J(21, 1) = _tmp1574;
    _J(21, 2) = _tmp1575;
    _J(21, 3) = _tmp1576;
    _J(21, 4) = _tmp1577;
    _J(21, 5) = _tmp1578;
    _J(21, 6) = 0;
    _J(21, 7) = 0;
    _J(21, 8) = 0;
    _J(21, 9) = 0;
    _J(21, 10) = _tmp1579;
    _J(21, 11) = 0;
    _J(21, 12) = 0;
    _J(21, 13) = 0;
    _J(21, 14) = 0;
    _J(21, 15) = 0;
    _J(21, 16) = 0;
    _J(21, 17) = 0;
    _J(21, 18) = 0;
    _J(21, 19) = 0;
    _J(21, 20) = 0;
    _J(21, 21) = 0;
    _J(21, 22) = 0;
    _J(21, 23) = 0;
    _J(21, 24) = 0;
    _J(21, 25) = 0;
    _J(22, 0) = _tmp1622;
    _J(22, 1) = _tmp1623;
    _J(22, 2) = _tmp1624;
    _J(22, 3) = _tmp1634;
    _J(22, 4) = _tmp1639;
    _J(22, 5) = _tmp1645;
    _J(22, 6) = 0;
    _J(22, 7) = 0;
    _J(22, 8) = 0;
    _J(22, 9) = 0;
    _J(22, 10) = 0;
    _J(22, 11) = _tmp1649;
    _J(22, 12) = 0;
    _J(22, 13) = 0;
    _J(22, 14) = 0;
    _J(22, 15) = 0;
    _J(22, 16) = 0;
    _J(22, 17) = 0;
    _J(22, 18) = 0;
    _J(22, 19) = 0;
    _J(22, 20) = 0;
    _J(22, 21) = 0;
    _J(22, 22) = 0;
    _J(22, 23) = 0;
    _J(22, 24) = 0;
    _J(22, 25) = 0;
    _J(23, 0) = _tmp1657;
    _J(23, 1) = _tmp1658;
    _J(23, 2) = _tmp1659;
    _J(23, 3) = _tmp1660;
    _J(23, 4) = _tmp1661;
    _J(23, 5) = _tmp1662;
    _J(23, 6) = 0;
    _J(23, 7) = 0;
    _J(23, 8) = 0;
    _J(23, 9) = 0;
    _J(23, 10) = 0;
    _J(23, 11) = _tmp1663;
    _J(23, 12) = 0;
    _J(23, 13) = 0;
    _J(23, 14) = 0;
    _J(23, 15) = 0;
    _J(23, 16) = 0;
    _J(23, 17) = 0;
    _J(23, 18) = 0;
    _J(23, 19) = 0;
    _J(23, 20) = 0;
    _J(23, 21) = 0;
    _J(23, 22) = 0;
    _J(23, 23) = 0;
    _J(23, 24) = 0;
    _J(23, 25) = 0;
    _J(24, 0) = _tmp1711;
    _J(24, 1) = _tmp1712;
    _J(24, 2) = _tmp1713;
    _J(24, 3) = _tmp1722;
    _J(24, 4) = _tmp1726;
    _J(24, 5) = _tmp1731;
    _J(24, 6) = 0;
    _J(24, 7) = 0;
    _J(24, 8) = 0;
    _J(24, 9) = 0;
    _J(24, 10) = 0;
    _J(24, 11) = 0;
    _J(24, 12) = _tmp1735;
    _J(24, 13) = 0;
    _J(24, 14) = 0;
    _J(24, 15) = 0;
    _J(24, 16) = 0;
    _J(24, 17) = 0;
    _J(24, 18) = 0;
    _J(24, 19) = 0;
    _J(24, 20) = 0;
    _J(24, 21) = 0;
    _J(24, 22) = 0;
    _J(24, 23) = 0;
    _J(24, 24) = 0;
    _J(24, 25) = 0;
    _J(25, 0) = _tmp1743;
    _J(25, 1) = _tmp1744;
    _J(25, 2) = _tmp1745;
    _J(25, 3) = _tmp1746;
    _J(25, 4) = _tmp1747;
    _J(25, 5) = _tmp1748;
    _J(25, 6) = 0;
    _J(25, 7) = 0;
    _J(25, 8) = 0;
    _J(25, 9) = 0;
    _J(25, 10) = 0;
    _J(25, 11) = 0;
    _J(25, 12) = _tmp1749;
    _J(25, 13) = 0;
    _J(25, 14) = 0;
    _J(25, 15) = 0;
    _J(25, 16) = 0;
    _J(25, 17) = 0;
    _J(25, 18) = 0;
    _J(25, 19) = 0;
    _J(25, 20) = 0;
    _J(25, 21) = 0;
    _J(25, 22) = 0;
    _J(25, 23) = 0;
    _J(25, 24) = 0;
    _J(25, 25) = 0;
    _J(26, 0) = _tmp1797;
    _J(26, 1) = _tmp1798;
    _J(26, 2) = _tmp1799;
    _J(26, 3) = _tmp1806;
    _J(26, 4) = _tmp1812;
    _J(26, 5) = _tmp1817;
    _J(26, 6) = 0;
    _J(26, 7) = 0;
    _J(26, 8) = 0;
    _J(26, 9) = 0;
    _J(26, 10) = 0;
    _J(26, 11) = 0;
    _J(26, 12) = 0;
    _J(26, 13) = _tmp1821;
    _J(26, 14) = 0;
    _J(26, 15) = 0;
    _J(26, 16) = 0;
    _J(26, 17) = 0;
    _J(26, 18) = 0;
    _J(26, 19) = 0;
    _J(26, 20) = 0;
    _J(26, 21) = 0;
    _J(26, 22) = 0;
    _J(26, 23) = 0;
    _J(26, 24) = 0;
    _J(26, 25) = 0;
    _J(27, 0) = _tmp1829;
    _J(27, 1) = _tmp1830;
    _J(27, 2) = _tmp1831;
    _J(27, 3) = _tmp1832;
    _J(27, 4) = _tmp1833;
    _J(27, 5) = _tmp1834;
    _J(27, 6) = 0;
    _J(27, 7) = 0;
    _J(27, 8) = 0;
    _J(27, 9) = 0;
    _J(27, 10) = 0;
    _J(27, 11) = 0;
    _J(27, 12) = 0;
    _J(27, 13) = _tmp1835;
    _J(27, 14) = 0;
    _J(27, 15) = 0;
    _J(27, 16) = 0;
    _J(27, 17) = 0;
    _J(27, 18) = 0;
    _J(27, 19) = 0;
    _J(27, 20) = 0;
    _J(27, 21) = 0;
    _J(27, 22) = 0;
    _J(27, 23) = 0;
    _J(27, 24) = 0;
    _J(27, 25) = 0;
    _J(28, 0) = _tmp1883;
    _J(28, 1) = _tmp1884;
    _J(28, 2) = _tmp1885;
    _J(28, 3) = _tmp1893;
    _J(28, 4) = _tmp1897;
    _J(28, 5) = _tmp1901;
    _J(28, 6) = 0;
    _J(28, 7) = 0;
    _J(28, 8) = 0;
    _J(28, 9) = 0;
    _J(28, 10) = 0;
    _J(28, 11) = 0;
    _J(28, 12) = 0;
    _J(28, 13) = 0;
    _J(28, 14) = _tmp1905;
    _J(28, 15) = 0;
    _J(28, 16) = 0;
    _J(28, 17) = 0;
    _J(28, 18) = 0;
    _J(28, 19) = 0;
    _J(28, 20) = 0;
    _J(28, 21) = 0;
    _J(28, 22) = 0;
    _J(28, 23) = 0;
    _J(28, 24) = 0;
    _J(28, 25) = 0;
    _J(29, 0) = _tmp1913;
    _J(29, 1) = _tmp1914;
    _J(29, 2) = _tmp1915;
    _J(29, 3) = _tmp1916;
    _J(29, 4) = _tmp1917;
    _J(29, 5) = _tmp1918;
    _J(29, 6) = 0;
    _J(29, 7) = 0;
    _J(29, 8) = 0;
    _J(29, 9) = 0;
    _J(29, 10) = 0;
    _J(29, 11) = 0;
    _J(29, 12) = 0;
    _J(29, 13) = 0;
    _J(29, 14) = _tmp1920;
    _J(29, 15) = 0;
    _J(29, 16) = 0;
    _J(29, 17) = 0;
    _J(29, 18) = 0;
    _J(29, 19) = 0;
    _J(29, 20) = 0;
    _J(29, 21) = 0;
    _J(29, 22) = 0;
    _J(29, 23) = 0;
    _J(29, 24) = 0;
    _J(29, 25) = 0;
    _J(30, 0) = _tmp1965;
    _J(30, 1) = _tmp1966;
    _J(30, 2) = _tmp1967;
    _J(30, 3) = _tmp1975;
    _J(30, 4) = _tmp1979;
    _J(30, 5) = _tmp1985;
    _J(30, 6) = 0;
    _J(30, 7) = 0;
    _J(30, 8) = 0;
    _J(30, 9) = 0;
    _J(30, 10) = 0;
    _J(30, 11) = 0;
    _J(30, 12) = 0;
    _J(30, 13) = 0;
    _J(30, 14) = 0;
    _J(30, 15) = _tmp1989;
    _J(30, 16) = 0;
    _J(30, 17) = 0;
    _J(30, 18) = 0;
    _J(30, 19) = 0;
    _J(30, 20) = 0;
    _J(30, 21) = 0;
    _J(30, 22) = 0;
    _J(30, 23) = 0;
    _J(30, 24) = 0;
    _J(30, 25) = 0;
    _J(31, 0) = _tmp1998;
    _J(31, 1) = _tmp1999;
    _J(31, 2) = _tmp2000;
    _J(31, 3) = _tmp2001;
    _J(31, 4) = _tmp2002;
    _J(31, 5) = _tmp2003;
    _J(31, 6) = 0;
    _J(31, 7) = 0;
    _J(31, 8) = 0;
    _J(31, 9) = 0;
    _J(31, 10) = 0;
    _J(31, 11) = 0;
    _J(31, 12) = 0;
    _J(31, 13) = 0;
    _J(31, 14) = 0;
    _J(31, 15) = _tmp2004;
    _J(31, 16) = 0;
    _J(31, 17) = 0;
    _J(31, 18) = 0;
    _J(31, 19) = 0;
    _J(31, 20) = 0;
    _J(31, 21) = 0;
    _J(31, 22) = 0;
    _J(31, 23) = 0;
    _J(31, 24) = 0;
    _J(31, 25) = 0;
    _J(32, 0) = _tmp2052;
    _J(32, 1) = _tmp2053;
    _J(32, 2) = _tmp2054;
    _J(32, 3) = _tmp2062;
    _J(32, 4) = _tmp2066;
    _J(32, 5) = _tmp2070;
    _J(32, 6) = 0;
    _J(32, 7) = 0;
    _J(32, 8) = 0;
    _J(32, 9) = 0;
    _J(32, 10) = 0;
    _J(32, 11) = 0;
    _J(32, 12) = 0;
    _J(32, 13) = 0;
    _J(32, 14) = 0;
    _J(32, 15) = 0;
    _J(32, 16) = _tmp2076;
    _J(32, 17) = 0;
    _J(32, 18) = 0;
    _J(32, 19) = 0;
    _J(32, 20) = 0;
    _J(32, 21) = 0;
    _J(32, 22) = 0;
    _J(32, 23) = 0;
    _J(32, 24) = 0;
    _J(32, 25) = 0;
    _J(33, 0) = _tmp2084;
    _J(33, 1) = _tmp2085;
    _J(33, 2) = _tmp2086;
    _J(33, 3) = _tmp2087;
    _J(33, 4) = _tmp2088;
    _J(33, 5) = _tmp2089;
    _J(33, 6) = 0;
    _J(33, 7) = 0;
    _J(33, 8) = 0;
    _J(33, 9) = 0;
    _J(33, 10) = 0;
    _J(33, 11) = 0;
    _J(33, 12) = 0;
    _J(33, 13) = 0;
    _J(33, 14) = 0;
    _J(33, 15) = 0;
    _J(33, 16) = _tmp2090;
    _J(33, 17) = 0;
    _J(33, 18) = 0;
    _J(33, 19) = 0;
    _J(33, 20) = 0;
    _J(33, 21) = 0;
    _J(33, 22) = 0;
    _J(33, 23) = 0;
    _J(33, 24) = 0;
    _J(33, 25) = 0;
    _J(34, 0) = _tmp2136;
    _J(34, 1) = _tmp2137;
    _J(34, 2) = _tmp2138;
    _J(34, 3) = _tmp2146;
    _J(34, 4) = _tmp2151;
    _J(34, 5) = _tmp2155;
    _J(34, 6) = 0;
    _J(34, 7) = 0;
    _J(34, 8) = 0;
    _J(34, 9) = 0;
    _J(34, 10) = 0;
    _J(34, 11) = 0;
    _J(34, 12) = 0;
    _J(34, 13) = 0;
    _J(34, 14) = 0;
    _J(34, 15) = 0;
    _J(34, 16) = 0;
    _J(34, 17) = _tmp2160;
    _J(34, 18) = 0;
    _J(34, 19) = 0;
    _J(34, 20) = 0;
    _J(34, 21) = 0;
    _J(34, 22) = 0;
    _J(34, 23) = 0;
    _J(34, 24) = 0;
    _J(34, 25) = 0;
    _J(35, 0) = _tmp2168;
    _J(35, 1) = _tmp2169;
    _J(35, 2) = _tmp2170;
    _J(35, 3) = _tmp2172;
    _J(35, 4) = _tmp2173;
    _J(35, 5) = _tmp2174;
    _J(35, 6) = 0;
    _J(35, 7) = 0;
    _J(35, 8) = 0;
    _J(35, 9) = 0;
    _J(35, 10) = 0;
    _J(35, 11) = 0;
    _J(35, 12) = 0;
    _J(35, 13) = 0;
    _J(35, 14) = 0;
    _J(35, 15) = 0;
    _J(35, 16) = 0;
    _J(35, 17) = _tmp2175;
    _J(35, 18) = 0;
    _J(35, 19) = 0;
    _J(35, 20) = 0;
    _J(35, 21) = 0;
    _J(35, 22) = 0;
    _J(35, 23) = 0;
    _J(35, 24) = 0;
    _J(35, 25) = 0;
    _J(36, 0) = _tmp2219;
    _J(36, 1) = _tmp2220;
    _J(36, 2) = _tmp2221;
    _J(36, 3) = _tmp2229;
    _J(36, 4) = _tmp2234;
    _J(36, 5) = _tmp2238;
    _J(36, 6) = 0;
    _J(36, 7) = 0;
    _J(36, 8) = 0;
    _J(36, 9) = 0;
    _J(36, 10) = 0;
    _J(36, 11) = 0;
    _J(36, 12) = 0;
    _J(36, 13) = 0;
    _J(36, 14) = 0;
    _J(36, 15) = 0;
    _J(36, 16) = 0;
    _J(36, 17) = 0;
    _J(36, 18) = _tmp2242;
    _J(36, 19) = 0;
    _J(36, 20) = 0;
    _J(36, 21) = 0;
    _J(36, 22) = 0;
    _J(36, 23) = 0;
    _J(36, 24) = 0;
    _J(36, 25) = 0;
    _J(37, 0) = _tmp2250;
    _J(37, 1) = _tmp2251;
    _J(37, 2) = _tmp2252;
    _J(37, 3) = _tmp2253;
    _J(37, 4) = _tmp2254;
    _J(37, 5) = _tmp2255;
    _J(37, 6) = 0;
    _J(37, 7) = 0;
    _J(37, 8) = 0;
    _J(37, 9) = 0;
    _J(37, 10) = 0;
    _J(37, 11) = 0;
    _J(37, 12) = 0;
    _J(37, 13) = 0;
    _J(37, 14) = 0;
    _J(37, 15) = 0;
    _J(37, 16) = 0;
    _J(37, 17) = 0;
    _J(37, 18) = _tmp2256;
    _J(37, 19) = 0;
    _J(37, 20) = 0;
    _J(37, 21) = 0;
    _J(37, 22) = 0;
    _J(37, 23) = 0;
    _J(37, 24) = 0;
    _J(37, 25) = 0;
    _J(38, 0) = _tmp2299;
    _J(38, 1) = _tmp2300;
    _J(38, 2) = _tmp2301;
    _J(38, 3) = _tmp2310;
    _J(38, 4) = _tmp2316;
    _J(38, 5) = _tmp2321;
    _J(38, 6) = 0;
    _J(38, 7) = 0;
    _J(38, 8) = 0;
    _J(38, 9) = 0;
    _J(38, 10) = 0;
    _J(38, 11) = 0;
    _J(38, 12) = 0;
    _J(38, 13) = 0;
    _J(38, 14) = 0;
    _J(38, 15) = 0;
    _J(38, 16) = 0;
    _J(38, 17) = 0;
    _J(38, 18) = 0;
    _J(38, 19) = _tmp2326;
    _J(38, 20) = 0;
    _J(38, 21) = 0;
    _J(38, 22) = 0;
    _J(38, 23) = 0;
    _J(38, 24) = 0;
    _J(38, 25) = 0;
    _J(39, 0) = _tmp2334;
    _J(39, 1) = _tmp2335;
    _J(39, 2) = _tmp2336;
    _J(39, 3) = _tmp2337;
    _J(39, 4) = _tmp2338;
    _J(39, 5) = _tmp2339;
    _J(39, 6) = 0;
    _J(39, 7) = 0;
    _J(39, 8) = 0;
    _J(39, 9) = 0;
    _J(39, 10) = 0;
    _J(39, 11) = 0;
    _J(39, 12) = 0;
    _J(39, 13) = 0;
    _J(39, 14) = 0;
    _J(39, 15) = 0;
    _J(39, 16) = 0;
    _J(39, 17) = 0;
    _J(39, 18) = 0;
    _J(39, 19) = _tmp2340;
    _J(39, 20) = 0;
    _J(39, 21) = 0;
    _J(39, 22) = 0;
    _J(39, 23) = 0;
    _J(39, 24) = 0;
    _J(39, 25) = 0;
    _J(40, 0) = _tmp2386;
    _J(40, 1) = _tmp2387;
    _J(40, 2) = _tmp2388;
    _J(40, 3) = _tmp2396;
    _J(40, 4) = _tmp2401;
    _J(40, 5) = _tmp2405;
    _J(40, 6) = 0;
    _J(40, 7) = 0;
    _J(40, 8) = 0;
    _J(40, 9) = 0;
    _J(40, 10) = 0;
    _J(40, 11) = 0;
    _J(40, 12) = 0;
    _J(40, 13) = 0;
    _J(40, 14) = 0;
    _J(40, 15) = 0;
    _J(40, 16) = 0;
    _J(40, 17) = 0;
    _J(40, 18) = 0;
    _J(40, 19) = 0;
    _J(40, 20) = _tmp2409;
    _J(40, 21) = 0;
    _J(40, 22) = 0;
    _J(40, 23) = 0;
    _J(40, 24) = 0;
    _J(40, 25) = 0;
    _J(41, 0) = _tmp2416;
    _J(41, 1) = _tmp2417;
    _J(41, 2) = _tmp2418;
    _J(41, 3) = _tmp2419;
    _J(41, 4) = _tmp2421;
    _J(41, 5) = _tmp2422;
    _J(41, 6) = 0;
    _J(41, 7) = 0;
    _J(41, 8) = 0;
    _J(41, 9) = 0;
    _J(41, 10) = 0;
    _J(41, 11) = 0;
    _J(41, 12) = 0;
    _J(41, 13) = 0;
    _J(41, 14) = 0;
    _J(41, 15) = 0;
    _J(41, 16) = 0;
    _J(41, 17) = 0;
    _J(41, 18) = 0;
    _J(41, 19) = 0;
    _J(41, 20) = _tmp2423;
    _J(41, 21) = 0;
    _J(41, 22) = 0;
    _J(41, 23) = 0;
    _J(41, 24) = 0;
    _J(41, 25) = 0;
    _J(42, 0) = _tmp2468;
    _J(42, 1) = _tmp2469;
    _J(42, 2) = _tmp2470;
    _J(42, 3) = _tmp2479;
    _J(42, 4) = _tmp2483;
    _J(42, 5) = _tmp2487;
    _J(42, 6) = 0;
    _J(42, 7) = 0;
    _J(42, 8) = 0;
    _J(42, 9) = 0;
    _J(42, 10) = 0;
    _J(42, 11) = 0;
    _J(42, 12) = 0;
    _J(42, 13) = 0;
    _J(42, 14) = 0;
    _J(42, 15) = 0;
    _J(42, 16) = 0;
    _J(42, 17) = 0;
    _J(42, 18) = 0;
    _J(42, 19) = 0;
    _J(42, 20) = 0;
    _J(42, 21) = _tmp2491;
    _J(42, 22) = 0;
    _J(42, 23) = 0;
    _J(42, 24) = 0;
    _J(42, 25) = 0;
    _J(43, 0) = _tmp2499;
    _J(43, 1) = _tmp2500;
    _J(43, 2) = _tmp2501;
    _J(43, 3) = _tmp2502;
    _J(43, 4) = _tmp2504;
    _J(43, 5) = _tmp2505;
    _J(43, 6) = 0;
    _J(43, 7) = 0;
    _J(43, 8) = 0;
    _J(43, 9) = 0;
    _J(43, 10) = 0;
    _J(43, 11) = 0;
    _J(43, 12) = 0;
    _J(43, 13) = 0;
    _J(43, 14) = 0;
    _J(43, 15) = 0;
    _J(43, 16) = 0;
    _J(43, 17) = 0;
    _J(43, 18) = 0;
    _J(43, 19) = 0;
    _J(43, 20) = 0;
    _J(43, 21) = _tmp2506;
    _J(43, 22) = 0;
    _J(43, 23) = 0;
    _J(43, 24) = 0;
    _J(43, 25) = 0;
    _J(44, 0) = _tmp2552;
    _J(44, 1) = _tmp2553;
    _J(44, 2) = _tmp2554;
    _J(44, 3) = _tmp2562;
    _J(44, 4) = _tmp2566;
    _J(44, 5) = _tmp2570;
    _J(44, 6) = 0;
    _J(44, 7) = 0;
    _J(44, 8) = 0;
    _J(44, 9) = 0;
    _J(44, 10) = 0;
    _J(44, 11) = 0;
    _J(44, 12) = 0;
    _J(44, 13) = 0;
    _J(44, 14) = 0;
    _J(44, 15) = 0;
    _J(44, 16) = 0;
    _J(44, 17) = 0;
    _J(44, 18) = 0;
    _J(44, 19) = 0;
    _J(44, 20) = 0;
    _J(44, 21) = 0;
    _J(44, 22) = _tmp2574;
    _J(44, 23) = 0;
    _J(44, 24) = 0;
    _J(44, 25) = 0;
    _J(45, 0) = _tmp2582;
    _J(45, 1) = _tmp2583;
    _J(45, 2) = _tmp2584;
    _J(45, 3) = _tmp2585;
    _J(45, 4) = _tmp2586;
    _J(45, 5) = _tmp2587;
    _J(45, 6) = 0;
    _J(45, 7) = 0;
    _J(45, 8) = 0;
    _J(45, 9) = 0;
    _J(45, 10) = 0;
    _J(45, 11) = 0;
    _J(45, 12) = 0;
    _J(45, 13) = 0;
    _J(45, 14) = 0;
    _J(45, 15) = 0;
    _J(45, 16) = 0;
    _J(45, 17) = 0;
    _J(45, 18) = 0;
    _J(45, 19) = 0;
    _J(45, 20) = 0;
    _J(45, 21) = 0;
    _J(45, 22) = _tmp2588;
    _J(45, 23) = 0;
    _J(45, 24) = 0;
    _J(45, 25) = 0;
    _J(46, 0) = _tmp2635;
    _J(46, 1) = _tmp2636;
    _J(46, 2) = _tmp2637;
    _J(46, 3) = _tmp2645;
    _J(46, 4) = _tmp2649;
    _J(46, 5) = _tmp2653;
    _J(46, 6) = 0;
    _J(46, 7) = 0;
    _J(46, 8) = 0;
    _J(46, 9) = 0;
    _J(46, 10) = 0;
    _J(46, 11) = 0;
    _J(46, 12) = 0;
    _J(46, 13) = 0;
    _J(46, 14) = 0;
    _J(46, 15) = 0;
    _J(46, 16) = 0;
    _J(46, 17) = 0;
    _J(46, 18) = 0;
    _J(46, 19) = 0;
    _J(46, 20) = 0;
    _J(46, 21) = 0;
    _J(46, 22) = 0;
    _J(46, 23) = _tmp2657;
    _J(46, 24) = 0;
    _J(46, 25) = 0;
    _J(47, 0) = _tmp2666;
    _J(47, 1) = _tmp2667;
    _J(47, 2) = _tmp2668;
    _J(47, 3) = _tmp2669;
    _J(47, 4) = _tmp2670;
    _J(47, 5) = _tmp2671;
    _J(47, 6) = 0;
    _J(47, 7) = 0;
    _J(47, 8) = 0;
    _J(47, 9) = 0;
    _J(47, 10) = 0;
    _J(47, 11) = 0;
    _J(47, 12) = 0;
    _J(47, 13) = 0;
    _J(47, 14) = 0;
    _J(47, 15) = 0;
    _J(47, 16) = 0;
    _J(47, 17) = 0;
    _J(47, 18) = 0;
    _J(47, 19) = 0;
    _J(47, 20) = 0;
    _J(47, 21) = 0;
    _J(47, 22) = 0;
    _J(47, 23) = _tmp2672;
    _J(47, 24) = 0;
    _J(47, 25) = 0;
    _J(48, 0) = _tmp2718;
    _J(48, 1) = _tmp2719;
    _J(48, 2) = _tmp2720;
    _J(48, 3) = _tmp2728;
    _J(48, 4) = _tmp2732;
    _J(48, 5) = _tmp2736;
    _J(48, 6) = 0;
    _J(48, 7) = 0;
    _J(48, 8) = 0;
    _J(48, 9) = 0;
    _J(48, 10) = 0;
    _J(48, 11) = 0;
    _J(48, 12) = 0;
    _J(48, 13) = 0;
    _J(48, 14) = 0;
    _J(48, 15) = 0;
    _J(48, 16) = 0;
    _J(48, 17) = 0;
    _J(48, 18) = 0;
    _J(48, 19) = 0;
    _J(48, 20) = 0;
    _J(48, 21) = 0;
    _J(48, 22) = 0;
    _J(48, 23) = 0;
    _J(48, 24) = _tmp2740;
    _J(48, 25) = 0;
    _J(49, 0) = _tmp2748;
    _J(49, 1) = _tmp2749;
    _J(49, 2) = _tmp2750;
    _J(49, 3) = _tmp2751;
    _J(49, 4) = _tmp2752;
    _J(49, 5) = _tmp2753;
    _J(49, 6) = 0;
    _J(49, 7) = 0;
    _J(49, 8) = 0;
    _J(49, 9) = 0;
    _J(49, 10) = 0;
    _J(49, 11) = 0;
    _J(49, 12) = 0;
    _J(49, 13) = 0;
    _J(49, 14) = 0;
    _J(49, 15) = 0;
    _J(49, 16) = 0;
    _J(49, 17) = 0;
    _J(49, 18) = 0;
    _J(49, 19) = 0;
    _J(49, 20) = 0;
    _J(49, 21) = 0;
    _J(49, 22) = 0;
    _J(49, 23) = 0;
    _J(49, 24) = _tmp2755;
    _J(49, 25) = 0;
    _J(50, 0) = _tmp2802;
    _J(50, 1) = _tmp2803;
    _J(50, 2) = _tmp2804;
    _J(50, 3) = _tmp2812;
    _J(50, 4) = _tmp2816;
    _J(50, 5) = _tmp2821;
    _J(50, 6) = 0;
    _J(50, 7) = 0;
    _J(50, 8) = 0;
    _J(50, 9) = 0;
    _J(50, 10) = 0;
    _J(50, 11) = 0;
    _J(50, 12) = 0;
    _J(50, 13) = 0;
    _J(50, 14) = 0;
    _J(50, 15) = 0;
    _J(50, 16) = 0;
    _J(50, 17) = 0;
    _J(50, 18) = 0;
    _J(50, 19) = 0;
    _J(50, 20) = 0;
    _J(50, 21) = 0;
    _J(50, 22) = 0;
    _J(50, 23) = 0;
    _J(50, 24) = 0;
    _J(50, 25) = _tmp2826;
    _J(51, 0) = _tmp2834;
    _J(51, 1) = _tmp2835;
    _J(51, 2) = _tmp2836;
    _J(51, 3) = _tmp2837;
    _J(51, 4) = _tmp2838;
    _J(51, 5) = _tmp2839;
    _J(51, 6) = 0;
    _J(51, 7) = 0;
    _J(51, 8) = 0;
    _J(51, 9) = 0;
    _J(51, 10) = 0;
    _J(51, 11) = 0;
    _J(51, 12) = 0;
    _J(51, 13) = 0;
    _J(51, 14) = 0;
    _J(51, 15) = 0;
    _J(51, 16) = 0;
    _J(51, 17) = 0;
    _J(51, 18) = 0;
    _J(51, 19) = 0;
    _J(51, 20) = 0;
    _J(51, 21) = 0;
    _J(51, 22) = 0;
    _J(51, 23) = 0;
    _J(51, 24) = 0;
    _J(51, 25) = _tmp2840;
    _J(52, 0) = 0;
    _J(52, 1) = 0;
    _J(52, 2) = 0;
    _J(52, 3) = 0;
    _J(52, 4) = 0;
    _J(52, 5) = 0;
    _J(52, 6) = _tmp713;
    _J(52, 7) = 0;
    _J(52, 8) = 0;
    _J(52, 9) = 0;
    _J(52, 10) = 0;
    _J(52, 11) = 0;
    _J(52, 12) = 0;
    _J(52, 13) = 0;
    _J(52, 14) = 0;
    _J(52, 15) = 0;
    _J(52, 16) = 0;
    _J(52, 17) = 0;
    _J(52, 18) = 0;
    _J(52, 19) = 0;
    _J(52, 20) = 0;
    _J(52, 21) = 0;
    _J(52, 22) = 0;
    _J(52, 23) = 0;
    _J(52, 24) = 0;
    _J(52, 25) = 0;
    _J(53, 0) = 0;
    _J(53, 1) = 0;
    _J(53, 2) = 0;
    _J(53, 3) = 0;
    _J(53, 4) = 0;
    _J(53, 5) = 0;
    _J(53, 6) = 0;
    _J(53, 7) = _tmp716;
    _J(53, 8) = 0;
    _J(53, 9) = 0;
    _J(53, 10) = 0;
    _J(53, 11) = 0;
    _J(53, 12) = 0;
    _J(53, 13) = 0;
    _J(53, 14) = 0;
    _J(53, 15) = 0;
    _J(53, 16) = 0;
    _J(53, 17) = 0;
    _J(53, 18) = 0;
    _J(53, 19) = 0;
    _J(53, 20) = 0;
    _J(53, 21) = 0;
    _J(53, 22) = 0;
    _J(53, 23) = 0;
    _J(53, 24) = 0;
    _J(53, 25) = 0;
    _J(54, 0) = 0;
    _J(54, 1) = 0;
    _J(54, 2) = 0;
    _J(54, 3) = 0;
    _J(54, 4) = 0;
    _J(54, 5) = 0;
    _J(54, 6) = 0;
    _J(54, 7) = 0;
    _J(54, 8) = _tmp719;
    _J(54, 9) = 0;
    _J(54, 10) = 0;
    _J(54, 11) = 0;
    _J(54, 12) = 0;
    _J(54, 13) = 0;
    _J(54, 14) = 0;
    _J(54, 15) = 0;
    _J(54, 16) = 0;
    _J(54, 17) = 0;
    _J(54, 18) = 0;
    _J(54, 19) = 0;
    _J(54, 20) = 0;
    _J(54, 21) = 0;
    _J(54, 22) = 0;
    _J(54, 23) = 0;
    _J(54, 24) = 0;
    _J(54, 25) = 0;
    _J(55, 0) = 0;
    _J(55, 1) = 0;
    _J(55, 2) = 0;
    _J(55, 3) = 0;
    _J(55, 4) = 0;
    _J(55, 5) = 0;
    _J(55, 6) = 0;
    _J(55, 7) = 0;
    _J(55, 8) = 0;
    _J(55, 9) = _tmp722;
    _J(55, 10) = 0;
    _J(55, 11) = 0;
    _J(55, 12) = 0;
    _J(55, 13) = 0;
    _J(55, 14) = 0;
    _J(55, 15) = 0;
    _J(55, 16) = 0;
    _J(55, 17) = 0;
    _J(55, 18) = 0;
    _J(55, 19) = 0;
    _J(55, 20) = 0;
    _J(55, 21) = 0;
    _J(55, 22) = 0;
    _J(55, 23) = 0;
    _J(55, 24) = 0;
    _J(55, 25) = 0;
    _J(56, 0) = 0;
    _J(56, 1) = 0;
    _J(56, 2) = 0;
    _J(56, 3) = 0;
    _J(56, 4) = 0;
    _J(56, 5) = 0;
    _J(56, 6) = 0;
    _J(56, 7) = 0;
    _J(56, 8) = 0;
    _J(56, 9) = 0;
    _J(56, 10) = _tmp725;
    _J(56, 11) = 0;
    _J(56, 12) = 0;
    _J(56, 13) = 0;
    _J(56, 14) = 0;
    _J(56, 15) = 0;
    _J(56, 16) = 0;
    _J(56, 17) = 0;
    _J(56, 18) = 0;
    _J(56, 19) = 0;
    _J(56, 20) = 0;
    _J(56, 21) = 0;
    _J(56, 22) = 0;
    _J(56, 23) = 0;
    _J(56, 24) = 0;
    _J(56, 25) = 0;
    _J(57, 0) = 0;
    _J(57, 1) = 0;
    _J(57, 2) = 0;
    _J(57, 3) = 0;
    _J(57, 4) = 0;
    _J(57, 5) = 0;
    _J(57, 6) = 0;
    _J(57, 7) = 0;
    _J(57, 8) = 0;
    _J(57, 9) = 0;
    _J(57, 10) = 0;
    _J(57, 11) = _tmp728;
    _J(57, 12) = 0;
    _J(57, 13) = 0;
    _J(57, 14) = 0;
    _J(57, 15) = 0;
    _J(57, 16) = 0;
    _J(57, 17) = 0;
    _J(57, 18) = 0;
    _J(57, 19) = 0;
    _J(57, 20) = 0;
    _J(57, 21) = 0;
    _J(57, 22) = 0;
    _J(57, 23) = 0;
    _J(57, 24) = 0;
    _J(57, 25) = 0;
    _J(58, 0) = 0;
    _J(58, 1) = 0;
    _J(58, 2) = 0;
    _J(58, 3) = 0;
    _J(58, 4) = 0;
    _J(58, 5) = 0;
    _J(58, 6) = 0;
    _J(58, 7) = 0;
    _J(58, 8) = 0;
    _J(58, 9) = 0;
    _J(58, 10) = 0;
    _J(58, 11) = 0;
    _J(58, 12) = _tmp731;
    _J(58, 13) = 0;
    _J(58, 14) = 0;
    _J(58, 15) = 0;
    _J(58, 16) = 0;
    _J(58, 17) = 0;
    _J(58, 18) = 0;
    _J(58, 19) = 0;
    _J(58, 20) = 0;
    _J(58, 21) = 0;
    _J(58, 22) = 0;
    _J(58, 23) = 0;
    _J(58, 24) = 0;
    _J(58, 25) = 0;
    _J(59, 0) = 0;
    _J(59, 1) = 0;
    _J(59, 2) = 0;
    _J(59, 3) = 0;
    _J(59, 4) = 0;
    _J(59, 5) = 0;
    _J(59, 6) = 0;
    _J(59, 7) = 0;
    _J(59, 8) = 0;
    _J(59, 9) = 0;
    _J(59, 10) = 0;
    _J(59, 11) = 0;
    _J(59, 12) = 0;
    _J(59, 13) = _tmp734;
    _J(59, 14) = 0;
    _J(59, 15) = 0;
    _J(59, 16) = 0;
    _J(59, 17) = 0;
    _J(59, 18) = 0;
    _J(59, 19) = 0;
    _J(59, 20) = 0;
    _J(59, 21) = 0;
    _J(59, 22) = 0;
    _J(59, 23) = 0;
    _J(59, 24) = 0;
    _J(59, 25) = 0;
    _J(60, 0) = 0;
    _J(60, 1) = 0;
    _J(60, 2) = 0;
    _J(60, 3) = 0;
    _J(60, 4) = 0;
    _J(60, 5) = 0;
    _J(60, 6) = 0;
    _J(60, 7) = 0;
    _J(60, 8) = 0;
    _J(60, 9) = 0;
    _J(60, 10) = 0;
    _J(60, 11) = 0;
    _J(60, 12) = 0;
    _J(60, 13) = 0;
    _J(60, 14) = _tmp737;
    _J(60, 15) = 0;
    _J(60, 16) = 0;
    _J(60, 17) = 0;
    _J(60, 18) = 0;
    _J(60, 19) = 0;
    _J(60, 20) = 0;
    _J(60, 21) = 0;
    _J(60, 22) = 0;
    _J(60, 23) = 0;
    _J(60, 24) = 0;
    _J(60, 25) = 0;
    _J(61, 0) = 0;
    _J(61, 1) = 0;
    _J(61, 2) = 0;
    _J(61, 3) = 0;
    _J(61, 4) = 0;
    _J(61, 5) = 0;
    _J(61, 6) = 0;
    _J(61, 7) = 0;
    _J(61, 8) = 0;
    _J(61, 9) = 0;
    _J(61, 10) = 0;
    _J(61, 11) = 0;
    _J(61, 12) = 0;
    _J(61, 13) = 0;
    _J(61, 14) = 0;
    _J(61, 15) = _tmp740;
    _J(61, 16) = 0;
    _J(61, 17) = 0;
    _J(61, 18) = 0;
    _J(61, 19) = 0;
    _J(61, 20) = 0;
    _J(61, 21) = 0;
    _J(61, 22) = 0;
    _J(61, 23) = 0;
    _J(61, 24) = 0;
    _J(61, 25) = 0;
    _J(62, 0) = 0;
    _J(62, 1) = 0;
    _J(62, 2) = 0;
    _J(62, 3) = 0;
    _J(62, 4) = 0;
    _J(62, 5) = 0;
    _J(62, 6) = 0;
    _J(62, 7) = 0;
    _J(62, 8) = 0;
    _J(62, 9) = 0;
    _J(62, 10) = 0;
    _J(62, 11) = 0;
    _J(62, 12) = 0;
    _J(62, 13) = 0;
    _J(62, 14) = 0;
    _J(62, 15) = 0;
    _J(62, 16) = _tmp743;
    _J(62, 17) = 0;
    _J(62, 18) = 0;
    _J(62, 19) = 0;
    _J(62, 20) = 0;
    _J(62, 21) = 0;
    _J(62, 22) = 0;
    _J(62, 23) = 0;
    _J(62, 24) = 0;
    _J(62, 25) = 0;
    _J(63, 0) = 0;
    _J(63, 1) = 0;
    _J(63, 2) = 0;
    _J(63, 3) = 0;
    _J(63, 4) = 0;
    _J(63, 5) = 0;
    _J(63, 6) = 0;
    _J(63, 7) = 0;
    _J(63, 8) = 0;
    _J(63, 9) = 0;
    _J(63, 10) = 0;
    _J(63, 11) = 0;
    _J(63, 12) = 0;
    _J(63, 13) = 0;
    _J(63, 14) = 0;
    _J(63, 15) = 0;
    _J(63, 16) = 0;
    _J(63, 17) = _tmp746;
    _J(63, 18) = 0;
    _J(63, 19) = 0;
    _J(63, 20) = 0;
    _J(63, 21) = 0;
    _J(63, 22) = 0;
    _J(63, 23) = 0;
    _J(63, 24) = 0;
    _J(63, 25) = 0;
    _J(64, 0) = 0;
    _J(64, 1) = 0;
    _J(64, 2) = 0;
    _J(64, 3) = 0;
    _J(64, 4) = 0;
    _J(64, 5) = 0;
    _J(64, 6) = 0;
    _J(64, 7) = 0;
    _J(64, 8) = 0;
    _J(64, 9) = 0;
    _J(64, 10) = 0;
    _J(64, 11) = 0;
    _J(64, 12) = 0;
    _J(64, 13) = 0;
    _J(64, 14) = 0;
    _J(64, 15) = 0;
    _J(64, 16) = 0;
    _J(64, 17) = 0;
    _J(64, 18) = _tmp749;
    _J(64, 19) = 0;
    _J(64, 20) = 0;
    _J(64, 21) = 0;
    _J(64, 22) = 0;
    _J(64, 23) = 0;
    _J(64, 24) = 0;
    _J(64, 25) = 0;
    _J(65, 0) = 0;
    _J(65, 1) = 0;
    _J(65, 2) = 0;
    _J(65, 3) = 0;
    _J(65, 4) = 0;
    _J(65, 5) = 0;
    _J(65, 6) = 0;
    _J(65, 7) = 0;
    _J(65, 8) = 0;
    _J(65, 9) = 0;
    _J(65, 10) = 0;
    _J(65, 11) = 0;
    _J(65, 12) = 0;
    _J(65, 13) = 0;
    _J(65, 14) = 0;
    _J(65, 15) = 0;
    _J(65, 16) = 0;
    _J(65, 17) = 0;
    _J(65, 18) = 0;
    _J(65, 19) = _tmp752;
    _J(65, 20) = 0;
    _J(65, 21) = 0;
    _J(65, 22) = 0;
    _J(65, 23) = 0;
    _J(65, 24) = 0;
    _J(65, 25) = 0;
    _J(66, 0) = 0;
    _J(66, 1) = 0;
    _J(66, 2) = 0;
    _J(66, 3) = 0;
    _J(66, 4) = 0;
    _J(66, 5) = 0;
    _J(66, 6) = 0;
    _J(66, 7) = 0;
    _J(66, 8) = 0;
    _J(66, 9) = 0;
    _J(66, 10) = 0;
    _J(66, 11) = 0;
    _J(66, 12) = 0;
    _J(66, 13) = 0;
    _J(66, 14) = 0;
    _J(66, 15) = 0;
    _J(66, 16) = 0;
    _J(66, 17) = 0;
    _J(66, 18) = 0;
    _J(66, 19) = 0;
    _J(66, 20) = _tmp755;
    _J(66, 21) = 0;
    _J(66, 22) = 0;
    _J(66, 23) = 0;
    _J(66, 24) = 0;
    _J(66, 25) = 0;
    _J(67, 0) = 0;
    _J(67, 1) = 0;
    _J(67, 2) = 0;
    _J(67, 3) = 0;
    _J(67, 4) = 0;
    _J(67, 5) = 0;
    _J(67, 6) = 0;
    _J(67, 7) = 0;
    _J(67, 8) = 0;
    _J(67, 9) = 0;
    _J(67, 10) = 0;
    _J(67, 11) = 0;
    _J(67, 12) = 0;
    _J(67, 13) = 0;
    _J(67, 14) = 0;
    _J(67, 15) = 0;
    _J(67, 16) = 0;
    _J(67, 17) = 0;
    _J(67, 18) = 0;
    _J(67, 19) = 0;
    _J(67, 20) = 0;
    _J(67, 21) = _tmp758;
    _J(67, 22) = 0;
    _J(67, 23) = 0;
    _J(67, 24) = 0;
    _J(67, 25) = 0;
    _J(68, 0) = 0;
    _J(68, 1) = 0;
    _J(68, 2) = 0;
    _J(68, 3) = 0;
    _J(68, 4) = 0;
    _J(68, 5) = 0;
    _J(68, 6) = 0;
    _J(68, 7) = 0;
    _J(68, 8) = 0;
    _J(68, 9) = 0;
    _J(68, 10) = 0;
    _J(68, 11) = 0;
    _J(68, 12) = 0;
    _J(68, 13) = 0;
    _J(68, 14) = 0;
    _J(68, 15) = 0;
    _J(68, 16) = 0;
    _J(68, 17) = 0;
    _J(68, 18) = 0;
    _J(68, 19) = 0;
    _J(68, 20) = 0;
    _J(68, 21) = 0;
    _J(68, 22) = _tmp761;
    _J(68, 23) = 0;
    _J(68, 24) = 0;
    _J(68, 25) = 0;
    _J(69, 0) = 0;
    _J(69, 1) = 0;
    _J(69, 2) = 0;
    _J(69, 3) = 0;
    _J(69, 4) = 0;
    _J(69, 5) = 0;
    _J(69, 6) = 0;
    _J(69, 7) = 0;
    _J(69, 8) = 0;
    _J(69, 9) = 0;
    _J(69, 10) = 0;
    _J(69, 11) = 0;
    _J(69, 12) = 0;
    _J(69, 13) = 0;
    _J(69, 14) = 0;
    _J(69, 15) = 0;
    _J(69, 16) = 0;
    _J(69, 17) = 0;
    _J(69, 18) = 0;
    _J(69, 19) = 0;
    _J(69, 20) = 0;
    _J(69, 21) = 0;
    _J(69, 22) = 0;
    _J(69, 23) = _tmp764;
    _J(69, 24) = 0;
    _J(69, 25) = 0;
    _J(70, 0) = 0;
    _J(70, 1) = 0;
    _J(70, 2) = 0;
    _J(70, 3) = 0;
    _J(70, 4) = 0;
    _J(70, 5) = 0;
    _J(70, 6) = 0;
    _J(70, 7) = 0;
    _J(70, 8) = 0;
    _J(70, 9) = 0;
    _J(70, 10) = 0;
    _J(70, 11) = 0;
    _J(70, 12) = 0;
    _J(70, 13) = 0;
    _J(70, 14) = 0;
    _J(70, 15) = 0;
    _J(70, 16) = 0;
    _J(70, 17) = 0;
    _J(70, 18) = 0;
    _J(70, 19) = 0;
    _J(70, 20) = 0;
    _J(70, 21) = 0;
    _J(70, 22) = 0;
    _J(70, 23) = 0;
    _J(70, 24) = _tmp767;
    _J(70, 25) = 0;
    _J(71, 0) = 0;
    _J(71, 1) = 0;
    _J(71, 2) = 0;
    _J(71, 3) = 0;
    _J(71, 4) = 0;
    _J(71, 5) = 0;
    _J(71, 6) = 0;
    _J(71, 7) = 0;
    _J(71, 8) = 0;
    _J(71, 9) = 0;
    _J(71, 10) = 0;
    _J(71, 11) = 0;
    _J(71, 12) = 0;
    _J(71, 13) = 0;
    _J(71, 14) = 0;
    _J(71, 15) = 0;
    _J(71, 16) = 0;
    _J(71, 17) = 0;
    _J(71, 18) = 0;
    _J(71, 19) = 0;
    _J(71, 20) = 0;
    _J(71, 21) = 0;
    _J(71, 22) = 0;
    _J(71, 23) = 0;
    _J(71, 24) = 0;
    _J(71, 25) = _tmp770;
  }

  if (H != nullptr) {
    Eigen::Matrix<Scalar, 26, 26>& _H = (*H);

    _H(0, 0) = std::pow(_tmp1043, Scalar(2)) + std::pow(_tmp1071, Scalar(2)) +
               std::pow(_tmp1085, Scalar(2)) + std::pow(_tmp1099, Scalar(2)) +
               std::pow(_tmp1113, Scalar(2)) + std::pow(_tmp1126, Scalar(2)) +
               std::pow(_tmp1203, Scalar(2)) + std::pow(_tmp1237, Scalar(2)) +
               std::pow(_tmp1289, Scalar(2)) + std::pow(_tmp1321, Scalar(2)) +
               std::pow(_tmp1373, Scalar(2)) + std::pow(_tmp1405, Scalar(2)) +
               std::pow(_tmp1457, Scalar(2)) + std::pow(_tmp1490, Scalar(2)) +
               std::pow(_tmp1539, Scalar(2)) + std::pow(_tmp1573, Scalar(2)) +
               std::pow(_tmp1622, Scalar(2)) + std::pow(_tmp1657, Scalar(2)) +
               std::pow(_tmp1711, Scalar(2)) + std::pow(_tmp1743, Scalar(2)) +
               std::pow(_tmp1797, Scalar(2)) + std::pow(_tmp1829, Scalar(2)) +
               std::pow(_tmp1883, Scalar(2)) + std::pow(_tmp1913, Scalar(2)) +
               std::pow(_tmp1965, Scalar(2)) + std::pow(_tmp1998, Scalar(2)) +
               std::pow(_tmp2052, Scalar(2)) + std::pow(_tmp2084, Scalar(2)) +
               std::pow(_tmp2136, Scalar(2)) + std::pow(_tmp2168, Scalar(2)) +
               std::pow(_tmp2219, Scalar(2)) + std::pow(_tmp2250, Scalar(2)) +
               std::pow(_tmp2299, Scalar(2)) + std::pow(_tmp2334, Scalar(2)) +
               std::pow(_tmp2386, Scalar(2)) + std::pow(_tmp2416, Scalar(2)) +
               std::pow(_tmp2468, Scalar(2)) + std::pow(_tmp2499, Scalar(2)) +
               std::pow(_tmp2552, Scalar(2)) + std::pow(_tmp2582, Scalar(2)) +
               std::pow(_tmp2635, Scalar(2)) + std::pow(_tmp2666, Scalar(2)) +
               std::pow(_tmp2718, Scalar(2)) + std::pow(_tmp2748, Scalar(2)) +
               std::pow(_tmp2802, Scalar(2)) + std::pow(_tmp2834, Scalar(2)) +
               std::pow(_tmp827, Scalar(2)) + std::pow(_tmp846, Scalar(2)) +
               std::pow(_tmp869, Scalar(2)) + std::pow(_tmp880, Scalar(2)) +
               std::pow(_tmp892, Scalar(2)) + std::pow(_tmp910, Scalar(2));
    _H(0, 1) = 0;
    _H(0, 2) = 0;
    _H(0, 3) = 0;
    _H(0, 4) = 0;
    _H(0, 5) = 0;
    _H(0, 6) = 0;
    _H(0, 7) = 0;
    _H(0, 8) = 0;
    _H(0, 9) = 0;
    _H(0, 10) = 0;
    _H(0, 11) = 0;
    _H(0, 12) = 0;
    _H(0, 13) = 0;
    _H(0, 14) = 0;
    _H(0, 15) = 0;
    _H(0, 16) = 0;
    _H(0, 17) = 0;
    _H(0, 18) = 0;
    _H(0, 19) = 0;
    _H(0, 20) = 0;
    _H(0, 21) = 0;
    _H(0, 22) = 0;
    _H(0, 23) = 0;
    _H(0, 24) = 0;
    _H(0, 25) = 0;
    _H(1, 0) =
        _tmp1043 * _tmp1044 + _tmp1071 * _tmp1072 + _tmp1085 * _tmp1086 + _tmp1099 * _tmp1100 +
        _tmp1113 * _tmp1114 + _tmp1126 * _tmp1127 + _tmp1203 * _tmp1204 + _tmp1237 * _tmp1238 +
        _tmp1289 * _tmp1290 + _tmp1321 * _tmp1322 + _tmp1373 * _tmp1374 + _tmp1405 * _tmp1406 +
        _tmp1457 * _tmp1458 + _tmp1490 * _tmp1491 + _tmp1539 * _tmp1540 + _tmp1573 * _tmp1574 +
        _tmp1622 * _tmp1623 + _tmp1657 * _tmp1658 + _tmp1711 * _tmp1712 + _tmp1743 * _tmp1744 +
        _tmp1797 * _tmp1798 + _tmp1829 * _tmp1830 + _tmp1883 * _tmp1884 + _tmp1913 * _tmp1914 +
        _tmp1965 * _tmp1966 + _tmp1998 * _tmp1999 + _tmp2052 * _tmp2053 + _tmp2084 * _tmp2085 +
        _tmp2136 * _tmp2137 + _tmp2168 * _tmp2169 + _tmp2219 * _tmp2220 + _tmp2250 * _tmp2251 +
        _tmp2299 * _tmp2300 + _tmp2334 * _tmp2335 + _tmp2386 * _tmp2387 + _tmp2416 * _tmp2417 +
        _tmp2468 * _tmp2469 + _tmp2499 * _tmp2500 + _tmp2552 * _tmp2553 + _tmp2582 * _tmp2583 +
        _tmp2635 * _tmp2636 + _tmp2666 * _tmp2667 + _tmp2718 * _tmp2719 + _tmp2748 * _tmp2749 +
        _tmp2802 * _tmp2803 + _tmp2834 * _tmp2835 + _tmp827 * _tmp828 + _tmp846 * _tmp847 +
        _tmp869 * _tmp870 + _tmp880 * _tmp881 + _tmp892 * _tmp893 + _tmp910 * _tmp911;
    _H(1, 1) = std::pow(_tmp1044, Scalar(2)) + std::pow(_tmp1072, Scalar(2)) +
               std::pow(_tmp1086, Scalar(2)) + std::pow(_tmp1100, Scalar(2)) +
               std::pow(_tmp1114, Scalar(2)) + std::pow(_tmp1127, Scalar(2)) +
               std::pow(_tmp1204, Scalar(2)) + std::pow(_tmp1238, Scalar(2)) +
               std::pow(_tmp1290, Scalar(2)) + std::pow(_tmp1322, Scalar(2)) +
               std::pow(_tmp1374, Scalar(2)) + std::pow(_tmp1406, Scalar(2)) +
               std::pow(_tmp1458, Scalar(2)) + std::pow(_tmp1491, Scalar(2)) +
               std::pow(_tmp1540, Scalar(2)) + std::pow(_tmp1574, Scalar(2)) +
               std::pow(_tmp1623, Scalar(2)) + std::pow(_tmp1658, Scalar(2)) +
               std::pow(_tmp1712, Scalar(2)) + std::pow(_tmp1744, Scalar(2)) +
               std::pow(_tmp1798, Scalar(2)) + std::pow(_tmp1830, Scalar(2)) +
               std::pow(_tmp1884, Scalar(2)) + std::pow(_tmp1914, Scalar(2)) +
               std::pow(_tmp1966, Scalar(2)) + std::pow(_tmp1999, Scalar(2)) +
               std::pow(_tmp2053, Scalar(2)) + std::pow(_tmp2085, Scalar(2)) +
               std::pow(_tmp2137, Scalar(2)) + std::pow(_tmp2169, Scalar(2)) +
               std::pow(_tmp2220, Scalar(2)) + std::pow(_tmp2251, Scalar(2)) +
               std::pow(_tmp2300, Scalar(2)) + std::pow(_tmp2335, Scalar(2)) +
               std::pow(_tmp2387, Scalar(2)) + std::pow(_tmp2417, Scalar(2)) +
               std::pow(_tmp2469, Scalar(2)) + std::pow(_tmp2500, Scalar(2)) +
               std::pow(_tmp2553, Scalar(2)) + std::pow(_tmp2583, Scalar(2)) +
               std::pow(_tmp2636, Scalar(2)) + std::pow(_tmp2667, Scalar(2)) +
               std::pow(_tmp2719, Scalar(2)) + std::pow(_tmp2749, Scalar(2)) +
               std::pow(_tmp2803, Scalar(2)) + std::pow(_tmp2835, Scalar(2)) +
               std::pow(_tmp828, Scalar(2)) + std::pow(_tmp847, Scalar(2)) +
               std::pow(_tmp870, Scalar(2)) + std::pow(_tmp881, Scalar(2)) +
               std::pow(_tmp893, Scalar(2)) + std::pow(_tmp911, Scalar(2));
    _H(1, 2) = 0;
    _H(1, 3) = 0;
    _H(1, 4) = 0;
    _H(1, 5) = 0;
    _H(1, 6) = 0;
    _H(1, 7) = 0;
    _H(1, 8) = 0;
    _H(1, 9) = 0;
    _H(1, 10) = 0;
    _H(1, 11) = 0;
    _H(1, 12) = 0;
    _H(1, 13) = 0;
    _H(1, 14) = 0;
    _H(1, 15) = 0;
    _H(1, 16) = 0;
    _H(1, 17) = 0;
    _H(1, 18) = 0;
    _H(1, 19) = 0;
    _H(1, 20) = 0;
    _H(1, 21) = 0;
    _H(1, 22) = 0;
    _H(1, 23) = 0;
    _H(1, 24) = 0;
    _H(1, 25) = 0;
    _H(2, 0) =
        _tmp1043 * _tmp1045 + _tmp1071 * _tmp1073 + _tmp1085 * _tmp1087 + _tmp1099 * _tmp1101 +
        _tmp1113 * _tmp1115 + _tmp1126 * _tmp1128 + _tmp1203 * _tmp1205 + _tmp1237 * _tmp1239 +
        _tmp1289 * _tmp1291 + _tmp1321 * _tmp1323 + _tmp1373 * _tmp1375 + _tmp1405 * _tmp1407 +
        _tmp1457 * _tmp1459 + _tmp1490 * _tmp1492 + _tmp1539 * _tmp1541 + _tmp1573 * _tmp1575 +
        _tmp1622 * _tmp1624 + _tmp1657 * _tmp1659 + _tmp1711 * _tmp1713 + _tmp1743 * _tmp1745 +
        _tmp1797 * _tmp1799 + _tmp1829 * _tmp1831 + _tmp1883 * _tmp1885 + _tmp1913 * _tmp1915 +
        _tmp1965 * _tmp1967 + _tmp1998 * _tmp2000 + _tmp2052 * _tmp2054 + _tmp2084 * _tmp2086 +
        _tmp2136 * _tmp2138 + _tmp2168 * _tmp2170 + _tmp2219 * _tmp2221 + _tmp2250 * _tmp2252 +
        _tmp2299 * _tmp2301 + _tmp2334 * _tmp2336 + _tmp2386 * _tmp2388 + _tmp2416 * _tmp2418 +
        _tmp2468 * _tmp2470 + _tmp2499 * _tmp2501 + _tmp2552 * _tmp2554 + _tmp2582 * _tmp2584 +
        _tmp2635 * _tmp2637 + _tmp2666 * _tmp2668 + _tmp2718 * _tmp2720 + _tmp2748 * _tmp2750 +
        _tmp2802 * _tmp2804 + _tmp2834 * _tmp2836 + _tmp827 * _tmp829 + _tmp846 * _tmp848 +
        _tmp869 * _tmp871 + _tmp880 * _tmp882 + _tmp892 * _tmp894 + _tmp910 * _tmp912;
    _H(2, 1) =
        _tmp1044 * _tmp1045 + _tmp1072 * _tmp1073 + _tmp1086 * _tmp1087 + _tmp1100 * _tmp1101 +
        _tmp1114 * _tmp1115 + _tmp1127 * _tmp1128 + _tmp1204 * _tmp1205 + _tmp1238 * _tmp1239 +
        _tmp1290 * _tmp1291 + _tmp1322 * _tmp1323 + _tmp1374 * _tmp1375 + _tmp1406 * _tmp1407 +
        _tmp1458 * _tmp1459 + _tmp1491 * _tmp1492 + _tmp1540 * _tmp1541 + _tmp1574 * _tmp1575 +
        _tmp1623 * _tmp1624 + _tmp1658 * _tmp1659 + _tmp1712 * _tmp1713 + _tmp1744 * _tmp1745 +
        _tmp1798 * _tmp1799 + _tmp1830 * _tmp1831 + _tmp1884 * _tmp1885 + _tmp1914 * _tmp1915 +
        _tmp1966 * _tmp1967 + _tmp1999 * _tmp2000 + _tmp2053 * _tmp2054 + _tmp2085 * _tmp2086 +
        _tmp2137 * _tmp2138 + _tmp2169 * _tmp2170 + _tmp2220 * _tmp2221 + _tmp2251 * _tmp2252 +
        _tmp2300 * _tmp2301 + _tmp2335 * _tmp2336 + _tmp2387 * _tmp2388 + _tmp2417 * _tmp2418 +
        _tmp2469 * _tmp2470 + _tmp2500 * _tmp2501 + _tmp2553 * _tmp2554 + _tmp2583 * _tmp2584 +
        _tmp2636 * _tmp2637 + _tmp2667 * _tmp2668 + _tmp2719 * _tmp2720 + _tmp2749 * _tmp2750 +
        _tmp2803 * _tmp2804 + _tmp2835 * _tmp2836 + _tmp828 * _tmp829 + _tmp847 * _tmp848 +
        _tmp870 * _tmp871 + _tmp881 * _tmp882 + _tmp893 * _tmp894 + _tmp911 * _tmp912;
    _H(2, 2) = std::pow(_tmp1045, Scalar(2)) + std::pow(_tmp1073, Scalar(2)) +
               std::pow(_tmp1087, Scalar(2)) + std::pow(_tmp1101, Scalar(2)) +
               std::pow(_tmp1115, Scalar(2)) + std::pow(_tmp1128, Scalar(2)) +
               std::pow(_tmp1205, Scalar(2)) + std::pow(_tmp1239, Scalar(2)) +
               std::pow(_tmp1291, Scalar(2)) + std::pow(_tmp1323, Scalar(2)) +
               std::pow(_tmp1375, Scalar(2)) + std::pow(_tmp1407, Scalar(2)) +
               std::pow(_tmp1459, Scalar(2)) + std::pow(_tmp1492, Scalar(2)) +
               std::pow(_tmp1541, Scalar(2)) + std::pow(_tmp1575, Scalar(2)) +
               std::pow(_tmp1624, Scalar(2)) + std::pow(_tmp1659, Scalar(2)) +
               std::pow(_tmp1713, Scalar(2)) + std::pow(_tmp1745, Scalar(2)) +
               std::pow(_tmp1799, Scalar(2)) + std::pow(_tmp1831, Scalar(2)) +
               std::pow(_tmp1885, Scalar(2)) + std::pow(_tmp1915, Scalar(2)) +
               std::pow(_tmp1967, Scalar(2)) + std::pow(_tmp2000, Scalar(2)) +
               std::pow(_tmp2054, Scalar(2)) + std::pow(_tmp2086, Scalar(2)) +
               std::pow(_tmp2138, Scalar(2)) + std::pow(_tmp2170, Scalar(2)) +
               std::pow(_tmp2221, Scalar(2)) + std::pow(_tmp2252, Scalar(2)) +
               std::pow(_tmp2301, Scalar(2)) + std::pow(_tmp2336, Scalar(2)) +
               std::pow(_tmp2388, Scalar(2)) + std::pow(_tmp2418, Scalar(2)) +
               std::pow(_tmp2470, Scalar(2)) + std::pow(_tmp2501, Scalar(2)) +
               std::pow(_tmp2554, Scalar(2)) + std::pow(_tmp2584, Scalar(2)) +
               std::pow(_tmp2637, Scalar(2)) + std::pow(_tmp2668, Scalar(2)) +
               std::pow(_tmp2720, Scalar(2)) + std::pow(_tmp2750, Scalar(2)) +
               std::pow(_tmp2804, Scalar(2)) + std::pow(_tmp2836, Scalar(2)) +
               std::pow(_tmp829, Scalar(2)) + std::pow(_tmp848, Scalar(2)) +
               std::pow(_tmp871, Scalar(2)) + std::pow(_tmp882, Scalar(2)) +
               std::pow(_tmp894, Scalar(2)) + std::pow(_tmp912, Scalar(2));
    _H(2, 3) = 0;
    _H(2, 4) = 0;
    _H(2, 5) = 0;
    _H(2, 6) = 0;
    _H(2, 7) = 0;
    _H(2, 8) = 0;
    _H(2, 9) = 0;
    _H(2, 10) = 0;
    _H(2, 11) = 0;
    _H(2, 12) = 0;
    _H(2, 13) = 0;
    _H(2, 14) = 0;
    _H(2, 15) = 0;
    _H(2, 16) = 0;
    _H(2, 17) = 0;
    _H(2, 18) = 0;
    _H(2, 19) = 0;
    _H(2, 20) = 0;
    _H(2, 21) = 0;
    _H(2, 22) = 0;
    _H(2, 23) = 0;
    _H(2, 24) = 0;
    _H(2, 25) = 0;
    _H(3, 0) =
        _tmp1043 * _tmp1052 + _tmp1071 * _tmp1074 + _tmp1085 * _tmp1088 + _tmp1099 * _tmp1102 +
        _tmp1113 * _tmp1116 + _tmp1126 * _tmp1129 + _tmp1203 * _tmp1212 + _tmp1237 * _tmp1240 +
        _tmp1289 * _tmp1300 + _tmp1321 * _tmp1324 + _tmp1373 * _tmp1383 + _tmp1405 * _tmp1408 +
        _tmp1457 * _tmp1466 + _tmp1490 * _tmp1493 + _tmp1539 * _tmp1550 + _tmp1573 * _tmp1576 +
        _tmp1622 * _tmp1634 + _tmp1657 * _tmp1660 + _tmp1711 * _tmp1722 + _tmp1743 * _tmp1746 +
        _tmp1797 * _tmp1806 + _tmp1829 * _tmp1832 + _tmp1883 * _tmp1893 + _tmp1913 * _tmp1916 +
        _tmp1965 * _tmp1975 + _tmp1998 * _tmp2001 + _tmp2052 * _tmp2062 + _tmp2084 * _tmp2087 +
        _tmp2136 * _tmp2146 + _tmp2168 * _tmp2172 + _tmp2219 * _tmp2229 + _tmp2250 * _tmp2253 +
        _tmp2299 * _tmp2310 + _tmp2334 * _tmp2337 + _tmp2386 * _tmp2396 + _tmp2416 * _tmp2419 +
        _tmp2468 * _tmp2479 + _tmp2499 * _tmp2502 + _tmp2552 * _tmp2562 + _tmp2582 * _tmp2585 +
        _tmp2635 * _tmp2645 + _tmp2666 * _tmp2669 + _tmp2718 * _tmp2728 + _tmp2748 * _tmp2751 +
        _tmp2802 * _tmp2812 + _tmp2834 * _tmp2837 + _tmp827 * _tmp830 + _tmp846 * _tmp849 +
        _tmp869 * _tmp872 + _tmp880 * _tmp883 + _tmp892 * _tmp895 + _tmp910 * _tmp913;
    _H(3, 1) =
        _tmp1044 * _tmp1052 + _tmp1072 * _tmp1074 + _tmp1086 * _tmp1088 + _tmp1100 * _tmp1102 +
        _tmp1114 * _tmp1116 + _tmp1127 * _tmp1129 + _tmp1204 * _tmp1212 + _tmp1238 * _tmp1240 +
        _tmp1290 * _tmp1300 + _tmp1322 * _tmp1324 + _tmp1374 * _tmp1383 + _tmp1406 * _tmp1408 +
        _tmp1458 * _tmp1466 + _tmp1491 * _tmp1493 + _tmp1540 * _tmp1550 + _tmp1574 * _tmp1576 +
        _tmp1623 * _tmp1634 + _tmp1658 * _tmp1660 + _tmp1712 * _tmp1722 + _tmp1744 * _tmp1746 +
        _tmp1798 * _tmp1806 + _tmp1830 * _tmp1832 + _tmp1884 * _tmp1893 + _tmp1914 * _tmp1916 +
        _tmp1966 * _tmp1975 + _tmp1999 * _tmp2001 + _tmp2053 * _tmp2062 + _tmp2085 * _tmp2087 +
        _tmp2137 * _tmp2146 + _tmp2169 * _tmp2172 + _tmp2220 * _tmp2229 + _tmp2251 * _tmp2253 +
        _tmp2300 * _tmp2310 + _tmp2335 * _tmp2337 + _tmp2387 * _tmp2396 + _tmp2417 * _tmp2419 +
        _tmp2469 * _tmp2479 + _tmp2500 * _tmp2502 + _tmp2553 * _tmp2562 + _tmp2583 * _tmp2585 +
        _tmp2636 * _tmp2645 + _tmp2667 * _tmp2669 + _tmp2719 * _tmp2728 + _tmp2749 * _tmp2751 +
        _tmp2803 * _tmp2812 + _tmp2835 * _tmp2837 + _tmp828 * _tmp830 + _tmp847 * _tmp849 +
        _tmp870 * _tmp872 + _tmp881 * _tmp883 + _tmp893 * _tmp895 + _tmp911 * _tmp913;
    _H(3, 2) =
        _tmp1045 * _tmp1052 + _tmp1073 * _tmp1074 + _tmp1087 * _tmp1088 + _tmp1101 * _tmp1102 +
        _tmp1115 * _tmp1116 + _tmp1128 * _tmp1129 + _tmp1205 * _tmp1212 + _tmp1239 * _tmp1240 +
        _tmp1291 * _tmp1300 + _tmp1323 * _tmp1324 + _tmp1375 * _tmp1383 + _tmp1407 * _tmp1408 +
        _tmp1459 * _tmp1466 + _tmp1492 * _tmp1493 + _tmp1541 * _tmp1550 + _tmp1575 * _tmp1576 +
        _tmp1624 * _tmp1634 + _tmp1659 * _tmp1660 + _tmp1713 * _tmp1722 + _tmp1745 * _tmp1746 +
        _tmp1799 * _tmp1806 + _tmp1831 * _tmp1832 + _tmp1885 * _tmp1893 + _tmp1915 * _tmp1916 +
        _tmp1967 * _tmp1975 + _tmp2000 * _tmp2001 + _tmp2054 * _tmp2062 + _tmp2086 * _tmp2087 +
        _tmp2138 * _tmp2146 + _tmp2170 * _tmp2172 + _tmp2221 * _tmp2229 + _tmp2252 * _tmp2253 +
        _tmp2301 * _tmp2310 + _tmp2336 * _tmp2337 + _tmp2388 * _tmp2396 + _tmp2418 * _tmp2419 +
        _tmp2470 * _tmp2479 + _tmp2501 * _tmp2502 + _tmp2554 * _tmp2562 + _tmp2584 * _tmp2585 +
        _tmp2637 * _tmp2645 + _tmp2668 * _tmp2669 + _tmp2720 * _tmp2728 + _tmp2750 * _tmp2751 +
        _tmp2804 * _tmp2812 + _tmp2836 * _tmp2837 + _tmp829 * _tmp830 + _tmp848 * _tmp849 +
        _tmp871 * _tmp872 + _tmp882 * _tmp883 + _tmp894 * _tmp895 + _tmp912 * _tmp913;
    _H(3, 3) = std::pow(_tmp1052, Scalar(2)) + std::pow(_tmp1074, Scalar(2)) +
               std::pow(_tmp1088, Scalar(2)) + std::pow(_tmp1102, Scalar(2)) +
               std::pow(_tmp1116, Scalar(2)) + std::pow(_tmp1129, Scalar(2)) +
               std::pow(_tmp1212, Scalar(2)) + std::pow(_tmp1240, Scalar(2)) +
               std::pow(_tmp1300, Scalar(2)) + std::pow(_tmp1324, Scalar(2)) +
               std::pow(_tmp1383, Scalar(2)) + std::pow(_tmp1408, Scalar(2)) +
               std::pow(_tmp1466, Scalar(2)) + std::pow(_tmp1493, Scalar(2)) +
               std::pow(_tmp1550, Scalar(2)) + std::pow(_tmp1576, Scalar(2)) +
               std::pow(_tmp1634, Scalar(2)) + std::pow(_tmp1660, Scalar(2)) +
               std::pow(_tmp1722, Scalar(2)) + std::pow(_tmp1746, Scalar(2)) +
               std::pow(_tmp1806, Scalar(2)) + std::pow(_tmp1832, Scalar(2)) +
               std::pow(_tmp1893, Scalar(2)) + std::pow(_tmp1916, Scalar(2)) +
               std::pow(_tmp1975, Scalar(2)) + std::pow(_tmp2001, Scalar(2)) +
               std::pow(_tmp2062, Scalar(2)) + std::pow(_tmp2087, Scalar(2)) +
               std::pow(_tmp2146, Scalar(2)) + std::pow(_tmp2172, Scalar(2)) +
               std::pow(_tmp2229, Scalar(2)) + std::pow(_tmp2253, Scalar(2)) +
               std::pow(_tmp2310, Scalar(2)) + std::pow(_tmp2337, Scalar(2)) +
               std::pow(_tmp2396, Scalar(2)) + std::pow(_tmp2419, Scalar(2)) +
               std::pow(_tmp2479, Scalar(2)) + std::pow(_tmp2502, Scalar(2)) +
               std::pow(_tmp2562, Scalar(2)) + std::pow(_tmp2585, Scalar(2)) +
               std::pow(_tmp2645, Scalar(2)) + std::pow(_tmp2669, Scalar(2)) +
               std::pow(_tmp2728, Scalar(2)) + std::pow(_tmp2751, Scalar(2)) +
               std::pow(_tmp2812, Scalar(2)) + std::pow(_tmp2837, Scalar(2)) +
               std::pow(_tmp830, Scalar(2)) + std::pow(_tmp849, Scalar(2)) +
               std::pow(_tmp872, Scalar(2)) + std::pow(_tmp883, Scalar(2)) +
               std::pow(_tmp895, Scalar(2)) + std::pow(_tmp913, Scalar(2));
    _H(3, 4) = 0;
    _H(3, 5) = 0;
    _H(3, 6) = 0;
    _H(3, 7) = 0;
    _H(3, 8) = 0;
    _H(3, 9) = 0;
    _H(3, 10) = 0;
    _H(3, 11) = 0;
    _H(3, 12) = 0;
    _H(3, 13) = 0;
    _H(3, 14) = 0;
    _H(3, 15) = 0;
    _H(3, 16) = 0;
    _H(3, 17) = 0;
    _H(3, 18) = 0;
    _H(3, 19) = 0;
    _H(3, 20) = 0;
    _H(3, 21) = 0;
    _H(3, 22) = 0;
    _H(3, 23) = 0;
    _H(3, 24) = 0;
    _H(3, 25) = 0;
    _H(4, 0) =
        _tmp1043 * _tmp1057 + _tmp1071 * _tmp1075 + _tmp1085 * _tmp1089 + _tmp1099 * _tmp1103 +
        _tmp1113 * _tmp1117 + _tmp1126 * _tmp1130 + _tmp1203 * _tmp1219 + _tmp1237 * _tmp1241 +
        _tmp1289 * _tmp1304 + _tmp1321 * _tmp1325 + _tmp1373 * _tmp1388 + _tmp1405 * _tmp1409 +
        _tmp1457 * _tmp1472 + _tmp1490 * _tmp1494 + _tmp1539 * _tmp1555 + _tmp1573 * _tmp1577 +
        _tmp1622 * _tmp1639 + _tmp1657 * _tmp1661 + _tmp1711 * _tmp1726 + _tmp1743 * _tmp1747 +
        _tmp1797 * _tmp1812 + _tmp1829 * _tmp1833 + _tmp1883 * _tmp1897 + _tmp1913 * _tmp1917 +
        _tmp1965 * _tmp1979 + _tmp1998 * _tmp2002 + _tmp2052 * _tmp2066 + _tmp2084 * _tmp2088 +
        _tmp2136 * _tmp2151 + _tmp2168 * _tmp2173 + _tmp2219 * _tmp2234 + _tmp2250 * _tmp2254 +
        _tmp2299 * _tmp2316 + _tmp2334 * _tmp2338 + _tmp2386 * _tmp2401 + _tmp2416 * _tmp2421 +
        _tmp2468 * _tmp2483 + _tmp2499 * _tmp2504 + _tmp2552 * _tmp2566 + _tmp2582 * _tmp2586 +
        _tmp2635 * _tmp2649 + _tmp2666 * _tmp2670 + _tmp2718 * _tmp2732 + _tmp2748 * _tmp2752 +
        _tmp2802 * _tmp2816 + _tmp2834 * _tmp2838 + _tmp827 * _tmp831 + _tmp846 * _tmp850 +
        _tmp869 * _tmp873 + _tmp880 * _tmp884 + _tmp892 * _tmp896 + _tmp910 * _tmp914;
    _H(4, 1) =
        _tmp1044 * _tmp1057 + _tmp1072 * _tmp1075 + _tmp1086 * _tmp1089 + _tmp1100 * _tmp1103 +
        _tmp1114 * _tmp1117 + _tmp1127 * _tmp1130 + _tmp1204 * _tmp1219 + _tmp1238 * _tmp1241 +
        _tmp1290 * _tmp1304 + _tmp1322 * _tmp1325 + _tmp1374 * _tmp1388 + _tmp1406 * _tmp1409 +
        _tmp1458 * _tmp1472 + _tmp1491 * _tmp1494 + _tmp1540 * _tmp1555 + _tmp1574 * _tmp1577 +
        _tmp1623 * _tmp1639 + _tmp1658 * _tmp1661 + _tmp1712 * _tmp1726 + _tmp1744 * _tmp1747 +
        _tmp1798 * _tmp1812 + _tmp1830 * _tmp1833 + _tmp1884 * _tmp1897 + _tmp1914 * _tmp1917 +
        _tmp1966 * _tmp1979 + _tmp1999 * _tmp2002 + _tmp2053 * _tmp2066 + _tmp2085 * _tmp2088 +
        _tmp2137 * _tmp2151 + _tmp2169 * _tmp2173 + _tmp2220 * _tmp2234 + _tmp2251 * _tmp2254 +
        _tmp2300 * _tmp2316 + _tmp2335 * _tmp2338 + _tmp2387 * _tmp2401 + _tmp2417 * _tmp2421 +
        _tmp2469 * _tmp2483 + _tmp2500 * _tmp2504 + _tmp2553 * _tmp2566 + _tmp2583 * _tmp2586 +
        _tmp2636 * _tmp2649 + _tmp2667 * _tmp2670 + _tmp2719 * _tmp2732 + _tmp2749 * _tmp2752 +
        _tmp2803 * _tmp2816 + _tmp2835 * _tmp2838 + _tmp828 * _tmp831 + _tmp847 * _tmp850 +
        _tmp870 * _tmp873 + _tmp881 * _tmp884 + _tmp893 * _tmp896 + _tmp911 * _tmp914;
    _H(4, 2) =
        _tmp1045 * _tmp1057 + _tmp1073 * _tmp1075 + _tmp1087 * _tmp1089 + _tmp1101 * _tmp1103 +
        _tmp1115 * _tmp1117 + _tmp1128 * _tmp1130 + _tmp1205 * _tmp1219 + _tmp1239 * _tmp1241 +
        _tmp1291 * _tmp1304 + _tmp1323 * _tmp1325 + _tmp1375 * _tmp1388 + _tmp1407 * _tmp1409 +
        _tmp1459 * _tmp1472 + _tmp1492 * _tmp1494 + _tmp1541 * _tmp1555 + _tmp1575 * _tmp1577 +
        _tmp1624 * _tmp1639 + _tmp1659 * _tmp1661 + _tmp1713 * _tmp1726 + _tmp1745 * _tmp1747 +
        _tmp1799 * _tmp1812 + _tmp1831 * _tmp1833 + _tmp1885 * _tmp1897 + _tmp1915 * _tmp1917 +
        _tmp1967 * _tmp1979 + _tmp2000 * _tmp2002 + _tmp2054 * _tmp2066 + _tmp2086 * _tmp2088 +
        _tmp2138 * _tmp2151 + _tmp2170 * _tmp2173 + _tmp2221 * _tmp2234 + _tmp2252 * _tmp2254 +
        _tmp2301 * _tmp2316 + _tmp2336 * _tmp2338 + _tmp2388 * _tmp2401 + _tmp2418 * _tmp2421 +
        _tmp2470 * _tmp2483 + _tmp2501 * _tmp2504 + _tmp2554 * _tmp2566 + _tmp2584 * _tmp2586 +
        _tmp2637 * _tmp2649 + _tmp2668 * _tmp2670 + _tmp2720 * _tmp2732 + _tmp2750 * _tmp2752 +
        _tmp2804 * _tmp2816 + _tmp2836 * _tmp2838 + _tmp829 * _tmp831 + _tmp848 * _tmp850 +
        _tmp871 * _tmp873 + _tmp882 * _tmp884 + _tmp894 * _tmp896 + _tmp912 * _tmp914;
    _H(4, 3) =
        _tmp1052 * _tmp1057 + _tmp1074 * _tmp1075 + _tmp1088 * _tmp1089 + _tmp1102 * _tmp1103 +
        _tmp1116 * _tmp1117 + _tmp1129 * _tmp1130 + _tmp1212 * _tmp1219 + _tmp1240 * _tmp1241 +
        _tmp1300 * _tmp1304 + _tmp1324 * _tmp1325 + _tmp1383 * _tmp1388 + _tmp1408 * _tmp1409 +
        _tmp1466 * _tmp1472 + _tmp1493 * _tmp1494 + _tmp1550 * _tmp1555 + _tmp1576 * _tmp1577 +
        _tmp1634 * _tmp1639 + _tmp1660 * _tmp1661 + _tmp1722 * _tmp1726 + _tmp1746 * _tmp1747 +
        _tmp1806 * _tmp1812 + _tmp1832 * _tmp1833 + _tmp1893 * _tmp1897 + _tmp1916 * _tmp1917 +
        _tmp1975 * _tmp1979 + _tmp2001 * _tmp2002 + _tmp2062 * _tmp2066 + _tmp2087 * _tmp2088 +
        _tmp2146 * _tmp2151 + _tmp2172 * _tmp2173 + _tmp2229 * _tmp2234 + _tmp2253 * _tmp2254 +
        _tmp2310 * _tmp2316 + _tmp2337 * _tmp2338 + _tmp2396 * _tmp2401 + _tmp2419 * _tmp2421 +
        _tmp2479 * _tmp2483 + _tmp2502 * _tmp2504 + _tmp2562 * _tmp2566 + _tmp2585 * _tmp2586 +
        _tmp2645 * _tmp2649 + _tmp2669 * _tmp2670 + _tmp2728 * _tmp2732 + _tmp2751 * _tmp2752 +
        _tmp2812 * _tmp2816 + _tmp2837 * _tmp2838 + _tmp830 * _tmp831 + _tmp849 * _tmp850 +
        _tmp872 * _tmp873 + _tmp883 * _tmp884 + _tmp895 * _tmp896 + _tmp913 * _tmp914;
    _H(4, 4) = std::pow(_tmp1057, Scalar(2)) + std::pow(_tmp1075, Scalar(2)) +
               std::pow(_tmp1089, Scalar(2)) + std::pow(_tmp1103, Scalar(2)) +
               std::pow(_tmp1117, Scalar(2)) + std::pow(_tmp1130, Scalar(2)) +
               std::pow(_tmp1219, Scalar(2)) + std::pow(_tmp1241, Scalar(2)) +
               std::pow(_tmp1304, Scalar(2)) + std::pow(_tmp1325, Scalar(2)) +
               std::pow(_tmp1388, Scalar(2)) + std::pow(_tmp1409, Scalar(2)) +
               std::pow(_tmp1472, Scalar(2)) + std::pow(_tmp1494, Scalar(2)) +
               std::pow(_tmp1555, Scalar(2)) + std::pow(_tmp1577, Scalar(2)) +
               std::pow(_tmp1639, Scalar(2)) + std::pow(_tmp1661, Scalar(2)) +
               std::pow(_tmp1726, Scalar(2)) + std::pow(_tmp1747, Scalar(2)) +
               std::pow(_tmp1812, Scalar(2)) + std::pow(_tmp1833, Scalar(2)) +
               std::pow(_tmp1897, Scalar(2)) + std::pow(_tmp1917, Scalar(2)) +
               std::pow(_tmp1979, Scalar(2)) + std::pow(_tmp2002, Scalar(2)) +
               std::pow(_tmp2066, Scalar(2)) + std::pow(_tmp2088, Scalar(2)) +
               std::pow(_tmp2151, Scalar(2)) + std::pow(_tmp2173, Scalar(2)) +
               std::pow(_tmp2234, Scalar(2)) + std::pow(_tmp2254, Scalar(2)) +
               std::pow(_tmp2316, Scalar(2)) + std::pow(_tmp2338, Scalar(2)) +
               std::pow(_tmp2401, Scalar(2)) + std::pow(_tmp2421, Scalar(2)) +
               std::pow(_tmp2483, Scalar(2)) + std::pow(_tmp2504, Scalar(2)) +
               std::pow(_tmp2566, Scalar(2)) + std::pow(_tmp2586, Scalar(2)) +
               std::pow(_tmp2649, Scalar(2)) + std::pow(_tmp2670, Scalar(2)) +
               std::pow(_tmp2732, Scalar(2)) + std::pow(_tmp2752, Scalar(2)) +
               std::pow(_tmp2816, Scalar(2)) + std::pow(_tmp2838, Scalar(2)) +
               std::pow(_tmp831, Scalar(2)) + std::pow(_tmp850, Scalar(2)) +
               std::pow(_tmp873, Scalar(2)) + std::pow(_tmp884, Scalar(2)) +
               std::pow(_tmp896, Scalar(2)) + std::pow(_tmp914, Scalar(2));
    _H(4, 5) = 0;
    _H(4, 6) = 0;
    _H(4, 7) = 0;
    _H(4, 8) = 0;
    _H(4, 9) = 0;
    _H(4, 10) = 0;
    _H(4, 11) = 0;
    _H(4, 12) = 0;
    _H(4, 13) = 0;
    _H(4, 14) = 0;
    _H(4, 15) = 0;
    _H(4, 16) = 0;
    _H(4, 17) = 0;
    _H(4, 18) = 0;
    _H(4, 19) = 0;
    _H(4, 20) = 0;
    _H(4, 21) = 0;
    _H(4, 22) = 0;
    _H(4, 23) = 0;
    _H(4, 24) = 0;
    _H(4, 25) = 0;
    _H(5, 0) =
        _tmp1043 * _tmp1061 + _tmp1071 * _tmp1076 + _tmp1085 * _tmp1090 + _tmp1099 * _tmp1104 +
        _tmp1113 * _tmp1118 + _tmp1126 * _tmp1131 + _tmp1203 * _tmp1223 + _tmp1237 * _tmp1242 +
        _tmp1289 * _tmp1308 + _tmp1321 * _tmp1326 + _tmp1373 * _tmp1392 + _tmp1405 * _tmp1410 +
        _tmp1457 * _tmp1476 + _tmp1490 * _tmp1495 + _tmp1539 * _tmp1560 + _tmp1573 * _tmp1578 +
        _tmp1622 * _tmp1645 + _tmp1657 * _tmp1662 + _tmp1711 * _tmp1731 + _tmp1743 * _tmp1748 +
        _tmp1797 * _tmp1817 + _tmp1829 * _tmp1834 + _tmp1883 * _tmp1901 + _tmp1913 * _tmp1918 +
        _tmp1965 * _tmp1985 + _tmp1998 * _tmp2003 + _tmp2052 * _tmp2070 + _tmp2084 * _tmp2089 +
        _tmp2136 * _tmp2155 + _tmp2168 * _tmp2174 + _tmp2219 * _tmp2238 + _tmp2250 * _tmp2255 +
        _tmp2299 * _tmp2321 + _tmp2334 * _tmp2339 + _tmp2386 * _tmp2405 + _tmp2416 * _tmp2422 +
        _tmp2468 * _tmp2487 + _tmp2499 * _tmp2505 + _tmp2552 * _tmp2570 + _tmp2582 * _tmp2587 +
        _tmp2635 * _tmp2653 + _tmp2666 * _tmp2671 + _tmp2718 * _tmp2736 + _tmp2748 * _tmp2753 +
        _tmp2802 * _tmp2821 + _tmp2834 * _tmp2839 + _tmp827 * _tmp832 + _tmp846 * _tmp851 +
        _tmp869 * _tmp874 + _tmp880 * _tmp885 + _tmp892 * _tmp897 + _tmp910 * _tmp915;
    _H(5, 1) =
        _tmp1044 * _tmp1061 + _tmp1072 * _tmp1076 + _tmp1086 * _tmp1090 + _tmp1100 * _tmp1104 +
        _tmp1114 * _tmp1118 + _tmp1127 * _tmp1131 + _tmp1204 * _tmp1223 + _tmp1238 * _tmp1242 +
        _tmp1290 * _tmp1308 + _tmp1322 * _tmp1326 + _tmp1374 * _tmp1392 + _tmp1406 * _tmp1410 +
        _tmp1458 * _tmp1476 + _tmp1491 * _tmp1495 + _tmp1540 * _tmp1560 + _tmp1574 * _tmp1578 +
        _tmp1623 * _tmp1645 + _tmp1658 * _tmp1662 + _tmp1712 * _tmp1731 + _tmp1744 * _tmp1748 +
        _tmp1798 * _tmp1817 + _tmp1830 * _tmp1834 + _tmp1884 * _tmp1901 + _tmp1914 * _tmp1918 +
        _tmp1966 * _tmp1985 + _tmp1999 * _tmp2003 + _tmp2053 * _tmp2070 + _tmp2085 * _tmp2089 +
        _tmp2137 * _tmp2155 + _tmp2169 * _tmp2174 + _tmp2220 * _tmp2238 + _tmp2251 * _tmp2255 +
        _tmp2300 * _tmp2321 + _tmp2335 * _tmp2339 + _tmp2387 * _tmp2405 + _tmp2417 * _tmp2422 +
        _tmp2469 * _tmp2487 + _tmp2500 * _tmp2505 + _tmp2553 * _tmp2570 + _tmp2583 * _tmp2587 +
        _tmp2636 * _tmp2653 + _tmp2667 * _tmp2671 + _tmp2719 * _tmp2736 + _tmp2749 * _tmp2753 +
        _tmp2803 * _tmp2821 + _tmp2835 * _tmp2839 + _tmp828 * _tmp832 + _tmp847 * _tmp851 +
        _tmp870 * _tmp874 + _tmp881 * _tmp885 + _tmp893 * _tmp897 + _tmp911 * _tmp915;
    _H(5, 2) =
        _tmp1045 * _tmp1061 + _tmp1073 * _tmp1076 + _tmp1087 * _tmp1090 + _tmp1101 * _tmp1104 +
        _tmp1115 * _tmp1118 + _tmp1128 * _tmp1131 + _tmp1205 * _tmp1223 + _tmp1239 * _tmp1242 +
        _tmp1291 * _tmp1308 + _tmp1323 * _tmp1326 + _tmp1375 * _tmp1392 + _tmp1407 * _tmp1410 +
        _tmp1459 * _tmp1476 + _tmp1492 * _tmp1495 + _tmp1541 * _tmp1560 + _tmp1575 * _tmp1578 +
        _tmp1624 * _tmp1645 + _tmp1659 * _tmp1662 + _tmp1713 * _tmp1731 + _tmp1745 * _tmp1748 +
        _tmp1799 * _tmp1817 + _tmp1831 * _tmp1834 + _tmp1885 * _tmp1901 + _tmp1915 * _tmp1918 +
        _tmp1967 * _tmp1985 + _tmp2000 * _tmp2003 + _tmp2054 * _tmp2070 + _tmp2086 * _tmp2089 +
        _tmp2138 * _tmp2155 + _tmp2170 * _tmp2174 + _tmp2221 * _tmp2238 + _tmp2252 * _tmp2255 +
        _tmp2301 * _tmp2321 + _tmp2336 * _tmp2339 + _tmp2388 * _tmp2405 + _tmp2418 * _tmp2422 +
        _tmp2470 * _tmp2487 + _tmp2501 * _tmp2505 + _tmp2554 * _tmp2570 + _tmp2584 * _tmp2587 +
        _tmp2637 * _tmp2653 + _tmp2668 * _tmp2671 + _tmp2720 * _tmp2736 + _tmp2750 * _tmp2753 +
        _tmp2804 * _tmp2821 + _tmp2836 * _tmp2839 + _tmp829 * _tmp832 + _tmp848 * _tmp851 +
        _tmp871 * _tmp874 + _tmp882 * _tmp885 + _tmp894 * _tmp897 + _tmp912 * _tmp915;
    _H(5, 3) =
        _tmp1052 * _tmp1061 + _tmp1074 * _tmp1076 + _tmp1088 * _tmp1090 + _tmp1102 * _tmp1104 +
        _tmp1116 * _tmp1118 + _tmp1129 * _tmp1131 + _tmp1212 * _tmp1223 + _tmp1240 * _tmp1242 +
        _tmp1300 * _tmp1308 + _tmp1324 * _tmp1326 + _tmp1383 * _tmp1392 + _tmp1408 * _tmp1410 +
        _tmp1466 * _tmp1476 + _tmp1493 * _tmp1495 + _tmp1550 * _tmp1560 + _tmp1576 * _tmp1578 +
        _tmp1634 * _tmp1645 + _tmp1660 * _tmp1662 + _tmp1722 * _tmp1731 + _tmp1746 * _tmp1748 +
        _tmp1806 * _tmp1817 + _tmp1832 * _tmp1834 + _tmp1893 * _tmp1901 + _tmp1916 * _tmp1918 +
        _tmp1975 * _tmp1985 + _tmp2001 * _tmp2003 + _tmp2062 * _tmp2070 + _tmp2087 * _tmp2089 +
        _tmp2146 * _tmp2155 + _tmp2172 * _tmp2174 + _tmp2229 * _tmp2238 + _tmp2253 * _tmp2255 +
        _tmp2310 * _tmp2321 + _tmp2337 * _tmp2339 + _tmp2396 * _tmp2405 + _tmp2419 * _tmp2422 +
        _tmp2479 * _tmp2487 + _tmp2502 * _tmp2505 + _tmp2562 * _tmp2570 + _tmp2585 * _tmp2587 +
        _tmp2645 * _tmp2653 + _tmp2669 * _tmp2671 + _tmp2728 * _tmp2736 + _tmp2751 * _tmp2753 +
        _tmp2812 * _tmp2821 + _tmp2837 * _tmp2839 + _tmp830 * _tmp832 + _tmp849 * _tmp851 +
        _tmp872 * _tmp874 + _tmp883 * _tmp885 + _tmp895 * _tmp897 + _tmp913 * _tmp915;
    _H(5, 4) =
        _tmp1057 * _tmp1061 + _tmp1075 * _tmp1076 + _tmp1089 * _tmp1090 + _tmp1103 * _tmp1104 +
        _tmp1117 * _tmp1118 + _tmp1130 * _tmp1131 + _tmp1219 * _tmp1223 + _tmp1241 * _tmp1242 +
        _tmp1304 * _tmp1308 + _tmp1325 * _tmp1326 + _tmp1388 * _tmp1392 + _tmp1409 * _tmp1410 +
        _tmp1472 * _tmp1476 + _tmp1494 * _tmp1495 + _tmp1555 * _tmp1560 + _tmp1577 * _tmp1578 +
        _tmp1639 * _tmp1645 + _tmp1661 * _tmp1662 + _tmp1726 * _tmp1731 + _tmp1747 * _tmp1748 +
        _tmp1812 * _tmp1817 + _tmp1833 * _tmp1834 + _tmp1897 * _tmp1901 + _tmp1917 * _tmp1918 +
        _tmp1979 * _tmp1985 + _tmp2002 * _tmp2003 + _tmp2066 * _tmp2070 + _tmp2088 * _tmp2089 +
        _tmp2151 * _tmp2155 + _tmp2173 * _tmp2174 + _tmp2234 * _tmp2238 + _tmp2254 * _tmp2255 +
        _tmp2316 * _tmp2321 + _tmp2338 * _tmp2339 + _tmp2401 * _tmp2405 + _tmp2421 * _tmp2422 +
        _tmp2483 * _tmp2487 + _tmp2504 * _tmp2505 + _tmp2566 * _tmp2570 + _tmp2586 * _tmp2587 +
        _tmp2649 * _tmp2653 + _tmp2670 * _tmp2671 + _tmp2732 * _tmp2736 + _tmp2752 * _tmp2753 +
        _tmp2816 * _tmp2821 + _tmp2838 * _tmp2839 + _tmp831 * _tmp832 + _tmp850 * _tmp851 +
        _tmp873 * _tmp874 + _tmp884 * _tmp885 + _tmp896 * _tmp897 + _tmp914 * _tmp915;
    _H(5, 5) = std::pow(_tmp1061, Scalar(2)) + std::pow(_tmp1076, Scalar(2)) +
               std::pow(_tmp1090, Scalar(2)) + std::pow(_tmp1104, Scalar(2)) +
               std::pow(_tmp1118, Scalar(2)) + std::pow(_tmp1131, Scalar(2)) +
               std::pow(_tmp1223, Scalar(2)) + std::pow(_tmp1242, Scalar(2)) +
               std::pow(_tmp1308, Scalar(2)) + std::pow(_tmp1326, Scalar(2)) +
               std::pow(_tmp1392, Scalar(2)) + std::pow(_tmp1410, Scalar(2)) +
               std::pow(_tmp1476, Scalar(2)) + std::pow(_tmp1495, Scalar(2)) +
               std::pow(_tmp1560, Scalar(2)) + std::pow(_tmp1578, Scalar(2)) +
               std::pow(_tmp1645, Scalar(2)) + std::pow(_tmp1662, Scalar(2)) +
               std::pow(_tmp1731, Scalar(2)) + std::pow(_tmp1748, Scalar(2)) +
               std::pow(_tmp1817, Scalar(2)) + std::pow(_tmp1834, Scalar(2)) +
               std::pow(_tmp1901, Scalar(2)) + std::pow(_tmp1918, Scalar(2)) +
               std::pow(_tmp1985, Scalar(2)) + std::pow(_tmp2003, Scalar(2)) +
               std::pow(_tmp2070, Scalar(2)) + std::pow(_tmp2089, Scalar(2)) +
               std::pow(_tmp2155, Scalar(2)) + std::pow(_tmp2174, Scalar(2)) +
               std::pow(_tmp2238, Scalar(2)) + std::pow(_tmp2255, Scalar(2)) +
               std::pow(_tmp2321, Scalar(2)) + std::pow(_tmp2339, Scalar(2)) +
               std::pow(_tmp2405, Scalar(2)) + std::pow(_tmp2422, Scalar(2)) +
               std::pow(_tmp2487, Scalar(2)) + std::pow(_tmp2505, Scalar(2)) +
               std::pow(_tmp2570, Scalar(2)) + std::pow(_tmp2587, Scalar(2)) +
               std::pow(_tmp2653, Scalar(2)) + std::pow(_tmp2671, Scalar(2)) +
               std::pow(_tmp2736, Scalar(2)) + std::pow(_tmp2753, Scalar(2)) +
               std::pow(_tmp2821, Scalar(2)) + std::pow(_tmp2839, Scalar(2)) +
               std::pow(_tmp832, Scalar(2)) + std::pow(_tmp851, Scalar(2)) +
               std::pow(_tmp874, Scalar(2)) + std::pow(_tmp885, Scalar(2)) +
               std::pow(_tmp897, Scalar(2)) + std::pow(_tmp915, Scalar(2));
    _H(5, 6) = 0;
    _H(5, 7) = 0;
    _H(5, 8) = 0;
    _H(5, 9) = 0;
    _H(5, 10) = 0;
    _H(5, 11) = 0;
    _H(5, 12) = 0;
    _H(5, 13) = 0;
    _H(5, 14) = 0;
    _H(5, 15) = 0;
    _H(5, 16) = 0;
    _H(5, 17) = 0;
    _H(5, 18) = 0;
    _H(5, 19) = 0;
    _H(5, 20) = 0;
    _H(5, 21) = 0;
    _H(5, 22) = 0;
    _H(5, 23) = 0;
    _H(5, 24) = 0;
    _H(5, 25) = 0;
    _H(6, 0) = _tmp1203 * _tmp1229 + _tmp1237 * _tmp1243;
    _H(6, 1) = _tmp1204 * _tmp1229 + _tmp1238 * _tmp1243;
    _H(6, 2) = _tmp1205 * _tmp1229 + _tmp1239 * _tmp1243;
    _H(6, 3) = _tmp1212 * _tmp1229 + _tmp1240 * _tmp1243;
    _H(6, 4) = _tmp1219 * _tmp1229 + _tmp1241 * _tmp1243;
    _H(6, 5) = _tmp1223 * _tmp1229 + _tmp1242 * _tmp1243;
    _H(6, 6) = std::pow(_tmp1229, Scalar(2)) + std::pow(_tmp1243, Scalar(2)) + _tmp2841;
    _H(6, 7) = 0;
    _H(6, 8) = 0;
    _H(6, 9) = 0;
    _H(6, 10) = 0;
    _H(6, 11) = 0;
    _H(6, 12) = 0;
    _H(6, 13) = 0;
    _H(6, 14) = 0;
    _H(6, 15) = 0;
    _H(6, 16) = 0;
    _H(6, 17) = 0;
    _H(6, 18) = 0;
    _H(6, 19) = 0;
    _H(6, 20) = 0;
    _H(6, 21) = 0;
    _H(6, 22) = 0;
    _H(6, 23) = 0;
    _H(6, 24) = 0;
    _H(6, 25) = 0;
    _H(7, 0) = _tmp1289 * _tmp1313 + _tmp1321 * _tmp1327;
    _H(7, 1) = _tmp1290 * _tmp1313 + _tmp1322 * _tmp1327;
    _H(7, 2) = _tmp1291 * _tmp1313 + _tmp1323 * _tmp1327;
    _H(7, 3) = _tmp1300 * _tmp1313 + _tmp1324 * _tmp1327;
    _H(7, 4) = _tmp1304 * _tmp1313 + _tmp1325 * _tmp1327;
    _H(7, 5) = _tmp1308 * _tmp1313 + _tmp1326 * _tmp1327;
    _H(7, 6) = 0;
    _H(7, 7) = std::pow(_tmp1313, Scalar(2)) + std::pow(_tmp1327, Scalar(2)) + _tmp2842;
    _H(7, 8) = 0;
    _H(7, 9) = 0;
    _H(7, 10) = 0;
    _H(7, 11) = 0;
    _H(7, 12) = 0;
    _H(7, 13) = 0;
    _H(7, 14) = 0;
    _H(7, 15) = 0;
    _H(7, 16) = 0;
    _H(7, 17) = 0;
    _H(7, 18) = 0;
    _H(7, 19) = 0;
    _H(7, 20) = 0;
    _H(7, 21) = 0;
    _H(7, 22) = 0;
    _H(7, 23) = 0;
    _H(7, 24) = 0;
    _H(7, 25) = 0;
    _H(8, 0) = _tmp1373 * _tmp1396 + _tmp1405 * _tmp1411;
    _H(8, 1) = _tmp1374 * _tmp1396 + _tmp1406 * _tmp1411;
    _H(8, 2) = _tmp1375 * _tmp1396 + _tmp1407 * _tmp1411;
    _H(8, 3) = _tmp1383 * _tmp1396 + _tmp1408 * _tmp1411;
    _H(8, 4) = _tmp1388 * _tmp1396 + _tmp1409 * _tmp1411;
    _H(8, 5) = _tmp1392 * _tmp1396 + _tmp1410 * _tmp1411;
    _H(8, 6) = 0;
    _H(8, 7) = 0;
    _H(8, 8) = std::pow(_tmp1396, Scalar(2)) + std::pow(_tmp1411, Scalar(2)) + _tmp2843;
    _H(8, 9) = 0;
    _H(8, 10) = 0;
    _H(8, 11) = 0;
    _H(8, 12) = 0;
    _H(8, 13) = 0;
    _H(8, 14) = 0;
    _H(8, 15) = 0;
    _H(8, 16) = 0;
    _H(8, 17) = 0;
    _H(8, 18) = 0;
    _H(8, 19) = 0;
    _H(8, 20) = 0;
    _H(8, 21) = 0;
    _H(8, 22) = 0;
    _H(8, 23) = 0;
    _H(8, 24) = 0;
    _H(8, 25) = 0;
    _H(9, 0) = _tmp1457 * _tmp1481 + _tmp1490 * _tmp1496;
    _H(9, 1) = _tmp1458 * _tmp1481 + _tmp1491 * _tmp1496;
    _H(9, 2) = _tmp1459 * _tmp1481 + _tmp1492 * _tmp1496;
    _H(9, 3) = _tmp1466 * _tmp1481 + _tmp1493 * _tmp1496;
    _H(9, 4) = _tmp1472 * _tmp1481 + _tmp1494 * _tmp1496;
    _H(9, 5) = _tmp1476 * _tmp1481 + _tmp1495 * _tmp1496;
    _H(9, 6) = 0;
    _H(9, 7) = 0;
    _H(9, 8) = 0;
    _H(9, 9) = std::pow(_tmp1481, Scalar(2)) + std::pow(_tmp1496, Scalar(2)) + _tmp2844;
    _H(9, 10) = 0;
    _H(9, 11) = 0;
    _H(9, 12) = 0;
    _H(9, 13) = 0;
    _H(9, 14) = 0;
    _H(9, 15) = 0;
    _H(9, 16) = 0;
    _H(9, 17) = 0;
    _H(9, 18) = 0;
    _H(9, 19) = 0;
    _H(9, 20) = 0;
    _H(9, 21) = 0;
    _H(9, 22) = 0;
    _H(9, 23) = 0;
    _H(9, 24) = 0;
    _H(9, 25) = 0;
    _H(10, 0) = _tmp1539 * _tmp1565 + _tmp1573 * _tmp1579;
    _H(10, 1) = _tmp1540 * _tmp1565 + _tmp1574 * _tmp1579;
    _H(10, 2) = _tmp1541 * _tmp1565 + _tmp1575 * _tmp1579;
    _H(10, 3) = _tmp1550 * _tmp1565 + _tmp1576 * _tmp1579;
    _H(10, 4) = _tmp1555 * _tmp1565 + _tmp1577 * _tmp1579;
    _H(10, 5) = _tmp1560 * _tmp1565 + _tmp1578 * _tmp1579;
    _H(10, 6) = 0;
    _H(10, 7) = 0;
    _H(10, 8) = 0;
    _H(10, 9) = 0;
    _H(10, 10) = std::pow(_tmp1565, Scalar(2)) + std::pow(_tmp1579, Scalar(2)) + _tmp2845;
    _H(10, 11) = 0;
    _H(10, 12) = 0;
    _H(10, 13) = 0;
    _H(10, 14) = 0;
    _H(10, 15) = 0;
    _H(10, 16) = 0;
    _H(10, 17) = 0;
    _H(10, 18) = 0;
    _H(10, 19) = 0;
    _H(10, 20) = 0;
    _H(10, 21) = 0;
    _H(10, 22) = 0;
    _H(10, 23) = 0;
    _H(10, 24) = 0;
    _H(10, 25) = 0;
    _H(11, 0) = _tmp1622 * _tmp1649 + _tmp1657 * _tmp1663;
    _H(11, 1) = _tmp1623 * _tmp1649 + _tmp1658 * _tmp1663;
    _H(11, 2) = _tmp1624 * _tmp1649 + _tmp1659 * _tmp1663;
    _H(11, 3) = _tmp1634 * _tmp1649 + _tmp1660 * _tmp1663;
    _H(11, 4) = _tmp1639 * _tmp1649 + _tmp1661 * _tmp1663;
    _H(11, 5) = _tmp1645 * _tmp1649 + _tmp1662 * _tmp1663;
    _H(11, 6) = 0;
    _H(11, 7) = 0;
    _H(11, 8) = 0;
    _H(11, 9) = 0;
    _H(11, 10) = 0;
    _H(11, 11) = std::pow(_tmp1649, Scalar(2)) + std::pow(_tmp1663, Scalar(2)) + _tmp2846;
    _H(11, 12) = 0;
    _H(11, 13) = 0;
    _H(11, 14) = 0;
    _H(11, 15) = 0;
    _H(11, 16) = 0;
    _H(11, 17) = 0;
    _H(11, 18) = 0;
    _H(11, 19) = 0;
    _H(11, 20) = 0;
    _H(11, 21) = 0;
    _H(11, 22) = 0;
    _H(11, 23) = 0;
    _H(11, 24) = 0;
    _H(11, 25) = 0;
    _H(12, 0) = _tmp1711 * _tmp1735 + _tmp1743 * _tmp1749;
    _H(12, 1) = _tmp1712 * _tmp1735 + _tmp1744 * _tmp1749;
    _H(12, 2) = _tmp1713 * _tmp1735 + _tmp1745 * _tmp1749;
    _H(12, 3) = _tmp1722 * _tmp1735 + _tmp1746 * _tmp1749;
    _H(12, 4) = _tmp1726 * _tmp1735 + _tmp1747 * _tmp1749;
    _H(12, 5) = _tmp1731 * _tmp1735 + _tmp1748 * _tmp1749;
    _H(12, 6) = 0;
    _H(12, 7) = 0;
    _H(12, 8) = 0;
    _H(12, 9) = 0;
    _H(12, 10) = 0;
    _H(12, 11) = 0;
    _H(12, 12) = std::pow(_tmp1735, Scalar(2)) + std::pow(_tmp1749, Scalar(2)) + _tmp2847;
    _H(12, 13) = 0;
    _H(12, 14) = 0;
    _H(12, 15) = 0;
    _H(12, 16) = 0;
    _H(12, 17) = 0;
    _H(12, 18) = 0;
    _H(12, 19) = 0;
    _H(12, 20) = 0;
    _H(12, 21) = 0;
    _H(12, 22) = 0;
    _H(12, 23) = 0;
    _H(12, 24) = 0;
    _H(12, 25) = 0;
    _H(13, 0) = _tmp1797 * _tmp1821 + _tmp1829 * _tmp1835;
    _H(13, 1) = _tmp1798 * _tmp1821 + _tmp1830 * _tmp1835;
    _H(13, 2) = _tmp1799 * _tmp1821 + _tmp1831 * _tmp1835;
    _H(13, 3) = _tmp1806 * _tmp1821 + _tmp1832 * _tmp1835;
    _H(13, 4) = _tmp1812 * _tmp1821 + _tmp1833 * _tmp1835;
    _H(13, 5) = _tmp1817 * _tmp1821 + _tmp1834 * _tmp1835;
    _H(13, 6) = 0;
    _H(13, 7) = 0;
    _H(13, 8) = 0;
    _H(13, 9) = 0;
    _H(13, 10) = 0;
    _H(13, 11) = 0;
    _H(13, 12) = 0;
    _H(13, 13) = std::pow(_tmp1821, Scalar(2)) + std::pow(_tmp1835, Scalar(2)) + _tmp2848;
    _H(13, 14) = 0;
    _H(13, 15) = 0;
    _H(13, 16) = 0;
    _H(13, 17) = 0;
    _H(13, 18) = 0;
    _H(13, 19) = 0;
    _H(13, 20) = 0;
    _H(13, 21) = 0;
    _H(13, 22) = 0;
    _H(13, 23) = 0;
    _H(13, 24) = 0;
    _H(13, 25) = 0;
    _H(14, 0) = _tmp1883 * _tmp1905 + _tmp1913 * _tmp1920;
    _H(14, 1) = _tmp1884 * _tmp1905 + _tmp1914 * _tmp1920;
    _H(14, 2) = _tmp1885 * _tmp1905 + _tmp1915 * _tmp1920;
    _H(14, 3) = _tmp1893 * _tmp1905 + _tmp1916 * _tmp1920;
    _H(14, 4) = _tmp1897 * _tmp1905 + _tmp1917 * _tmp1920;
    _H(14, 5) = _tmp1901 * _tmp1905 + _tmp1918 * _tmp1920;
    _H(14, 6) = 0;
    _H(14, 7) = 0;
    _H(14, 8) = 0;
    _H(14, 9) = 0;
    _H(14, 10) = 0;
    _H(14, 11) = 0;
    _H(14, 12) = 0;
    _H(14, 13) = 0;
    _H(14, 14) = std::pow(_tmp1905, Scalar(2)) + std::pow(_tmp1920, Scalar(2)) + _tmp2849;
    _H(14, 15) = 0;
    _H(14, 16) = 0;
    _H(14, 17) = 0;
    _H(14, 18) = 0;
    _H(14, 19) = 0;
    _H(14, 20) = 0;
    _H(14, 21) = 0;
    _H(14, 22) = 0;
    _H(14, 23) = 0;
    _H(14, 24) = 0;
    _H(14, 25) = 0;
    _H(15, 0) = _tmp1965 * _tmp1989 + _tmp1998 * _tmp2004;
    _H(15, 1) = _tmp1966 * _tmp1989 + _tmp1999 * _tmp2004;
    _H(15, 2) = _tmp1967 * _tmp1989 + _tmp2000 * _tmp2004;
    _H(15, 3) = _tmp1975 * _tmp1989 + _tmp2001 * _tmp2004;
    _H(15, 4) = _tmp1979 * _tmp1989 + _tmp2002 * _tmp2004;
    _H(15, 5) = _tmp1985 * _tmp1989 + _tmp2003 * _tmp2004;
    _H(15, 6) = 0;
    _H(15, 7) = 0;
    _H(15, 8) = 0;
    _H(15, 9) = 0;
    _H(15, 10) = 0;
    _H(15, 11) = 0;
    _H(15, 12) = 0;
    _H(15, 13) = 0;
    _H(15, 14) = 0;
    _H(15, 15) = std::pow(_tmp1989, Scalar(2)) + std::pow(_tmp2004, Scalar(2)) + _tmp2850;
    _H(15, 16) = 0;
    _H(15, 17) = 0;
    _H(15, 18) = 0;
    _H(15, 19) = 0;
    _H(15, 20) = 0;
    _H(15, 21) = 0;
    _H(15, 22) = 0;
    _H(15, 23) = 0;
    _H(15, 24) = 0;
    _H(15, 25) = 0;
    _H(16, 0) = _tmp2052 * _tmp2076 + _tmp2084 * _tmp2090;
    _H(16, 1) = _tmp2053 * _tmp2076 + _tmp2085 * _tmp2090;
    _H(16, 2) = _tmp2054 * _tmp2076 + _tmp2086 * _tmp2090;
    _H(16, 3) = _tmp2062 * _tmp2076 + _tmp2087 * _tmp2090;
    _H(16, 4) = _tmp2066 * _tmp2076 + _tmp2088 * _tmp2090;
    _H(16, 5) = _tmp2070 * _tmp2076 + _tmp2089 * _tmp2090;
    _H(16, 6) = 0;
    _H(16, 7) = 0;
    _H(16, 8) = 0;
    _H(16, 9) = 0;
    _H(16, 10) = 0;
    _H(16, 11) = 0;
    _H(16, 12) = 0;
    _H(16, 13) = 0;
    _H(16, 14) = 0;
    _H(16, 15) = 0;
    _H(16, 16) = std::pow(_tmp2076, Scalar(2)) + std::pow(_tmp2090, Scalar(2)) + _tmp2851;
    _H(16, 17) = 0;
    _H(16, 18) = 0;
    _H(16, 19) = 0;
    _H(16, 20) = 0;
    _H(16, 21) = 0;
    _H(16, 22) = 0;
    _H(16, 23) = 0;
    _H(16, 24) = 0;
    _H(16, 25) = 0;
    _H(17, 0) = _tmp2136 * _tmp2160 + _tmp2168 * _tmp2175;
    _H(17, 1) = _tmp2137 * _tmp2160 + _tmp2169 * _tmp2175;
    _H(17, 2) = _tmp2138 * _tmp2160 + _tmp2170 * _tmp2175;
    _H(17, 3) = _tmp2146 * _tmp2160 + _tmp2172 * _tmp2175;
    _H(17, 4) = _tmp2151 * _tmp2160 + _tmp2173 * _tmp2175;
    _H(17, 5) = _tmp2155 * _tmp2160 + _tmp2174 * _tmp2175;
    _H(17, 6) = 0;
    _H(17, 7) = 0;
    _H(17, 8) = 0;
    _H(17, 9) = 0;
    _H(17, 10) = 0;
    _H(17, 11) = 0;
    _H(17, 12) = 0;
    _H(17, 13) = 0;
    _H(17, 14) = 0;
    _H(17, 15) = 0;
    _H(17, 16) = 0;
    _H(17, 17) = std::pow(_tmp2160, Scalar(2)) + std::pow(_tmp2175, Scalar(2)) + _tmp2852;
    _H(17, 18) = 0;
    _H(17, 19) = 0;
    _H(17, 20) = 0;
    _H(17, 21) = 0;
    _H(17, 22) = 0;
    _H(17, 23) = 0;
    _H(17, 24) = 0;
    _H(17, 25) = 0;
    _H(18, 0) = _tmp2219 * _tmp2242 + _tmp2250 * _tmp2256;
    _H(18, 1) = _tmp2220 * _tmp2242 + _tmp2251 * _tmp2256;
    _H(18, 2) = _tmp2221 * _tmp2242 + _tmp2252 * _tmp2256;
    _H(18, 3) = _tmp2229 * _tmp2242 + _tmp2253 * _tmp2256;
    _H(18, 4) = _tmp2234 * _tmp2242 + _tmp2254 * _tmp2256;
    _H(18, 5) = _tmp2238 * _tmp2242 + _tmp2255 * _tmp2256;
    _H(18, 6) = 0;
    _H(18, 7) = 0;
    _H(18, 8) = 0;
    _H(18, 9) = 0;
    _H(18, 10) = 0;
    _H(18, 11) = 0;
    _H(18, 12) = 0;
    _H(18, 13) = 0;
    _H(18, 14) = 0;
    _H(18, 15) = 0;
    _H(18, 16) = 0;
    _H(18, 17) = 0;
    _H(18, 18) = std::pow(_tmp2242, Scalar(2)) + std::pow(_tmp2256, Scalar(2)) + _tmp2853;
    _H(18, 19) = 0;
    _H(18, 20) = 0;
    _H(18, 21) = 0;
    _H(18, 22) = 0;
    _H(18, 23) = 0;
    _H(18, 24) = 0;
    _H(18, 25) = 0;
    _H(19, 0) = _tmp2299 * _tmp2326 + _tmp2334 * _tmp2340;
    _H(19, 1) = _tmp2300 * _tmp2326 + _tmp2335 * _tmp2340;
    _H(19, 2) = _tmp2301 * _tmp2326 + _tmp2336 * _tmp2340;
    _H(19, 3) = _tmp2310 * _tmp2326 + _tmp2337 * _tmp2340;
    _H(19, 4) = _tmp2316 * _tmp2326 + _tmp2338 * _tmp2340;
    _H(19, 5) = _tmp2321 * _tmp2326 + _tmp2339 * _tmp2340;
    _H(19, 6) = 0;
    _H(19, 7) = 0;
    _H(19, 8) = 0;
    _H(19, 9) = 0;
    _H(19, 10) = 0;
    _H(19, 11) = 0;
    _H(19, 12) = 0;
    _H(19, 13) = 0;
    _H(19, 14) = 0;
    _H(19, 15) = 0;
    _H(19, 16) = 0;
    _H(19, 17) = 0;
    _H(19, 18) = 0;
    _H(19, 19) = std::pow(_tmp2326, Scalar(2)) + std::pow(_tmp2340, Scalar(2)) + _tmp2854;
    _H(19, 20) = 0;
    _H(19, 21) = 0;
    _H(19, 22) = 0;
    _H(19, 23) = 0;
    _H(19, 24) = 0;
    _H(19, 25) = 0;
    _H(20, 0) = _tmp2386 * _tmp2409 + _tmp2416 * _tmp2423;
    _H(20, 1) = _tmp2387 * _tmp2409 + _tmp2417 * _tmp2423;
    _H(20, 2) = _tmp2388 * _tmp2409 + _tmp2418 * _tmp2423;
    _H(20, 3) = _tmp2396 * _tmp2409 + _tmp2419 * _tmp2423;
    _H(20, 4) = _tmp2401 * _tmp2409 + _tmp2421 * _tmp2423;
    _H(20, 5) = _tmp2405 * _tmp2409 + _tmp2422 * _tmp2423;
    _H(20, 6) = 0;
    _H(20, 7) = 0;
    _H(20, 8) = 0;
    _H(20, 9) = 0;
    _H(20, 10) = 0;
    _H(20, 11) = 0;
    _H(20, 12) = 0;
    _H(20, 13) = 0;
    _H(20, 14) = 0;
    _H(20, 15) = 0;
    _H(20, 16) = 0;
    _H(20, 17) = 0;
    _H(20, 18) = 0;
    _H(20, 19) = 0;
    _H(20, 20) = std::pow(_tmp2409, Scalar(2)) + std::pow(_tmp2423, Scalar(2)) + _tmp2855;
    _H(20, 21) = 0;
    _H(20, 22) = 0;
    _H(20, 23) = 0;
    _H(20, 24) = 0;
    _H(20, 25) = 0;
    _H(21, 0) = _tmp2468 * _tmp2491 + _tmp2499 * _tmp2506;
    _H(21, 1) = _tmp2469 * _tmp2491 + _tmp2500 * _tmp2506;
    _H(21, 2) = _tmp2470 * _tmp2491 + _tmp2501 * _tmp2506;
    _H(21, 3) = _tmp2479 * _tmp2491 + _tmp2502 * _tmp2506;
    _H(21, 4) = _tmp2483 * _tmp2491 + _tmp2504 * _tmp2506;
    _H(21, 5) = _tmp2487 * _tmp2491 + _tmp2505 * _tmp2506;
    _H(21, 6) = 0;
    _H(21, 7) = 0;
    _H(21, 8) = 0;
    _H(21, 9) = 0;
    _H(21, 10) = 0;
    _H(21, 11) = 0;
    _H(21, 12) = 0;
    _H(21, 13) = 0;
    _H(21, 14) = 0;
    _H(21, 15) = 0;
    _H(21, 16) = 0;
    _H(21, 17) = 0;
    _H(21, 18) = 0;
    _H(21, 19) = 0;
    _H(21, 20) = 0;
    _H(21, 21) = std::pow(_tmp2491, Scalar(2)) + std::pow(_tmp2506, Scalar(2)) + _tmp2856;
    _H(21, 22) = 0;
    _H(21, 23) = 0;
    _H(21, 24) = 0;
    _H(21, 25) = 0;
    _H(22, 0) = _tmp2552 * _tmp2574 + _tmp2582 * _tmp2588;
    _H(22, 1) = _tmp2553 * _tmp2574 + _tmp2583 * _tmp2588;
    _H(22, 2) = _tmp2554 * _tmp2574 + _tmp2584 * _tmp2588;
    _H(22, 3) = _tmp2562 * _tmp2574 + _tmp2585 * _tmp2588;
    _H(22, 4) = _tmp2566 * _tmp2574 + _tmp2586 * _tmp2588;
    _H(22, 5) = _tmp2570 * _tmp2574 + _tmp2587 * _tmp2588;
    _H(22, 6) = 0;
    _H(22, 7) = 0;
    _H(22, 8) = 0;
    _H(22, 9) = 0;
    _H(22, 10) = 0;
    _H(22, 11) = 0;
    _H(22, 12) = 0;
    _H(22, 13) = 0;
    _H(22, 14) = 0;
    _H(22, 15) = 0;
    _H(22, 16) = 0;
    _H(22, 17) = 0;
    _H(22, 18) = 0;
    _H(22, 19) = 0;
    _H(22, 20) = 0;
    _H(22, 21) = 0;
    _H(22, 22) = std::pow(_tmp2574, Scalar(2)) + std::pow(_tmp2588, Scalar(2)) + _tmp2857;
    _H(22, 23) = 0;
    _H(22, 24) = 0;
    _H(22, 25) = 0;
    _H(23, 0) = _tmp2635 * _tmp2657 + _tmp2666 * _tmp2672;
    _H(23, 1) = _tmp2636 * _tmp2657 + _tmp2667 * _tmp2672;
    _H(23, 2) = _tmp2637 * _tmp2657 + _tmp2668 * _tmp2672;
    _H(23, 3) = _tmp2645 * _tmp2657 + _tmp2669 * _tmp2672;
    _H(23, 4) = _tmp2649 * _tmp2657 + _tmp2670 * _tmp2672;
    _H(23, 5) = _tmp2653 * _tmp2657 + _tmp2671 * _tmp2672;
    _H(23, 6) = 0;
    _H(23, 7) = 0;
    _H(23, 8) = 0;
    _H(23, 9) = 0;
    _H(23, 10) = 0;
    _H(23, 11) = 0;
    _H(23, 12) = 0;
    _H(23, 13) = 0;
    _H(23, 14) = 0;
    _H(23, 15) = 0;
    _H(23, 16) = 0;
    _H(23, 17) = 0;
    _H(23, 18) = 0;
    _H(23, 19) = 0;
    _H(23, 20) = 0;
    _H(23, 21) = 0;
    _H(23, 22) = 0;
    _H(23, 23) = std::pow(_tmp2657, Scalar(2)) + std::pow(_tmp2672, Scalar(2)) + _tmp2858;
    _H(23, 24) = 0;
    _H(23, 25) = 0;
    _H(24, 0) = _tmp2718 * _tmp2740 + _tmp2748 * _tmp2755;
    _H(24, 1) = _tmp2719 * _tmp2740 + _tmp2749 * _tmp2755;
    _H(24, 2) = _tmp2720 * _tmp2740 + _tmp2750 * _tmp2755;
    _H(24, 3) = _tmp2728 * _tmp2740 + _tmp2751 * _tmp2755;
    _H(24, 4) = _tmp2732 * _tmp2740 + _tmp2752 * _tmp2755;
    _H(24, 5) = _tmp2736 * _tmp2740 + _tmp2753 * _tmp2755;
    _H(24, 6) = 0;
    _H(24, 7) = 0;
    _H(24, 8) = 0;
    _H(24, 9) = 0;
    _H(24, 10) = 0;
    _H(24, 11) = 0;
    _H(24, 12) = 0;
    _H(24, 13) = 0;
    _H(24, 14) = 0;
    _H(24, 15) = 0;
    _H(24, 16) = 0;
    _H(24, 17) = 0;
    _H(24, 18) = 0;
    _H(24, 19) = 0;
    _H(24, 20) = 0;
    _H(24, 21) = 0;
    _H(24, 22) = 0;
    _H(24, 23) = 0;
    _H(24, 24) = std::pow(_tmp2740, Scalar(2)) + std::pow(_tmp2755, Scalar(2)) + _tmp2859;
    _H(24, 25) = 0;
    _H(25, 0) = _tmp2802 * _tmp2826 + _tmp2834 * _tmp2840;
    _H(25, 1) = _tmp2803 * _tmp2826 + _tmp2835 * _tmp2840;
    _H(25, 2) = _tmp2804 * _tmp2826 + _tmp2836 * _tmp2840;
    _H(25, 3) = _tmp2812 * _tmp2826 + _tmp2837 * _tmp2840;
    _H(25, 4) = _tmp2816 * _tmp2826 + _tmp2838 * _tmp2840;
    _H(25, 5) = _tmp2821 * _tmp2826 + _tmp2839 * _tmp2840;
    _H(25, 6) = 0;
    _H(25, 7) = 0;
    _H(25, 8) = 0;
    _H(25, 9) = 0;
    _H(25, 10) = 0;
    _H(25, 11) = 0;
    _H(25, 12) = 0;
    _H(25, 13) = 0;
    _H(25, 14) = 0;
    _H(25, 15) = 0;
    _H(25, 16) = 0;
    _H(25, 17) = 0;
    _H(25, 18) = 0;
    _H(25, 19) = 0;
    _H(25, 20) = 0;
    _H(25, 21) = 0;
    _H(25, 22) = 0;
    _H(25, 23) = 0;
    _H(25, 24) = 0;
    _H(25, 25) = std::pow(_tmp2826, Scalar(2)) + std::pow(_tmp2840, Scalar(2)) + _tmp2860;
  }

  if (Jtb != nullptr) {
    Eigen::Matrix<Scalar, 26, 1>& _Jtb = (*Jtb);

    _Jtb(0, 0) = _tmp1043 * _tmp116 + _tmp1071 * _tmp120 + _tmp1085 * _tmp121 + _tmp1099 * _tmp122 +
                 _tmp1113 * _tmp123 + _tmp1126 * _tmp124 + _tmp1203 * _tmp177 + _tmp1237 * _tmp178 +
                 _tmp1289 * _tmp205 + _tmp1321 * _tmp206 + _tmp1373 * _tmp233 + _tmp1405 * _tmp234 +
                 _tmp1457 * _tmp261 + _tmp1490 * _tmp262 + _tmp1539 * _tmp289 + _tmp1573 * _tmp290 +
                 _tmp1622 * _tmp317 + _tmp1657 * _tmp318 + _tmp1711 * _tmp345 + _tmp1743 * _tmp346 +
                 _tmp1797 * _tmp373 + _tmp1829 * _tmp374 + _tmp1883 * _tmp401 + _tmp1913 * _tmp402 +
                 _tmp1965 * _tmp429 + _tmp1998 * _tmp430 + _tmp2052 * _tmp457 + _tmp2084 * _tmp458 +
                 _tmp2136 * _tmp485 + _tmp2168 * _tmp486 + _tmp2219 * _tmp513 + _tmp2250 * _tmp514 +
                 _tmp2299 * _tmp541 + _tmp2334 * _tmp542 + _tmp2386 * _tmp569 + _tmp2416 * _tmp570 +
                 _tmp2468 * _tmp597 + _tmp2499 * _tmp598 + _tmp2552 * _tmp625 + _tmp2582 * _tmp626 +
                 _tmp2635 * _tmp653 + _tmp2666 * _tmp654 + _tmp2718 * _tmp681 + _tmp2748 * _tmp682 +
                 _tmp2802 * _tmp709 + _tmp2834 * _tmp710 + _tmp56 * _tmp827 + _tmp60 * _tmp846 +
                 _tmp61 * _tmp869 + _tmp62 * _tmp880 + _tmp63 * _tmp892 + _tmp66 * _tmp910;
    _Jtb(1, 0) = _tmp1044 * _tmp116 + _tmp1072 * _tmp120 + _tmp1086 * _tmp121 + _tmp1100 * _tmp122 +
                 _tmp1114 * _tmp123 + _tmp1127 * _tmp124 + _tmp1204 * _tmp177 + _tmp1238 * _tmp178 +
                 _tmp1290 * _tmp205 + _tmp1322 * _tmp206 + _tmp1374 * _tmp233 + _tmp1406 * _tmp234 +
                 _tmp1458 * _tmp261 + _tmp1491 * _tmp262 + _tmp1540 * _tmp289 + _tmp1574 * _tmp290 +
                 _tmp1623 * _tmp317 + _tmp1658 * _tmp318 + _tmp1712 * _tmp345 + _tmp1744 * _tmp346 +
                 _tmp1798 * _tmp373 + _tmp1830 * _tmp374 + _tmp1884 * _tmp401 + _tmp1914 * _tmp402 +
                 _tmp1966 * _tmp429 + _tmp1999 * _tmp430 + _tmp2053 * _tmp457 + _tmp2085 * _tmp458 +
                 _tmp2137 * _tmp485 + _tmp2169 * _tmp486 + _tmp2220 * _tmp513 + _tmp2251 * _tmp514 +
                 _tmp2300 * _tmp541 + _tmp2335 * _tmp542 + _tmp2387 * _tmp569 + _tmp2417 * _tmp570 +
                 _tmp2469 * _tmp597 + _tmp2500 * _tmp598 + _tmp2553 * _tmp625 + _tmp2583 * _tmp626 +
                 _tmp2636 * _tmp653 + _tmp2667 * _tmp654 + _tmp2719 * _tmp681 + _tmp2749 * _tmp682 +
                 _tmp2803 * _tmp709 + _tmp2835 * _tmp710 + _tmp56 * _tmp828 + _tmp60 * _tmp847 +
                 _tmp61 * _tmp870 + _tmp62 * _tmp881 + _tmp63 * _tmp893 + _tmp66 * _tmp911;
    _Jtb(2, 0) = _tmp1045 * _tmp116 + _tmp1073 * _tmp120 + _tmp1087 * _tmp121 + _tmp1101 * _tmp122 +
                 _tmp1115 * _tmp123 + _tmp1128 * _tmp124 + _tmp1205 * _tmp177 + _tmp1239 * _tmp178 +
                 _tmp1291 * _tmp205 + _tmp1323 * _tmp206 + _tmp1375 * _tmp233 + _tmp1407 * _tmp234 +
                 _tmp1459 * _tmp261 + _tmp1492 * _tmp262 + _tmp1541 * _tmp289 + _tmp1575 * _tmp290 +
                 _tmp1624 * _tmp317 + _tmp1659 * _tmp318 + _tmp1713 * _tmp345 + _tmp1745 * _tmp346 +
                 _tmp1799 * _tmp373 + _tmp1831 * _tmp374 + _tmp1885 * _tmp401 + _tmp1915 * _tmp402 +
                 _tmp1967 * _tmp429 + _tmp2000 * _tmp430 + _tmp2054 * _tmp457 + _tmp2086 * _tmp458 +
                 _tmp2138 * _tmp485 + _tmp2170 * _tmp486 + _tmp2221 * _tmp513 + _tmp2252 * _tmp514 +
                 _tmp2301 * _tmp541 + _tmp2336 * _tmp542 + _tmp2388 * _tmp569 + _tmp2418 * _tmp570 +
                 _tmp2470 * _tmp597 + _tmp2501 * _tmp598 + _tmp2554 * _tmp625 + _tmp2584 * _tmp626 +
                 _tmp2637 * _tmp653 + _tmp2668 * _tmp654 + _tmp2720 * _tmp681 + _tmp2750 * _tmp682 +
                 _tmp2804 * _tmp709 + _tmp2836 * _tmp710 + _tmp56 * _tmp829 + _tmp60 * _tmp848 +
                 _tmp61 * _tmp871 + _tmp62 * _tmp882 + _tmp63 * _tmp894 + _tmp66 * _tmp912;
    _Jtb(3, 0) = _tmp1052 * _tmp116 + _tmp1074 * _tmp120 + _tmp1088 * _tmp121 + _tmp1102 * _tmp122 +
                 _tmp1116 * _tmp123 + _tmp1129 * _tmp124 + _tmp1212 * _tmp177 + _tmp1240 * _tmp178 +
                 _tmp1300 * _tmp205 + _tmp1324 * _tmp206 + _tmp1383 * _tmp233 + _tmp1408 * _tmp234 +
                 _tmp1466 * _tmp261 + _tmp1493 * _tmp262 + _tmp1550 * _tmp289 + _tmp1576 * _tmp290 +
                 _tmp1634 * _tmp317 + _tmp1660 * _tmp318 + _tmp1722 * _tmp345 + _tmp1746 * _tmp346 +
                 _tmp1806 * _tmp373 + _tmp1832 * _tmp374 + _tmp1893 * _tmp401 + _tmp1916 * _tmp402 +
                 _tmp1975 * _tmp429 + _tmp2001 * _tmp430 + _tmp2062 * _tmp457 + _tmp2087 * _tmp458 +
                 _tmp2146 * _tmp485 + _tmp2172 * _tmp486 + _tmp2229 * _tmp513 + _tmp2253 * _tmp514 +
                 _tmp2310 * _tmp541 + _tmp2337 * _tmp542 + _tmp2396 * _tmp569 + _tmp2419 * _tmp570 +
                 _tmp2479 * _tmp597 + _tmp2502 * _tmp598 + _tmp2562 * _tmp625 + _tmp2585 * _tmp626 +
                 _tmp2645 * _tmp653 + _tmp2669 * _tmp654 + _tmp2728 * _tmp681 + _tmp2751 * _tmp682 +
                 _tmp2812 * _tmp709 + _tmp2837 * _tmp710 + _tmp56 * _tmp830 + _tmp60 * _tmp849 +
                 _tmp61 * _tmp872 + _tmp62 * _tmp883 + _tmp63 * _tmp895 + _tmp66 * _tmp913;
    _Jtb(4, 0) = _tmp1057 * _tmp116 + _tmp1075 * _tmp120 + _tmp1089 * _tmp121 + _tmp1103 * _tmp122 +
                 _tmp1117 * _tmp123 + _tmp1130 * _tmp124 + _tmp1219 * _tmp177 + _tmp1241 * _tmp178 +
                 _tmp1304 * _tmp205 + _tmp1325 * _tmp206 + _tmp1388 * _tmp233 + _tmp1409 * _tmp234 +
                 _tmp1472 * _tmp261 + _tmp1494 * _tmp262 + _tmp1555 * _tmp289 + _tmp1577 * _tmp290 +
                 _tmp1639 * _tmp317 + _tmp1661 * _tmp318 + _tmp1726 * _tmp345 + _tmp1747 * _tmp346 +
                 _tmp1812 * _tmp373 + _tmp1833 * _tmp374 + _tmp1897 * _tmp401 + _tmp1917 * _tmp402 +
                 _tmp1979 * _tmp429 + _tmp2002 * _tmp430 + _tmp2066 * _tmp457 + _tmp2088 * _tmp458 +
                 _tmp2151 * _tmp485 + _tmp2173 * _tmp486 + _tmp2234 * _tmp513 + _tmp2254 * _tmp514 +
                 _tmp2316 * _tmp541 + _tmp2338 * _tmp542 + _tmp2401 * _tmp569 + _tmp2421 * _tmp570 +
                 _tmp2483 * _tmp597 + _tmp2504 * _tmp598 + _tmp2566 * _tmp625 + _tmp2586 * _tmp626 +
                 _tmp2649 * _tmp653 + _tmp2670 * _tmp654 + _tmp2732 * _tmp681 + _tmp2752 * _tmp682 +
                 _tmp2816 * _tmp709 + _tmp2838 * _tmp710 + _tmp56 * _tmp831 + _tmp60 * _tmp850 +
                 _tmp61 * _tmp873 + _tmp62 * _tmp884 + _tmp63 * _tmp896 + _tmp66 * _tmp914;
    _Jtb(5, 0) = _tmp1061 * _tmp116 + _tmp1076 * _tmp120 + _tmp1090 * _tmp121 + _tmp1104 * _tmp122 +
                 _tmp1118 * _tmp123 + _tmp1131 * _tmp124 + _tmp1223 * _tmp177 + _tmp1242 * _tmp178 +
                 _tmp1308 * _tmp205 + _tmp1326 * _tmp206 + _tmp1392 * _tmp233 + _tmp1410 * _tmp234 +
                 _tmp1476 * _tmp261 + _tmp1495 * _tmp262 + _tmp1560 * _tmp289 + _tmp1578 * _tmp290 +
                 _tmp1645 * _tmp317 + _tmp1662 * _tmp318 + _tmp1731 * _tmp345 + _tmp1748 * _tmp346 +
                 _tmp1817 * _tmp373 + _tmp1834 * _tmp374 + _tmp1901 * _tmp401 + _tmp1918 * _tmp402 +
                 _tmp1985 * _tmp429 + _tmp2003 * _tmp430 + _tmp2070 * _tmp457 + _tmp2089 * _tmp458 +
                 _tmp2155 * _tmp485 + _tmp2174 * _tmp486 + _tmp2238 * _tmp513 + _tmp2255 * _tmp514 +
                 _tmp2321 * _tmp541 + _tmp2339 * _tmp542 + _tmp2405 * _tmp569 + _tmp2422 * _tmp570 +
                 _tmp2487 * _tmp597 + _tmp2505 * _tmp598 + _tmp2570 * _tmp625 + _tmp2587 * _tmp626 +
                 _tmp2653 * _tmp653 + _tmp2671 * _tmp654 + _tmp2736 * _tmp681 + _tmp2753 * _tmp682 +
                 _tmp2821 * _tmp709 + _tmp2839 * _tmp710 + _tmp56 * _tmp832 + _tmp60 * _tmp851 +
                 _tmp61 * _tmp874 + _tmp62 * _tmp885 + _tmp63 * _tmp897 + _tmp66 * _tmp915;
    _Jtb(6, 0) = _tmp1229 * _tmp177 + _tmp1243 * _tmp178 + _tmp2841 * _tmp711;
    _Jtb(7, 0) = _tmp1313 * _tmp205 + _tmp1327 * _tmp206 + _tmp2842 * _tmp714;
    _Jtb(8, 0) = _tmp1396 * _tmp233 + _tmp1411 * _tmp234 + _tmp2843 * _tmp717;
    _Jtb(9, 0) = _tmp1481 * _tmp261 + _tmp1496 * _tmp262 + _tmp2844 * _tmp720;
    _Jtb(10, 0) = _tmp1565 * _tmp289 + _tmp1579 * _tmp290 + _tmp2845 * _tmp723;
    _Jtb(11, 0) = _tmp1649 * _tmp317 + _tmp1663 * _tmp318 + _tmp2846 * _tmp726;
    _Jtb(12, 0) = _tmp1735 * _tmp345 + _tmp1749 * _tmp346 + _tmp2847 * _tmp729;
    _Jtb(13, 0) = _tmp1821 * _tmp373 + _tmp1835 * _tmp374 + _tmp2848 * _tmp732;
    _Jtb(14, 0) = _tmp1905 * _tmp401 + _tmp1920 * _tmp402 + _tmp2849 * _tmp735;
    _Jtb(15, 0) = _tmp1989 * _tmp429 + _tmp2004 * _tmp430 + _tmp2850 * _tmp738;
    _Jtb(16, 0) = _tmp2076 * _tmp457 + _tmp2090 * _tmp458 + _tmp2851 * _tmp741;
    _Jtb(17, 0) = _tmp2160 * _tmp485 + _tmp2175 * _tmp486 + _tmp2852 * _tmp744;
    _Jtb(18, 0) = _tmp2242 * _tmp513 + _tmp2256 * _tmp514 + _tmp2853 * _tmp747;
    _Jtb(19, 0) = _tmp2326 * _tmp541 + _tmp2340 * _tmp542 + _tmp2854 * _tmp750;
    _Jtb(20, 0) = _tmp2409 * _tmp569 + _tmp2423 * _tmp570 + _tmp2855 * _tmp753;
    _Jtb(21, 0) = _tmp2491 * _tmp597 + _tmp2506 * _tmp598 + _tmp2856 * _tmp756;
    _Jtb(22, 0) = _tmp2574 * _tmp625 + _tmp2588 * _tmp626 + _tmp2857 * _tmp759;
    _Jtb(23, 0) = _tmp2657 * _tmp653 + _tmp2672 * _tmp654 + _tmp2858 * _tmp762;
    _Jtb(24, 0) = _tmp2740 * _tmp681 + _tmp2755 * _tmp682 + _tmp2859 * _tmp765;
    _Jtb(25, 0) = _tmp2826 * _tmp709 + _tmp2840 * _tmp710 + _tmp2860 * _tmp768;
  }
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace bundle_adjustment_fixed_size
