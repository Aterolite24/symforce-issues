// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     cpp_templates/function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/pose3.h>

namespace custom_factor_generation {

/**
 * Return the 6dof residual on the relative pose between the given two views. Compares
 * the relative pose between the optimized poses to the relative pose between the priors.
 *
 * This is similar to geo_factors_codegen.between_factor, but it uses a weight and diagonal
 * covariance instead of a sqrt information matrix
 *
 * Args:
 *     nav_T_src: Current pose of the src frame
 *     nav_T_target: Current pose of the target frame
 *     target_T_src_prior: Prior on the pose of src in the target frame
 *     prior_weight: The weight of the Gaussian prior
 *     prior_sigmas: The diagonal of the sqrt covariance matrix
 *     epsilon: Small positive value
 *
 * Outputs:
 *     res: The residual of the between factor
 *     jacobian: (6x12) jacobian of res wrt args nav_T_src (6), nav_T_target (6)
 *     hessian: (12x12) Gauss-Newton hessian for args nav_T_src (6), nav_T_target (6)
 *     rhs: (12x1) Gauss-Newton rhs for args nav_T_src (6), nav_T_target (6)
 */
template <typename Scalar>
void CustomBetweenFactor(const sym::Pose3<Scalar>& nav_T_src,
                         const sym::Pose3<Scalar>& nav_T_target,
                         const sym::Pose3<Scalar>& target_T_src_prior, const Scalar prior_weight,
                         const Eigen::Matrix<Scalar, 6, 1>& prior_sigmas, const Scalar epsilon,
                         Eigen::Matrix<Scalar, 6, 1>* const res = nullptr,
                         Eigen::Matrix<Scalar, 6, 12>* const jacobian = nullptr,
                         Eigen::Matrix<Scalar, 12, 12>* const hessian = nullptr,
                         Eigen::Matrix<Scalar, 12, 1>* const rhs = nullptr) {
  // Total ops: 1078

  // Input arrays
  const Eigen::Matrix<Scalar, 7, 1>& _nav_T_src = nav_T_src.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _nav_T_target = nav_T_target.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _target_T_src_prior = target_T_src_prior.Data();

  // Intermediate terms (292)
  const Scalar _tmp0 = _nav_T_src[3] * _nav_T_target[3];
  const Scalar _tmp1 = _nav_T_src[2] * _nav_T_target[2];
  const Scalar _tmp2 = _nav_T_src[1] * _nav_T_target[1];
  const Scalar _tmp3 = _nav_T_src[0] * _nav_T_target[0];
  const Scalar _tmp4 = _tmp0 + _tmp1 + _tmp2 + _tmp3;
  const Scalar _tmp5 = _nav_T_src[2] * _nav_T_target[1];
  const Scalar _tmp6 = _nav_T_src[3] * _nav_T_target[0];
  const Scalar _tmp7 = _nav_T_src[1] * _nav_T_target[2];
  const Scalar _tmp8 = _nav_T_src[0] * _nav_T_target[3];
  const Scalar _tmp9 = -_tmp5 - _tmp6 + _tmp7 + _tmp8;
  const Scalar _tmp10 = _nav_T_src[2] * _nav_T_target[3];
  const Scalar _tmp11 = _nav_T_src[3] * _nav_T_target[2];
  const Scalar _tmp12 = _nav_T_src[1] * _nav_T_target[0];
  const Scalar _tmp13 = _nav_T_src[0] * _nav_T_target[1];
  const Scalar _tmp14 = _tmp10 - _tmp11 - _tmp12 + _tmp13;
  const Scalar _tmp15 = _nav_T_src[2] * _nav_T_target[0];
  const Scalar _tmp16 = _nav_T_src[3] * _nav_T_target[1];
  const Scalar _tmp17 = _nav_T_src[1] * _nav_T_target[3];
  const Scalar _tmp18 = _nav_T_src[0] * _nav_T_target[2];
  const Scalar _tmp19 = _tmp15 - _tmp16 + _tmp17 - _tmp18;
  const Scalar _tmp20 = -_target_T_src_prior[0] * _tmp4 - _target_T_src_prior[1] * _tmp14 +
                        _target_T_src_prior[2] * _tmp19 + _target_T_src_prior[3] * _tmp9;
  const Scalar _tmp21 = Scalar(1.0) / (epsilon + prior_sigmas(0, 0));
  const Scalar _tmp22 = std::sqrt(prior_weight);
  const Scalar _tmp23 = _target_T_src_prior[3] * _tmp4;
  const Scalar _tmp24 = _target_T_src_prior[0] * _tmp9;
  const Scalar _tmp25 = _target_T_src_prior[2] * _tmp14;
  const Scalar _tmp26 = _target_T_src_prior[1] * _tmp19;
  const Scalar _tmp27 = -_tmp24 - _tmp25 - _tmp26;
  const Scalar _tmp28 = _tmp23 - _tmp27;
  const Scalar _tmp29 = (((_tmp28) > 0) - ((_tmp28) < 0));
  const Scalar _tmp30 = _tmp22 * (2 * std::min<Scalar>(0, _tmp29) + 1);
  const Scalar _tmp31 = 2 * _tmp30;
  const Scalar _tmp32 = _tmp21 * _tmp31;
  const Scalar _tmp33 = std::fabs(_tmp28);
  const Scalar _tmp34 = 1 - epsilon;
  const Scalar _tmp35 = std::min<Scalar>(_tmp33, _tmp34);
  const Scalar _tmp36 = 1 - std::pow(_tmp35, Scalar(2));
  const Scalar _tmp37 = std::acos(_tmp35);
  const Scalar _tmp38 = _tmp37 / std::sqrt(_tmp36);
  const Scalar _tmp39 = _tmp32 * _tmp38;
  const Scalar _tmp40 = _tmp20 * _tmp39;
  const Scalar _tmp41 = _target_T_src_prior[0] * _tmp14 - _target_T_src_prior[1] * _tmp4 -
                        _target_T_src_prior[2] * _tmp9 + _target_T_src_prior[3] * _tmp19;
  const Scalar _tmp42 = Scalar(1.0) / (epsilon + prior_sigmas(1, 0));
  const Scalar _tmp43 = _tmp31 * _tmp42;
  const Scalar _tmp44 = _tmp38 * _tmp43;
  const Scalar _tmp45 = _tmp41 * _tmp44;
  const Scalar _tmp46 = -_target_T_src_prior[0] * _tmp19 + _target_T_src_prior[1] * _tmp9 -
                        _target_T_src_prior[2] * _tmp4 + _target_T_src_prior[3] * _tmp14;
  const Scalar _tmp47 = Scalar(1.0) / (epsilon + prior_sigmas(2, 0));
  const Scalar _tmp48 = _tmp31 * _tmp47;
  const Scalar _tmp49 = _tmp38 * _tmp48;
  const Scalar _tmp50 = _tmp46 * _tmp49;
  const Scalar _tmp51 = std::pow(_nav_T_target[2], Scalar(2));
  const Scalar _tmp52 = 2 * _tmp51;
  const Scalar _tmp53 = -_tmp52;
  const Scalar _tmp54 = std::pow(_nav_T_target[1], Scalar(2));
  const Scalar _tmp55 = 2 * _tmp54;
  const Scalar _tmp56 = 1 - _tmp55;
  const Scalar _tmp57 = _tmp53 + _tmp56;
  const Scalar _tmp58 = 2 * _nav_T_target[2];
  const Scalar _tmp59 = _nav_T_target[3] * _tmp58;
  const Scalar _tmp60 = 2 * _nav_T_target[1];
  const Scalar _tmp61 = _nav_T_target[0] * _tmp60;
  const Scalar _tmp62 = _tmp59 + _tmp61;
  const Scalar _tmp63 = _nav_T_target[5] * _tmp62;
  const Scalar _tmp64 = _nav_T_target[0] * _tmp58;
  const Scalar _tmp65 = _nav_T_target[3] * _tmp60;
  const Scalar _tmp66 = -_tmp65;
  const Scalar _tmp67 = _tmp64 + _tmp66;
  const Scalar _tmp68 = _nav_T_target[6] * _tmp67;
  const Scalar _tmp69 = _nav_T_src[5] * _tmp62 + _nav_T_src[6] * _tmp67;
  const Scalar _tmp70 = _nav_T_src[4] * _tmp57 - _nav_T_target[4] * _tmp57 -
                        _target_T_src_prior[4] - _tmp63 - _tmp68 + _tmp69;
  const Scalar _tmp71 = epsilon + prior_sigmas(3, 0);
  const Scalar _tmp72 = _tmp22 / _tmp71;
  const Scalar _tmp73 = std::pow(_nav_T_target[0], Scalar(2));
  const Scalar _tmp74 = 2 * _tmp73;
  const Scalar _tmp75 = -_tmp74;
  const Scalar _tmp76 = _tmp53 + _tmp75 + 1;
  const Scalar _tmp77 = _nav_T_target[2] * _tmp60;
  const Scalar _tmp78 = 2 * _nav_T_target[0] * _nav_T_target[3];
  const Scalar _tmp79 = _tmp77 + _tmp78;
  const Scalar _tmp80 = _nav_T_target[6] * _tmp79;
  const Scalar _tmp81 = -_tmp59;
  const Scalar _tmp82 = _tmp61 + _tmp81;
  const Scalar _tmp83 = _nav_T_target[4] * _tmp82;
  const Scalar _tmp84 = _nav_T_src[4] * _tmp82 + _nav_T_src[6] * _tmp79;
  const Scalar _tmp85 = _nav_T_src[5] * _tmp76 - _nav_T_target[5] * _tmp76 -
                        _target_T_src_prior[5] - _tmp80 - _tmp83 + _tmp84;
  const Scalar _tmp86 = epsilon + prior_sigmas(4, 0);
  const Scalar _tmp87 = _tmp22 / _tmp86;
  const Scalar _tmp88 = _tmp56 + _tmp75;
  const Scalar _tmp89 = -_tmp78;
  const Scalar _tmp90 = _tmp77 + _tmp89;
  const Scalar _tmp91 = _nav_T_target[5] * _tmp90;
  const Scalar _tmp92 = _tmp64 + _tmp65;
  const Scalar _tmp93 = _nav_T_target[4] * _tmp92;
  const Scalar _tmp94 = _nav_T_src[4] * _tmp92 + _nav_T_src[5] * _tmp90;
  const Scalar _tmp95 = _nav_T_src[6] * _tmp88 - _nav_T_target[6] * _tmp88 -
                        _target_T_src_prior[6] - _tmp91 - _tmp93 + _tmp94;
  const Scalar _tmp96 = epsilon + prior_sigmas(5, 0);
  const Scalar _tmp97 = _tmp22 / _tmp96;
  const Scalar _tmp98 = _tmp20 * _tmp21;
  const Scalar _tmp99 = (Scalar(1) / Scalar(2)) * _tmp15;
  const Scalar _tmp100 = (Scalar(1) / Scalar(2)) * _tmp16;
  const Scalar _tmp101 = (Scalar(1) / Scalar(2)) * _tmp17;
  const Scalar _tmp102 = (Scalar(1) / Scalar(2)) * _tmp18;
  const Scalar _tmp103 = _tmp100 - _tmp101 + _tmp102 - _tmp99;
  const Scalar _tmp104 = _target_T_src_prior[2] * _tmp103;
  const Scalar _tmp105 = (Scalar(1) / Scalar(2)) * _tmp10;
  const Scalar _tmp106 = (Scalar(1) / Scalar(2)) * _tmp11;
  const Scalar _tmp107 = (Scalar(1) / Scalar(2)) * _tmp12;
  const Scalar _tmp108 = (Scalar(1) / Scalar(2)) * _tmp13;
  const Scalar _tmp109 = _tmp105 - _tmp106 - _tmp107 + _tmp108;
  const Scalar _tmp110 = _target_T_src_prior[1] * _tmp109;
  const Scalar _tmp111 = (Scalar(1) / Scalar(2)) * _tmp1;
  const Scalar _tmp112 = (Scalar(1) / Scalar(2)) * _tmp0;
  const Scalar _tmp113 = (Scalar(1) / Scalar(2)) * _tmp2;
  const Scalar _tmp114 = (Scalar(1) / Scalar(2)) * _tmp3;
  const Scalar _tmp115 = _tmp111 + _tmp112 + _tmp113 + _tmp114;
  const Scalar _tmp116 = _target_T_src_prior[0] * _tmp115;
  const Scalar _tmp117 = (Scalar(1) / Scalar(2)) * _tmp5;
  const Scalar _tmp118 = (Scalar(1) / Scalar(2)) * _tmp6;
  const Scalar _tmp119 = (Scalar(1) / Scalar(2)) * _tmp7;
  const Scalar _tmp120 = (Scalar(1) / Scalar(2)) * _tmp8;
  const Scalar _tmp121 = _tmp117 + _tmp118 - _tmp119 - _tmp120;
  const Scalar _tmp122 = _target_T_src_prior[3] * _tmp121;
  const Scalar _tmp123 = _tmp116 + _tmp122;
  const Scalar _tmp124 = _tmp104 + _tmp110 + _tmp123;
  const Scalar _tmp125 = _tmp29 * ((((-_tmp33 + _tmp34) > 0) - ((-_tmp33 + _tmp34) < 0)) + 1);
  const Scalar _tmp126 = _tmp125 / _tmp36;
  const Scalar _tmp127 = _tmp124 * _tmp126;
  const Scalar _tmp128 = _tmp127 * _tmp30;
  const Scalar _tmp129 = _target_T_src_prior[2] * _tmp109;
  const Scalar _tmp130 = -_target_T_src_prior[0] * _tmp121;
  const Scalar _tmp131 = -_target_T_src_prior[1] * _tmp103;
  const Scalar _tmp132 = _target_T_src_prior[3] * _tmp115;
  const Scalar _tmp133 = _tmp131 + _tmp132;
  const Scalar _tmp134 = _tmp30 * _tmp98;
  const Scalar _tmp135 = _tmp125 * _tmp35 * _tmp37 / (_tmp36 * std::sqrt(_tmp36));
  const Scalar _tmp136 = _tmp134 * _tmp135;
  const Scalar _tmp137 =
      _tmp124 * _tmp136 - _tmp128 * _tmp98 + _tmp39 * (_tmp129 + _tmp130 + _tmp133);
  const Scalar _tmp138 = -_tmp105 + _tmp106 + _tmp107 - _tmp108;
  const Scalar _tmp139 = _target_T_src_prior[0] * _tmp138;
  const Scalar _tmp140 = -_tmp117 - _tmp118 + _tmp119 + _tmp120;
  const Scalar _tmp141 = _target_T_src_prior[2] * _tmp140;
  const Scalar _tmp142 = _target_T_src_prior[3] * _tmp103;
  const Scalar _tmp143 = _target_T_src_prior[1] * _tmp115;
  const Scalar _tmp144 = _tmp142 + _tmp143;
  const Scalar _tmp145 = _tmp139 + _tmp141 + _tmp144;
  const Scalar _tmp146 = _tmp126 * _tmp145;
  const Scalar _tmp147 = _tmp146 * _tmp30;
  const Scalar _tmp148 = _target_T_src_prior[0] * _tmp103;
  const Scalar _tmp149 = -_target_T_src_prior[1] * _tmp140;
  const Scalar _tmp150 = _target_T_src_prior[2] * _tmp115;
  const Scalar _tmp151 = _target_T_src_prior[3] * _tmp138;
  const Scalar _tmp152 = _tmp150 + _tmp151;
  const Scalar _tmp153 =
      _tmp136 * _tmp145 - _tmp147 * _tmp98 + _tmp39 * (-_tmp148 + _tmp149 + _tmp152);
  const Scalar _tmp154 = -_tmp100 + _tmp101 - _tmp102 + _tmp99;
  const Scalar _tmp155 = _target_T_src_prior[0] * _tmp154;
  const Scalar _tmp156 = _target_T_src_prior[1] * _tmp121;
  const Scalar _tmp157 = _tmp152 + _tmp155 + _tmp156;
  const Scalar _tmp158 = _tmp126 * _tmp157;
  const Scalar _tmp159 = _tmp158 * _tmp30;
  const Scalar _tmp160 = -_tmp139;
  const Scalar _tmp161 = _target_T_src_prior[3] * _tmp154;
  const Scalar _tmp162 = _target_T_src_prior[2] * _tmp121;
  const Scalar _tmp163 = _tmp161 + _tmp162;
  const Scalar _tmp164 =
      _tmp136 * _tmp157 - _tmp159 * _tmp98 + _tmp39 * (-_tmp143 + _tmp160 + _tmp163);
  const Scalar _tmp165 = -_tmp111 - _tmp112 - _tmp113 - _tmp114;
  const Scalar _tmp166 = _target_T_src_prior[3] * _tmp165;
  const Scalar _tmp167 = _target_T_src_prior[0] * _tmp140;
  const Scalar _tmp168 = std::fabs(_tmp23 + _tmp24 + _tmp25 + _tmp26);
  const Scalar _tmp169 = std::min<Scalar>(_tmp168, _tmp34);
  const Scalar _tmp170 = std::acos(_tmp169);
  const Scalar _tmp171 = 1 - std::pow(_tmp169, Scalar(2));
  const Scalar _tmp172 = _tmp170 / std::sqrt(_tmp171);
  const Scalar _tmp173 = _tmp172 * _tmp32;
  const Scalar _tmp174 = -_tmp104;
  const Scalar _tmp175 = _target_T_src_prior[0] * _tmp165;
  const Scalar _tmp176 = -_tmp175;
  const Scalar _tmp177 = -_tmp110;
  const Scalar _tmp178 = _target_T_src_prior[3] * _tmp140;
  const Scalar _tmp179 = _tmp174 + _tmp176 + _tmp177 - _tmp178;
  const Scalar _tmp180 = ((((-_tmp168 + _tmp34) > 0) - ((-_tmp168 + _tmp34) < 0)) + 1) *
                         (((-_tmp23 + _tmp27) > 0) - ((-_tmp23 + _tmp27) < 0));
  const Scalar _tmp181 = _tmp169 * _tmp170 * _tmp180 / (_tmp171 * std::sqrt(_tmp171));
  const Scalar _tmp182 = _tmp179 * _tmp181;
  const Scalar _tmp183 = _tmp180 / _tmp171;
  const Scalar _tmp184 = _tmp183 * _tmp30;
  const Scalar _tmp185 = _tmp179 * _tmp184;
  const Scalar _tmp186 =
      _tmp134 * _tmp182 + _tmp173 * (_tmp129 + _tmp131 + _tmp166 - _tmp167) - _tmp185 * _tmp98;
  const Scalar _tmp187 = -_tmp155;
  const Scalar _tmp188 = _target_T_src_prior[2] * _tmp165;
  const Scalar _tmp189 = _target_T_src_prior[1] * _tmp165;
  const Scalar _tmp190 = -_tmp189;
  const Scalar _tmp191 = -_tmp141;
  const Scalar _tmp192 = _tmp160 - _tmp161 + _tmp190 + _tmp191;
  const Scalar _tmp193 = _tmp181 * _tmp192;
  const Scalar _tmp194 = _tmp184 * _tmp192;
  const Scalar _tmp195 =
      _tmp134 * _tmp193 + _tmp173 * (_tmp149 + _tmp151 + _tmp187 + _tmp188) - _tmp194 * _tmp98;
  const Scalar _tmp196 = -_tmp188;
  const Scalar _tmp197 = _target_T_src_prior[3] * _tmp109;
  const Scalar _tmp198 = -_tmp156;
  const Scalar _tmp199 = _tmp187 + _tmp196 - _tmp197 + _tmp198;
  const Scalar _tmp200 = _tmp183 * _tmp199;
  const Scalar _tmp201 = _tmp200 * _tmp30;
  const Scalar _tmp202 = -_target_T_src_prior[0] * _tmp109;
  const Scalar _tmp203 = _tmp181 * _tmp199;
  const Scalar _tmp204 =
      _tmp134 * _tmp203 + _tmp173 * (_tmp163 + _tmp190 + _tmp202) - _tmp201 * _tmp98;
  const Scalar _tmp205 = _tmp30 * _tmp41 * _tmp42;
  const Scalar _tmp206 = _tmp124 * _tmp135;
  const Scalar _tmp207 = _tmp148 + _tmp197;
  const Scalar _tmp208 =
      -_tmp127 * _tmp205 + _tmp205 * _tmp206 + _tmp44 * (-_tmp150 + _tmp198 + _tmp207);
  const Scalar _tmp209 = _tmp135 * _tmp145;
  const Scalar _tmp210 = -_target_T_src_prior[2] * _tmp138;
  const Scalar _tmp211 = _tmp167 + _tmp210;
  const Scalar _tmp212 = -_tmp146 * _tmp205 + _tmp205 * _tmp209 + _tmp44 * (_tmp133 + _tmp211);
  const Scalar _tmp213 = _tmp135 * _tmp157;
  const Scalar _tmp214 = -_target_T_src_prior[2] * _tmp154;
  const Scalar _tmp215 = _target_T_src_prior[1] * _tmp138;
  const Scalar _tmp216 =
      -_tmp158 * _tmp205 + _tmp205 * _tmp213 + _tmp44 * (_tmp123 + _tmp214 - _tmp215);
  const Scalar _tmp217 = _tmp172 * _tmp43;
  const Scalar _tmp218 = _tmp183 * _tmp205;
  const Scalar _tmp219 =
      -_tmp179 * _tmp218 + _tmp182 * _tmp205 + _tmp217 * (_tmp149 + _tmp196 + _tmp207);
  const Scalar _tmp220 = _target_T_src_prior[1] * _tmp154;
  const Scalar _tmp221 =
      -_tmp192 * _tmp218 + _tmp193 * _tmp205 + _tmp217 * (_tmp166 + _tmp211 - _tmp220);
  const Scalar _tmp222 =
      -_tmp200 * _tmp205 + _tmp203 * _tmp205 + _tmp217 * (_tmp122 + _tmp175 + _tmp177 + _tmp214);
  const Scalar _tmp223 = _tmp46 * _tmp47;
  const Scalar _tmp224 = _tmp223 * _tmp30;
  const Scalar _tmp225 =
      -_tmp128 * _tmp223 + _tmp206 * _tmp224 + _tmp49 * (_tmp144 - _tmp162 + _tmp202);
  const Scalar _tmp226 = _tmp178 + _tmp215;
  const Scalar _tmp227 =
      -_tmp147 * _tmp223 + _tmp209 * _tmp224 + _tmp49 * (-_tmp116 + _tmp174 + _tmp226);
  const Scalar _tmp228 = _tmp130 + _tmp220;
  const Scalar _tmp229 =
      -_tmp159 * _tmp223 + _tmp213 * _tmp224 + _tmp49 * (_tmp132 + _tmp210 + _tmp228);
  const Scalar _tmp230 = _tmp172 * _tmp48;
  const Scalar _tmp231 =
      _tmp182 * _tmp224 - _tmp185 * _tmp223 + _tmp230 * (_tmp142 + _tmp189 + _tmp191 + _tmp202);
  const Scalar _tmp232 =
      _tmp193 * _tmp224 - _tmp194 * _tmp223 + _tmp230 * (_tmp176 + _tmp214 + _tmp226);
  const Scalar _tmp233 =
      -_tmp201 * _tmp223 + _tmp203 * _tmp224 + _tmp230 * (-_tmp129 + _tmp166 + _tmp228);
  const Scalar _tmp234 = -_tmp77;
  const Scalar _tmp235 = _tmp234 + _tmp78;
  const Scalar _tmp236 = std::pow(_nav_T_target[3], Scalar(2));
  const Scalar _tmp237 = -_tmp236;
  const Scalar _tmp238 = _tmp237 + _tmp54;
  const Scalar _tmp239 = -_tmp51;
  const Scalar _tmp240 = _tmp239 + _tmp73;
  const Scalar _tmp241 = _tmp238 + _tmp240;
  const Scalar _tmp242 = -_tmp64;
  const Scalar _tmp243 = _tmp242 + _tmp66;
  const Scalar _tmp244 = _nav_T_src[4] * _tmp243 + _nav_T_src[5] * _tmp235 +
                         _nav_T_src[6] * _tmp241 - _nav_T_target[4] * _tmp243 -
                         _nav_T_target[5] * _tmp235 - _nav_T_target[6] * _tmp241;
  const Scalar _tmp245 = -_tmp73;
  const Scalar _tmp246 = _tmp236 + _tmp239 + _tmp245 + _tmp54;
  const Scalar _tmp247 =
      _nav_T_src[5] * _tmp246 - _nav_T_target[5] * _tmp246 - _tmp80 - _tmp83 + _tmp84;
  const Scalar _tmp248 = _tmp55 - 1;
  const Scalar _tmp249 = _tmp248 + _tmp52;
  const Scalar _tmp250 = -_tmp61;
  const Scalar _tmp251 = _tmp250 + _tmp81;
  const Scalar _tmp252 = _tmp242 + _tmp65;
  const Scalar _tmp253 = _tmp245 + _tmp51;
  const Scalar _tmp254 = -_tmp54;
  const Scalar _tmp255 = _tmp236 + _tmp254;
  const Scalar _tmp256 = _tmp253 + _tmp255;
  const Scalar _tmp257 =
      _nav_T_src[6] * _tmp256 - _nav_T_target[6] * _tmp256 - _tmp91 - _tmp93 + _tmp94;
  const Scalar _tmp258 = _tmp238 + _tmp253;
  const Scalar _tmp259 = _nav_T_src[4] * _tmp258 + _nav_T_src[5] * _tmp251 +
                         _nav_T_src[6] * _tmp252 - _nav_T_target[4] * _tmp258 -
                         _nav_T_target[5] * _tmp251 - _nav_T_target[6] * _tmp252;
  const Scalar _tmp260 = _tmp250 + _tmp59;
  const Scalar _tmp261 = _tmp52 + _tmp74 - 1;
  const Scalar _tmp262 = _tmp234 + _tmp89;
  const Scalar _tmp263 = _tmp237 + _tmp254 + _tmp51 + _tmp73;
  const Scalar _tmp264 = _nav_T_src[4] * _tmp260 + _nav_T_src[5] * _tmp263 +
                         _nav_T_src[6] * _tmp262 - _nav_T_target[4] * _tmp260 -
                         _nav_T_target[5] * _tmp263 - _nav_T_target[6] * _tmp262;
  const Scalar _tmp265 = _tmp240 + _tmp255;
  const Scalar _tmp266 =
      _nav_T_src[4] * _tmp265 - _nav_T_target[4] * _tmp265 - _tmp63 - _tmp68 + _tmp69;
  const Scalar _tmp267 = _tmp248 + _tmp74;
  const Scalar _tmp268 = prior_weight / std::pow(_tmp71, Scalar(2));
  const Scalar _tmp269 = prior_weight / std::pow(_tmp96, Scalar(2));
  const Scalar _tmp270 = prior_weight / std::pow(_tmp86, Scalar(2));
  const Scalar _tmp271 = _tmp269 * _tmp92;
  const Scalar _tmp272 = _tmp268 * _tmp62;
  const Scalar _tmp273 = _tmp270 * _tmp82;
  const Scalar _tmp274 = _tmp268 * _tmp57;
  const Scalar _tmp275 = _tmp269 * _tmp88;
  const Scalar _tmp276 = _tmp270 * _tmp76;
  const Scalar _tmp277 = _tmp269 * _tmp90;
  const Scalar _tmp278 = _tmp257 * _tmp270;
  const Scalar _tmp279 = _tmp266 * _tmp269;
  const Scalar _tmp280 = _tmp247 * _tmp268;
  const Scalar _tmp281 = _tmp259 * _tmp270;
  const Scalar _tmp282 = _tmp249 * _tmp268;
  const Scalar _tmp283 = _tmp243 * _tmp269;
  const Scalar _tmp284 = _tmp260 * _tmp270;
  const Scalar _tmp285 = _tmp251 * _tmp268;
  const Scalar _tmp286 = _tmp264 * _tmp269;
  const Scalar _tmp287 = _tmp252 * _tmp268;
  const Scalar _tmp288 = _tmp262 * _tmp270;
  const Scalar _tmp289 = _tmp268 * _tmp70;
  const Scalar _tmp290 = _tmp269 * _tmp95;
  const Scalar _tmp291 = _tmp270 * _tmp85;

  // Output terms (4)
  if (res != nullptr) {
    Eigen::Matrix<Scalar, 6, 1>& _res = (*res);

    _res(0, 0) = _tmp40;
    _res(1, 0) = _tmp45;
    _res(2, 0) = _tmp50;
    _res(3, 0) = _tmp70 * _tmp72;
    _res(4, 0) = _tmp85 * _tmp87;
    _res(5, 0) = _tmp95 * _tmp97;
  }

  if (jacobian != nullptr) {
    Eigen::Matrix<Scalar, 6, 12>& _jacobian = (*jacobian);

    _jacobian(0, 0) = _tmp137;
    _jacobian(0, 1) = _tmp153;
    _jacobian(0, 2) = _tmp164;
    _jacobian(0, 3) = 0;
    _jacobian(0, 4) = 0;
    _jacobian(0, 5) = 0;
    _jacobian(0, 6) = _tmp186;
    _jacobian(0, 7) = _tmp195;
    _jacobian(0, 8) = _tmp204;
    _jacobian(0, 9) = 0;
    _jacobian(0, 10) = 0;
    _jacobian(0, 11) = 0;
    _jacobian(1, 0) = _tmp208;
    _jacobian(1, 1) = _tmp212;
    _jacobian(1, 2) = _tmp216;
    _jacobian(1, 3) = 0;
    _jacobian(1, 4) = 0;
    _jacobian(1, 5) = 0;
    _jacobian(1, 6) = _tmp219;
    _jacobian(1, 7) = _tmp221;
    _jacobian(1, 8) = _tmp222;
    _jacobian(1, 9) = 0;
    _jacobian(1, 10) = 0;
    _jacobian(1, 11) = 0;
    _jacobian(2, 0) = _tmp225;
    _jacobian(2, 1) = _tmp227;
    _jacobian(2, 2) = _tmp229;
    _jacobian(2, 3) = 0;
    _jacobian(2, 4) = 0;
    _jacobian(2, 5) = 0;
    _jacobian(2, 6) = _tmp231;
    _jacobian(2, 7) = _tmp232;
    _jacobian(2, 8) = _tmp233;
    _jacobian(2, 9) = 0;
    _jacobian(2, 10) = 0;
    _jacobian(2, 11) = 0;
    _jacobian(3, 0) = 0;
    _jacobian(3, 1) = 0;
    _jacobian(3, 2) = 0;
    _jacobian(3, 3) = _tmp57 * _tmp72;
    _jacobian(3, 4) = _tmp62 * _tmp72;
    _jacobian(3, 5) = _tmp67 * _tmp72;
    _jacobian(3, 6) = 0;
    _jacobian(3, 7) = _tmp244 * _tmp72;
    _jacobian(3, 8) = _tmp247 * _tmp72;
    _jacobian(3, 9) = _tmp249 * _tmp72;
    _jacobian(3, 10) = _tmp251 * _tmp72;
    _jacobian(3, 11) = _tmp252 * _tmp72;
    _jacobian(4, 0) = 0;
    _jacobian(4, 1) = 0;
    _jacobian(4, 2) = 0;
    _jacobian(4, 3) = _tmp82 * _tmp87;
    _jacobian(4, 4) = _tmp76 * _tmp87;
    _jacobian(4, 5) = _tmp79 * _tmp87;
    _jacobian(4, 6) = _tmp257 * _tmp87;
    _jacobian(4, 7) = 0;
    _jacobian(4, 8) = _tmp259 * _tmp87;
    _jacobian(4, 9) = _tmp260 * _tmp87;
    _jacobian(4, 10) = _tmp261 * _tmp87;
    _jacobian(4, 11) = _tmp262 * _tmp87;
    _jacobian(5, 0) = 0;
    _jacobian(5, 1) = 0;
    _jacobian(5, 2) = 0;
    _jacobian(5, 3) = _tmp92 * _tmp97;
    _jacobian(5, 4) = _tmp90 * _tmp97;
    _jacobian(5, 5) = _tmp88 * _tmp97;
    _jacobian(5, 6) = _tmp264 * _tmp97;
    _jacobian(5, 7) = _tmp266 * _tmp97;
    _jacobian(5, 8) = 0;
    _jacobian(5, 9) = _tmp243 * _tmp97;
    _jacobian(5, 10) = _tmp235 * _tmp97;
    _jacobian(5, 11) = _tmp267 * _tmp97;
  }

  if (hessian != nullptr) {
    Eigen::Matrix<Scalar, 12, 12>& _hessian = (*hessian);

    _hessian(0, 0) =
        std::pow(_tmp137, Scalar(2)) + std::pow(_tmp208, Scalar(2)) + std::pow(_tmp225, Scalar(2));
    _hessian(0, 1) = 0;
    _hessian(0, 2) = 0;
    _hessian(0, 3) = 0;
    _hessian(0, 4) = 0;
    _hessian(0, 5) = 0;
    _hessian(0, 6) = 0;
    _hessian(0, 7) = 0;
    _hessian(0, 8) = 0;
    _hessian(0, 9) = 0;
    _hessian(0, 10) = 0;
    _hessian(0, 11) = 0;
    _hessian(1, 0) = _tmp137 * _tmp153 + _tmp208 * _tmp212 + _tmp225 * _tmp227;
    _hessian(1, 1) =
        std::pow(_tmp153, Scalar(2)) + std::pow(_tmp212, Scalar(2)) + std::pow(_tmp227, Scalar(2));
    _hessian(1, 2) = 0;
    _hessian(1, 3) = 0;
    _hessian(1, 4) = 0;
    _hessian(1, 5) = 0;
    _hessian(1, 6) = 0;
    _hessian(1, 7) = 0;
    _hessian(1, 8) = 0;
    _hessian(1, 9) = 0;
    _hessian(1, 10) = 0;
    _hessian(1, 11) = 0;
    _hessian(2, 0) = _tmp137 * _tmp164 + _tmp208 * _tmp216 + _tmp225 * _tmp229;
    _hessian(2, 1) = _tmp153 * _tmp164 + _tmp212 * _tmp216 + _tmp227 * _tmp229;
    _hessian(2, 2) =
        std::pow(_tmp164, Scalar(2)) + std::pow(_tmp216, Scalar(2)) + std::pow(_tmp229, Scalar(2));
    _hessian(2, 3) = 0;
    _hessian(2, 4) = 0;
    _hessian(2, 5) = 0;
    _hessian(2, 6) = 0;
    _hessian(2, 7) = 0;
    _hessian(2, 8) = 0;
    _hessian(2, 9) = 0;
    _hessian(2, 10) = 0;
    _hessian(2, 11) = 0;
    _hessian(3, 0) = 0;
    _hessian(3, 1) = 0;
    _hessian(3, 2) = 0;
    _hessian(3, 3) = _tmp268 * std::pow(_tmp57, Scalar(2)) + _tmp269 * std::pow(_tmp92, Scalar(2)) +
                     _tmp270 * std::pow(_tmp82, Scalar(2));
    _hessian(3, 4) = 0;
    _hessian(3, 5) = 0;
    _hessian(3, 6) = 0;
    _hessian(3, 7) = 0;
    _hessian(3, 8) = 0;
    _hessian(3, 9) = 0;
    _hessian(3, 10) = 0;
    _hessian(3, 11) = 0;
    _hessian(4, 0) = 0;
    _hessian(4, 1) = 0;
    _hessian(4, 2) = 0;
    _hessian(4, 3) = _tmp271 * _tmp90 + _tmp272 * _tmp57 + _tmp273 * _tmp76;
    _hessian(4, 4) = _tmp268 * std::pow(_tmp62, Scalar(2)) + _tmp269 * std::pow(_tmp90, Scalar(2)) +
                     _tmp270 * std::pow(_tmp76, Scalar(2));
    _hessian(4, 5) = 0;
    _hessian(4, 6) = 0;
    _hessian(4, 7) = 0;
    _hessian(4, 8) = 0;
    _hessian(4, 9) = 0;
    _hessian(4, 10) = 0;
    _hessian(4, 11) = 0;
    _hessian(5, 0) = 0;
    _hessian(5, 1) = 0;
    _hessian(5, 2) = 0;
    _hessian(5, 3) = _tmp271 * _tmp88 + _tmp273 * _tmp79 + _tmp274 * _tmp67;
    _hessian(5, 4) = _tmp272 * _tmp67 + _tmp275 * _tmp90 + _tmp276 * _tmp79;
    _hessian(5, 5) = _tmp268 * std::pow(_tmp67, Scalar(2)) + _tmp269 * std::pow(_tmp88, Scalar(2)) +
                     _tmp270 * std::pow(_tmp79, Scalar(2));
    _hessian(5, 6) = 0;
    _hessian(5, 7) = 0;
    _hessian(5, 8) = 0;
    _hessian(5, 9) = 0;
    _hessian(5, 10) = 0;
    _hessian(5, 11) = 0;
    _hessian(6, 0) = _tmp137 * _tmp186 + _tmp208 * _tmp219 + _tmp225 * _tmp231;
    _hessian(6, 1) = _tmp153 * _tmp186 + _tmp212 * _tmp219 + _tmp227 * _tmp231;
    _hessian(6, 2) = _tmp164 * _tmp186 + _tmp216 * _tmp219 + _tmp229 * _tmp231;
    _hessian(6, 3) = _tmp257 * _tmp273 + _tmp264 * _tmp271;
    _hessian(6, 4) = _tmp257 * _tmp276 + _tmp264 * _tmp277;
    _hessian(6, 5) = _tmp264 * _tmp275 + _tmp278 * _tmp79;
    _hessian(6, 6) = std::pow(_tmp186, Scalar(2)) + std::pow(_tmp219, Scalar(2)) +
                     std::pow(_tmp231, Scalar(2)) + std::pow(_tmp257, Scalar(2)) * _tmp270 +
                     std::pow(_tmp264, Scalar(2)) * _tmp269;
    _hessian(6, 7) = 0;
    _hessian(6, 8) = 0;
    _hessian(6, 9) = 0;
    _hessian(6, 10) = 0;
    _hessian(6, 11) = 0;
    _hessian(7, 0) = _tmp137 * _tmp195 + _tmp208 * _tmp221 + _tmp225 * _tmp232;
    _hessian(7, 1) = _tmp153 * _tmp195 + _tmp212 * _tmp221 + _tmp227 * _tmp232;
    _hessian(7, 2) = _tmp164 * _tmp195 + _tmp216 * _tmp221 + _tmp229 * _tmp232;
    _hessian(7, 3) = _tmp244 * _tmp274 + _tmp279 * _tmp92;
    _hessian(7, 4) = _tmp244 * _tmp272 + _tmp279 * _tmp90;
    _hessian(7, 5) = _tmp244 * _tmp268 * _tmp67 + _tmp279 * _tmp88;
    _hessian(7, 6) = _tmp186 * _tmp195 + _tmp219 * _tmp221 + _tmp231 * _tmp232 + _tmp264 * _tmp279;
    _hessian(7, 7) = std::pow(_tmp195, Scalar(2)) + std::pow(_tmp221, Scalar(2)) +
                     std::pow(_tmp232, Scalar(2)) + std::pow(_tmp244, Scalar(2)) * _tmp268 +
                     std::pow(_tmp266, Scalar(2)) * _tmp269;
    _hessian(7, 8) = 0;
    _hessian(7, 9) = 0;
    _hessian(7, 10) = 0;
    _hessian(7, 11) = 0;
    _hessian(8, 0) = _tmp137 * _tmp204 + _tmp208 * _tmp222 + _tmp225 * _tmp233;
    _hessian(8, 1) = _tmp153 * _tmp204 + _tmp212 * _tmp222 + _tmp227 * _tmp233;
    _hessian(8, 2) = _tmp164 * _tmp204 + _tmp216 * _tmp222 + _tmp229 * _tmp233;
    _hessian(8, 3) = _tmp259 * _tmp273 + _tmp280 * _tmp57;
    _hessian(8, 4) = _tmp259 * _tmp276 + _tmp280 * _tmp62;
    _hessian(8, 5) = _tmp280 * _tmp67 + _tmp281 * _tmp79;
    _hessian(8, 6) = _tmp186 * _tmp204 + _tmp219 * _tmp222 + _tmp231 * _tmp233 + _tmp257 * _tmp281;
    _hessian(8, 7) = _tmp195 * _tmp204 + _tmp221 * _tmp222 + _tmp232 * _tmp233 + _tmp244 * _tmp280;
    _hessian(8, 8) = std::pow(_tmp204, Scalar(2)) + std::pow(_tmp222, Scalar(2)) +
                     std::pow(_tmp233, Scalar(2)) + std::pow(_tmp247, Scalar(2)) * _tmp268 +
                     std::pow(_tmp259, Scalar(2)) * _tmp270;
    _hessian(8, 9) = 0;
    _hessian(8, 10) = 0;
    _hessian(8, 11) = 0;
    _hessian(9, 0) = 0;
    _hessian(9, 1) = 0;
    _hessian(9, 2) = 0;
    _hessian(9, 3) = _tmp260 * _tmp273 + _tmp282 * _tmp57 + _tmp283 * _tmp92;
    _hessian(9, 4) = _tmp249 * _tmp272 + _tmp283 * _tmp90 + _tmp284 * _tmp76;
    _hessian(9, 5) = _tmp282 * _tmp67 + _tmp283 * _tmp88 + _tmp284 * _tmp79;
    _hessian(9, 6) = _tmp257 * _tmp284 + _tmp264 * _tmp283;
    _hessian(9, 7) = _tmp244 * _tmp282 + _tmp266 * _tmp283;
    _hessian(9, 8) = _tmp249 * _tmp280 + _tmp259 * _tmp284;
    _hessian(9, 9) = std::pow(_tmp243, Scalar(2)) * _tmp269 +
                     std::pow(_tmp249, Scalar(2)) * _tmp268 +
                     std::pow(_tmp260, Scalar(2)) * _tmp270;
    _hessian(9, 10) = 0;
    _hessian(9, 11) = 0;
    _hessian(10, 0) = 0;
    _hessian(10, 1) = 0;
    _hessian(10, 2) = 0;
    _hessian(10, 3) = _tmp235 * _tmp271 + _tmp261 * _tmp273 + _tmp285 * _tmp57;
    _hessian(10, 4) = _tmp235 * _tmp277 + _tmp251 * _tmp272 + _tmp261 * _tmp276;
    _hessian(10, 5) = _tmp235 * _tmp275 + _tmp261 * _tmp270 * _tmp79 + _tmp285 * _tmp67;
    _hessian(10, 6) = _tmp235 * _tmp286 + _tmp261 * _tmp278;
    _hessian(10, 7) = _tmp235 * _tmp279 + _tmp244 * _tmp285;
    _hessian(10, 8) = _tmp251 * _tmp280 + _tmp261 * _tmp281;
    _hessian(10, 9) = _tmp235 * _tmp283 + _tmp251 * _tmp282 + _tmp261 * _tmp284;
    _hessian(10, 10) = std::pow(_tmp235, Scalar(2)) * _tmp269 +
                       std::pow(_tmp251, Scalar(2)) * _tmp268 +
                       std::pow(_tmp261, Scalar(2)) * _tmp270;
    _hessian(10, 11) = 0;
    _hessian(11, 0) = 0;
    _hessian(11, 1) = 0;
    _hessian(11, 2) = 0;
    _hessian(11, 3) = _tmp262 * _tmp273 + _tmp267 * _tmp271 + _tmp287 * _tmp57;
    _hessian(11, 4) = _tmp252 * _tmp272 + _tmp262 * _tmp276 + _tmp267 * _tmp277;
    _hessian(11, 5) = _tmp267 * _tmp275 + _tmp287 * _tmp67 + _tmp288 * _tmp79;
    _hessian(11, 6) = _tmp257 * _tmp288 + _tmp267 * _tmp286;
    _hessian(11, 7) = _tmp244 * _tmp287 + _tmp267 * _tmp279;
    _hessian(11, 8) = _tmp252 * _tmp280 + _tmp262 * _tmp281;
    _hessian(11, 9) = _tmp249 * _tmp287 + _tmp262 * _tmp284 + _tmp267 * _tmp283;
    _hessian(11, 10) = _tmp235 * _tmp267 * _tmp269 + _tmp251 * _tmp287 + _tmp261 * _tmp288;
    _hessian(11, 11) = std::pow(_tmp252, Scalar(2)) * _tmp268 +
                       std::pow(_tmp262, Scalar(2)) * _tmp270 +
                       std::pow(_tmp267, Scalar(2)) * _tmp269;
  }

  if (rhs != nullptr) {
    Eigen::Matrix<Scalar, 12, 1>& _rhs = (*rhs);

    _rhs(0, 0) = _tmp137 * _tmp40 + _tmp208 * _tmp45 + _tmp225 * _tmp50;
    _rhs(1, 0) = _tmp153 * _tmp40 + _tmp212 * _tmp45 + _tmp227 * _tmp50;
    _rhs(2, 0) = _tmp164 * _tmp40 + _tmp216 * _tmp45 + _tmp229 * _tmp50;
    _rhs(3, 0) = _tmp271 * _tmp95 + _tmp273 * _tmp85 + _tmp289 * _tmp57;
    _rhs(4, 0) = _tmp289 * _tmp62 + _tmp290 * _tmp90 + _tmp291 * _tmp76;
    _rhs(5, 0) = _tmp275 * _tmp95 + _tmp289 * _tmp67 + _tmp291 * _tmp79;
    _rhs(6, 0) = _tmp186 * _tmp40 + _tmp219 * _tmp45 + _tmp231 * _tmp50 + _tmp257 * _tmp291 +
                 _tmp264 * _tmp290;
    _rhs(7, 0) = _tmp195 * _tmp40 + _tmp221 * _tmp45 + _tmp232 * _tmp50 + _tmp244 * _tmp289 +
                 _tmp279 * _tmp95;
    _rhs(8, 0) = _tmp204 * _tmp40 + _tmp222 * _tmp45 + _tmp233 * _tmp50 + _tmp259 * _tmp291 +
                 _tmp280 * _tmp70;
    _rhs(9, 0) = _tmp249 * _tmp289 + _tmp260 * _tmp291 + _tmp283 * _tmp95;
    _rhs(10, 0) = _tmp235 * _tmp290 + _tmp251 * _tmp289 + _tmp261 * _tmp291;
    _rhs(11, 0) = _tmp252 * _tmp289 + _tmp262 * _tmp291 + _tmp267 * _tmp290;
  }
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace custom_factor_generation
