// -----------------------------------------------------------------------------
// This file was autogenerated by symforce. Do NOT modify by hand.
// -----------------------------------------------------------------------------
#pragma once

#include <Eigen/Dense>
#include <Eigen/Sparse>
#include <sym/pose3.h>
#include <sym/rot3.h>

namespace bundle_adjustment_example {

/**
 * This function was autogenerated. Do not modify by hand.
 *
 * Computes the linearization of the residual around the given state,
 * and returns the relevant information about the resulting linear system.
 *
 * Input args:
 *     state (Values): The state to linearize around
 *
 * Output args:
 *     b (Eigen::Matrix*): The residual vector
 *     J (Eigen::SparseMatrix*): The Jacobian of the residual
 *     Jtb (Eigen::Matrix*): J.T * b
 *     H (Eigen::SparseMatrix*): The Hessian approximation J.T * J
 *
 */
template <typename Scalar>
void Linearization(
    const sym::LinearCameraCal<Scalar>& views_0_calibration, const sym::Pose3<Scalar>& views_0_pose,
    const sym::LinearCameraCal<Scalar>& views_1_calibration, const sym::Pose3<Scalar>& views_1_pose,
    const sym::Rot3<Scalar>& priors_0_0_target_R_src,
    const Eigen::Matrix<Scalar, 3, 1>& priors_0_0_target_t_src, const Scalar priors_0_0_weight,
    const Eigen::Matrix<Scalar, 6, 1>& priors_0_0_sigmas,
    const sym::Rot3<Scalar>& priors_0_1_target_R_src,
    const Eigen::Matrix<Scalar, 3, 1>& priors_0_1_target_t_src, const Scalar priors_0_1_weight,
    const Eigen::Matrix<Scalar, 6, 1>& priors_0_1_sigmas,
    const sym::Rot3<Scalar>& priors_1_0_target_R_src,
    const Eigen::Matrix<Scalar, 3, 1>& priors_1_0_target_t_src, const Scalar priors_1_0_weight,
    const Eigen::Matrix<Scalar, 6, 1>& priors_1_0_sigmas,
    const sym::Rot3<Scalar>& priors_1_1_target_R_src,
    const Eigen::Matrix<Scalar, 3, 1>& priors_1_1_target_t_src, const Scalar priors_1_1_weight,
    const Eigen::Matrix<Scalar, 6, 1>& priors_1_1_sigmas,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_0_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_0_target_coords, const Scalar matches_0_0_weight,
    const Scalar matches_0_0_inverse_range_prior,
    const Scalar matches_0_0_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_1_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_1_target_coords, const Scalar matches_0_1_weight,
    const Scalar matches_0_1_inverse_range_prior,
    const Scalar matches_0_1_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_2_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_2_target_coords, const Scalar matches_0_2_weight,
    const Scalar matches_0_2_inverse_range_prior,
    const Scalar matches_0_2_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_3_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_3_target_coords, const Scalar matches_0_3_weight,
    const Scalar matches_0_3_inverse_range_prior,
    const Scalar matches_0_3_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_4_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_4_target_coords, const Scalar matches_0_4_weight,
    const Scalar matches_0_4_inverse_range_prior,
    const Scalar matches_0_4_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_5_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_5_target_coords, const Scalar matches_0_5_weight,
    const Scalar matches_0_5_inverse_range_prior,
    const Scalar matches_0_5_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_6_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_6_target_coords, const Scalar matches_0_6_weight,
    const Scalar matches_0_6_inverse_range_prior,
    const Scalar matches_0_6_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_7_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_7_target_coords, const Scalar matches_0_7_weight,
    const Scalar matches_0_7_inverse_range_prior,
    const Scalar matches_0_7_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_8_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_8_target_coords, const Scalar matches_0_8_weight,
    const Scalar matches_0_8_inverse_range_prior,
    const Scalar matches_0_8_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_9_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_9_target_coords, const Scalar matches_0_9_weight,
    const Scalar matches_0_9_inverse_range_prior,
    const Scalar matches_0_9_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_10_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_10_target_coords, const Scalar matches_0_10_weight,
    const Scalar matches_0_10_inverse_range_prior,
    const Scalar matches_0_10_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_11_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_11_target_coords, const Scalar matches_0_11_weight,
    const Scalar matches_0_11_inverse_range_prior,
    const Scalar matches_0_11_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_12_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_12_target_coords, const Scalar matches_0_12_weight,
    const Scalar matches_0_12_inverse_range_prior,
    const Scalar matches_0_12_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_13_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_13_target_coords, const Scalar matches_0_13_weight,
    const Scalar matches_0_13_inverse_range_prior,
    const Scalar matches_0_13_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_14_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_14_target_coords, const Scalar matches_0_14_weight,
    const Scalar matches_0_14_inverse_range_prior,
    const Scalar matches_0_14_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_15_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_15_target_coords, const Scalar matches_0_15_weight,
    const Scalar matches_0_15_inverse_range_prior,
    const Scalar matches_0_15_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_16_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_16_target_coords, const Scalar matches_0_16_weight,
    const Scalar matches_0_16_inverse_range_prior,
    const Scalar matches_0_16_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_17_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_17_target_coords, const Scalar matches_0_17_weight,
    const Scalar matches_0_17_inverse_range_prior,
    const Scalar matches_0_17_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_18_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_18_target_coords, const Scalar matches_0_18_weight,
    const Scalar matches_0_18_inverse_range_prior,
    const Scalar matches_0_18_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_19_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_19_target_coords, const Scalar matches_0_19_weight,
    const Scalar matches_0_19_inverse_range_prior,
    const Scalar matches_0_19_inverse_range_prior_sigma, const Scalar landmarks_0_,
    const Scalar landmarks_1_, const Scalar landmarks_2_, const Scalar landmarks_3_,
    const Scalar landmarks_4_, const Scalar landmarks_5_, const Scalar landmarks_6_,
    const Scalar landmarks_7_, const Scalar landmarks_8_, const Scalar landmarks_9_,
    const Scalar landmarks_10_, const Scalar landmarks_11_, const Scalar landmarks_12_,
    const Scalar landmarks_13_, const Scalar landmarks_14_, const Scalar landmarks_15_,
    const Scalar landmarks_16_, const Scalar landmarks_17_, const Scalar landmarks_18_,
    const Scalar landmarks_19_, const Scalar epsilon,
    const Scalar costs_reprojection_error_gnc_scale, const Scalar costs_reprojection_error_gnc_mu,
    Eigen::Matrix<Scalar, 72, 1>* const b = nullptr, Eigen::SparseMatrix<Scalar>* const J = nullptr,
    Eigen::Matrix<Scalar, 26, 1>* const Jtb = nullptr,
    Eigen::SparseMatrix<Scalar>* const H = nullptr) {
  // Total ops: 12375

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _views_0_calibration = views_0_calibration.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _views_0_pose = views_0_pose.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _views_1_calibration = views_1_calibration.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _views_1_pose = views_1_pose.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _priors_0_0_target_R_src = priors_0_0_target_R_src.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _priors_0_1_target_R_src = priors_0_1_target_R_src.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _priors_1_0_target_R_src = priors_1_0_target_R_src.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _priors_1_1_target_R_src = priors_1_1_target_R_src.Data();

  // Intermediate terms (2648)
  const Scalar _tmp0 = _views_0_pose[1] * _views_1_pose[0];
  const Scalar _tmp1 = _views_0_pose[0] * _views_1_pose[1];
  const Scalar _tmp2 = _views_0_pose[3] * _views_1_pose[2];
  const Scalar _tmp3 = _views_0_pose[2] * _views_1_pose[3];
  const Scalar _tmp4 = -_tmp0 + _tmp1 - _tmp2 + _tmp3;
  const Scalar _tmp5 = _views_0_pose[2] * _views_1_pose[0];
  const Scalar _tmp6 = _views_0_pose[0] * _views_1_pose[2];
  const Scalar _tmp7 = _views_0_pose[3] * _views_1_pose[1];
  const Scalar _tmp8 = _views_0_pose[1] * _views_1_pose[3];
  const Scalar _tmp9 = _tmp5 - _tmp6 - _tmp7 + _tmp8;
  const Scalar _tmp10 = _views_0_pose[2] * _views_1_pose[1];
  const Scalar _tmp11 = _views_0_pose[1] * _views_1_pose[2];
  const Scalar _tmp12 = _views_0_pose[3] * _views_1_pose[0];
  const Scalar _tmp13 = _views_0_pose[0] * _views_1_pose[3];
  const Scalar _tmp14 = -_tmp10 + _tmp11 - _tmp12 + _tmp13;
  const Scalar _tmp15 = _views_0_pose[0] * _views_1_pose[0] + _views_0_pose[1] * _views_1_pose[1] +
                        _views_0_pose[2] * _views_1_pose[2] + _views_0_pose[3] * _views_1_pose[3];
  const Scalar _tmp16 = _priors_0_1_target_R_src[0] * _tmp15 + _priors_0_1_target_R_src[1] * _tmp4 -
                        _priors_0_1_target_R_src[2] * _tmp9 - _priors_0_1_target_R_src[3] * _tmp14;
  const Scalar _tmp17 = _priors_0_1_target_R_src[0] * _tmp14 + _priors_0_1_target_R_src[1] * _tmp9 +
                        _priors_0_1_target_R_src[2] * _tmp4 + _priors_0_1_target_R_src[3] * _tmp15;
  const Scalar _tmp18 = std::fabs(_tmp17);
  const Scalar _tmp19 = -epsilon;
  const Scalar _tmp20 = _tmp19 + 1;
  const Scalar _tmp21 = std::min<Scalar>(_tmp18, _tmp20);
  const Scalar _tmp22 = std::acos(_tmp21);
  const Scalar _tmp23 = 1 - (_tmp21 * _tmp21);
  const Scalar _tmp24 = 2 / std::sqrt(_tmp23);
  const Scalar _tmp25 = _tmp22 * _tmp24;
  const Scalar _tmp26 = std::sqrt(priors_0_1_weight);
  const Scalar _tmp27 = (((_tmp17) > 0) - ((_tmp17) < 0));
  const Scalar _tmp28 = _tmp26 * (2 * std::min<Scalar>(0, _tmp27) + 1);
  const Scalar _tmp29 = _tmp28 / (epsilon + priors_0_1_sigmas(0, 0));
  const Scalar _tmp30 = _tmp25 * _tmp29;
  const Scalar _tmp31 = _tmp16 * _tmp30;
  const Scalar _tmp32 = -_priors_0_1_target_R_src[0] * _tmp4 +
                        _priors_0_1_target_R_src[1] * _tmp15 +
                        _priors_0_1_target_R_src[2] * _tmp14 - _priors_0_1_target_R_src[3] * _tmp9;
  const Scalar _tmp33 = _tmp28 / (epsilon + priors_0_1_sigmas(1, 0));
  const Scalar _tmp34 = _tmp25 * _tmp33;
  const Scalar _tmp35 = _tmp32 * _tmp34;
  const Scalar _tmp36 = _priors_0_1_target_R_src[0] * _tmp9 - _priors_0_1_target_R_src[1] * _tmp14 +
                        _priors_0_1_target_R_src[2] * _tmp15 - _priors_0_1_target_R_src[3] * _tmp4;
  const Scalar _tmp37 = _tmp28 / (epsilon + priors_0_1_sigmas(2, 0));
  const Scalar _tmp38 = _tmp22 * _tmp37;
  const Scalar _tmp39 = _tmp24 * _tmp38;
  const Scalar _tmp40 = _tmp36 * _tmp39;
  const Scalar _tmp41 = _views_0_pose[4] - _views_1_pose[4];
  const Scalar _tmp42 = -_tmp41 + priors_0_1_target_t_src(0, 0);
  const Scalar _tmp43 = epsilon + priors_0_1_sigmas(3, 0);
  const Scalar _tmp44 = _tmp26 / _tmp43;
  const Scalar _tmp45 = _views_0_pose[5] - _views_1_pose[5];
  const Scalar _tmp46 = -_tmp45 + priors_0_1_target_t_src(1, 0);
  const Scalar _tmp47 = epsilon + priors_0_1_sigmas(4, 0);
  const Scalar _tmp48 = _tmp26 / _tmp47;
  const Scalar _tmp49 = _views_0_pose[6] - _views_1_pose[6];
  const Scalar _tmp50 = -_tmp49 + priors_0_1_target_t_src(2, 0);
  const Scalar _tmp51 = epsilon + priors_0_1_sigmas(5, 0);
  const Scalar _tmp52 = _tmp26 / _tmp51;
  const Scalar _tmp53 = _tmp0 - _tmp1 + _tmp2 - _tmp3;
  const Scalar _tmp54 = -_tmp5 + _tmp6 + _tmp7 - _tmp8;
  const Scalar _tmp55 = _tmp10 - _tmp11 + _tmp12 - _tmp13;
  const Scalar _tmp56 = _priors_1_0_target_R_src[0] * _tmp15 +
                        _priors_1_0_target_R_src[1] * _tmp53 -
                        _priors_1_0_target_R_src[2] * _tmp54 - _priors_1_0_target_R_src[3] * _tmp55;
  const Scalar _tmp57 = _priors_1_0_target_R_src[0] * _tmp55 +
                        _priors_1_0_target_R_src[1] * _tmp54 +
                        _priors_1_0_target_R_src[2] * _tmp53 + _priors_1_0_target_R_src[3] * _tmp15;
  const Scalar _tmp58 = std::fabs(_tmp57);
  const Scalar _tmp59 = std::min<Scalar>(_tmp20, _tmp58);
  const Scalar _tmp60 = std::acos(_tmp59);
  const Scalar _tmp61 = std::sqrt(priors_1_0_weight);
  const Scalar _tmp62 = (((_tmp57) > 0) - ((_tmp57) < 0));
  const Scalar _tmp63 = _tmp61 * (2 * std::min<Scalar>(0, _tmp62) + 1);
  const Scalar _tmp64 = _tmp63 / (epsilon + priors_1_0_sigmas(0, 0));
  const Scalar _tmp65 = _tmp60 * _tmp64;
  const Scalar _tmp66 = 1 - (_tmp59 * _tmp59);
  const Scalar _tmp67 = 2 / std::sqrt(_tmp66);
  const Scalar _tmp68 = _tmp65 * _tmp67;
  const Scalar _tmp69 = _tmp56 * _tmp68;
  const Scalar _tmp70 = -_priors_1_0_target_R_src[0] * _tmp53 +
                        _priors_1_0_target_R_src[1] * _tmp15 +
                        _priors_1_0_target_R_src[2] * _tmp55 - _priors_1_0_target_R_src[3] * _tmp54;
  const Scalar _tmp71 = _tmp63 / (epsilon + priors_1_0_sigmas(1, 0));
  const Scalar _tmp72 = _tmp60 * _tmp67;
  const Scalar _tmp73 = _tmp71 * _tmp72;
  const Scalar _tmp74 = _tmp70 * _tmp73;
  const Scalar _tmp75 = _priors_1_0_target_R_src[0] * _tmp54 -
                        _priors_1_0_target_R_src[1] * _tmp55 +
                        _priors_1_0_target_R_src[2] * _tmp15 - _priors_1_0_target_R_src[3] * _tmp53;
  const Scalar _tmp76 = 1.0 / (epsilon + priors_1_0_sigmas(2, 0));
  const Scalar _tmp77 = _tmp63 * _tmp72 * _tmp76;
  const Scalar _tmp78 = _tmp75 * _tmp77;
  const Scalar _tmp79 = _views_0_pose[4] - _views_1_pose[4] + priors_1_0_target_t_src(0, 0);
  const Scalar _tmp80 = epsilon + priors_1_0_sigmas(3, 0);
  const Scalar _tmp81 = _tmp61 / _tmp80;
  const Scalar _tmp82 = _views_0_pose[5] - _views_1_pose[5] + priors_1_0_target_t_src(1, 0);
  const Scalar _tmp83 = epsilon + priors_1_0_sigmas(4, 0);
  const Scalar _tmp84 = _tmp61 / _tmp83;
  const Scalar _tmp85 = _views_0_pose[6] - _views_1_pose[6] + priors_1_0_target_t_src(2, 0);
  const Scalar _tmp86 = epsilon + priors_1_0_sigmas(5, 0);
  const Scalar _tmp87 = _tmp61 / _tmp86;
  const Scalar _tmp88 = 2 * _views_1_pose[3];
  const Scalar _tmp89 = _tmp88 * _views_1_pose[1];
  const Scalar _tmp90 = 2 * _views_1_pose[2];
  const Scalar _tmp91 = _tmp90 * _views_1_pose[0];
  const Scalar _tmp92 = -_tmp89 + _tmp91;
  const Scalar _tmp93 = _tmp90 * _views_1_pose[3];
  const Scalar _tmp94 = 2 * _views_1_pose[0];
  const Scalar _tmp95 = _tmp94 * _views_1_pose[1];
  const Scalar _tmp96 = _tmp93 + _tmp95;
  const Scalar _tmp97 = -2 * (_views_1_pose[2] * _views_1_pose[2]);
  const Scalar _tmp98 = 1 - 2 * (_views_1_pose[1] * _views_1_pose[1]);
  const Scalar _tmp99 = _tmp97 + _tmp98;
  const Scalar _tmp100 = _tmp41 * _tmp99 + _tmp45 * _tmp96 + _tmp49 * _tmp92;
  const Scalar _tmp101 = -2 * (_views_0_pose[0] * _views_0_pose[0]);
  const Scalar _tmp102 = 1 - 2 * (_views_0_pose[1] * _views_0_pose[1]);
  const Scalar _tmp103 = _tmp101 + _tmp102;
  const Scalar _tmp104 = -_views_0_calibration[3];
  const Scalar _tmp105 = _tmp104 + matches_0_0_source_coords(1, 0);
  const Scalar _tmp106 = std::pow(_views_0_calibration[1], -2);
  const Scalar _tmp107 = -_views_0_calibration[2];
  const Scalar _tmp108 = _tmp107 + matches_0_0_source_coords(0, 0);
  const Scalar _tmp109 = std::pow(_views_0_calibration[0], -2);
  const Scalar _tmp110 =
      std::pow((_tmp105 * _tmp105) * _tmp106 + (_tmp108 * _tmp108) * _tmp109 + 1, -1.0 / 2.0);
  const Scalar _tmp111 = 1.0 / (_views_0_calibration[1]);
  const Scalar _tmp112 = 2 * _views_0_pose[0] * _views_0_pose[3];
  const Scalar _tmp113 = 2 * _views_0_pose[2];
  const Scalar _tmp114 = _tmp113 * _views_0_pose[1];
  const Scalar _tmp115 = _tmp111 * (_tmp112 + _tmp114);
  const Scalar _tmp116 = _tmp105 * _tmp110;
  const Scalar _tmp117 = 1.0 / (_views_0_calibration[0]);
  const Scalar _tmp118 = 2 * _views_0_pose[1];
  const Scalar _tmp119 = _tmp118 * _views_0_pose[3];
  const Scalar _tmp120 = _tmp113 * _views_0_pose[0];
  const Scalar _tmp121 = _tmp117 * (-_tmp119 + _tmp120);
  const Scalar _tmp122 = _tmp108 * _tmp110;
  const Scalar _tmp123 = _tmp103 * _tmp110 + _tmp115 * _tmp116 + _tmp121 * _tmp122;
  const Scalar _tmp124 = -_tmp112 + _tmp114;
  const Scalar _tmp125 = -2 * (_views_0_pose[2] * _views_0_pose[2]);
  const Scalar _tmp126 = _tmp111 * (_tmp101 + _tmp125 + 1);
  const Scalar _tmp127 = _tmp113 * _views_0_pose[3];
  const Scalar _tmp128 = _tmp118 * _views_0_pose[0];
  const Scalar _tmp129 = _tmp117 * (_tmp127 + _tmp128);
  const Scalar _tmp130 = _tmp110 * _tmp124 + _tmp116 * _tmp126 + _tmp122 * _tmp129;
  const Scalar _tmp131 = _tmp119 + _tmp120;
  const Scalar _tmp132 = _tmp111 * (-_tmp127 + _tmp128);
  const Scalar _tmp133 = _tmp117 * (_tmp102 + _tmp125);
  const Scalar _tmp134 = _tmp110 * _tmp131 + _tmp116 * _tmp132 + _tmp122 * _tmp133;
  const Scalar _tmp135 =
      _tmp100 * landmarks_0_ + _tmp123 * _tmp92 + _tmp130 * _tmp96 + _tmp134 * _tmp99;
  const Scalar _tmp136 = -2 * (_views_1_pose[0] * _views_1_pose[0]);
  const Scalar _tmp137 = _tmp136 + _tmp98;
  const Scalar _tmp138 = _tmp94 * _views_1_pose[3];
  const Scalar _tmp139 = _tmp90 * _views_1_pose[1];
  const Scalar _tmp140 = -_tmp138 + _tmp139;
  const Scalar _tmp141 = _tmp89 + _tmp91;
  const Scalar _tmp142 = _tmp137 * _tmp49 + _tmp140 * _tmp45 + _tmp141 * _tmp41;
  const Scalar _tmp143 =
      _tmp123 * _tmp137 + _tmp130 * _tmp140 + _tmp134 * _tmp141 + _tmp142 * landmarks_0_;
  const Scalar _tmp144 = std::fabs(_tmp143);
  const Scalar _tmp145 = std::max<Scalar>(_tmp144, epsilon);
  const Scalar _tmp146 = 1.0 / (_tmp145);
  const Scalar _tmp147 = _tmp146 * _views_1_calibration[0];
  const Scalar _tmp148 =
      _tmp135 * _tmp147 + _views_1_calibration[2] - matches_0_0_target_coords(0, 0);
  const Scalar _tmp149 = _tmp138 + _tmp139;
  const Scalar _tmp150 = _tmp136 + _tmp97 + 1;
  const Scalar _tmp151 = -_tmp93 + _tmp95;
  const Scalar _tmp152 = _tmp149 * _tmp49 + _tmp150 * _tmp45 + _tmp151 * _tmp41;
  const Scalar _tmp153 =
      _tmp123 * _tmp149 + _tmp130 * _tmp150 + _tmp134 * _tmp151 + _tmp152 * landmarks_0_;
  const Scalar _tmp154 = _tmp146 * _views_1_calibration[1];
  const Scalar _tmp155 =
      _tmp153 * _tmp154 + _views_1_calibration[3] - matches_0_0_target_coords(1, 0);
  const Scalar _tmp156 = (_tmp148 * _tmp148) + (_tmp155 * _tmp155) + epsilon;
  const Scalar _tmp157 = std::pow(_tmp156, -1.0 / 2.0);
  const Scalar _tmp158 = std::pow(costs_reprojection_error_gnc_scale, -2);
  const Scalar _tmp159 = 1.0 / (-costs_reprojection_error_gnc_mu + epsilon + 1);
  const Scalar _tmp160 = epsilon + std::fabs(_tmp159);
  const Scalar _tmp161 = _tmp158 / _tmp160;
  const Scalar _tmp162 = _tmp156 * _tmp161 + 1;
  const Scalar _tmp163 = 2 - _tmp159;
  const Scalar _tmp164 =
      _tmp163 + epsilon * (2 * std::min<Scalar>(0, (((_tmp163) > 0) - ((_tmp163) < 0))) + 1);
  const Scalar _tmp165 = (1.0 / 2.0) * _tmp164;
  const Scalar _tmp166 = 2 * _tmp160 / _tmp164;
  const Scalar _tmp167 = std::sqrt(_tmp166 * (std::pow(_tmp162, _tmp165) - 1));
  const Scalar _tmp168 = (((_tmp143) > 0) - ((_tmp143) < 0));
  const Scalar _tmp169 = std::sqrt(matches_0_0_weight) * std::sqrt(std::max<Scalar>(0, _tmp168));
  const Scalar _tmp170 = _tmp167 * _tmp169;
  const Scalar _tmp171 = _tmp157 * _tmp170;
  const Scalar _tmp172 = _tmp148 * _tmp171;
  const Scalar _tmp173 = _tmp155 * _tmp171;
  const Scalar _tmp174 = _tmp104 + matches_0_1_source_coords(1, 0);
  const Scalar _tmp175 = _tmp107 + matches_0_1_source_coords(0, 0);
  const Scalar _tmp176 =
      std::pow(_tmp106 * (_tmp174 * _tmp174) + _tmp109 * (_tmp175 * _tmp175) + 1, -1.0 / 2.0);
  const Scalar _tmp177 = _tmp174 * _tmp176;
  const Scalar _tmp178 = _tmp175 * _tmp176;
  const Scalar _tmp179 = _tmp103 * _tmp176 + _tmp115 * _tmp177 + _tmp121 * _tmp178;
  const Scalar _tmp180 = _tmp124 * _tmp176 + _tmp126 * _tmp177 + _tmp129 * _tmp178;
  const Scalar _tmp181 = _tmp131 * _tmp176 + _tmp132 * _tmp177 + _tmp133 * _tmp178;
  const Scalar _tmp182 =
      _tmp100 * landmarks_1_ + _tmp179 * _tmp92 + _tmp180 * _tmp96 + _tmp181 * _tmp99;
  const Scalar _tmp183 =
      _tmp137 * _tmp179 + _tmp140 * _tmp180 + _tmp141 * _tmp181 + _tmp142 * landmarks_1_;
  const Scalar _tmp184 = std::fabs(_tmp183);
  const Scalar _tmp185 = std::max<Scalar>(_tmp184, epsilon);
  const Scalar _tmp186 = 1.0 / (_tmp185);
  const Scalar _tmp187 = _tmp186 * _views_1_calibration[0];
  const Scalar _tmp188 =
      _tmp182 * _tmp187 + _views_1_calibration[2] - matches_0_1_target_coords(0, 0);
  const Scalar _tmp189 =
      _tmp149 * _tmp179 + _tmp150 * _tmp180 + _tmp151 * _tmp181 + _tmp152 * landmarks_1_;
  const Scalar _tmp190 = _tmp186 * _views_1_calibration[1];
  const Scalar _tmp191 =
      _tmp189 * _tmp190 + _views_1_calibration[3] - matches_0_1_target_coords(1, 0);
  const Scalar _tmp192 = (_tmp188 * _tmp188) + (_tmp191 * _tmp191) + epsilon;
  const Scalar _tmp193 = std::pow(_tmp192, -1.0 / 2.0);
  const Scalar _tmp194 = _tmp161 * _tmp192 + 1;
  const Scalar _tmp195 = std::sqrt(_tmp166 * (std::pow(_tmp194, _tmp165) - 1));
  const Scalar _tmp196 = (((_tmp183) > 0) - ((_tmp183) < 0));
  const Scalar _tmp197 = std::sqrt(matches_0_1_weight) * std::sqrt(std::max<Scalar>(0, _tmp196));
  const Scalar _tmp198 = _tmp195 * _tmp197;
  const Scalar _tmp199 = _tmp193 * _tmp198;
  const Scalar _tmp200 = _tmp188 * _tmp199;
  const Scalar _tmp201 = _tmp191 * _tmp199;
  const Scalar _tmp202 = _tmp104 + matches_0_2_source_coords(1, 0);
  const Scalar _tmp203 = _tmp107 + matches_0_2_source_coords(0, 0);
  const Scalar _tmp204 =
      std::pow(_tmp106 * (_tmp202 * _tmp202) + _tmp109 * (_tmp203 * _tmp203) + 1, -1.0 / 2.0);
  const Scalar _tmp205 = _tmp202 * _tmp204;
  const Scalar _tmp206 = _tmp203 * _tmp204;
  const Scalar _tmp207 = _tmp103 * _tmp204 + _tmp115 * _tmp205 + _tmp121 * _tmp206;
  const Scalar _tmp208 = _tmp124 * _tmp204 + _tmp126 * _tmp205 + _tmp129 * _tmp206;
  const Scalar _tmp209 = _tmp131 * _tmp204 + _tmp132 * _tmp205 + _tmp133 * _tmp206;
  const Scalar _tmp210 =
      _tmp100 * landmarks_2_ + _tmp207 * _tmp92 + _tmp208 * _tmp96 + _tmp209 * _tmp99;
  const Scalar _tmp211 =
      _tmp137 * _tmp207 + _tmp140 * _tmp208 + _tmp141 * _tmp209 + _tmp142 * landmarks_2_;
  const Scalar _tmp212 = std::fabs(_tmp211);
  const Scalar _tmp213 = std::max<Scalar>(_tmp212, epsilon);
  const Scalar _tmp214 = 1.0 / (_tmp213);
  const Scalar _tmp215 = _tmp214 * _views_1_calibration[0];
  const Scalar _tmp216 =
      _tmp210 * _tmp215 + _views_1_calibration[2] - matches_0_2_target_coords(0, 0);
  const Scalar _tmp217 =
      _tmp149 * _tmp207 + _tmp150 * _tmp208 + _tmp151 * _tmp209 + _tmp152 * landmarks_2_;
  const Scalar _tmp218 = _tmp214 * _views_1_calibration[1];
  const Scalar _tmp219 =
      _tmp217 * _tmp218 + _views_1_calibration[3] - matches_0_2_target_coords(1, 0);
  const Scalar _tmp220 = (_tmp216 * _tmp216) + (_tmp219 * _tmp219) + epsilon;
  const Scalar _tmp221 = std::pow(_tmp220, -1.0 / 2.0);
  const Scalar _tmp222 = _tmp161 * _tmp220 + 1;
  const Scalar _tmp223 = std::sqrt(_tmp166 * (std::pow(_tmp222, _tmp165) - 1));
  const Scalar _tmp224 = (((_tmp211) > 0) - ((_tmp211) < 0));
  const Scalar _tmp225 = std::sqrt(matches_0_2_weight) * std::sqrt(std::max<Scalar>(0, _tmp224));
  const Scalar _tmp226 = _tmp223 * _tmp225;
  const Scalar _tmp227 = _tmp221 * _tmp226;
  const Scalar _tmp228 = _tmp216 * _tmp227;
  const Scalar _tmp229 = _tmp219 * _tmp227;
  const Scalar _tmp230 = _tmp104 + matches_0_3_source_coords(1, 0);
  const Scalar _tmp231 = _tmp107 + matches_0_3_source_coords(0, 0);
  const Scalar _tmp232 =
      std::pow(_tmp106 * (_tmp230 * _tmp230) + _tmp109 * (_tmp231 * _tmp231) + 1, -1.0 / 2.0);
  const Scalar _tmp233 = _tmp230 * _tmp232;
  const Scalar _tmp234 = _tmp231 * _tmp232;
  const Scalar _tmp235 = _tmp103 * _tmp232 + _tmp115 * _tmp233 + _tmp121 * _tmp234;
  const Scalar _tmp236 = _tmp124 * _tmp232 + _tmp126 * _tmp233 + _tmp129 * _tmp234;
  const Scalar _tmp237 = _tmp131 * _tmp232 + _tmp132 * _tmp233 + _tmp133 * _tmp234;
  const Scalar _tmp238 =
      _tmp100 * landmarks_3_ + _tmp235 * _tmp92 + _tmp236 * _tmp96 + _tmp237 * _tmp99;
  const Scalar _tmp239 =
      _tmp137 * _tmp235 + _tmp140 * _tmp236 + _tmp141 * _tmp237 + _tmp142 * landmarks_3_;
  const Scalar _tmp240 = std::fabs(_tmp239);
  const Scalar _tmp241 = std::max<Scalar>(_tmp240, epsilon);
  const Scalar _tmp242 = 1.0 / (_tmp241);
  const Scalar _tmp243 = _tmp242 * _views_1_calibration[0];
  const Scalar _tmp244 =
      _tmp238 * _tmp243 + _views_1_calibration[2] - matches_0_3_target_coords(0, 0);
  const Scalar _tmp245 =
      _tmp149 * _tmp235 + _tmp150 * _tmp236 + _tmp151 * _tmp237 + _tmp152 * landmarks_3_;
  const Scalar _tmp246 = _tmp242 * _views_1_calibration[1];
  const Scalar _tmp247 =
      _tmp245 * _tmp246 + _views_1_calibration[3] - matches_0_3_target_coords(1, 0);
  const Scalar _tmp248 = (_tmp244 * _tmp244) + (_tmp247 * _tmp247) + epsilon;
  const Scalar _tmp249 = std::pow(_tmp248, -1.0 / 2.0);
  const Scalar _tmp250 = (((_tmp239) > 0) - ((_tmp239) < 0));
  const Scalar _tmp251 = std::sqrt(matches_0_3_weight) * std::sqrt(std::max<Scalar>(0, _tmp250));
  const Scalar _tmp252 = _tmp161 * _tmp248 + 1;
  const Scalar _tmp253 = std::sqrt(_tmp166 * (std::pow(_tmp252, _tmp165) - 1));
  const Scalar _tmp254 = _tmp251 * _tmp253;
  const Scalar _tmp255 = _tmp249 * _tmp254;
  const Scalar _tmp256 = _tmp244 * _tmp255;
  const Scalar _tmp257 = _tmp247 * _tmp255;
  const Scalar _tmp258 = _tmp104 + matches_0_4_source_coords(1, 0);
  const Scalar _tmp259 = _tmp107 + matches_0_4_source_coords(0, 0);
  const Scalar _tmp260 =
      std::pow(_tmp106 * (_tmp258 * _tmp258) + _tmp109 * (_tmp259 * _tmp259) + 1, -1.0 / 2.0);
  const Scalar _tmp261 = _tmp258 * _tmp260;
  const Scalar _tmp262 = _tmp259 * _tmp260;
  const Scalar _tmp263 = _tmp103 * _tmp260 + _tmp115 * _tmp261 + _tmp121 * _tmp262;
  const Scalar _tmp264 = _tmp124 * _tmp260 + _tmp126 * _tmp261 + _tmp129 * _tmp262;
  const Scalar _tmp265 = _tmp131 * _tmp260 + _tmp132 * _tmp261 + _tmp133 * _tmp262;
  const Scalar _tmp266 =
      _tmp100 * landmarks_4_ + _tmp263 * _tmp92 + _tmp264 * _tmp96 + _tmp265 * _tmp99;
  const Scalar _tmp267 =
      _tmp137 * _tmp263 + _tmp140 * _tmp264 + _tmp141 * _tmp265 + _tmp142 * landmarks_4_;
  const Scalar _tmp268 = std::fabs(_tmp267);
  const Scalar _tmp269 = std::max<Scalar>(_tmp268, epsilon);
  const Scalar _tmp270 = 1.0 / (_tmp269);
  const Scalar _tmp271 = _tmp270 * _views_1_calibration[0];
  const Scalar _tmp272 =
      _tmp266 * _tmp271 + _views_1_calibration[2] - matches_0_4_target_coords(0, 0);
  const Scalar _tmp273 =
      _tmp149 * _tmp263 + _tmp150 * _tmp264 + _tmp151 * _tmp265 + _tmp152 * landmarks_4_;
  const Scalar _tmp274 = _tmp270 * _views_1_calibration[1];
  const Scalar _tmp275 =
      _tmp273 * _tmp274 + _views_1_calibration[3] - matches_0_4_target_coords(1, 0);
  const Scalar _tmp276 = (_tmp272 * _tmp272) + (_tmp275 * _tmp275) + epsilon;
  const Scalar _tmp277 = std::pow(_tmp276, -1.0 / 2.0);
  const Scalar _tmp278 = _tmp161 * _tmp276 + 1;
  const Scalar _tmp279 = std::sqrt(_tmp166 * (std::pow(_tmp278, _tmp165) - 1));
  const Scalar _tmp280 = (((_tmp267) > 0) - ((_tmp267) < 0));
  const Scalar _tmp281 = std::sqrt(matches_0_4_weight) * std::sqrt(std::max<Scalar>(0, _tmp280));
  const Scalar _tmp282 = _tmp279 * _tmp281;
  const Scalar _tmp283 = _tmp277 * _tmp282;
  const Scalar _tmp284 = _tmp272 * _tmp283;
  const Scalar _tmp285 = _tmp275 * _tmp283;
  const Scalar _tmp286 = _tmp104 + matches_0_5_source_coords(1, 0);
  const Scalar _tmp287 = _tmp107 + matches_0_5_source_coords(0, 0);
  const Scalar _tmp288 =
      std::pow(_tmp106 * (_tmp286 * _tmp286) + _tmp109 * (_tmp287 * _tmp287) + 1, -1.0 / 2.0);
  const Scalar _tmp289 = _tmp286 * _tmp288;
  const Scalar _tmp290 = _tmp287 * _tmp288;
  const Scalar _tmp291 = _tmp103 * _tmp288 + _tmp115 * _tmp289 + _tmp121 * _tmp290;
  const Scalar _tmp292 = _tmp124 * _tmp288 + _tmp126 * _tmp289 + _tmp129 * _tmp290;
  const Scalar _tmp293 = _tmp131 * _tmp288 + _tmp132 * _tmp289 + _tmp133 * _tmp290;
  const Scalar _tmp294 =
      _tmp100 * landmarks_5_ + _tmp291 * _tmp92 + _tmp292 * _tmp96 + _tmp293 * _tmp99;
  const Scalar _tmp295 =
      _tmp137 * _tmp291 + _tmp140 * _tmp292 + _tmp141 * _tmp293 + _tmp142 * landmarks_5_;
  const Scalar _tmp296 = std::fabs(_tmp295);
  const Scalar _tmp297 = std::max<Scalar>(_tmp296, epsilon);
  const Scalar _tmp298 = 1.0 / (_tmp297);
  const Scalar _tmp299 = _tmp298 * _views_1_calibration[0];
  const Scalar _tmp300 =
      _tmp294 * _tmp299 + _views_1_calibration[2] - matches_0_5_target_coords(0, 0);
  const Scalar _tmp301 =
      _tmp149 * _tmp291 + _tmp150 * _tmp292 + _tmp151 * _tmp293 + _tmp152 * landmarks_5_;
  const Scalar _tmp302 = _tmp298 * _views_1_calibration[1];
  const Scalar _tmp303 =
      _tmp301 * _tmp302 + _views_1_calibration[3] - matches_0_5_target_coords(1, 0);
  const Scalar _tmp304 = (_tmp300 * _tmp300) + (_tmp303 * _tmp303) + epsilon;
  const Scalar _tmp305 = std::pow(_tmp304, -1.0 / 2.0);
  const Scalar _tmp306 = (((_tmp295) > 0) - ((_tmp295) < 0));
  const Scalar _tmp307 = std::sqrt(matches_0_5_weight) * std::sqrt(std::max<Scalar>(0, _tmp306));
  const Scalar _tmp308 = _tmp161 * _tmp304 + 1;
  const Scalar _tmp309 = std::sqrt(_tmp166 * (std::pow(_tmp308, _tmp165) - 1));
  const Scalar _tmp310 = _tmp307 * _tmp309;
  const Scalar _tmp311 = _tmp305 * _tmp310;
  const Scalar _tmp312 = _tmp300 * _tmp311;
  const Scalar _tmp313 = _tmp303 * _tmp311;
  const Scalar _tmp314 = _tmp104 + matches_0_6_source_coords(1, 0);
  const Scalar _tmp315 = _tmp107 + matches_0_6_source_coords(0, 0);
  const Scalar _tmp316 =
      std::pow(_tmp106 * (_tmp314 * _tmp314) + _tmp109 * (_tmp315 * _tmp315) + 1, -1.0 / 2.0);
  const Scalar _tmp317 = _tmp314 * _tmp316;
  const Scalar _tmp318 = _tmp315 * _tmp316;
  const Scalar _tmp319 = _tmp103 * _tmp316 + _tmp115 * _tmp317 + _tmp121 * _tmp318;
  const Scalar _tmp320 = _tmp124 * _tmp316 + _tmp126 * _tmp317 + _tmp129 * _tmp318;
  const Scalar _tmp321 = _tmp131 * _tmp316 + _tmp132 * _tmp317 + _tmp133 * _tmp318;
  const Scalar _tmp322 =
      _tmp100 * landmarks_6_ + _tmp319 * _tmp92 + _tmp320 * _tmp96 + _tmp321 * _tmp99;
  const Scalar _tmp323 =
      _tmp137 * _tmp319 + _tmp140 * _tmp320 + _tmp141 * _tmp321 + _tmp142 * landmarks_6_;
  const Scalar _tmp324 = std::fabs(_tmp323);
  const Scalar _tmp325 = std::max<Scalar>(_tmp324, epsilon);
  const Scalar _tmp326 = 1.0 / (_tmp325);
  const Scalar _tmp327 = _tmp326 * _views_1_calibration[0];
  const Scalar _tmp328 =
      _tmp322 * _tmp327 + _views_1_calibration[2] - matches_0_6_target_coords(0, 0);
  const Scalar _tmp329 =
      _tmp149 * _tmp319 + _tmp150 * _tmp320 + _tmp151 * _tmp321 + _tmp152 * landmarks_6_;
  const Scalar _tmp330 = _tmp326 * _views_1_calibration[1];
  const Scalar _tmp331 =
      _tmp329 * _tmp330 + _views_1_calibration[3] - matches_0_6_target_coords(1, 0);
  const Scalar _tmp332 = (_tmp328 * _tmp328) + (_tmp331 * _tmp331) + epsilon;
  const Scalar _tmp333 = std::pow(_tmp332, -1.0 / 2.0);
  const Scalar _tmp334 = (((_tmp323) > 0) - ((_tmp323) < 0));
  const Scalar _tmp335 = std::sqrt(matches_0_6_weight) * std::sqrt(std::max<Scalar>(0, _tmp334));
  const Scalar _tmp336 = _tmp161 * _tmp332 + 1;
  const Scalar _tmp337 = std::sqrt(_tmp166 * (std::pow(_tmp336, _tmp165) - 1));
  const Scalar _tmp338 = _tmp335 * _tmp337;
  const Scalar _tmp339 = _tmp333 * _tmp338;
  const Scalar _tmp340 = _tmp328 * _tmp339;
  const Scalar _tmp341 = _tmp331 * _tmp339;
  const Scalar _tmp342 = _tmp104 + matches_0_7_source_coords(1, 0);
  const Scalar _tmp343 = _tmp107 + matches_0_7_source_coords(0, 0);
  const Scalar _tmp344 =
      std::pow(_tmp106 * (_tmp342 * _tmp342) + _tmp109 * (_tmp343 * _tmp343) + 1, -1.0 / 2.0);
  const Scalar _tmp345 = _tmp342 * _tmp344;
  const Scalar _tmp346 = _tmp343 * _tmp344;
  const Scalar _tmp347 = _tmp124 * _tmp344 + _tmp126 * _tmp345 + _tmp129 * _tmp346;
  const Scalar _tmp348 = _tmp103 * _tmp344 + _tmp115 * _tmp345 + _tmp121 * _tmp346;
  const Scalar _tmp349 = _tmp131 * _tmp344 + _tmp132 * _tmp345 + _tmp133 * _tmp346;
  const Scalar _tmp350 =
      _tmp100 * landmarks_7_ + _tmp347 * _tmp96 + _tmp348 * _tmp92 + _tmp349 * _tmp99;
  const Scalar _tmp351 =
      _tmp137 * _tmp348 + _tmp140 * _tmp347 + _tmp141 * _tmp349 + _tmp142 * landmarks_7_;
  const Scalar _tmp352 = std::fabs(_tmp351);
  const Scalar _tmp353 = std::max<Scalar>(_tmp352, epsilon);
  const Scalar _tmp354 = 1.0 / (_tmp353);
  const Scalar _tmp355 = _tmp354 * _views_1_calibration[0];
  const Scalar _tmp356 =
      _tmp350 * _tmp355 + _views_1_calibration[2] - matches_0_7_target_coords(0, 0);
  const Scalar _tmp357 =
      _tmp149 * _tmp348 + _tmp150 * _tmp347 + _tmp151 * _tmp349 + _tmp152 * landmarks_7_;
  const Scalar _tmp358 = _tmp354 * _views_1_calibration[1];
  const Scalar _tmp359 =
      _tmp357 * _tmp358 + _views_1_calibration[3] - matches_0_7_target_coords(1, 0);
  const Scalar _tmp360 = (_tmp356 * _tmp356) + (_tmp359 * _tmp359) + epsilon;
  const Scalar _tmp361 = std::pow(_tmp360, -1.0 / 2.0);
  const Scalar _tmp362 = _tmp161 * _tmp360 + 1;
  const Scalar _tmp363 = std::sqrt(_tmp166 * (std::pow(_tmp362, _tmp165) - 1));
  const Scalar _tmp364 = (((_tmp351) > 0) - ((_tmp351) < 0));
  const Scalar _tmp365 = std::sqrt(matches_0_7_weight) * std::sqrt(std::max<Scalar>(0, _tmp364));
  const Scalar _tmp366 = _tmp363 * _tmp365;
  const Scalar _tmp367 = _tmp361 * _tmp366;
  const Scalar _tmp368 = _tmp356 * _tmp367;
  const Scalar _tmp369 = _tmp359 * _tmp367;
  const Scalar _tmp370 = _tmp104 + matches_0_8_source_coords(1, 0);
  const Scalar _tmp371 = _tmp107 + matches_0_8_source_coords(0, 0);
  const Scalar _tmp372 =
      std::pow(_tmp106 * (_tmp370 * _tmp370) + _tmp109 * (_tmp371 * _tmp371) + 1, -1.0 / 2.0);
  const Scalar _tmp373 = _tmp370 * _tmp372;
  const Scalar _tmp374 = _tmp371 * _tmp372;
  const Scalar _tmp375 = _tmp124 * _tmp372 + _tmp126 * _tmp373 + _tmp129 * _tmp374;
  const Scalar _tmp376 = _tmp103 * _tmp372 + _tmp115 * _tmp373 + _tmp121 * _tmp374;
  const Scalar _tmp377 = _tmp131 * _tmp372 + _tmp132 * _tmp373 + _tmp133 * _tmp374;
  const Scalar _tmp378 =
      _tmp100 * landmarks_8_ + _tmp375 * _tmp96 + _tmp376 * _tmp92 + _tmp377 * _tmp99;
  const Scalar _tmp379 =
      _tmp137 * _tmp376 + _tmp140 * _tmp375 + _tmp141 * _tmp377 + _tmp142 * landmarks_8_;
  const Scalar _tmp380 = std::fabs(_tmp379);
  const Scalar _tmp381 = std::max<Scalar>(_tmp380, epsilon);
  const Scalar _tmp382 = 1.0 / (_tmp381);
  const Scalar _tmp383 = _tmp382 * _views_1_calibration[0];
  const Scalar _tmp384 =
      _tmp378 * _tmp383 + _views_1_calibration[2] - matches_0_8_target_coords(0, 0);
  const Scalar _tmp385 =
      _tmp149 * _tmp376 + _tmp150 * _tmp375 + _tmp151 * _tmp377 + _tmp152 * landmarks_8_;
  const Scalar _tmp386 = _tmp382 * _views_1_calibration[1];
  const Scalar _tmp387 =
      _tmp385 * _tmp386 + _views_1_calibration[3] - matches_0_8_target_coords(1, 0);
  const Scalar _tmp388 = (_tmp384 * _tmp384) + (_tmp387 * _tmp387) + epsilon;
  const Scalar _tmp389 = std::pow(_tmp388, -1.0 / 2.0);
  const Scalar _tmp390 = _tmp161 * _tmp388 + 1;
  const Scalar _tmp391 = std::sqrt(_tmp166 * (std::pow(_tmp390, _tmp165) - 1));
  const Scalar _tmp392 = (((_tmp379) > 0) - ((_tmp379) < 0));
  const Scalar _tmp393 = std::sqrt(matches_0_8_weight) * std::sqrt(std::max<Scalar>(0, _tmp392));
  const Scalar _tmp394 = _tmp391 * _tmp393;
  const Scalar _tmp395 = _tmp389 * _tmp394;
  const Scalar _tmp396 = _tmp384 * _tmp395;
  const Scalar _tmp397 = _tmp387 * _tmp395;
  const Scalar _tmp398 = _tmp104 + matches_0_9_source_coords(1, 0);
  const Scalar _tmp399 = _tmp107 + matches_0_9_source_coords(0, 0);
  const Scalar _tmp400 =
      std::pow(_tmp106 * (_tmp398 * _tmp398) + _tmp109 * (_tmp399 * _tmp399) + 1, -1.0 / 2.0);
  const Scalar _tmp401 = _tmp398 * _tmp400;
  const Scalar _tmp402 = _tmp399 * _tmp400;
  const Scalar _tmp403 = _tmp103 * _tmp400 + _tmp115 * _tmp401 + _tmp121 * _tmp402;
  const Scalar _tmp404 = _tmp124 * _tmp400 + _tmp126 * _tmp401 + _tmp129 * _tmp402;
  const Scalar _tmp405 = _tmp131 * _tmp400 + _tmp132 * _tmp401 + _tmp133 * _tmp402;
  const Scalar _tmp406 =
      _tmp100 * landmarks_9_ + _tmp403 * _tmp92 + _tmp404 * _tmp96 + _tmp405 * _tmp99;
  const Scalar _tmp407 =
      _tmp137 * _tmp403 + _tmp140 * _tmp404 + _tmp141 * _tmp405 + _tmp142 * landmarks_9_;
  const Scalar _tmp408 = std::fabs(_tmp407);
  const Scalar _tmp409 = std::max<Scalar>(_tmp408, epsilon);
  const Scalar _tmp410 = 1.0 / (_tmp409);
  const Scalar _tmp411 = _tmp410 * _views_1_calibration[0];
  const Scalar _tmp412 =
      _tmp406 * _tmp411 + _views_1_calibration[2] - matches_0_9_target_coords(0, 0);
  const Scalar _tmp413 =
      _tmp149 * _tmp403 + _tmp150 * _tmp404 + _tmp151 * _tmp405 + _tmp152 * landmarks_9_;
  const Scalar _tmp414 = _tmp410 * _views_1_calibration[1];
  const Scalar _tmp415 =
      _tmp413 * _tmp414 + _views_1_calibration[3] - matches_0_9_target_coords(1, 0);
  const Scalar _tmp416 = (_tmp412 * _tmp412) + (_tmp415 * _tmp415) + epsilon;
  const Scalar _tmp417 = std::pow(_tmp416, -1.0 / 2.0);
  const Scalar _tmp418 = _tmp161 * _tmp416 + 1;
  const Scalar _tmp419 = std::sqrt(_tmp166 * (std::pow(_tmp418, _tmp165) - 1));
  const Scalar _tmp420 = (((_tmp407) > 0) - ((_tmp407) < 0));
  const Scalar _tmp421 = std::sqrt(matches_0_9_weight) * std::sqrt(std::max<Scalar>(0, _tmp420));
  const Scalar _tmp422 = _tmp419 * _tmp421;
  const Scalar _tmp423 = _tmp417 * _tmp422;
  const Scalar _tmp424 = _tmp412 * _tmp423;
  const Scalar _tmp425 = _tmp415 * _tmp423;
  const Scalar _tmp426 = _tmp104 + matches_0_10_source_coords(1, 0);
  const Scalar _tmp427 = _tmp107 + matches_0_10_source_coords(0, 0);
  const Scalar _tmp428 =
      std::pow(_tmp106 * (_tmp426 * _tmp426) + _tmp109 * (_tmp427 * _tmp427) + 1, -1.0 / 2.0);
  const Scalar _tmp429 = _tmp426 * _tmp428;
  const Scalar _tmp430 = _tmp427 * _tmp428;
  const Scalar _tmp431 = _tmp103 * _tmp428 + _tmp115 * _tmp429 + _tmp121 * _tmp430;
  const Scalar _tmp432 = _tmp124 * _tmp428 + _tmp126 * _tmp429 + _tmp129 * _tmp430;
  const Scalar _tmp433 = _tmp131 * _tmp428 + _tmp132 * _tmp429 + _tmp133 * _tmp430;
  const Scalar _tmp434 =
      _tmp100 * landmarks_10_ + _tmp431 * _tmp92 + _tmp432 * _tmp96 + _tmp433 * _tmp99;
  const Scalar _tmp435 =
      _tmp137 * _tmp431 + _tmp140 * _tmp432 + _tmp141 * _tmp433 + _tmp142 * landmarks_10_;
  const Scalar _tmp436 = std::fabs(_tmp435);
  const Scalar _tmp437 = std::max<Scalar>(_tmp436, epsilon);
  const Scalar _tmp438 = 1.0 / (_tmp437);
  const Scalar _tmp439 = _tmp438 * _views_1_calibration[0];
  const Scalar _tmp440 =
      _tmp434 * _tmp439 + _views_1_calibration[2] - matches_0_10_target_coords(0, 0);
  const Scalar _tmp441 =
      _tmp149 * _tmp431 + _tmp150 * _tmp432 + _tmp151 * _tmp433 + _tmp152 * landmarks_10_;
  const Scalar _tmp442 = _tmp438 * _views_1_calibration[1];
  const Scalar _tmp443 =
      _tmp441 * _tmp442 + _views_1_calibration[3] - matches_0_10_target_coords(1, 0);
  const Scalar _tmp444 = (_tmp440 * _tmp440) + (_tmp443 * _tmp443) + epsilon;
  const Scalar _tmp445 = std::pow(_tmp444, -1.0 / 2.0);
  const Scalar _tmp446 = (((_tmp435) > 0) - ((_tmp435) < 0));
  const Scalar _tmp447 = std::sqrt(matches_0_10_weight) * std::sqrt(std::max<Scalar>(0, _tmp446));
  const Scalar _tmp448 = _tmp161 * _tmp444 + 1;
  const Scalar _tmp449 = std::sqrt(_tmp166 * (std::pow(_tmp448, _tmp165) - 1));
  const Scalar _tmp450 = _tmp447 * _tmp449;
  const Scalar _tmp451 = _tmp445 * _tmp450;
  const Scalar _tmp452 = _tmp440 * _tmp451;
  const Scalar _tmp453 = _tmp443 * _tmp451;
  const Scalar _tmp454 = _tmp104 + matches_0_11_source_coords(1, 0);
  const Scalar _tmp455 = _tmp107 + matches_0_11_source_coords(0, 0);
  const Scalar _tmp456 =
      std::pow(_tmp106 * (_tmp454 * _tmp454) + _tmp109 * (_tmp455 * _tmp455) + 1, -1.0 / 2.0);
  const Scalar _tmp457 = _tmp454 * _tmp456;
  const Scalar _tmp458 = _tmp455 * _tmp456;
  const Scalar _tmp459 = _tmp103 * _tmp456 + _tmp115 * _tmp457 + _tmp121 * _tmp458;
  const Scalar _tmp460 = _tmp124 * _tmp456 + _tmp126 * _tmp457 + _tmp129 * _tmp458;
  const Scalar _tmp461 = _tmp131 * _tmp456 + _tmp132 * _tmp457 + _tmp133 * _tmp458;
  const Scalar _tmp462 =
      _tmp100 * landmarks_11_ + _tmp459 * _tmp92 + _tmp460 * _tmp96 + _tmp461 * _tmp99;
  const Scalar _tmp463 =
      _tmp137 * _tmp459 + _tmp140 * _tmp460 + _tmp141 * _tmp461 + _tmp142 * landmarks_11_;
  const Scalar _tmp464 = std::fabs(_tmp463);
  const Scalar _tmp465 = std::max<Scalar>(_tmp464, epsilon);
  const Scalar _tmp466 = 1.0 / (_tmp465);
  const Scalar _tmp467 = _tmp466 * _views_1_calibration[0];
  const Scalar _tmp468 =
      _tmp462 * _tmp467 + _views_1_calibration[2] - matches_0_11_target_coords(0, 0);
  const Scalar _tmp469 =
      _tmp149 * _tmp459 + _tmp150 * _tmp460 + _tmp151 * _tmp461 + _tmp152 * landmarks_11_;
  const Scalar _tmp470 = _tmp466 * _views_1_calibration[1];
  const Scalar _tmp471 =
      _tmp469 * _tmp470 + _views_1_calibration[3] - matches_0_11_target_coords(1, 0);
  const Scalar _tmp472 = (_tmp468 * _tmp468) + (_tmp471 * _tmp471) + epsilon;
  const Scalar _tmp473 = std::pow(_tmp472, -1.0 / 2.0);
  const Scalar _tmp474 = _tmp161 * _tmp472 + 1;
  const Scalar _tmp475 = std::sqrt(_tmp166 * (std::pow(_tmp474, _tmp165) - 1));
  const Scalar _tmp476 = (((_tmp463) > 0) - ((_tmp463) < 0));
  const Scalar _tmp477 = std::sqrt(matches_0_11_weight) * std::sqrt(std::max<Scalar>(0, _tmp476));
  const Scalar _tmp478 = _tmp475 * _tmp477;
  const Scalar _tmp479 = _tmp473 * _tmp478;
  const Scalar _tmp480 = _tmp468 * _tmp479;
  const Scalar _tmp481 = _tmp471 * _tmp479;
  const Scalar _tmp482 = _tmp104 + matches_0_12_source_coords(1, 0);
  const Scalar _tmp483 = _tmp107 + matches_0_12_source_coords(0, 0);
  const Scalar _tmp484 =
      std::pow(_tmp106 * (_tmp482 * _tmp482) + _tmp109 * (_tmp483 * _tmp483) + 1, -1.0 / 2.0);
  const Scalar _tmp485 = _tmp482 * _tmp484;
  const Scalar _tmp486 = _tmp483 * _tmp484;
  const Scalar _tmp487 = _tmp124 * _tmp484 + _tmp126 * _tmp485 + _tmp129 * _tmp486;
  const Scalar _tmp488 = _tmp103 * _tmp484 + _tmp115 * _tmp485 + _tmp121 * _tmp486;
  const Scalar _tmp489 = _tmp131 * _tmp484 + _tmp132 * _tmp485 + _tmp133 * _tmp486;
  const Scalar _tmp490 =
      _tmp100 * landmarks_12_ + _tmp487 * _tmp96 + _tmp488 * _tmp92 + _tmp489 * _tmp99;
  const Scalar _tmp491 =
      _tmp137 * _tmp488 + _tmp140 * _tmp487 + _tmp141 * _tmp489 + _tmp142 * landmarks_12_;
  const Scalar _tmp492 = std::fabs(_tmp491);
  const Scalar _tmp493 = std::max<Scalar>(_tmp492, epsilon);
  const Scalar _tmp494 = 1.0 / (_tmp493);
  const Scalar _tmp495 = _tmp494 * _views_1_calibration[0];
  const Scalar _tmp496 =
      _tmp490 * _tmp495 + _views_1_calibration[2] - matches_0_12_target_coords(0, 0);
  const Scalar _tmp497 =
      _tmp149 * _tmp488 + _tmp150 * _tmp487 + _tmp151 * _tmp489 + _tmp152 * landmarks_12_;
  const Scalar _tmp498 = _tmp494 * _views_1_calibration[1];
  const Scalar _tmp499 =
      _tmp497 * _tmp498 + _views_1_calibration[3] - matches_0_12_target_coords(1, 0);
  const Scalar _tmp500 = (_tmp496 * _tmp496) + (_tmp499 * _tmp499) + epsilon;
  const Scalar _tmp501 = std::pow(_tmp500, -1.0 / 2.0);
  const Scalar _tmp502 = _tmp161 * _tmp500 + 1;
  const Scalar _tmp503 = std::sqrt(_tmp166 * (std::pow(_tmp502, _tmp165) - 1));
  const Scalar _tmp504 = (((_tmp491) > 0) - ((_tmp491) < 0));
  const Scalar _tmp505 = std::sqrt(matches_0_12_weight) * std::sqrt(std::max<Scalar>(0, _tmp504));
  const Scalar _tmp506 = _tmp503 * _tmp505;
  const Scalar _tmp507 = _tmp501 * _tmp506;
  const Scalar _tmp508 = _tmp496 * _tmp507;
  const Scalar _tmp509 = _tmp499 * _tmp507;
  const Scalar _tmp510 = _tmp104 + matches_0_13_source_coords(1, 0);
  const Scalar _tmp511 = _tmp107 + matches_0_13_source_coords(0, 0);
  const Scalar _tmp512 =
      std::pow(_tmp106 * (_tmp510 * _tmp510) + _tmp109 * (_tmp511 * _tmp511) + 1, -1.0 / 2.0);
  const Scalar _tmp513 = _tmp510 * _tmp512;
  const Scalar _tmp514 = _tmp511 * _tmp512;
  const Scalar _tmp515 = _tmp103 * _tmp512 + _tmp115 * _tmp513 + _tmp121 * _tmp514;
  const Scalar _tmp516 = _tmp124 * _tmp512 + _tmp126 * _tmp513 + _tmp129 * _tmp514;
  const Scalar _tmp517 = _tmp131 * _tmp512 + _tmp132 * _tmp513 + _tmp133 * _tmp514;
  const Scalar _tmp518 =
      _tmp100 * landmarks_13_ + _tmp515 * _tmp92 + _tmp516 * _tmp96 + _tmp517 * _tmp99;
  const Scalar _tmp519 =
      _tmp137 * _tmp515 + _tmp140 * _tmp516 + _tmp141 * _tmp517 + _tmp142 * landmarks_13_;
  const Scalar _tmp520 = std::fabs(_tmp519);
  const Scalar _tmp521 = std::max<Scalar>(_tmp520, epsilon);
  const Scalar _tmp522 = 1.0 / (_tmp521);
  const Scalar _tmp523 = _tmp522 * _views_1_calibration[0];
  const Scalar _tmp524 =
      _tmp518 * _tmp523 + _views_1_calibration[2] - matches_0_13_target_coords(0, 0);
  const Scalar _tmp525 =
      _tmp149 * _tmp515 + _tmp150 * _tmp516 + _tmp151 * _tmp517 + _tmp152 * landmarks_13_;
  const Scalar _tmp526 = _tmp522 * _views_1_calibration[1];
  const Scalar _tmp527 =
      _tmp525 * _tmp526 + _views_1_calibration[3] - matches_0_13_target_coords(1, 0);
  const Scalar _tmp528 = (_tmp524 * _tmp524) + (_tmp527 * _tmp527) + epsilon;
  const Scalar _tmp529 = std::pow(_tmp528, -1.0 / 2.0);
  const Scalar _tmp530 = _tmp161 * _tmp528 + 1;
  const Scalar _tmp531 = std::sqrt(_tmp166 * (std::pow(_tmp530, _tmp165) - 1));
  const Scalar _tmp532 = (((_tmp519) > 0) - ((_tmp519) < 0));
  const Scalar _tmp533 = std::sqrt(matches_0_13_weight) * std::sqrt(std::max<Scalar>(0, _tmp532));
  const Scalar _tmp534 = _tmp531 * _tmp533;
  const Scalar _tmp535 = _tmp529 * _tmp534;
  const Scalar _tmp536 = _tmp524 * _tmp535;
  const Scalar _tmp537 = _tmp527 * _tmp535;
  const Scalar _tmp538 = _tmp104 + matches_0_14_source_coords(1, 0);
  const Scalar _tmp539 = _tmp107 + matches_0_14_source_coords(0, 0);
  const Scalar _tmp540 =
      std::pow(_tmp106 * (_tmp538 * _tmp538) + _tmp109 * (_tmp539 * _tmp539) + 1, -1.0 / 2.0);
  const Scalar _tmp541 = _tmp538 * _tmp540;
  const Scalar _tmp542 = _tmp539 * _tmp540;
  const Scalar _tmp543 = _tmp103 * _tmp540 + _tmp115 * _tmp541 + _tmp121 * _tmp542;
  const Scalar _tmp544 = _tmp124 * _tmp540 + _tmp126 * _tmp541 + _tmp129 * _tmp542;
  const Scalar _tmp545 = _tmp131 * _tmp540 + _tmp132 * _tmp541 + _tmp133 * _tmp542;
  const Scalar _tmp546 =
      _tmp100 * landmarks_14_ + _tmp543 * _tmp92 + _tmp544 * _tmp96 + _tmp545 * _tmp99;
  const Scalar _tmp547 =
      _tmp137 * _tmp543 + _tmp140 * _tmp544 + _tmp141 * _tmp545 + _tmp142 * landmarks_14_;
  const Scalar _tmp548 = std::fabs(_tmp547);
  const Scalar _tmp549 = std::max<Scalar>(_tmp548, epsilon);
  const Scalar _tmp550 = 1.0 / (_tmp549);
  const Scalar _tmp551 = _tmp550 * _views_1_calibration[0];
  const Scalar _tmp552 =
      _tmp546 * _tmp551 + _views_1_calibration[2] - matches_0_14_target_coords(0, 0);
  const Scalar _tmp553 =
      _tmp149 * _tmp543 + _tmp150 * _tmp544 + _tmp151 * _tmp545 + _tmp152 * landmarks_14_;
  const Scalar _tmp554 = _tmp550 * _views_1_calibration[1];
  const Scalar _tmp555 =
      _tmp553 * _tmp554 + _views_1_calibration[3] - matches_0_14_target_coords(1, 0);
  const Scalar _tmp556 = (_tmp552 * _tmp552) + (_tmp555 * _tmp555) + epsilon;
  const Scalar _tmp557 = std::pow(_tmp556, -1.0 / 2.0);
  const Scalar _tmp558 = _tmp161 * _tmp556 + 1;
  const Scalar _tmp559 = std::sqrt(_tmp166 * (std::pow(_tmp558, _tmp165) - 1));
  const Scalar _tmp560 = (((_tmp547) > 0) - ((_tmp547) < 0));
  const Scalar _tmp561 = std::sqrt(matches_0_14_weight) * std::sqrt(std::max<Scalar>(0, _tmp560));
  const Scalar _tmp562 = _tmp559 * _tmp561;
  const Scalar _tmp563 = _tmp557 * _tmp562;
  const Scalar _tmp564 = _tmp552 * _tmp563;
  const Scalar _tmp565 = _tmp555 * _tmp563;
  const Scalar _tmp566 = _tmp104 + matches_0_15_source_coords(1, 0);
  const Scalar _tmp567 = _tmp107 + matches_0_15_source_coords(0, 0);
  const Scalar _tmp568 =
      std::pow(_tmp106 * (_tmp566 * _tmp566) + _tmp109 * (_tmp567 * _tmp567) + 1, -1.0 / 2.0);
  const Scalar _tmp569 = _tmp566 * _tmp568;
  const Scalar _tmp570 = _tmp567 * _tmp568;
  const Scalar _tmp571 = _tmp103 * _tmp568 + _tmp115 * _tmp569 + _tmp121 * _tmp570;
  const Scalar _tmp572 = _tmp124 * _tmp568 + _tmp126 * _tmp569 + _tmp129 * _tmp570;
  const Scalar _tmp573 = _tmp131 * _tmp568 + _tmp132 * _tmp569 + _tmp133 * _tmp570;
  const Scalar _tmp574 =
      _tmp100 * landmarks_15_ + _tmp571 * _tmp92 + _tmp572 * _tmp96 + _tmp573 * _tmp99;
  const Scalar _tmp575 =
      _tmp137 * _tmp571 + _tmp140 * _tmp572 + _tmp141 * _tmp573 + _tmp142 * landmarks_15_;
  const Scalar _tmp576 = std::fabs(_tmp575);
  const Scalar _tmp577 = std::max<Scalar>(_tmp576, epsilon);
  const Scalar _tmp578 = 1.0 / (_tmp577);
  const Scalar _tmp579 = _tmp578 * _views_1_calibration[0];
  const Scalar _tmp580 =
      _tmp574 * _tmp579 + _views_1_calibration[2] - matches_0_15_target_coords(0, 0);
  const Scalar _tmp581 =
      _tmp149 * _tmp571 + _tmp150 * _tmp572 + _tmp151 * _tmp573 + _tmp152 * landmarks_15_;
  const Scalar _tmp582 = _tmp578 * _views_1_calibration[1];
  const Scalar _tmp583 =
      _tmp581 * _tmp582 + _views_1_calibration[3] - matches_0_15_target_coords(1, 0);
  const Scalar _tmp584 = (_tmp580 * _tmp580) + (_tmp583 * _tmp583) + epsilon;
  const Scalar _tmp585 = std::pow(_tmp584, -1.0 / 2.0);
  const Scalar _tmp586 = (((_tmp575) > 0) - ((_tmp575) < 0));
  const Scalar _tmp587 = std::sqrt(matches_0_15_weight) * std::sqrt(std::max<Scalar>(0, _tmp586));
  const Scalar _tmp588 = _tmp161 * _tmp584 + 1;
  const Scalar _tmp589 = std::sqrt(_tmp166 * (std::pow(_tmp588, _tmp165) - 1));
  const Scalar _tmp590 = _tmp587 * _tmp589;
  const Scalar _tmp591 = _tmp585 * _tmp590;
  const Scalar _tmp592 = _tmp580 * _tmp591;
  const Scalar _tmp593 = _tmp583 * _tmp591;
  const Scalar _tmp594 = _tmp104 + matches_0_16_source_coords(1, 0);
  const Scalar _tmp595 = _tmp107 + matches_0_16_source_coords(0, 0);
  const Scalar _tmp596 =
      std::pow(_tmp106 * (_tmp594 * _tmp594) + _tmp109 * (_tmp595 * _tmp595) + 1, -1.0 / 2.0);
  const Scalar _tmp597 = _tmp594 * _tmp596;
  const Scalar _tmp598 = _tmp595 * _tmp596;
  const Scalar _tmp599 = _tmp103 * _tmp596 + _tmp115 * _tmp597 + _tmp121 * _tmp598;
  const Scalar _tmp600 = _tmp124 * _tmp596 + _tmp126 * _tmp597 + _tmp129 * _tmp598;
  const Scalar _tmp601 = _tmp131 * _tmp596 + _tmp132 * _tmp597 + _tmp133 * _tmp598;
  const Scalar _tmp602 =
      _tmp100 * landmarks_16_ + _tmp599 * _tmp92 + _tmp600 * _tmp96 + _tmp601 * _tmp99;
  const Scalar _tmp603 =
      _tmp137 * _tmp599 + _tmp140 * _tmp600 + _tmp141 * _tmp601 + _tmp142 * landmarks_16_;
  const Scalar _tmp604 = std::fabs(_tmp603);
  const Scalar _tmp605 = std::max<Scalar>(_tmp604, epsilon);
  const Scalar _tmp606 = 1.0 / (_tmp605);
  const Scalar _tmp607 = _tmp606 * _views_1_calibration[0];
  const Scalar _tmp608 =
      _tmp602 * _tmp607 + _views_1_calibration[2] - matches_0_16_target_coords(0, 0);
  const Scalar _tmp609 =
      _tmp149 * _tmp599 + _tmp150 * _tmp600 + _tmp151 * _tmp601 + _tmp152 * landmarks_16_;
  const Scalar _tmp610 = _tmp606 * _views_1_calibration[1];
  const Scalar _tmp611 =
      _tmp609 * _tmp610 + _views_1_calibration[3] - matches_0_16_target_coords(1, 0);
  const Scalar _tmp612 = (_tmp608 * _tmp608) + (_tmp611 * _tmp611) + epsilon;
  const Scalar _tmp613 = std::pow(_tmp612, -1.0 / 2.0);
  const Scalar _tmp614 = _tmp161 * _tmp612 + 1;
  const Scalar _tmp615 = std::sqrt(_tmp166 * (std::pow(_tmp614, _tmp165) - 1));
  const Scalar _tmp616 = (((_tmp603) > 0) - ((_tmp603) < 0));
  const Scalar _tmp617 = std::sqrt(matches_0_16_weight) * std::sqrt(std::max<Scalar>(0, _tmp616));
  const Scalar _tmp618 = _tmp615 * _tmp617;
  const Scalar _tmp619 = _tmp613 * _tmp618;
  const Scalar _tmp620 = _tmp608 * _tmp619;
  const Scalar _tmp621 = _tmp611 * _tmp619;
  const Scalar _tmp622 = _tmp104 + matches_0_17_source_coords(1, 0);
  const Scalar _tmp623 = _tmp107 + matches_0_17_source_coords(0, 0);
  const Scalar _tmp624 =
      std::pow(_tmp106 * (_tmp622 * _tmp622) + _tmp109 * (_tmp623 * _tmp623) + 1, -1.0 / 2.0);
  const Scalar _tmp625 = _tmp622 * _tmp624;
  const Scalar _tmp626 = _tmp623 * _tmp624;
  const Scalar _tmp627 = _tmp103 * _tmp624 + _tmp115 * _tmp625 + _tmp121 * _tmp626;
  const Scalar _tmp628 = _tmp124 * _tmp624 + _tmp126 * _tmp625 + _tmp129 * _tmp626;
  const Scalar _tmp629 = _tmp131 * _tmp624 + _tmp132 * _tmp625 + _tmp133 * _tmp626;
  const Scalar _tmp630 =
      _tmp100 * landmarks_17_ + _tmp627 * _tmp92 + _tmp628 * _tmp96 + _tmp629 * _tmp99;
  const Scalar _tmp631 =
      _tmp137 * _tmp627 + _tmp140 * _tmp628 + _tmp141 * _tmp629 + _tmp142 * landmarks_17_;
  const Scalar _tmp632 = std::fabs(_tmp631);
  const Scalar _tmp633 = std::max<Scalar>(_tmp632, epsilon);
  const Scalar _tmp634 = 1.0 / (_tmp633);
  const Scalar _tmp635 = _tmp634 * _views_1_calibration[0];
  const Scalar _tmp636 =
      _tmp630 * _tmp635 + _views_1_calibration[2] - matches_0_17_target_coords(0, 0);
  const Scalar _tmp637 =
      _tmp149 * _tmp627 + _tmp150 * _tmp628 + _tmp151 * _tmp629 + _tmp152 * landmarks_17_;
  const Scalar _tmp638 = _tmp634 * _views_1_calibration[1];
  const Scalar _tmp639 =
      _tmp637 * _tmp638 + _views_1_calibration[3] - matches_0_17_target_coords(1, 0);
  const Scalar _tmp640 = (_tmp636 * _tmp636) + (_tmp639 * _tmp639) + epsilon;
  const Scalar _tmp641 = std::pow(_tmp640, -1.0 / 2.0);
  const Scalar _tmp642 = _tmp161 * _tmp640 + 1;
  const Scalar _tmp643 = std::sqrt(_tmp166 * (std::pow(_tmp642, _tmp165) - 1));
  const Scalar _tmp644 = (((_tmp631) > 0) - ((_tmp631) < 0));
  const Scalar _tmp645 = std::sqrt(matches_0_17_weight) * std::sqrt(std::max<Scalar>(0, _tmp644));
  const Scalar _tmp646 = _tmp643 * _tmp645;
  const Scalar _tmp647 = _tmp641 * _tmp646;
  const Scalar _tmp648 = _tmp636 * _tmp647;
  const Scalar _tmp649 = _tmp639 * _tmp647;
  const Scalar _tmp650 = _tmp104 + matches_0_18_source_coords(1, 0);
  const Scalar _tmp651 = _tmp107 + matches_0_18_source_coords(0, 0);
  const Scalar _tmp652 =
      std::pow(_tmp106 * (_tmp650 * _tmp650) + _tmp109 * (_tmp651 * _tmp651) + 1, -1.0 / 2.0);
  const Scalar _tmp653 = _tmp650 * _tmp652;
  const Scalar _tmp654 = _tmp651 * _tmp652;
  const Scalar _tmp655 = _tmp124 * _tmp652 + _tmp126 * _tmp653 + _tmp129 * _tmp654;
  const Scalar _tmp656 = _tmp103 * _tmp652 + _tmp115 * _tmp653 + _tmp121 * _tmp654;
  const Scalar _tmp657 = _tmp131 * _tmp652 + _tmp132 * _tmp653 + _tmp133 * _tmp654;
  const Scalar _tmp658 =
      _tmp100 * landmarks_18_ + _tmp655 * _tmp96 + _tmp656 * _tmp92 + _tmp657 * _tmp99;
  const Scalar _tmp659 =
      _tmp137 * _tmp656 + _tmp140 * _tmp655 + _tmp141 * _tmp657 + _tmp142 * landmarks_18_;
  const Scalar _tmp660 = std::fabs(_tmp659);
  const Scalar _tmp661 = std::max<Scalar>(_tmp660, epsilon);
  const Scalar _tmp662 = 1.0 / (_tmp661);
  const Scalar _tmp663 = _tmp662 * _views_1_calibration[0];
  const Scalar _tmp664 =
      _tmp658 * _tmp663 + _views_1_calibration[2] - matches_0_18_target_coords(0, 0);
  const Scalar _tmp665 =
      _tmp149 * _tmp656 + _tmp150 * _tmp655 + _tmp151 * _tmp657 + _tmp152 * landmarks_18_;
  const Scalar _tmp666 = _tmp662 * _views_1_calibration[1];
  const Scalar _tmp667 =
      _tmp665 * _tmp666 + _views_1_calibration[3] - matches_0_18_target_coords(1, 0);
  const Scalar _tmp668 = (_tmp664 * _tmp664) + (_tmp667 * _tmp667) + epsilon;
  const Scalar _tmp669 = std::pow(_tmp668, -1.0 / 2.0);
  const Scalar _tmp670 = _tmp161 * _tmp668 + 1;
  const Scalar _tmp671 = std::sqrt(_tmp166 * (std::pow(_tmp670, _tmp165) - 1));
  const Scalar _tmp672 = (((_tmp659) > 0) - ((_tmp659) < 0));
  const Scalar _tmp673 = std::sqrt(matches_0_18_weight) * std::sqrt(std::max<Scalar>(0, _tmp672));
  const Scalar _tmp674 = _tmp671 * _tmp673;
  const Scalar _tmp675 = _tmp669 * _tmp674;
  const Scalar _tmp676 = _tmp664 * _tmp675;
  const Scalar _tmp677 = _tmp667 * _tmp675;
  const Scalar _tmp678 = _tmp104 + matches_0_19_source_coords(1, 0);
  const Scalar _tmp679 = _tmp107 + matches_0_19_source_coords(0, 0);
  const Scalar _tmp680 =
      std::pow(_tmp106 * (_tmp678 * _tmp678) + _tmp109 * (_tmp679 * _tmp679) + 1, -1.0 / 2.0);
  const Scalar _tmp681 = _tmp678 * _tmp680;
  const Scalar _tmp682 = _tmp679 * _tmp680;
  const Scalar _tmp683 = _tmp103 * _tmp680 + _tmp115 * _tmp681 + _tmp121 * _tmp682;
  const Scalar _tmp684 = _tmp124 * _tmp680 + _tmp126 * _tmp681 + _tmp129 * _tmp682;
  const Scalar _tmp685 = _tmp131 * _tmp680 + _tmp132 * _tmp681 + _tmp133 * _tmp682;
  const Scalar _tmp686 =
      _tmp100 * landmarks_19_ + _tmp683 * _tmp92 + _tmp684 * _tmp96 + _tmp685 * _tmp99;
  const Scalar _tmp687 =
      _tmp137 * _tmp683 + _tmp140 * _tmp684 + _tmp141 * _tmp685 + _tmp142 * landmarks_19_;
  const Scalar _tmp688 = std::fabs(_tmp687);
  const Scalar _tmp689 = std::max<Scalar>(_tmp688, epsilon);
  const Scalar _tmp690 = 1.0 / (_tmp689);
  const Scalar _tmp691 = _tmp690 * _views_1_calibration[0];
  const Scalar _tmp692 =
      _tmp686 * _tmp691 + _views_1_calibration[2] - matches_0_19_target_coords(0, 0);
  const Scalar _tmp693 =
      _tmp149 * _tmp683 + _tmp150 * _tmp684 + _tmp151 * _tmp685 + _tmp152 * landmarks_19_;
  const Scalar _tmp694 = _tmp690 * _views_1_calibration[1];
  const Scalar _tmp695 =
      _tmp693 * _tmp694 + _views_1_calibration[3] - matches_0_19_target_coords(1, 0);
  const Scalar _tmp696 = (_tmp692 * _tmp692) + (_tmp695 * _tmp695) + epsilon;
  const Scalar _tmp697 = std::pow(_tmp696, -1.0 / 2.0);
  const Scalar _tmp698 = (((_tmp687) > 0) - ((_tmp687) < 0));
  const Scalar _tmp699 = std::sqrt(matches_0_19_weight) * std::sqrt(std::max<Scalar>(0, _tmp698));
  const Scalar _tmp700 = _tmp161 * _tmp696 + 1;
  const Scalar _tmp701 = std::sqrt(_tmp166 * (std::pow(_tmp700, _tmp165) - 1));
  const Scalar _tmp702 = _tmp699 * _tmp701;
  const Scalar _tmp703 = _tmp697 * _tmp702;
  const Scalar _tmp704 = _tmp692 * _tmp703;
  const Scalar _tmp705 = _tmp695 * _tmp703;
  const Scalar _tmp706 = landmarks_0_ - matches_0_0_inverse_range_prior;
  const Scalar _tmp707 = epsilon + matches_0_0_inverse_range_prior_sigma;
  const Scalar _tmp708 = matches_0_0_weight / _tmp707;
  const Scalar _tmp709 = landmarks_1_ - matches_0_1_inverse_range_prior;
  const Scalar _tmp710 = epsilon + matches_0_1_inverse_range_prior_sigma;
  const Scalar _tmp711 = matches_0_1_weight / _tmp710;
  const Scalar _tmp712 = landmarks_2_ - matches_0_2_inverse_range_prior;
  const Scalar _tmp713 = epsilon + matches_0_2_inverse_range_prior_sigma;
  const Scalar _tmp714 = matches_0_2_weight / _tmp713;
  const Scalar _tmp715 = landmarks_3_ - matches_0_3_inverse_range_prior;
  const Scalar _tmp716 = epsilon + matches_0_3_inverse_range_prior_sigma;
  const Scalar _tmp717 = matches_0_3_weight / _tmp716;
  const Scalar _tmp718 = landmarks_4_ - matches_0_4_inverse_range_prior;
  const Scalar _tmp719 = epsilon + matches_0_4_inverse_range_prior_sigma;
  const Scalar _tmp720 = matches_0_4_weight / _tmp719;
  const Scalar _tmp721 = landmarks_5_ - matches_0_5_inverse_range_prior;
  const Scalar _tmp722 = epsilon + matches_0_5_inverse_range_prior_sigma;
  const Scalar _tmp723 = matches_0_5_weight / _tmp722;
  const Scalar _tmp724 = landmarks_6_ - matches_0_6_inverse_range_prior;
  const Scalar _tmp725 = epsilon + matches_0_6_inverse_range_prior_sigma;
  const Scalar _tmp726 = matches_0_6_weight / _tmp725;
  const Scalar _tmp727 = landmarks_7_ - matches_0_7_inverse_range_prior;
  const Scalar _tmp728 = epsilon + matches_0_7_inverse_range_prior_sigma;
  const Scalar _tmp729 = matches_0_7_weight / _tmp728;
  const Scalar _tmp730 = landmarks_8_ - matches_0_8_inverse_range_prior;
  const Scalar _tmp731 = epsilon + matches_0_8_inverse_range_prior_sigma;
  const Scalar _tmp732 = matches_0_8_weight / _tmp731;
  const Scalar _tmp733 = landmarks_9_ - matches_0_9_inverse_range_prior;
  const Scalar _tmp734 = epsilon + matches_0_9_inverse_range_prior_sigma;
  const Scalar _tmp735 = matches_0_9_weight / _tmp734;
  const Scalar _tmp736 = landmarks_10_ - matches_0_10_inverse_range_prior;
  const Scalar _tmp737 = epsilon + matches_0_10_inverse_range_prior_sigma;
  const Scalar _tmp738 = matches_0_10_weight / _tmp737;
  const Scalar _tmp739 = landmarks_11_ - matches_0_11_inverse_range_prior;
  const Scalar _tmp740 = epsilon + matches_0_11_inverse_range_prior_sigma;
  const Scalar _tmp741 = matches_0_11_weight / _tmp740;
  const Scalar _tmp742 = landmarks_12_ - matches_0_12_inverse_range_prior;
  const Scalar _tmp743 = epsilon + matches_0_12_inverse_range_prior_sigma;
  const Scalar _tmp744 = matches_0_12_weight / _tmp743;
  const Scalar _tmp745 = landmarks_13_ - matches_0_13_inverse_range_prior;
  const Scalar _tmp746 = epsilon + matches_0_13_inverse_range_prior_sigma;
  const Scalar _tmp747 = matches_0_13_weight / _tmp746;
  const Scalar _tmp748 = landmarks_14_ - matches_0_14_inverse_range_prior;
  const Scalar _tmp749 = epsilon + matches_0_14_inverse_range_prior_sigma;
  const Scalar _tmp750 = matches_0_14_weight / _tmp749;
  const Scalar _tmp751 = landmarks_15_ - matches_0_15_inverse_range_prior;
  const Scalar _tmp752 = epsilon + matches_0_15_inverse_range_prior_sigma;
  const Scalar _tmp753 = matches_0_15_weight / _tmp752;
  const Scalar _tmp754 = landmarks_16_ - matches_0_16_inverse_range_prior;
  const Scalar _tmp755 = epsilon + matches_0_16_inverse_range_prior_sigma;
  const Scalar _tmp756 = matches_0_16_weight / _tmp755;
  const Scalar _tmp757 = landmarks_17_ - matches_0_17_inverse_range_prior;
  const Scalar _tmp758 = epsilon + matches_0_17_inverse_range_prior_sigma;
  const Scalar _tmp759 = matches_0_17_weight / _tmp758;
  const Scalar _tmp760 = landmarks_18_ - matches_0_18_inverse_range_prior;
  const Scalar _tmp761 = epsilon + matches_0_18_inverse_range_prior_sigma;
  const Scalar _tmp762 = matches_0_18_weight / _tmp761;
  const Scalar _tmp763 = landmarks_19_ - matches_0_19_inverse_range_prior;
  const Scalar _tmp764 = epsilon + matches_0_19_inverse_range_prior_sigma;
  const Scalar _tmp765 = matches_0_19_weight / _tmp764;
  const Scalar _tmp766 = 2 * _views_1_pose[1];
  const Scalar _tmp767 = _tmp656 * _tmp766;
  const Scalar _tmp768 = _tmp655 * _tmp90;
  const Scalar _tmp769 = _tmp45 * _tmp90;
  const Scalar _tmp770 = _tmp49 * _tmp766;
  const Scalar _tmp771 = _tmp769 - _tmp770;
  const Scalar _tmp772 = 2 * _tmp657;
  const Scalar _tmp773 = _tmp772 * _views_1_pose[1];
  const Scalar _tmp774 = _tmp655 * _tmp94;
  const Scalar _tmp775 = _tmp41 * _tmp766;
  const Scalar _tmp776 = _tmp45 * _tmp94;
  const Scalar _tmp777 = _tmp775 - _tmp776;
  const Scalar _tmp778 =
      _tmp672 * ((((_tmp19 + _tmp660) > 0) - ((_tmp19 + _tmp660) < 0)) + 1) / (_tmp661 * _tmp661);
  const Scalar _tmp779 = _tmp778 * (_tmp773 - _tmp774 + _tmp777 * landmarks_18_);
  const Scalar _tmp780 = (1.0 / 2.0) * _views_1_calibration[0];
  const Scalar _tmp781 = _tmp658 * _tmp780;
  const Scalar _tmp782 =
      _tmp663 * (-_tmp767 + _tmp768 + _tmp771 * landmarks_18_) - _tmp779 * _tmp781;
  const Scalar _tmp783 = 2 * _tmp664;
  const Scalar _tmp784 = _tmp657 * _tmp90;
  const Scalar _tmp785 = _tmp656 * _tmp94;
  const Scalar _tmp786 = _tmp41 * _tmp90;
  const Scalar _tmp787 = _tmp49 * _tmp94;
  const Scalar _tmp788 = -_tmp786 + _tmp787;
  const Scalar _tmp789 = (1.0 / 2.0) * _views_1_calibration[1];
  const Scalar _tmp790 = _tmp665 * _tmp789;
  const Scalar _tmp791 =
      _tmp666 * (-_tmp784 + _tmp785 + _tmp788 * landmarks_18_) - _tmp779 * _tmp790;
  const Scalar _tmp792 = 2 * _tmp667;
  const Scalar _tmp793 = _tmp782 * _tmp783 + _tmp791 * _tmp792;
  const Scalar _tmp794 = (1.0 / 2.0) * _tmp667;
  const Scalar _tmp795 = _tmp165 - 1;
  const Scalar _tmp796 = _tmp158 * _tmp669 * std::pow(_tmp670, _tmp795) * _tmp673 / _tmp671;
  const Scalar _tmp797 = _tmp794 * _tmp796;
  const Scalar _tmp798 = _tmp674 / (_tmp668 * std::sqrt(_tmp668));
  const Scalar _tmp799 = _tmp794 * _tmp798;
  const Scalar _tmp800 = _tmp675 * _tmp791 + _tmp793 * _tmp797 - _tmp793 * _tmp799;
  const Scalar _tmp801 = (1.0 / 2.0) * _views_1_pose[0];
  const Scalar _tmp802 = 4 * _tmp657;
  const Scalar _tmp803 = _tmp655 * _tmp88;
  const Scalar _tmp804 = 4 * _tmp41;
  const Scalar _tmp805 = _tmp45 * _tmp88;
  const Scalar _tmp806 = _tmp787 - _tmp804 * _views_1_pose[2] + _tmp805;
  const Scalar _tmp807 = _tmp772 * _views_1_pose[0];
  const Scalar _tmp808 = _tmp655 * _tmp766;
  const Scalar _tmp809 = _tmp41 * _tmp94;
  const Scalar _tmp810 = _tmp45 * _tmp766;
  const Scalar _tmp811 = _tmp809 + _tmp810;
  const Scalar _tmp812 = _tmp778 * (_tmp807 + _tmp808 + _tmp811 * landmarks_18_);
  const Scalar _tmp813 =
      _tmp663 * (_tmp785 - _tmp802 * _views_1_pose[2] + _tmp803 + _tmp806 * landmarks_18_) -
      _tmp781 * _tmp812;
  const Scalar _tmp814 = _tmp772 * _views_1_pose[3];
  const Scalar _tmp815 = 4 * _tmp655;
  const Scalar _tmp816 = 4 * _tmp45;
  const Scalar _tmp817 = _tmp41 * _tmp88;
  const Scalar _tmp818 = _tmp770 - _tmp816 * _views_1_pose[2] - _tmp817;
  const Scalar _tmp819 =
      _tmp666 * (_tmp767 - _tmp814 - _tmp815 * _views_1_pose[2] + _tmp818 * landmarks_18_) -
      _tmp790 * _tmp812;
  const Scalar _tmp820 = _tmp783 * _tmp813 + _tmp792 * _tmp819;
  const Scalar _tmp821 = _tmp675 * _tmp819 + _tmp797 * _tmp820 - _tmp799 * _tmp820;
  const Scalar _tmp822 = (1.0 / 2.0) * _views_1_pose[1];
  const Scalar _tmp823 = _tmp656 * _tmp88;
  const Scalar _tmp824 = _tmp49 * _tmp88;
  const Scalar _tmp825 = _tmp776 - _tmp804 * _views_1_pose[1] - _tmp824;
  const Scalar _tmp826 = 4 * _views_1_pose[1];
  const Scalar _tmp827 = 4 * _tmp49;
  const Scalar _tmp828 = _tmp769 + _tmp817 - _tmp827 * _views_1_pose[1];
  const Scalar _tmp829 =
      _tmp778 * (-_tmp656 * _tmp826 + _tmp768 + _tmp814 + _tmp828 * landmarks_18_);
  const Scalar _tmp830 =
      _tmp663 * (_tmp774 - _tmp802 * _views_1_pose[1] - _tmp823 + _tmp825 * landmarks_18_) -
      _tmp781 * _tmp829;
  const Scalar _tmp831 = _tmp656 * _tmp90;
  const Scalar _tmp832 = _tmp49 * _tmp90;
  const Scalar _tmp833 = _tmp809 + _tmp832;
  const Scalar _tmp834 =
      _tmp666 * (_tmp807 + _tmp831 + _tmp833 * landmarks_18_) - _tmp790 * _tmp829;
  const Scalar _tmp835 = _tmp783 * _tmp830 + _tmp792 * _tmp834;
  const Scalar _tmp836 = (1.0 / 2.0) * _tmp675 * _tmp834 + (1.0 / 2.0) * _tmp797 * _tmp835 -
                         1.0 / 2.0 * _tmp799 * _tmp835;
  const Scalar _tmp837 = _tmp810 + _tmp832;
  const Scalar _tmp838 = 4 * _views_1_pose[0];
  const Scalar _tmp839 = _tmp786 - _tmp805 - _tmp827 * _views_1_pose[0];
  const Scalar _tmp840 = -_tmp656 * _tmp838 + _tmp784 - _tmp803 + _tmp839 * landmarks_18_;
  const Scalar _tmp841 = _tmp778 * _tmp781;
  const Scalar _tmp842 =
      _tmp663 * (_tmp808 + _tmp831 + _tmp837 * landmarks_18_) - _tmp840 * _tmp841;
  const Scalar _tmp843 = _tmp775 - _tmp816 * _views_1_pose[0] + _tmp824;
  const Scalar _tmp844 = _tmp778 * _tmp790;
  const Scalar _tmp845 =
      _tmp666 * (_tmp773 - _tmp815 * _views_1_pose[0] + _tmp823 + _tmp843 * landmarks_18_) -
      _tmp840 * _tmp844;
  const Scalar _tmp846 = _tmp783 * _tmp842 + _tmp792 * _tmp845;
  const Scalar _tmp847 = _tmp675 * _tmp845 + _tmp797 * _tmp846 - _tmp799 * _tmp846;
  const Scalar _tmp848 = (1.0 / 2.0) * _views_1_pose[3];
  const Scalar _tmp849 =
      -_tmp800 * _tmp801 - _tmp821 * _tmp822 + _tmp836 * _views_1_pose[2] + _tmp847 * _tmp848;
  const Scalar _tmp850 = _tmp685 * _tmp766;
  const Scalar _tmp851 = _tmp684 * _tmp94;
  const Scalar _tmp852 = _tmp777 * landmarks_19_ + _tmp850 - _tmp851;
  const Scalar _tmp853 =
      _tmp698 * ((((_tmp19 + _tmp688) > 0) - ((_tmp19 + _tmp688) < 0)) + 1) / (_tmp689 * _tmp689);
  const Scalar _tmp854 = _tmp686 * _tmp853;
  const Scalar _tmp855 = _tmp780 * _tmp854;
  const Scalar _tmp856 = _tmp684 * _tmp90;
  const Scalar _tmp857 = _tmp683 * _tmp766;
  const Scalar _tmp858 =
      _tmp691 * (_tmp771 * landmarks_19_ + _tmp856 - _tmp857) - _tmp852 * _tmp855;
  const Scalar _tmp859 = 2 * _tmp692;
  const Scalar _tmp860 = _tmp685 * _tmp90;
  const Scalar _tmp861 = _tmp683 * _tmp94;
  const Scalar _tmp862 = _tmp693 * _tmp853;
  const Scalar _tmp863 = _tmp789 * _tmp862;
  const Scalar _tmp864 =
      _tmp694 * (_tmp788 * landmarks_19_ - _tmp860 + _tmp861) - _tmp852 * _tmp863;
  const Scalar _tmp865 = 2 * _tmp695;
  const Scalar _tmp866 = _tmp858 * _tmp859 + _tmp864 * _tmp865;
  const Scalar _tmp867 = (1.0 / 2.0) * _tmp692;
  const Scalar _tmp868 = _tmp158 * _tmp697 * _tmp699 * std::pow(_tmp700, _tmp795) / _tmp701;
  const Scalar _tmp869 = _tmp867 * _tmp868;
  const Scalar _tmp870 = _tmp702 / (_tmp696 * std::sqrt(_tmp696));
  const Scalar _tmp871 = _tmp867 * _tmp870;
  const Scalar _tmp872 = _tmp703 * _tmp858 + _tmp866 * _tmp869 - _tmp866 * _tmp871;
  const Scalar _tmp873 = _tmp685 * _tmp94;
  const Scalar _tmp874 = _tmp684 * _tmp766;
  const Scalar _tmp875 = _tmp811 * landmarks_19_ + _tmp873 + _tmp874;
  const Scalar _tmp876 = 4 * _tmp685;
  const Scalar _tmp877 = _tmp684 * _tmp88;
  const Scalar _tmp878 =
      _tmp691 * (_tmp806 * landmarks_19_ + _tmp861 - _tmp876 * _views_1_pose[2] + _tmp877) -
      _tmp855 * _tmp875;
  const Scalar _tmp879 = 4 * _views_1_pose[2];
  const Scalar _tmp880 = _tmp685 * _tmp88;
  const Scalar _tmp881 =
      _tmp694 * (-_tmp684 * _tmp879 + _tmp818 * landmarks_19_ + _tmp857 - _tmp880) -
      _tmp863 * _tmp875;
  const Scalar _tmp882 = _tmp859 * _tmp878 + _tmp865 * _tmp881;
  const Scalar _tmp883 = _tmp703 * _tmp878 + _tmp869 * _tmp882 - _tmp871 * _tmp882;
  const Scalar _tmp884 = -_tmp683 * _tmp826 + _tmp828 * landmarks_19_ + _tmp856 + _tmp880;
  const Scalar _tmp885 = _tmp683 * _tmp88;
  const Scalar _tmp886 =
      _tmp691 * (_tmp825 * landmarks_19_ + _tmp851 - _tmp876 * _views_1_pose[1] - _tmp885) -
      _tmp855 * _tmp884;
  const Scalar _tmp887 = _tmp683 * _tmp90;
  const Scalar _tmp888 =
      _tmp694 * (_tmp833 * landmarks_19_ + _tmp873 + _tmp887) - _tmp863 * _tmp884;
  const Scalar _tmp889 = _tmp859 * _tmp886 + _tmp865 * _tmp888;
  const Scalar _tmp890 = _tmp703 * _tmp886 + _tmp869 * _tmp889 - _tmp871 * _tmp889;
  const Scalar _tmp891 = (1.0 / 2.0) * _views_1_pose[2];
  const Scalar _tmp892 = -_tmp683 * _tmp838 + _tmp839 * landmarks_19_ + _tmp860 - _tmp877;
  const Scalar _tmp893 =
      _tmp691 * (_tmp837 * landmarks_19_ + _tmp874 + _tmp887) - _tmp855 * _tmp892;
  const Scalar _tmp894 =
      _tmp694 * (-_tmp684 * _tmp838 + _tmp843 * landmarks_19_ + _tmp850 + _tmp885) -
      _tmp863 * _tmp892;
  const Scalar _tmp895 = _tmp859 * _tmp893 + _tmp865 * _tmp894;
  const Scalar _tmp896 = _tmp703 * _tmp893 + _tmp869 * _tmp895 - _tmp871 * _tmp895;
  const Scalar _tmp897 =
      -_tmp801 * _tmp872 - _tmp822 * _tmp883 + _tmp848 * _tmp896 + _tmp890 * _tmp891;
  const Scalar _tmp898 = (1.0 / 2.0) * _tmp664;
  const Scalar _tmp899 = _tmp796 * _tmp898;
  const Scalar _tmp900 = _tmp798 * _tmp898;
  const Scalar _tmp901 = _tmp675 * _tmp782 + _tmp793 * _tmp899 - _tmp793 * _tmp900;
  const Scalar _tmp902 = _tmp675 * _tmp813 + _tmp820 * _tmp899 - _tmp820 * _tmp900;
  const Scalar _tmp903 = _tmp835 * _tmp898;
  const Scalar _tmp904 = _tmp675 * _tmp830 + _tmp796 * _tmp903 - _tmp798 * _tmp903;
  const Scalar _tmp905 = _tmp675 * _tmp842 + _tmp846 * _tmp899 - _tmp846 * _tmp900;
  const Scalar _tmp906 =
      -_tmp801 * _tmp901 - _tmp822 * _tmp902 + _tmp848 * _tmp905 + _tmp891 * _tmp904;
  const Scalar _tmp907 = _tmp628 * _tmp90;
  const Scalar _tmp908 = 2 * _tmp627;
  const Scalar _tmp909 = _tmp908 * _views_1_pose[1];
  const Scalar _tmp910 = _tmp629 * _tmp766;
  const Scalar _tmp911 = _tmp628 * _tmp94;
  const Scalar _tmp912 = _tmp777 * landmarks_17_ + _tmp910 - _tmp911;
  const Scalar _tmp913 =
      _tmp644 * ((((_tmp19 + _tmp632) > 0) - ((_tmp19 + _tmp632) < 0)) + 1) / (_tmp633 * _tmp633);
  const Scalar _tmp914 = _tmp630 * _tmp913;
  const Scalar _tmp915 = _tmp780 * _tmp914;
  const Scalar _tmp916 =
      _tmp635 * (_tmp771 * landmarks_17_ + _tmp907 - _tmp909) - _tmp912 * _tmp915;
  const Scalar _tmp917 = 2 * _tmp636;
  const Scalar _tmp918 = _tmp627 * _tmp94;
  const Scalar _tmp919 = _tmp629 * _tmp90;
  const Scalar _tmp920 = _tmp637 * _tmp913;
  const Scalar _tmp921 = _tmp789 * _tmp920;
  const Scalar _tmp922 =
      _tmp638 * (_tmp788 * landmarks_17_ + _tmp918 - _tmp919) - _tmp912 * _tmp921;
  const Scalar _tmp923 = 2 * _tmp639;
  const Scalar _tmp924 = _tmp916 * _tmp917 + _tmp922 * _tmp923;
  const Scalar _tmp925 = (1.0 / 2.0) * _tmp636;
  const Scalar _tmp926 = _tmp646 / (_tmp640 * std::sqrt(_tmp640));
  const Scalar _tmp927 = _tmp925 * _tmp926;
  const Scalar _tmp928 = _tmp158 * _tmp641 * std::pow(_tmp642, _tmp795) * _tmp645 / _tmp643;
  const Scalar _tmp929 = _tmp925 * _tmp928;
  const Scalar _tmp930 = _tmp647 * _tmp916 - _tmp924 * _tmp927 + _tmp924 * _tmp929;
  const Scalar _tmp931 = _tmp628 * _tmp88;
  const Scalar _tmp932 = _tmp629 * _tmp94;
  const Scalar _tmp933 = _tmp628 * _tmp766;
  const Scalar _tmp934 = _tmp811 * landmarks_17_ + _tmp932 + _tmp933;
  const Scalar _tmp935 =
      _tmp635 * (-_tmp629 * _tmp879 + _tmp806 * landmarks_17_ + _tmp918 + _tmp931) -
      _tmp915 * _tmp934;
  const Scalar _tmp936 = _tmp629 * _tmp88;
  const Scalar _tmp937 =
      _tmp638 * (-_tmp628 * _tmp879 + _tmp818 * landmarks_17_ + _tmp909 - _tmp936) -
      _tmp921 * _tmp934;
  const Scalar _tmp938 = _tmp917 * _tmp935 + _tmp923 * _tmp937;
  const Scalar _tmp939 = _tmp925 * _tmp938;
  const Scalar _tmp940 = _tmp647 * _tmp935 - _tmp926 * _tmp939 + _tmp928 * _tmp939;
  const Scalar _tmp941 = _tmp908 * _views_1_pose[3];
  const Scalar _tmp942 = 4 * _tmp627;
  const Scalar _tmp943 = _tmp828 * landmarks_17_ + _tmp907 + _tmp936 - _tmp942 * _views_1_pose[1];
  const Scalar _tmp944 =
      _tmp635 * (-_tmp629 * _tmp826 + _tmp825 * landmarks_17_ + _tmp911 - _tmp941) -
      _tmp915 * _tmp943;
  const Scalar _tmp945 = _tmp627 * _tmp90;
  const Scalar _tmp946 =
      _tmp638 * (_tmp833 * landmarks_17_ + _tmp932 + _tmp945) - _tmp921 * _tmp943;
  const Scalar _tmp947 = _tmp917 * _tmp944 + _tmp923 * _tmp946;
  const Scalar _tmp948 = _tmp926 * _tmp947;
  const Scalar _tmp949 = _tmp647 * _tmp944 - _tmp925 * _tmp948 + _tmp929 * _tmp947;
  const Scalar _tmp950 = _tmp839 * landmarks_17_ + _tmp919 - _tmp931 - _tmp942 * _views_1_pose[0];
  const Scalar _tmp951 =
      _tmp635 * (_tmp837 * landmarks_17_ + _tmp933 + _tmp945) - _tmp915 * _tmp950;
  const Scalar _tmp952 =
      _tmp638 * (-_tmp628 * _tmp838 + _tmp843 * landmarks_17_ + _tmp910 + _tmp941) -
      _tmp921 * _tmp950;
  const Scalar _tmp953 = _tmp917 * _tmp951 + _tmp923 * _tmp952;
  const Scalar _tmp954 = _tmp647 * _tmp951 - _tmp927 * _tmp953 + _tmp929 * _tmp953;
  const Scalar _tmp955 =
      -_tmp801 * _tmp930 - _tmp822 * _tmp940 + _tmp848 * _tmp954 + _tmp891 * _tmp949;
  const Scalar _tmp956 = _tmp601 * _tmp94;
  const Scalar _tmp957 = _tmp600 * _tmp766;
  const Scalar _tmp958 = _tmp811 * landmarks_16_ + _tmp956 + _tmp957;
  const Scalar _tmp959 =
      _tmp616 * ((((_tmp19 + _tmp604) > 0) - ((_tmp19 + _tmp604) < 0)) + 1) / (_tmp605 * _tmp605);
  const Scalar _tmp960 = _tmp609 * _tmp789;
  const Scalar _tmp961 = _tmp959 * _tmp960;
  const Scalar _tmp962 = _tmp599 * _tmp766;
  const Scalar _tmp963 = _tmp601 * _tmp88;
  const Scalar _tmp964 =
      _tmp610 * (-_tmp600 * _tmp879 + _tmp818 * landmarks_16_ + _tmp962 - _tmp963) -
      _tmp958 * _tmp961;
  const Scalar _tmp965 = 4 * _tmp601;
  const Scalar _tmp966 = _tmp600 * _tmp88;
  const Scalar _tmp967 = _tmp599 * _tmp94;
  const Scalar _tmp968 = _tmp602 * _tmp780;
  const Scalar _tmp969 = _tmp959 * _tmp968;
  const Scalar _tmp970 =
      _tmp607 * (_tmp806 * landmarks_16_ - _tmp965 * _views_1_pose[2] + _tmp966 + _tmp967) -
      _tmp958 * _tmp969;
  const Scalar _tmp971 = 2 * _tmp608;
  const Scalar _tmp972 = 2 * _tmp611;
  const Scalar _tmp973 = _tmp964 * _tmp972 + _tmp970 * _tmp971;
  const Scalar _tmp974 = (1.0 / 2.0) * _tmp611;
  const Scalar _tmp975 = _tmp158 * _tmp613 * std::pow(_tmp614, _tmp795) * _tmp617 / _tmp615;
  const Scalar _tmp976 = _tmp974 * _tmp975;
  const Scalar _tmp977 = _tmp618 / (_tmp612 * std::sqrt(_tmp612));
  const Scalar _tmp978 = _tmp974 * _tmp977;
  const Scalar _tmp979 = _tmp619 * _tmp964 + _tmp973 * _tmp976 - _tmp973 * _tmp978;
  const Scalar _tmp980 = _tmp600 * _tmp94;
  const Scalar _tmp981 = _tmp599 * _tmp88;
  const Scalar _tmp982 = _tmp600 * _tmp90;
  const Scalar _tmp983 = 4 * _tmp599;
  const Scalar _tmp984 = _tmp828 * landmarks_16_ + _tmp963 + _tmp982 - _tmp983 * _views_1_pose[1];
  const Scalar _tmp985 =
      _tmp607 * (_tmp825 * landmarks_16_ - _tmp965 * _views_1_pose[1] + _tmp980 - _tmp981) -
      _tmp969 * _tmp984;
  const Scalar _tmp986 = _tmp599 * _tmp90;
  const Scalar _tmp987 =
      _tmp610 * (_tmp833 * landmarks_16_ + _tmp956 + _tmp986) - _tmp961 * _tmp984;
  const Scalar _tmp988 = _tmp971 * _tmp985 + _tmp972 * _tmp987;
  const Scalar _tmp989 = _tmp619 * _tmp987 + _tmp976 * _tmp988 - _tmp978 * _tmp988;
  const Scalar _tmp990 = _tmp601 * _tmp766;
  const Scalar _tmp991 = _tmp777 * landmarks_16_ - _tmp980 + _tmp990;
  const Scalar _tmp992 = _tmp601 * _tmp90;
  const Scalar _tmp993 =
      _tmp610 * (_tmp788 * landmarks_16_ + _tmp967 - _tmp992) - _tmp961 * _tmp991;
  const Scalar _tmp994 =
      _tmp607 * (_tmp771 * landmarks_16_ - _tmp962 + _tmp982) - _tmp969 * _tmp991;
  const Scalar _tmp995 = _tmp971 * _tmp994 + _tmp972 * _tmp993;
  const Scalar _tmp996 = _tmp619 * _tmp993 + _tmp976 * _tmp995 - _tmp978 * _tmp995;
  const Scalar _tmp997 =
      _tmp959 * (_tmp839 * landmarks_16_ - _tmp966 - _tmp983 * _views_1_pose[0] + _tmp992);
  const Scalar _tmp998 =
      _tmp610 * (-_tmp600 * _tmp838 + _tmp843 * landmarks_16_ + _tmp981 + _tmp990) -
      _tmp960 * _tmp997;
  const Scalar _tmp999 =
      _tmp607 * (_tmp837 * landmarks_16_ + _tmp957 + _tmp986) - _tmp968 * _tmp997;
  const Scalar _tmp1000 = _tmp971 * _tmp999 + _tmp972 * _tmp998;
  const Scalar _tmp1001 = _tmp1000 * _tmp976 - _tmp1000 * _tmp978 + _tmp619 * _tmp998;
  const Scalar _tmp1002 =
      _tmp1001 * _tmp848 - _tmp801 * _tmp996 - _tmp822 * _tmp979 + _tmp891 * _tmp989;
  const Scalar _tmp1003 = _tmp572 * _tmp94;
  const Scalar _tmp1004 = _tmp573 * _tmp766;
  const Scalar _tmp1005 = -_tmp1003 + _tmp1004 + _tmp777 * landmarks_15_;
  const Scalar _tmp1006 =
      _tmp586 * ((((_tmp19 + _tmp576) > 0) - ((_tmp19 + _tmp576) < 0)) + 1) / (_tmp577 * _tmp577);
  const Scalar _tmp1007 = _tmp581 * _tmp789;
  const Scalar _tmp1008 = _tmp1006 * _tmp1007;
  const Scalar _tmp1009 = _tmp573 * _tmp90;
  const Scalar _tmp1010 = _tmp571 * _tmp94;
  const Scalar _tmp1011 =
      -_tmp1005 * _tmp1008 + _tmp582 * (-_tmp1009 + _tmp1010 + _tmp788 * landmarks_15_);
  const Scalar _tmp1012 = _tmp572 * _tmp90;
  const Scalar _tmp1013 = _tmp571 * _tmp766;
  const Scalar _tmp1014 = _tmp574 * _tmp780;
  const Scalar _tmp1015 = _tmp1006 * _tmp1014;
  const Scalar _tmp1016 =
      -_tmp1005 * _tmp1015 + _tmp579 * (_tmp1012 - _tmp1013 + _tmp771 * landmarks_15_);
  const Scalar _tmp1017 = 2 * _tmp580;
  const Scalar _tmp1018 = 2 * _tmp583;
  const Scalar _tmp1019 = _tmp1011 * _tmp1018 + _tmp1016 * _tmp1017;
  const Scalar _tmp1020 = (1.0 / 2.0) * _tmp158;
  const Scalar _tmp1021 = _tmp585 * _tmp587 * std::pow(_tmp588, _tmp795) / _tmp589;
  const Scalar _tmp1022 = _tmp1020 * _tmp1021;
  const Scalar _tmp1023 = _tmp1022 * _tmp583;
  const Scalar _tmp1024 = _tmp590 / (_tmp584 * std::sqrt(_tmp584));
  const Scalar _tmp1025 = (1.0 / 2.0) * _tmp1024;
  const Scalar _tmp1026 = _tmp1025 * _tmp583;
  const Scalar _tmp1027 = _tmp1011 * _tmp591 + _tmp1019 * _tmp1023 - _tmp1019 * _tmp1026;
  const Scalar _tmp1028 = _tmp573 * _tmp88;
  const Scalar _tmp1029 = 4 * _tmp571;
  const Scalar _tmp1030 =
      _tmp1006 * (_tmp1012 + _tmp1028 - _tmp1029 * _views_1_pose[1] + _tmp828 * landmarks_15_);
  const Scalar _tmp1031 = _tmp573 * _tmp94;
  const Scalar _tmp1032 = _tmp571 * _tmp90;
  const Scalar _tmp1033 =
      -_tmp1007 * _tmp1030 + _tmp582 * (_tmp1031 + _tmp1032 + _tmp833 * landmarks_15_);
  const Scalar _tmp1034 = _tmp571 * _tmp88;
  const Scalar _tmp1035 =
      -_tmp1014 * _tmp1030 +
      _tmp579 * (_tmp1003 - _tmp1034 - _tmp573 * _tmp826 + _tmp825 * landmarks_15_);
  const Scalar _tmp1036 = _tmp1017 * _tmp1035 + _tmp1018 * _tmp1033;
  const Scalar _tmp1037 = _tmp1025 * _tmp1036;
  const Scalar _tmp1038 = _tmp1023 * _tmp1036 + _tmp1033 * _tmp591 - _tmp1037 * _tmp583;
  const Scalar _tmp1039 = 2 * _tmp572;
  const Scalar _tmp1040 = _tmp1039 * _views_1_pose[1];
  const Scalar _tmp1041 = _tmp1031 + _tmp1040 + _tmp811 * landmarks_15_;
  const Scalar _tmp1042 = 4 * _tmp572;
  const Scalar _tmp1043 =
      -_tmp1008 * _tmp1041 +
      _tmp582 * (_tmp1013 - _tmp1028 - _tmp1042 * _views_1_pose[2] + _tmp818 * landmarks_15_);
  const Scalar _tmp1044 = _tmp1039 * _views_1_pose[3];
  const Scalar _tmp1045 =
      -_tmp1015 * _tmp1041 +
      _tmp579 * (_tmp1010 + _tmp1044 - _tmp573 * _tmp879 + _tmp806 * landmarks_15_);
  const Scalar _tmp1046 = _tmp1017 * _tmp1045 + _tmp1018 * _tmp1043;
  const Scalar _tmp1047 = _tmp1023 * _tmp1046 - _tmp1026 * _tmp1046 + _tmp1043 * _tmp591;
  const Scalar _tmp1048 =
      _tmp1009 - _tmp1029 * _views_1_pose[0] - _tmp1044 + _tmp839 * landmarks_15_;
  const Scalar _tmp1049 =
      -_tmp1015 * _tmp1048 + _tmp579 * (_tmp1032 + _tmp1040 + _tmp837 * landmarks_15_);
  const Scalar _tmp1050 =
      -_tmp1008 * _tmp1048 +
      _tmp582 * (_tmp1004 + _tmp1034 - _tmp1042 * _views_1_pose[0] + _tmp843 * landmarks_15_);
  const Scalar _tmp1051 = (1.0 / 2.0) * _tmp1017 * _tmp1049 + (1.0 / 2.0) * _tmp1018 * _tmp1050;
  const Scalar _tmp1052 = _tmp1051 * _tmp583;
  const Scalar _tmp1053 = _tmp1021 * _tmp158;
  const Scalar _tmp1054 = -_tmp1024 * _tmp1052 + _tmp1050 * _tmp591 + _tmp1052 * _tmp1053;
  const Scalar _tmp1055 =
      -_tmp1027 * _tmp801 + _tmp1038 * _tmp891 - _tmp1047 * _tmp822 + _tmp1054 * _tmp848;
  const Scalar _tmp1056 = _tmp545 * _tmp94;
  const Scalar _tmp1057 = _tmp544 * _tmp766;
  const Scalar _tmp1058 = _tmp1056 + _tmp1057 + _tmp811 * landmarks_14_;
  const Scalar _tmp1059 =
      _tmp560 * ((((_tmp19 + _tmp548) > 0) - ((_tmp19 + _tmp548) < 0)) + 1) / (_tmp549 * _tmp549);
  const Scalar _tmp1060 = _tmp1059 * _tmp546;
  const Scalar _tmp1061 = _tmp1060 * _tmp780;
  const Scalar _tmp1062 = _tmp544 * _tmp88;
  const Scalar _tmp1063 = _tmp543 * _tmp94;
  const Scalar _tmp1064 =
      -_tmp1058 * _tmp1061 +
      _tmp551 * (_tmp1062 + _tmp1063 - _tmp545 * _tmp879 + _tmp806 * landmarks_14_);
  const Scalar _tmp1065 = 2 * _tmp552;
  const Scalar _tmp1066 = _tmp1059 * _tmp553;
  const Scalar _tmp1067 = _tmp1066 * _tmp789;
  const Scalar _tmp1068 = _tmp545 * _tmp88;
  const Scalar _tmp1069 = _tmp543 * _tmp766;
  const Scalar _tmp1070 =
      -_tmp1058 * _tmp1067 +
      _tmp554 * (-_tmp1068 + _tmp1069 - _tmp544 * _tmp879 + _tmp818 * landmarks_14_);
  const Scalar _tmp1071 = 2 * _tmp555;
  const Scalar _tmp1072 = _tmp1064 * _tmp1065 + _tmp1070 * _tmp1071;
  const Scalar _tmp1073 = (1.0 / 2.0) * _tmp555;
  const Scalar _tmp1074 = _tmp562 / (_tmp556 * std::sqrt(_tmp556));
  const Scalar _tmp1075 = _tmp1073 * _tmp1074;
  const Scalar _tmp1076 = _tmp158 * _tmp557 * std::pow(_tmp558, _tmp795) * _tmp561 / _tmp559;
  const Scalar _tmp1077 = _tmp1073 * _tmp1076;
  const Scalar _tmp1078 = _tmp1070 * _tmp563 - _tmp1072 * _tmp1075 + _tmp1072 * _tmp1077;
  const Scalar _tmp1079 = _tmp544 * _tmp90;
  const Scalar _tmp1080 = _tmp1068 + _tmp1079 - _tmp543 * _tmp826 + _tmp828 * landmarks_14_;
  const Scalar _tmp1081 = _tmp544 * _tmp94;
  const Scalar _tmp1082 = _tmp543 * _tmp88;
  const Scalar _tmp1083 =
      -_tmp1061 * _tmp1080 +
      _tmp551 * (_tmp1081 - _tmp1082 - _tmp545 * _tmp826 + _tmp825 * landmarks_14_);
  const Scalar _tmp1084 = _tmp543 * _tmp90;
  const Scalar _tmp1085 =
      -_tmp1067 * _tmp1080 + _tmp554 * (_tmp1056 + _tmp1084 + _tmp833 * landmarks_14_);
  const Scalar _tmp1086 = _tmp1065 * _tmp1083 + _tmp1071 * _tmp1085;
  const Scalar _tmp1087 = -_tmp1075 * _tmp1086 + _tmp1077 * _tmp1086 + _tmp1085 * _tmp563;
  const Scalar _tmp1088 = (1.0 / 2.0) * _tmp1087;
  const Scalar _tmp1089 = _tmp545 * _tmp766;
  const Scalar _tmp1090 = -_tmp1081 + _tmp1089 + _tmp777 * landmarks_14_;
  const Scalar _tmp1091 =
      -_tmp1061 * _tmp1090 + _tmp551 * (-_tmp1069 + _tmp1079 + _tmp771 * landmarks_14_);
  const Scalar _tmp1092 = _tmp545 * _tmp90;
  const Scalar _tmp1093 =
      -_tmp1067 * _tmp1090 + _tmp554 * (_tmp1063 - _tmp1092 + _tmp788 * landmarks_14_);
  const Scalar _tmp1094 = _tmp1065 * _tmp1091 + _tmp1071 * _tmp1093;
  const Scalar _tmp1095 = _tmp1073 * _tmp1094;
  const Scalar _tmp1096 = -_tmp1074 * _tmp1095 + _tmp1076 * _tmp1095 + _tmp1093 * _tmp563;
  const Scalar _tmp1097 = -_tmp1062 + _tmp1092 - _tmp543 * _tmp838 + _tmp839 * landmarks_14_;
  const Scalar _tmp1098 =
      -_tmp1061 * _tmp1097 + _tmp551 * (_tmp1057 + _tmp1084 + _tmp837 * landmarks_14_);
  const Scalar _tmp1099 =
      -_tmp1067 * _tmp1097 +
      _tmp554 * (_tmp1082 + _tmp1089 - _tmp544 * _tmp838 + _tmp843 * landmarks_14_);
  const Scalar _tmp1100 = _tmp1065 * _tmp1098 + _tmp1071 * _tmp1099;
  const Scalar _tmp1101 = -_tmp1075 * _tmp1100 + _tmp1077 * _tmp1100 + _tmp1099 * _tmp563;
  const Scalar _tmp1102 =
      -_tmp1078 * _tmp822 + _tmp1088 * _views_1_pose[2] - _tmp1096 * _tmp801 + _tmp1101 * _tmp848;
  const Scalar _tmp1103 = _tmp517 * _tmp90;
  const Scalar _tmp1104 = _tmp515 * _tmp94;
  const Scalar _tmp1105 = _tmp517 * _tmp766;
  const Scalar _tmp1106 = _tmp516 * _tmp94;
  const Scalar _tmp1107 =
      _tmp532 * ((((_tmp19 + _tmp520) > 0) - ((_tmp19 + _tmp520) < 0)) + 1) / (_tmp521 * _tmp521);
  const Scalar _tmp1108 = _tmp1107 * (_tmp1105 - _tmp1106 + _tmp777 * landmarks_13_);
  const Scalar _tmp1109 = _tmp525 * _tmp789;
  const Scalar _tmp1110 =
      -_tmp1108 * _tmp1109 + _tmp526 * (-_tmp1103 + _tmp1104 + _tmp788 * landmarks_13_);
  const Scalar _tmp1111 = _tmp516 * _tmp90;
  const Scalar _tmp1112 = _tmp515 * _tmp766;
  const Scalar _tmp1113 = _tmp518 * _tmp780;
  const Scalar _tmp1114 =
      -_tmp1108 * _tmp1113 + _tmp523 * (_tmp1111 - _tmp1112 + _tmp771 * landmarks_13_);
  const Scalar _tmp1115 = 2 * _tmp524;
  const Scalar _tmp1116 = 2 * _tmp527;
  const Scalar _tmp1117 = _tmp1110 * _tmp1116 + _tmp1114 * _tmp1115;
  const Scalar _tmp1118 = _tmp534 / (_tmp528 * std::sqrt(_tmp528));
  const Scalar _tmp1119 = (1.0 / 2.0) * _tmp527;
  const Scalar _tmp1120 = _tmp1118 * _tmp1119;
  const Scalar _tmp1121 = _tmp158 * _tmp529 * std::pow(_tmp530, _tmp795) * _tmp533 / _tmp531;
  const Scalar _tmp1122 = _tmp1119 * _tmp1121;
  const Scalar _tmp1123 = _tmp1110 * _tmp535 - _tmp1117 * _tmp1120 + _tmp1117 * _tmp1122;
  const Scalar _tmp1124 = _tmp517 * _tmp88;
  const Scalar _tmp1125 = _tmp517 * _tmp94;
  const Scalar _tmp1126 = _tmp516 * _tmp766;
  const Scalar _tmp1127 = _tmp1107 * (_tmp1125 + _tmp1126 + _tmp811 * landmarks_13_);
  const Scalar _tmp1128 =
      -_tmp1109 * _tmp1127 +
      _tmp526 * (_tmp1112 - _tmp1124 - _tmp516 * _tmp879 + _tmp818 * landmarks_13_);
  const Scalar _tmp1129 = _tmp516 * _tmp88;
  const Scalar _tmp1130 =
      -_tmp1113 * _tmp1127 +
      _tmp523 * (_tmp1104 + _tmp1129 - _tmp517 * _tmp879 + _tmp806 * landmarks_13_);
  const Scalar _tmp1131 = _tmp1115 * _tmp1130 + _tmp1116 * _tmp1128;
  const Scalar _tmp1132 = _tmp1118 * _tmp1131;
  const Scalar _tmp1133 = -_tmp1119 * _tmp1132 + _tmp1122 * _tmp1131 + _tmp1128 * _tmp535;
  const Scalar _tmp1134 = _tmp515 * _tmp90;
  const Scalar _tmp1135 = _tmp1111 + _tmp1124 - _tmp515 * _tmp826 + _tmp828 * landmarks_13_;
  const Scalar _tmp1136 = _tmp1107 * _tmp1109;
  const Scalar _tmp1137 =
      -_tmp1135 * _tmp1136 + _tmp526 * (_tmp1125 + _tmp1134 + _tmp833 * landmarks_13_);
  const Scalar _tmp1138 = _tmp515 * _tmp88;
  const Scalar _tmp1139 = _tmp1107 * _tmp1113;
  const Scalar _tmp1140 =
      -_tmp1135 * _tmp1139 +
      _tmp523 * (_tmp1106 - _tmp1138 - _tmp517 * _tmp826 + _tmp825 * landmarks_13_);
  const Scalar _tmp1141 = _tmp1115 * _tmp1140 + _tmp1116 * _tmp1137;
  const Scalar _tmp1142 = -_tmp1120 * _tmp1141 + _tmp1122 * _tmp1141 + _tmp1137 * _tmp535;
  const Scalar _tmp1143 = _tmp1103 - _tmp1129 - _tmp515 * _tmp838 + _tmp839 * landmarks_13_;
  const Scalar _tmp1144 =
      -_tmp1136 * _tmp1143 +
      _tmp526 * (_tmp1105 + _tmp1138 - _tmp516 * _tmp838 + _tmp843 * landmarks_13_);
  const Scalar _tmp1145 =
      -_tmp1139 * _tmp1143 + _tmp523 * (_tmp1126 + _tmp1134 + _tmp837 * landmarks_13_);
  const Scalar _tmp1146 = _tmp1115 * _tmp1145 + _tmp1116 * _tmp1144;
  const Scalar _tmp1147 = -_tmp1120 * _tmp1146 + _tmp1122 * _tmp1146 + _tmp1144 * _tmp535;
  const Scalar _tmp1148 =
      -_tmp1123 * _tmp801 - _tmp1133 * _tmp822 + _tmp1142 * _tmp891 + _tmp1147 * _tmp848;
  const Scalar _tmp1149 = (1.0 / 2.0) * _tmp552;
  const Scalar _tmp1150 = _tmp1074 * _tmp1149;
  const Scalar _tmp1151 = _tmp1076 * _tmp1149;
  const Scalar _tmp1152 = _tmp1091 * _tmp563 - _tmp1094 * _tmp1150 + _tmp1094 * _tmp1151;
  const Scalar _tmp1153 = _tmp1064 * _tmp563 - _tmp1072 * _tmp1150 + _tmp1072 * _tmp1151;
  const Scalar _tmp1154 = _tmp1083 * _tmp563 - _tmp1086 * _tmp1150 + _tmp1086 * _tmp1151;
  const Scalar _tmp1155 = _tmp1098 * _tmp563 - _tmp1100 * _tmp1150 + _tmp1100 * _tmp1151;
  const Scalar _tmp1156 =
      -_tmp1152 * _tmp801 - _tmp1153 * _tmp822 + _tmp1154 * _tmp891 + _tmp1155 * _tmp848;
  const Scalar _tmp1157 = (1.0 / 2.0) * _tmp524;
  const Scalar _tmp1158 = _tmp1118 * _tmp1157;
  const Scalar _tmp1159 = _tmp1121 * _tmp1157;
  const Scalar _tmp1160 = _tmp1114 * _tmp535 - _tmp1117 * _tmp1158 + _tmp1117 * _tmp1159;
  const Scalar _tmp1161 = _tmp1130 * _tmp535 + _tmp1131 * _tmp1159 - _tmp1132 * _tmp1157;
  const Scalar _tmp1162 = _tmp1140 * _tmp535 - _tmp1141 * _tmp1158 + _tmp1141 * _tmp1159;
  const Scalar _tmp1163 = _tmp1145 * _tmp535 - _tmp1146 * _tmp1158 + _tmp1146 * _tmp1159;
  const Scalar _tmp1164 =
      -_tmp1160 * _tmp801 - _tmp1161 * _tmp822 + _tmp1162 * _tmp891 + _tmp1163 * _tmp848;
  const Scalar _tmp1165 = _tmp487 * _tmp94;
  const Scalar _tmp1166 = _tmp489 * _tmp766;
  const Scalar _tmp1167 = -_tmp1165 + _tmp1166 + _tmp777 * landmarks_12_;
  const Scalar _tmp1168 =
      _tmp504 * ((((_tmp19 + _tmp492) > 0) - ((_tmp19 + _tmp492) < 0)) + 1) / (_tmp493 * _tmp493);
  const Scalar _tmp1169 = _tmp1168 * _tmp490 * _tmp780;
  const Scalar _tmp1170 = _tmp488 * _tmp766;
  const Scalar _tmp1171 = _tmp487 * _tmp90;
  const Scalar _tmp1172 =
      -_tmp1167 * _tmp1169 + _tmp495 * (-_tmp1170 + _tmp1171 + _tmp771 * landmarks_12_);
  const Scalar _tmp1173 = 2 * _tmp496;
  const Scalar _tmp1174 = _tmp1168 * _tmp497;
  const Scalar _tmp1175 = _tmp1174 * _tmp789;
  const Scalar _tmp1176 = _tmp489 * _tmp90;
  const Scalar _tmp1177 = _tmp488 * _tmp94;
  const Scalar _tmp1178 =
      -_tmp1167 * _tmp1175 + _tmp498 * (-_tmp1176 + _tmp1177 + _tmp788 * landmarks_12_);
  const Scalar _tmp1179 = 2 * _tmp499;
  const Scalar _tmp1180 = _tmp1172 * _tmp1173 + _tmp1178 * _tmp1179;
  const Scalar _tmp1181 = (1.0 / 2.0) * _tmp499;
  const Scalar _tmp1182 = _tmp158 * _tmp501 * std::pow(_tmp502, _tmp795) * _tmp505 / _tmp503;
  const Scalar _tmp1183 = _tmp1181 * _tmp1182;
  const Scalar _tmp1184 = _tmp506 / (_tmp500 * std::sqrt(_tmp500));
  const Scalar _tmp1185 = _tmp1181 * _tmp1184;
  const Scalar _tmp1186 = _tmp1178 * _tmp507 + _tmp1180 * _tmp1183 - _tmp1180 * _tmp1185;
  const Scalar _tmp1187 = _tmp489 * _tmp94;
  const Scalar _tmp1188 = _tmp487 * _tmp766;
  const Scalar _tmp1189 = _tmp1187 + _tmp1188 + _tmp811 * landmarks_12_;
  const Scalar _tmp1190 = _tmp487 * _tmp88;
  const Scalar _tmp1191 =
      -_tmp1169 * _tmp1189 +
      _tmp495 * (_tmp1177 + _tmp1190 - _tmp489 * _tmp879 + _tmp806 * landmarks_12_);
  const Scalar _tmp1192 = _tmp489 * _tmp88;
  const Scalar _tmp1193 =
      -_tmp1175 * _tmp1189 +
      _tmp498 * (_tmp1170 - _tmp1192 - _tmp487 * _tmp879 + _tmp818 * landmarks_12_);
  const Scalar _tmp1194 = _tmp1173 * _tmp1191 + _tmp1179 * _tmp1193;
  const Scalar _tmp1195 = _tmp1183 * _tmp1194 - _tmp1185 * _tmp1194 + _tmp1193 * _tmp507;
  const Scalar _tmp1196 = _tmp1171 + _tmp1192 - _tmp488 * _tmp826 + _tmp828 * landmarks_12_;
  const Scalar _tmp1197 = _tmp488 * _tmp88;
  const Scalar _tmp1198 =
      -_tmp1169 * _tmp1196 +
      _tmp495 * (_tmp1165 - _tmp1197 - _tmp489 * _tmp826 + _tmp825 * landmarks_12_);
  const Scalar _tmp1199 = _tmp488 * _tmp90;
  const Scalar _tmp1200 =
      -_tmp1175 * _tmp1196 + _tmp498 * (_tmp1187 + _tmp1199 + _tmp833 * landmarks_12_);
  const Scalar _tmp1201 = _tmp1173 * _tmp1198 + _tmp1179 * _tmp1200;
  const Scalar _tmp1202 = _tmp1183 * _tmp1201 - _tmp1185 * _tmp1201 + _tmp1200 * _tmp507;
  const Scalar _tmp1203 = _tmp1176 - _tmp1190 - _tmp488 * _tmp838 + _tmp839 * landmarks_12_;
  const Scalar _tmp1204 =
      -_tmp1169 * _tmp1203 + _tmp495 * (_tmp1188 + _tmp1199 + _tmp837 * landmarks_12_);
  const Scalar _tmp1205 =
      -_tmp1175 * _tmp1203 +
      _tmp498 * (_tmp1166 + _tmp1197 - _tmp487 * _tmp838 + _tmp843 * landmarks_12_);
  const Scalar _tmp1206 = _tmp1173 * _tmp1204 + _tmp1179 * _tmp1205;
  const Scalar _tmp1207 = _tmp1184 * _tmp1206;
  const Scalar _tmp1208 = -_tmp1181 * _tmp1207 + _tmp1183 * _tmp1206 + _tmp1205 * _tmp507;
  const Scalar _tmp1209 =
      -_tmp1186 * _tmp801 - _tmp1195 * _tmp822 + _tmp1202 * _tmp891 + _tmp1208 * _tmp848;
  const Scalar _tmp1210 = (1.0 / 2.0) * _tmp639;
  const Scalar _tmp1211 = _tmp1210 * _tmp926;
  const Scalar _tmp1212 = _tmp1210 * _tmp928;
  const Scalar _tmp1213 = -_tmp1211 * _tmp924 + _tmp1212 * _tmp924 + _tmp647 * _tmp922;
  const Scalar _tmp1214 = -_tmp1210 * _tmp948 + _tmp1212 * _tmp947 + _tmp647 * _tmp946;
  const Scalar _tmp1215 = -_tmp1211 * _tmp938 + _tmp1212 * _tmp938 + _tmp647 * _tmp937;
  const Scalar _tmp1216 = -_tmp1211 * _tmp953 + _tmp1212 * _tmp953 + _tmp647 * _tmp952;
  const Scalar _tmp1217 =
      -_tmp1213 * _tmp801 + _tmp1214 * _tmp891 - _tmp1215 * _tmp822 + _tmp1216 * _tmp848;
  const Scalar _tmp1218 = _tmp460 * _tmp88;
  const Scalar _tmp1219 = _tmp459 * _tmp94;
  const Scalar _tmp1220 = _tmp461 * _tmp94;
  const Scalar _tmp1221 = _tmp460 * _tmp766;
  const Scalar _tmp1222 = _tmp1220 + _tmp1221 + _tmp811 * landmarks_11_;
  const Scalar _tmp1223 =
      _tmp476 * ((((_tmp19 + _tmp464) > 0) - ((_tmp19 + _tmp464) < 0)) + 1) / (_tmp465 * _tmp465);
  const Scalar _tmp1224 = _tmp1223 * _tmp462;
  const Scalar _tmp1225 = _tmp1224 * _tmp780;
  const Scalar _tmp1226 =
      -_tmp1222 * _tmp1225 +
      _tmp467 * (_tmp1218 + _tmp1219 - _tmp461 * _tmp879 + _tmp806 * landmarks_11_);
  const Scalar _tmp1227 = 2 * _tmp468;
  const Scalar _tmp1228 = _tmp1223 * _tmp469;
  const Scalar _tmp1229 = _tmp1228 * _tmp789;
  const Scalar _tmp1230 = _tmp461 * _tmp88;
  const Scalar _tmp1231 = _tmp459 * _tmp766;
  const Scalar _tmp1232 =
      -_tmp1222 * _tmp1229 +
      _tmp470 * (-_tmp1230 + _tmp1231 - _tmp460 * _tmp879 + _tmp818 * landmarks_11_);
  const Scalar _tmp1233 = 2 * _tmp471;
  const Scalar _tmp1234 = _tmp1226 * _tmp1227 + _tmp1232 * _tmp1233;
  const Scalar _tmp1235 = _tmp478 / (_tmp472 * std::sqrt(_tmp472));
  const Scalar _tmp1236 = (1.0 / 2.0) * _tmp468;
  const Scalar _tmp1237 = _tmp1235 * _tmp1236;
  const Scalar _tmp1238 = _tmp158 * _tmp473 * std::pow(_tmp474, _tmp795) * _tmp477 / _tmp475;
  const Scalar _tmp1239 = _tmp1236 * _tmp1238;
  const Scalar _tmp1240 = _tmp1226 * _tmp479 - _tmp1234 * _tmp1237 + _tmp1234 * _tmp1239;
  const Scalar _tmp1241 = _tmp460 * _tmp90;
  const Scalar _tmp1242 = _tmp461 * _tmp766;
  const Scalar _tmp1243 = _tmp460 * _tmp94;
  const Scalar _tmp1244 = _tmp1242 - _tmp1243 + _tmp777 * landmarks_11_;
  const Scalar _tmp1245 =
      -_tmp1225 * _tmp1244 + _tmp467 * (-_tmp1231 + _tmp1241 + _tmp771 * landmarks_11_);
  const Scalar _tmp1246 = _tmp461 * _tmp90;
  const Scalar _tmp1247 =
      -_tmp1229 * _tmp1244 + _tmp470 * (_tmp1219 - _tmp1246 + _tmp788 * landmarks_11_);
  const Scalar _tmp1248 = _tmp1227 * _tmp1245 + _tmp1233 * _tmp1247;
  const Scalar _tmp1249 = -_tmp1237 * _tmp1248 + _tmp1239 * _tmp1248 + _tmp1245 * _tmp479;
  const Scalar _tmp1250 = _tmp459 * _tmp88;
  const Scalar _tmp1251 = _tmp1230 + _tmp1241 - _tmp459 * _tmp826 + _tmp828 * landmarks_11_;
  const Scalar _tmp1252 =
      -_tmp1225 * _tmp1251 +
      _tmp467 * (_tmp1243 - _tmp1250 - _tmp461 * _tmp826 + _tmp825 * landmarks_11_);
  const Scalar _tmp1253 = _tmp459 * _tmp90;
  const Scalar _tmp1254 =
      -_tmp1229 * _tmp1251 + _tmp470 * (_tmp1220 + _tmp1253 + _tmp833 * landmarks_11_);
  const Scalar _tmp1255 = _tmp1227 * _tmp1252 + _tmp1233 * _tmp1254;
  const Scalar _tmp1256 = -_tmp1237 * _tmp1255 + _tmp1239 * _tmp1255 + _tmp1252 * _tmp479;
  const Scalar _tmp1257 = -_tmp1218 + _tmp1246 - _tmp459 * _tmp838 + _tmp839 * landmarks_11_;
  const Scalar _tmp1258 =
      -_tmp1225 * _tmp1257 + _tmp467 * (_tmp1221 + _tmp1253 + _tmp837 * landmarks_11_);
  const Scalar _tmp1259 =
      -_tmp1229 * _tmp1257 +
      _tmp470 * (_tmp1242 + _tmp1250 - _tmp460 * _tmp838 + _tmp843 * landmarks_11_);
  const Scalar _tmp1260 = _tmp1227 * _tmp1258 + _tmp1233 * _tmp1259;
  const Scalar _tmp1261 = -_tmp1237 * _tmp1260 + _tmp1239 * _tmp1260 + _tmp1258 * _tmp479;
  const Scalar _tmp1262 =
      -_tmp1240 * _tmp822 - _tmp1249 * _tmp801 + _tmp1256 * _tmp891 + _tmp1261 * _tmp848;
  const Scalar _tmp1263 = _tmp404 * _tmp90;
  const Scalar _tmp1264 = _tmp403 * _tmp766;
  const Scalar _tmp1265 = _tmp406 * _tmp780;
  const Scalar _tmp1266 = _tmp405 * _tmp766;
  const Scalar _tmp1267 = _tmp404 * _tmp94;
  const Scalar _tmp1268 =
      _tmp420 * ((((_tmp19 + _tmp408) > 0) - ((_tmp19 + _tmp408) < 0)) + 1) / (_tmp409 * _tmp409);
  const Scalar _tmp1269 = _tmp1268 * (_tmp1266 - _tmp1267 + _tmp777 * landmarks_9_);
  const Scalar _tmp1270 =
      -_tmp1265 * _tmp1269 + _tmp411 * (_tmp1263 - _tmp1264 + _tmp771 * landmarks_9_);
  const Scalar _tmp1271 = 2 * _tmp412;
  const Scalar _tmp1272 = _tmp413 * _tmp789;
  const Scalar _tmp1273 = _tmp405 * _tmp90;
  const Scalar _tmp1274 = _tmp403 * _tmp94;
  const Scalar _tmp1275 =
      -_tmp1269 * _tmp1272 + _tmp414 * (-_tmp1273 + _tmp1274 + _tmp788 * landmarks_9_);
  const Scalar _tmp1276 = 2 * _tmp415;
  const Scalar _tmp1277 = _tmp1270 * _tmp1271 + _tmp1275 * _tmp1276;
  const Scalar _tmp1278 = _tmp422 / (_tmp416 * std::sqrt(_tmp416));
  const Scalar _tmp1279 = (1.0 / 2.0) * _tmp415;
  const Scalar _tmp1280 = _tmp1278 * _tmp1279;
  const Scalar _tmp1281 = _tmp158 * _tmp417 * std::pow(_tmp418, _tmp795) * _tmp421 / _tmp419;
  const Scalar _tmp1282 = _tmp1279 * _tmp1281;
  const Scalar _tmp1283 = _tmp1275 * _tmp423 - _tmp1277 * _tmp1280 + _tmp1277 * _tmp1282;
  const Scalar _tmp1284 = _tmp403 * _tmp88;
  const Scalar _tmp1285 = _tmp405 * _tmp88;
  const Scalar _tmp1286 =
      _tmp1268 * (_tmp1263 + _tmp1285 - _tmp403 * _tmp826 + _tmp828 * landmarks_9_);
  const Scalar _tmp1287 =
      -_tmp1265 * _tmp1286 +
      _tmp411 * (_tmp1267 - _tmp1284 - _tmp405 * _tmp826 + _tmp825 * landmarks_9_);
  const Scalar _tmp1288 = _tmp405 * _tmp94;
  const Scalar _tmp1289 = _tmp403 * _tmp90;
  const Scalar _tmp1290 =
      -_tmp1272 * _tmp1286 + _tmp414 * (_tmp1288 + _tmp1289 + _tmp833 * landmarks_9_);
  const Scalar _tmp1291 = _tmp1271 * _tmp1287 + _tmp1276 * _tmp1290;
  const Scalar _tmp1292 = -_tmp1280 * _tmp1291 + _tmp1282 * _tmp1291 + _tmp1290 * _tmp423;
  const Scalar _tmp1293 = _tmp404 * _tmp766;
  const Scalar _tmp1294 = _tmp1268 * (_tmp1288 + _tmp1293 + _tmp811 * landmarks_9_);
  const Scalar _tmp1295 =
      -_tmp1272 * _tmp1294 +
      _tmp414 * (_tmp1264 - _tmp1285 - _tmp404 * _tmp879 + _tmp818 * landmarks_9_);
  const Scalar _tmp1296 = _tmp404 * _tmp88;
  const Scalar _tmp1297 =
      -_tmp1265 * _tmp1294 +
      _tmp411 * (_tmp1274 + _tmp1296 - _tmp405 * _tmp879 + _tmp806 * landmarks_9_);
  const Scalar _tmp1298 = _tmp1271 * _tmp1297 + _tmp1276 * _tmp1295;
  const Scalar _tmp1299 = -_tmp1280 * _tmp1298 + _tmp1282 * _tmp1298 + _tmp1295 * _tmp423;
  const Scalar _tmp1300 =
      _tmp1268 * (_tmp1273 - _tmp1296 - _tmp403 * _tmp838 + _tmp839 * landmarks_9_);
  const Scalar _tmp1301 =
      -_tmp1272 * _tmp1300 +
      _tmp414 * (_tmp1266 + _tmp1284 - _tmp404 * _tmp838 + _tmp843 * landmarks_9_);
  const Scalar _tmp1302 =
      -_tmp1265 * _tmp1300 + _tmp411 * (_tmp1289 + _tmp1293 + _tmp837 * landmarks_9_);
  const Scalar _tmp1303 = _tmp1271 * _tmp1302 + _tmp1276 * _tmp1301;
  const Scalar _tmp1304 = -_tmp1280 * _tmp1303 + _tmp1282 * _tmp1303 + _tmp1301 * _tmp423;
  const Scalar _tmp1305 =
      -_tmp1283 * _tmp801 + _tmp1292 * _tmp891 - _tmp1299 * _tmp822 + _tmp1304 * _tmp848;
  const Scalar _tmp1306 = _tmp376 * _tmp94;
  const Scalar _tmp1307 = _tmp375 * _tmp88;
  const Scalar _tmp1308 = _tmp377 * _tmp94;
  const Scalar _tmp1309 = _tmp375 * _tmp766;
  const Scalar _tmp1310 =
      _tmp392 * ((((_tmp19 + _tmp380) > 0) - ((_tmp19 + _tmp380) < 0)) + 1) / (_tmp381 * _tmp381);
  const Scalar _tmp1311 = _tmp1310 * (_tmp1308 + _tmp1309 + _tmp811 * landmarks_8_);
  const Scalar _tmp1312 =
      -_tmp1311 * _tmp378 * _tmp780 +
      _tmp383 * (_tmp1306 + _tmp1307 - _tmp377 * _tmp879 + _tmp806 * landmarks_8_);
  const Scalar _tmp1313 = 2 * _tmp384;
  const Scalar _tmp1314 = _tmp385 * _tmp789;
  const Scalar _tmp1315 = _tmp377 * _tmp88;
  const Scalar _tmp1316 = _tmp376 * _tmp766;
  const Scalar _tmp1317 =
      -_tmp1311 * _tmp1314 +
      _tmp386 * (-_tmp1315 + _tmp1316 - _tmp375 * _tmp879 + _tmp818 * landmarks_8_);
  const Scalar _tmp1318 = 2 * _tmp387;
  const Scalar _tmp1319 = _tmp1312 * _tmp1313 + _tmp1317 * _tmp1318;
  const Scalar _tmp1320 = (1.0 / 2.0) * _tmp384;
  const Scalar _tmp1321 = _tmp158 * _tmp389 * std::pow(_tmp390, _tmp795) * _tmp393 / _tmp391;
  const Scalar _tmp1322 = _tmp1320 * _tmp1321;
  const Scalar _tmp1323 = _tmp394 / (_tmp388 * std::sqrt(_tmp388));
  const Scalar _tmp1324 = _tmp1320 * _tmp1323;
  const Scalar _tmp1325 = _tmp1312 * _tmp395 + _tmp1319 * _tmp1322 - _tmp1319 * _tmp1324;
  const Scalar _tmp1326 = _tmp375 * _tmp90;
  const Scalar _tmp1327 = _tmp377 * _tmp766;
  const Scalar _tmp1328 = _tmp375 * _tmp94;
  const Scalar _tmp1329 = _tmp1327 - _tmp1328 + _tmp777 * landmarks_8_;
  const Scalar _tmp1330 = _tmp1310 * _tmp378;
  const Scalar _tmp1331 = _tmp1330 * _tmp780;
  const Scalar _tmp1332 =
      -_tmp1329 * _tmp1331 + _tmp383 * (-_tmp1316 + _tmp1326 + _tmp771 * landmarks_8_);
  const Scalar _tmp1333 = _tmp1310 * _tmp1314;
  const Scalar _tmp1334 = _tmp377 * _tmp90;
  const Scalar _tmp1335 =
      -_tmp1329 * _tmp1333 + _tmp386 * (_tmp1306 - _tmp1334 + _tmp788 * landmarks_8_);
  const Scalar _tmp1336 = _tmp1313 * _tmp1332 + _tmp1318 * _tmp1335;
  const Scalar _tmp1337 = _tmp1322 * _tmp1336 - _tmp1324 * _tmp1336 + _tmp1332 * _tmp395;
  const Scalar _tmp1338 = _tmp376 * _tmp88;
  const Scalar _tmp1339 = _tmp1315 + _tmp1326 - _tmp376 * _tmp826 + _tmp828 * landmarks_8_;
  const Scalar _tmp1340 =
      -_tmp1331 * _tmp1339 +
      _tmp383 * (_tmp1328 - _tmp1338 - _tmp377 * _tmp826 + _tmp825 * landmarks_8_);
  const Scalar _tmp1341 = _tmp376 * _tmp90;
  const Scalar _tmp1342 =
      -_tmp1333 * _tmp1339 + _tmp386 * (_tmp1308 + _tmp1341 + _tmp833 * landmarks_8_);
  const Scalar _tmp1343 = _tmp1313 * _tmp1340 + _tmp1318 * _tmp1342;
  const Scalar _tmp1344 = _tmp1322 * _tmp1343 - _tmp1324 * _tmp1343 + _tmp1340 * _tmp395;
  const Scalar _tmp1345 = -_tmp1307 + _tmp1334 - _tmp376 * _tmp838 + _tmp839 * landmarks_8_;
  const Scalar _tmp1346 =
      -_tmp1331 * _tmp1345 + _tmp383 * (_tmp1309 + _tmp1341 + _tmp837 * landmarks_8_);
  const Scalar _tmp1347 =
      -_tmp1333 * _tmp1345 +
      _tmp386 * (_tmp1327 + _tmp1338 - _tmp375 * _tmp838 + _tmp843 * landmarks_8_);
  const Scalar _tmp1348 = _tmp1313 * _tmp1346 + _tmp1318 * _tmp1347;
  const Scalar _tmp1349 = _tmp1322 * _tmp1348 - _tmp1324 * _tmp1348 + _tmp1346 * _tmp395;
  const Scalar _tmp1350 =
      -_tmp1325 * _tmp822 - _tmp1337 * _tmp801 + _tmp1344 * _tmp891 + _tmp1349 * _tmp848;
  const Scalar _tmp1351 = (1.0 / 2.0) * _tmp387;
  const Scalar _tmp1352 = _tmp1321 * _tmp1351;
  const Scalar _tmp1353 = _tmp1323 * _tmp1351;
  const Scalar _tmp1354 = _tmp1335 * _tmp395 + _tmp1336 * _tmp1352 - _tmp1336 * _tmp1353;
  const Scalar _tmp1355 = _tmp1317 * _tmp395 + _tmp1319 * _tmp1352 - _tmp1319 * _tmp1353;
  const Scalar _tmp1356 = _tmp1342 * _tmp395 + _tmp1343 * _tmp1352 - _tmp1343 * _tmp1353;
  const Scalar _tmp1357 = _tmp1347 * _tmp395 + _tmp1348 * _tmp1352 - _tmp1348 * _tmp1353;
  const Scalar _tmp1358 =
      -_tmp1354 * _tmp801 - _tmp1355 * _tmp822 + _tmp1356 * _tmp891 + _tmp1357 * _tmp848;
  const Scalar _tmp1359 = _tmp130 * _tmp90;
  const Scalar _tmp1360 = 2 * _tmp123;
  const Scalar _tmp1361 = _tmp1360 * _views_1_pose[1];
  const Scalar _tmp1362 = _tmp134 * _tmp766;
  const Scalar _tmp1363 = _tmp130 * _tmp94;
  const Scalar _tmp1364 = _tmp1362 - _tmp1363 + _tmp777 * landmarks_0_;
  const Scalar _tmp1365 =
      _tmp168 * ((((_tmp144 + _tmp19) > 0) - ((_tmp144 + _tmp19) < 0)) + 1) / (_tmp145 * _tmp145);
  const Scalar _tmp1366 = _tmp135 * _tmp780;
  const Scalar _tmp1367 = _tmp1365 * _tmp1366;
  const Scalar _tmp1368 =
      -_tmp1364 * _tmp1367 + _tmp147 * (_tmp1359 - _tmp1361 + _tmp771 * landmarks_0_);
  const Scalar _tmp1369 = 2 * _tmp148;
  const Scalar _tmp1370 = _tmp134 * _tmp90;
  const Scalar _tmp1371 = _tmp123 * _tmp94;
  const Scalar _tmp1372 = _tmp1365 * _tmp153;
  const Scalar _tmp1373 = _tmp1372 * _tmp789;
  const Scalar _tmp1374 =
      -_tmp1364 * _tmp1373 + _tmp154 * (-_tmp1370 + _tmp1371 + _tmp788 * landmarks_0_);
  const Scalar _tmp1375 = 2 * _tmp155;
  const Scalar _tmp1376 = _tmp1368 * _tmp1369 + _tmp1374 * _tmp1375;
  const Scalar _tmp1377 = (1.0 / 2.0) * _tmp155;
  const Scalar _tmp1378 = _tmp170 / (_tmp156 * std::sqrt(_tmp156));
  const Scalar _tmp1379 = _tmp1377 * _tmp1378;
  const Scalar _tmp1380 = _tmp157 * _tmp158 * std::pow(_tmp162, _tmp795) * _tmp169 / _tmp167;
  const Scalar _tmp1381 = _tmp1377 * _tmp1380;
  const Scalar _tmp1382 = _tmp1374 * _tmp171 - _tmp1376 * _tmp1379 + _tmp1376 * _tmp1381;
  const Scalar _tmp1383 = _tmp130 * _tmp88;
  const Scalar _tmp1384 = _tmp134 * _tmp94;
  const Scalar _tmp1385 = _tmp130 * _tmp766;
  const Scalar _tmp1386 = _tmp1365 * (_tmp1384 + _tmp1385 + _tmp811 * landmarks_0_);
  const Scalar _tmp1387 = -_tmp1366 * _tmp1386 + _tmp147 * (-_tmp134 * _tmp879 + _tmp1371 +
                                                            _tmp1383 + _tmp806 * landmarks_0_);
  const Scalar _tmp1388 = 4 * _tmp130;
  const Scalar _tmp1389 = _tmp134 * _tmp88;
  const Scalar _tmp1390 =
      -_tmp1386 * _tmp153 * _tmp789 +
      _tmp154 * (_tmp1361 - _tmp1388 * _views_1_pose[2] - _tmp1389 + _tmp818 * landmarks_0_);
  const Scalar _tmp1391 = _tmp1369 * _tmp1387 + _tmp1375 * _tmp1390;
  const Scalar _tmp1392 = _tmp1378 * _tmp1391;
  const Scalar _tmp1393 = -_tmp1377 * _tmp1392 + _tmp1381 * _tmp1391 + _tmp1390 * _tmp171;
  const Scalar _tmp1394 = _tmp1360 * _views_1_pose[3];
  const Scalar _tmp1395 = 4 * _tmp123;
  const Scalar _tmp1396 =
      _tmp1359 + _tmp1389 - _tmp1395 * _views_1_pose[1] + _tmp828 * landmarks_0_;
  const Scalar _tmp1397 = -_tmp1367 * _tmp1396 + _tmp147 * (-_tmp134 * _tmp826 + _tmp1363 -
                                                            _tmp1394 + _tmp825 * landmarks_0_);
  const Scalar _tmp1398 = _tmp123 * _tmp90;
  const Scalar _tmp1399 =
      -_tmp1373 * _tmp1396 + _tmp154 * (_tmp1384 + _tmp1398 + _tmp833 * landmarks_0_);
  const Scalar _tmp1400 = _tmp1369 * _tmp1397 + _tmp1375 * _tmp1399;
  const Scalar _tmp1401 = -_tmp1379 * _tmp1400 + _tmp1381 * _tmp1400 + _tmp1399 * _tmp171;
  const Scalar _tmp1402 =
      _tmp1370 - _tmp1383 - _tmp1395 * _views_1_pose[0] + _tmp839 * landmarks_0_;
  const Scalar _tmp1403 =
      -_tmp1367 * _tmp1402 + _tmp147 * (_tmp1385 + _tmp1398 + _tmp837 * landmarks_0_);
  const Scalar _tmp1404 = -_tmp1373 * _tmp1402 + _tmp154 * (_tmp1362 - _tmp1388 * _views_1_pose[0] +
                                                            _tmp1394 + _tmp843 * landmarks_0_);
  const Scalar _tmp1405 = _tmp1369 * _tmp1403 + _tmp1375 * _tmp1404;
  const Scalar _tmp1406 = -_tmp1379 * _tmp1405 + _tmp1381 * _tmp1405 + _tmp1404 * _tmp171;
  const Scalar _tmp1407 =
      -_tmp1382 * _tmp801 - _tmp1393 * _tmp822 + _tmp1401 * _tmp891 + _tmp1406 * _tmp848;
  const Scalar _tmp1408 = (1.0 / 2.0) * _tmp148;
  const Scalar _tmp1409 = _tmp1380 * _tmp1408;
  const Scalar _tmp1410 = _tmp1387 * _tmp171 + _tmp1391 * _tmp1409 - _tmp1392 * _tmp1408;
  const Scalar _tmp1411 = _tmp1378 * _tmp1408;
  const Scalar _tmp1412 = _tmp1397 * _tmp171 + _tmp1400 * _tmp1409 - _tmp1400 * _tmp1411;
  const Scalar _tmp1413 = _tmp1368 * _tmp171 + _tmp1376 * _tmp1409 - _tmp1376 * _tmp1411;
  const Scalar _tmp1414 = _tmp1403 * _tmp171 + _tmp1405 * _tmp1409 - _tmp1405 * _tmp1411;
  const Scalar _tmp1415 =
      -_tmp1410 * _tmp822 + _tmp1412 * _tmp891 - _tmp1413 * _tmp801 + _tmp1414 * _tmp848;
  const Scalar _tmp1416 = _tmp63 * _tmp75 * _tmp76;
  const Scalar _tmp1417 = _priors_1_0_target_R_src[2] * _views_0_pose[3];
  const Scalar _tmp1418 = _priors_1_0_target_R_src[0] * _views_0_pose[1];
  const Scalar _tmp1419 = _priors_1_0_target_R_src[3] * _views_0_pose[2];
  const Scalar _tmp1420 = _priors_1_0_target_R_src[1] * _views_0_pose[0];
  const Scalar _tmp1421 = _tmp1417 - _tmp1418 + _tmp1419 + _tmp1420;
  const Scalar _tmp1422 = _tmp62 * ((((_tmp20 - _tmp58) > 0) - ((_tmp20 - _tmp58) < 0)) + 1);
  const Scalar _tmp1423 = _tmp1422 / _tmp66;
  const Scalar _tmp1424 = _tmp1421 * _tmp1423;
  const Scalar _tmp1425 = _tmp1422 * _tmp59 / (_tmp66 * std::sqrt(_tmp66));
  const Scalar _tmp1426 = _tmp1416 * _tmp60;
  const Scalar _tmp1427 = _tmp1425 * _tmp1426;
  const Scalar _tmp1428 = _priors_1_0_target_R_src[1] * _views_0_pose[1];
  const Scalar _tmp1429 = _priors_1_0_target_R_src[3] * _views_0_pose[3];
  const Scalar _tmp1430 = _priors_1_0_target_R_src[0] * _views_0_pose[0];
  const Scalar _tmp1431 = _priors_1_0_target_R_src[2] * _views_0_pose[2];
  const Scalar _tmp1432 = _tmp1428 - _tmp1429 + _tmp1430 + _tmp1431;
  const Scalar _tmp1433 = -_tmp1416 * _tmp1424 + _tmp1421 * _tmp1427 + _tmp1432 * _tmp77;
  const Scalar _tmp1434 = -_tmp1428 + _tmp1429 - _tmp1430 - _tmp1431;
  const Scalar _tmp1435 = _tmp1425 * _tmp1434;
  const Scalar _tmp1436 = _tmp1423 * _tmp1434;
  const Scalar _tmp1437 = -_tmp1416 * _tmp1436 + _tmp1421 * _tmp77 + _tmp1426 * _tmp1435;
  const Scalar _tmp1438 = _priors_1_0_target_R_src[0] * _views_0_pose[2];
  const Scalar _tmp1439 = _priors_1_0_target_R_src[3] * _views_0_pose[1];
  const Scalar _tmp1440 = _priors_1_0_target_R_src[2] * _views_0_pose[0];
  const Scalar _tmp1441 = _priors_1_0_target_R_src[1] * _views_0_pose[3];
  const Scalar _tmp1442 = _tmp1438 + _tmp1439 - _tmp1440 + _tmp1441;
  const Scalar _tmp1443 = _tmp1425 * _tmp1442;
  const Scalar _tmp1444 = _tmp1423 * _tmp1442;
  const Scalar _tmp1445 = _priors_1_0_target_R_src[0] * _views_0_pose[3];
  const Scalar _tmp1446 = _priors_1_0_target_R_src[2] * _views_0_pose[1];
  const Scalar _tmp1447 = _priors_1_0_target_R_src[3] * _views_0_pose[0];
  const Scalar _tmp1448 = _priors_1_0_target_R_src[1] * _views_0_pose[2];
  const Scalar _tmp1449 = _tmp1445 + _tmp1446 + _tmp1447 - _tmp1448;
  const Scalar _tmp1450 = -_tmp1416 * _tmp1444 + _tmp1426 * _tmp1443 + _tmp1449 * _tmp77;
  const Scalar _tmp1451 = _tmp1423 * _tmp1449;
  const Scalar _tmp1452 = -_tmp1416 * _tmp1451 + _tmp1427 * _tmp1449 +
                          _tmp77 * (-_tmp1438 - _tmp1439 + _tmp1440 - _tmp1441);
  const Scalar _tmp1453 =
      -_tmp1433 * _tmp822 - _tmp1437 * _tmp801 + _tmp1450 * _tmp891 + _tmp1452 * _tmp848;
  const Scalar _tmp1454 = _tmp16 * _tmp29;
  const Scalar _tmp1455 = _priors_0_1_target_R_src[2] * _views_0_pose[2];
  const Scalar _tmp1456 = _priors_0_1_target_R_src[0] * _views_0_pose[0];
  const Scalar _tmp1457 = _priors_0_1_target_R_src[1] * _views_0_pose[1];
  const Scalar _tmp1458 = _priors_0_1_target_R_src[3] * _views_0_pose[3];
  const Scalar _tmp1459 = _tmp1457 + _tmp1458;
  const Scalar _tmp1460 = _tmp1455 + _tmp1456 + _tmp1459;
  const Scalar _tmp1461 = _tmp27 * ((((-_tmp18 + _tmp20) > 0) - ((-_tmp18 + _tmp20) < 0)) + 1);
  const Scalar _tmp1462 = _tmp1461 / _tmp23;
  const Scalar _tmp1463 = _tmp1460 * _tmp1462;
  const Scalar _tmp1464 = _tmp1461 * _tmp21 / (_tmp23 * std::sqrt(_tmp23));
  const Scalar _tmp1465 = _tmp1464 * _tmp22;
  const Scalar _tmp1466 = _tmp1454 * _tmp1465;
  const Scalar _tmp1467 = _priors_0_1_target_R_src[3] * _views_0_pose[0];
  const Scalar _tmp1468 = -_tmp1467;
  const Scalar _tmp1469 = _priors_0_1_target_R_src[2] * _views_0_pose[1];
  const Scalar _tmp1470 = -_tmp1469;
  const Scalar _tmp1471 = _priors_0_1_target_R_src[1] * _views_0_pose[2];
  const Scalar _tmp1472 = _priors_0_1_target_R_src[0] * _views_0_pose[3];
  const Scalar _tmp1473 = _tmp1471 + _tmp1472;
  const Scalar _tmp1474 =
      -_tmp1454 * _tmp1463 + _tmp1460 * _tmp1466 + _tmp30 * (_tmp1468 + _tmp1470 + _tmp1473);
  const Scalar _tmp1475 = _priors_0_1_target_R_src[1] * _views_0_pose[3];
  const Scalar _tmp1476 = -_tmp1475;
  const Scalar _tmp1477 = _priors_0_1_target_R_src[0] * _views_0_pose[2];
  const Scalar _tmp1478 = -_tmp1477;
  const Scalar _tmp1479 = _priors_0_1_target_R_src[2] * _views_0_pose[0];
  const Scalar _tmp1480 = _priors_0_1_target_R_src[3] * _views_0_pose[1];
  const Scalar _tmp1481 = _tmp1479 + _tmp1480;
  const Scalar _tmp1482 = _tmp1476 + _tmp1478 + _tmp1481;
  const Scalar _tmp1483 = _tmp1462 * _tmp1482;
  const Scalar _tmp1484 = _priors_0_1_target_R_src[2] * _views_0_pose[3];
  const Scalar _tmp1485 = _priors_0_1_target_R_src[1] * _views_0_pose[0];
  const Scalar _tmp1486 = _priors_0_1_target_R_src[3] * _views_0_pose[2];
  const Scalar _tmp1487 = _priors_0_1_target_R_src[0] * _views_0_pose[1];
  const Scalar _tmp1488 = _tmp1486 + _tmp1487;
  const Scalar _tmp1489 =
      -_tmp1454 * _tmp1483 + _tmp1466 * _tmp1482 + _tmp30 * (_tmp1484 + _tmp1485 + _tmp1488);
  const Scalar _tmp1490 = -_tmp1484;
  const Scalar _tmp1491 = -_tmp1485;
  const Scalar _tmp1492 = _tmp1488 + _tmp1490 + _tmp1491;
  const Scalar _tmp1493 = _tmp1462 * _tmp1492;
  const Scalar _tmp1494 = _tmp1479 - _tmp1480;
  const Scalar _tmp1495 =
      -_tmp1454 * _tmp1493 + _tmp1466 * _tmp1492 + _tmp30 * (_tmp1476 + _tmp1477 + _tmp1494);
  const Scalar _tmp1496 = _tmp1471 - _tmp1472;
  const Scalar _tmp1497 = _tmp1467 + _tmp1470 + _tmp1496;
  const Scalar _tmp1498 = _tmp1462 * _tmp1497;
  const Scalar _tmp1499 = -_tmp1455;
  const Scalar _tmp1500 = -_tmp1457 + _tmp1458;
  const Scalar _tmp1501 =
      -_tmp1454 * _tmp1498 + _tmp1466 * _tmp1497 + _tmp30 * (_tmp1456 + _tmp1499 + _tmp1500);
  const Scalar _tmp1502 =
      -_tmp1474 * _tmp801 + _tmp1489 * _tmp891 - _tmp1495 * _tmp822 + _tmp1501 * _tmp848;
  const Scalar _tmp1503 = _tmp181 * _tmp766;
  const Scalar _tmp1504 = _tmp180 * _tmp94;
  const Scalar _tmp1505 = _tmp1503 - _tmp1504 + _tmp777 * landmarks_1_;
  const Scalar _tmp1506 =
      _tmp196 * ((((_tmp184 + _tmp19) > 0) - ((_tmp184 + _tmp19) < 0)) + 1) / (_tmp185 * _tmp185);
  const Scalar _tmp1507 = _tmp1506 * _tmp182;
  const Scalar _tmp1508 = _tmp1507 * _tmp780;
  const Scalar _tmp1509 = _tmp180 * _tmp90;
  const Scalar _tmp1510 = _tmp179 * _tmp766;
  const Scalar _tmp1511 =
      -_tmp1505 * _tmp1508 + _tmp187 * (_tmp1509 - _tmp1510 + _tmp771 * landmarks_1_);
  const Scalar _tmp1512 = 2 * _tmp188;
  const Scalar _tmp1513 = _tmp1506 * _tmp189;
  const Scalar _tmp1514 = _tmp1513 * _tmp789;
  const Scalar _tmp1515 = _tmp181 * _tmp90;
  const Scalar _tmp1516 = _tmp179 * _tmp94;
  const Scalar _tmp1517 =
      -_tmp1505 * _tmp1514 + _tmp190 * (-_tmp1515 + _tmp1516 + _tmp788 * landmarks_1_);
  const Scalar _tmp1518 = 2 * _tmp191;
  const Scalar _tmp1519 = _tmp1511 * _tmp1512 + _tmp1517 * _tmp1518;
  const Scalar _tmp1520 = _tmp198 / (_tmp192 * std::sqrt(_tmp192));
  const Scalar _tmp1521 = (1.0 / 2.0) * _tmp188;
  const Scalar _tmp1522 = _tmp1520 * _tmp1521;
  const Scalar _tmp1523 = _tmp158 * _tmp193 * std::pow(_tmp194, _tmp795) * _tmp197 / _tmp195;
  const Scalar _tmp1524 = _tmp1521 * _tmp1523;
  const Scalar _tmp1525 = _tmp1511 * _tmp199 - _tmp1519 * _tmp1522 + _tmp1519 * _tmp1524;
  const Scalar _tmp1526 = _tmp181 * _tmp94;
  const Scalar _tmp1527 = _tmp180 * _tmp766;
  const Scalar _tmp1528 = _tmp1526 + _tmp1527 + _tmp811 * landmarks_1_;
  const Scalar _tmp1529 = _tmp180 * _tmp88;
  const Scalar _tmp1530 =
      -_tmp1508 * _tmp1528 +
      _tmp187 * (_tmp1516 + _tmp1529 - _tmp181 * _tmp879 + _tmp806 * landmarks_1_);
  const Scalar _tmp1531 = _tmp181 * _tmp88;
  const Scalar _tmp1532 =
      -_tmp1514 * _tmp1528 +
      _tmp190 * (_tmp1510 - _tmp1531 - _tmp180 * _tmp879 + _tmp818 * landmarks_1_);
  const Scalar _tmp1533 = _tmp1512 * _tmp1530 + _tmp1518 * _tmp1532;
  const Scalar _tmp1534 = -_tmp1522 * _tmp1533 + _tmp1524 * _tmp1533 + _tmp1530 * _tmp199;
  const Scalar _tmp1535 = _tmp1509 + _tmp1531 - _tmp179 * _tmp826 + _tmp828 * landmarks_1_;
  const Scalar _tmp1536 = _tmp179 * _tmp88;
  const Scalar _tmp1537 =
      -_tmp1508 * _tmp1535 +
      _tmp187 * (_tmp1504 - _tmp1536 - _tmp181 * _tmp826 + _tmp825 * landmarks_1_);
  const Scalar _tmp1538 = _tmp179 * _tmp90;
  const Scalar _tmp1539 =
      -_tmp1514 * _tmp1535 + _tmp190 * (_tmp1526 + _tmp1538 + _tmp833 * landmarks_1_);
  const Scalar _tmp1540 = _tmp1512 * _tmp1537 + _tmp1518 * _tmp1539;
  const Scalar _tmp1541 = -_tmp1522 * _tmp1540 + _tmp1524 * _tmp1540 + _tmp1537 * _tmp199;
  const Scalar _tmp1542 = _tmp1515 - _tmp1529 - _tmp179 * _tmp838 + _tmp839 * landmarks_1_;
  const Scalar _tmp1543 =
      -_tmp1508 * _tmp1542 + _tmp187 * (_tmp1527 + _tmp1538 + _tmp837 * landmarks_1_);
  const Scalar _tmp1544 =
      -_tmp1514 * _tmp1542 +
      _tmp190 * (_tmp1503 + _tmp1536 - _tmp180 * _tmp838 + _tmp843 * landmarks_1_);
  const Scalar _tmp1545 = _tmp1512 * _tmp1543 + _tmp1518 * _tmp1544;
  const Scalar _tmp1546 = -_tmp1522 * _tmp1545 + _tmp1524 * _tmp1545 + _tmp1543 * _tmp199;
  const Scalar _tmp1547 =
      -_tmp1525 * _tmp801 - _tmp1534 * _tmp822 + _tmp1541 * _tmp891 + _tmp1546 * _tmp848;
  const Scalar _tmp1548 = (1.0 / 2.0) * _tmp191;
  const Scalar _tmp1549 = _tmp1520 * _tmp1548;
  const Scalar _tmp1550 = _tmp1523 * _tmp1548;
  const Scalar _tmp1551 = _tmp1532 * _tmp199 - _tmp1533 * _tmp1549 + _tmp1533 * _tmp1550;
  const Scalar _tmp1552 = _tmp1539 * _tmp199 - _tmp1540 * _tmp1549 + _tmp1540 * _tmp1550;
  const Scalar _tmp1553 = _tmp1517 * _tmp199 - _tmp1519 * _tmp1549 + _tmp1519 * _tmp1550;
  const Scalar _tmp1554 = _tmp1544 * _tmp199 - _tmp1545 * _tmp1549 + _tmp1545 * _tmp1550;
  const Scalar _tmp1555 =
      -_tmp1551 * _tmp822 + _tmp1552 * _tmp891 - _tmp1553 * _tmp801 + _tmp1554 * _tmp848;
  const Scalar _tmp1556 = (1.0 / 2.0) * _tmp695;
  const Scalar _tmp1557 = _tmp1556 * _tmp868;
  const Scalar _tmp1558 = _tmp1556 * _tmp870;
  const Scalar _tmp1559 = _tmp1557 * _tmp866 - _tmp1558 * _tmp866 + _tmp703 * _tmp864;
  const Scalar _tmp1560 = _tmp1557 * _tmp882 - _tmp1558 * _tmp882 + _tmp703 * _tmp881;
  const Scalar _tmp1561 = _tmp1557 * _tmp889 - _tmp1558 * _tmp889 + _tmp703 * _tmp888;
  const Scalar _tmp1562 = _tmp1557 * _tmp895 - _tmp1558 * _tmp895 + _tmp703 * _tmp894;
  const Scalar _tmp1563 =
      -_tmp1559 * _tmp801 - _tmp1560 * _tmp822 + _tmp1561 * _tmp891 + _tmp1562 * _tmp848;
  const Scalar _tmp1564 = (1.0 / 2.0) * _tmp608;
  const Scalar _tmp1565 = _tmp1564 * _tmp995;
  const Scalar _tmp1566 = _tmp1565 * _tmp975 - _tmp1565 * _tmp977 + _tmp619 * _tmp994;
  const Scalar _tmp1567 = _tmp1564 * _tmp975;
  const Scalar _tmp1568 = _tmp1564 * _tmp977;
  const Scalar _tmp1569 = _tmp1567 * _tmp973 - _tmp1568 * _tmp973 + _tmp619 * _tmp970;
  const Scalar _tmp1570 = _tmp1567 * _tmp988 - _tmp1568 * _tmp988 + _tmp619 * _tmp985;
  const Scalar _tmp1571 = _tmp1000 * _tmp1567 - _tmp1000 * _tmp1568 + _tmp619 * _tmp999;
  const Scalar _tmp1572 =
      -_tmp1566 * _tmp801 - _tmp1569 * _tmp822 + _tmp1570 * _tmp891 + _tmp1571 * _tmp848;
  const Scalar _tmp1573 = _tmp1022 * _tmp580;
  const Scalar _tmp1574 = _tmp1025 * _tmp580;
  const Scalar _tmp1575 = _tmp1016 * _tmp591 + _tmp1019 * _tmp1573 - _tmp1019 * _tmp1574;
  const Scalar _tmp1576 = _tmp1045 * _tmp591 + _tmp1046 * _tmp1573 - _tmp1046 * _tmp1574;
  const Scalar _tmp1577 = _tmp1035 * _tmp591 + _tmp1036 * _tmp1573 - _tmp1037 * _tmp580;
  const Scalar _tmp1578 = _tmp1051 * _tmp580;
  const Scalar _tmp1579 = -_tmp1024 * _tmp1578 + _tmp1049 * _tmp591 + _tmp1053 * _tmp1578;
  const Scalar _tmp1580 =
      -_tmp1575 * _tmp801 - _tmp1576 * _tmp822 + _tmp1577 * _tmp891 + _tmp1579 * _tmp848;
  const Scalar _tmp1581 = _tmp32 * _tmp33;
  const Scalar _tmp1582 = _tmp1465 * _tmp1581;
  const Scalar _tmp1583 =
      _tmp1460 * _tmp1582 - _tmp1463 * _tmp1581 + _tmp34 * (_tmp1475 + _tmp1478 + _tmp1494);
  const Scalar _tmp1584 = -_tmp1456;
  const Scalar _tmp1585 =
      _tmp1482 * _tmp1582 - _tmp1483 * _tmp1581 + _tmp34 * (_tmp1459 + _tmp1499 + _tmp1584);
  const Scalar _tmp1586 =
      _tmp1492 * _tmp1582 - _tmp1493 * _tmp1581 + _tmp34 * (_tmp1467 + _tmp1469 + _tmp1473);
  const Scalar _tmp1587 = -_tmp1486 + _tmp1487;
  const Scalar _tmp1588 =
      _tmp1497 * _tmp1582 - _tmp1498 * _tmp1581 + _tmp34 * (_tmp1485 + _tmp1490 + _tmp1587);
  const Scalar _tmp1589 =
      -_tmp1583 * _tmp801 + _tmp1585 * _tmp891 - _tmp1586 * _tmp822 + _tmp1588 * _tmp848;
  const Scalar _tmp1590 = _tmp56 * _tmp65;
  const Scalar _tmp1591 = _tmp56 * _tmp64;
  const Scalar _tmp1592 = _tmp1443 * _tmp1590 - _tmp1444 * _tmp1591 +
                          _tmp68 * (-_tmp1417 + _tmp1418 - _tmp1419 - _tmp1420);
  const Scalar _tmp1593 = _tmp1435 * _tmp1590 - _tmp1436 * _tmp1591 + _tmp1449 * _tmp68;
  const Scalar _tmp1594 = _tmp1425 * _tmp1590;
  const Scalar _tmp1595 = _tmp1421 * _tmp1594 - _tmp1424 * _tmp1591 + _tmp1442 * _tmp68;
  const Scalar _tmp1596 = _tmp1432 * _tmp68 + _tmp1449 * _tmp1594 - _tmp1451 * _tmp1591;
  const Scalar _tmp1597 =
      _tmp1592 * _tmp891 - _tmp1593 * _tmp801 - _tmp1595 * _tmp822 + _tmp1596 * _tmp848;
  const Scalar _tmp1598 = _tmp70 * _tmp71;
  const Scalar _tmp1599 = _tmp1598 * _tmp60;
  const Scalar _tmp1600 = _tmp1425 * _tmp1599;
  const Scalar _tmp1601 = _tmp1421 * _tmp1600 - _tmp1424 * _tmp1598 +
                          _tmp73 * (-_tmp1445 - _tmp1446 - _tmp1447 + _tmp1448);
  const Scalar _tmp1602 = _tmp1432 * _tmp73 + _tmp1443 * _tmp1599 - _tmp1444 * _tmp1598;
  const Scalar _tmp1603 = _tmp1435 * _tmp1599 - _tmp1436 * _tmp1598 + _tmp1442 * _tmp73;
  const Scalar _tmp1604 = _tmp1421 * _tmp73 + _tmp1449 * _tmp1600 - _tmp1451 * _tmp1598;
  const Scalar _tmp1605 =
      -_tmp1601 * _tmp822 + _tmp1602 * _tmp891 - _tmp1603 * _tmp801 + _tmp1604 * _tmp848;
  const Scalar _tmp1606 = _tmp36 * _tmp37;
  const Scalar _tmp1607 = _tmp1464 * _tmp36 * _tmp38;
  const Scalar _tmp1608 =
      _tmp1460 * _tmp1607 - _tmp1463 * _tmp1606 + _tmp39 * (_tmp1484 + _tmp1491 + _tmp1587);
  const Scalar _tmp1609 =
      _tmp1492 * _tmp1607 - _tmp1493 * _tmp1606 + _tmp39 * (_tmp1455 + _tmp1500 + _tmp1584);
  const Scalar _tmp1610 =
      _tmp1482 * _tmp1607 - _tmp1483 * _tmp1606 + _tmp39 * (_tmp1468 + _tmp1469 + _tmp1496);
  const Scalar _tmp1611 =
      _tmp1497 * _tmp1607 - _tmp1498 * _tmp1606 + _tmp39 * (_tmp1475 + _tmp1477 + _tmp1481);
  const Scalar _tmp1612 =
      -_tmp1608 * _tmp801 - _tmp1609 * _tmp822 + _tmp1610 * _tmp891 + _tmp1611 * _tmp848;
  const Scalar _tmp1613 = _tmp432 * _tmp94;
  const Scalar _tmp1614 = _tmp431 * _tmp88;
  const Scalar _tmp1615 = _tmp433 * _tmp88;
  const Scalar _tmp1616 = _tmp432 * _tmp90;
  const Scalar _tmp1617 = _tmp1615 + _tmp1616 - _tmp431 * _tmp826 + _tmp828 * landmarks_10_;
  const Scalar _tmp1618 =
      _tmp446 * ((((_tmp19 + _tmp436) > 0) - ((_tmp19 + _tmp436) < 0)) + 1) / (_tmp437 * _tmp437);
  const Scalar _tmp1619 = _tmp1618 * _tmp434;
  const Scalar _tmp1620 = _tmp1619 * _tmp780;
  const Scalar _tmp1621 =
      -_tmp1617 * _tmp1620 +
      _tmp439 * (_tmp1613 - _tmp1614 - _tmp433 * _tmp826 + _tmp825 * landmarks_10_);
  const Scalar _tmp1622 = 2 * _tmp440;
  const Scalar _tmp1623 = _tmp433 * _tmp94;
  const Scalar _tmp1624 = _tmp431 * _tmp90;
  const Scalar _tmp1625 = _tmp1618 * _tmp441;
  const Scalar _tmp1626 = _tmp1625 * _tmp789;
  const Scalar _tmp1627 =
      -_tmp1617 * _tmp1626 + _tmp442 * (_tmp1623 + _tmp1624 + _tmp833 * landmarks_10_);
  const Scalar _tmp1628 = 2 * _tmp443;
  const Scalar _tmp1629 = _tmp1621 * _tmp1622 + _tmp1627 * _tmp1628;
  const Scalar _tmp1630 = _tmp450 / (_tmp444 * std::sqrt(_tmp444));
  const Scalar _tmp1631 = (1.0 / 2.0) * _tmp440;
  const Scalar _tmp1632 = _tmp1630 * _tmp1631;
  const Scalar _tmp1633 = _tmp158 * _tmp445 * _tmp447 * std::pow(_tmp448, _tmp795) / _tmp449;
  const Scalar _tmp1634 = _tmp1631 * _tmp1633;
  const Scalar _tmp1635 = _tmp1621 * _tmp451 - _tmp1629 * _tmp1632 + _tmp1629 * _tmp1634;
  const Scalar _tmp1636 = _tmp431 * _tmp766;
  const Scalar _tmp1637 = _tmp433 * _tmp766;
  const Scalar _tmp1638 = -_tmp1613 + _tmp1637 + _tmp777 * landmarks_10_;
  const Scalar _tmp1639 =
      -_tmp1620 * _tmp1638 + _tmp439 * (_tmp1616 - _tmp1636 + _tmp771 * landmarks_10_);
  const Scalar _tmp1640 = _tmp433 * _tmp90;
  const Scalar _tmp1641 = _tmp431 * _tmp94;
  const Scalar _tmp1642 =
      -_tmp1626 * _tmp1638 + _tmp442 * (-_tmp1640 + _tmp1641 + _tmp788 * landmarks_10_);
  const Scalar _tmp1643 = _tmp1622 * _tmp1639 + _tmp1628 * _tmp1642;
  const Scalar _tmp1644 = -_tmp1632 * _tmp1643 + _tmp1634 * _tmp1643 + _tmp1639 * _tmp451;
  const Scalar _tmp1645 = _tmp432 * _tmp88;
  const Scalar _tmp1646 = _tmp432 * _tmp766;
  const Scalar _tmp1647 = _tmp1623 + _tmp1646 + _tmp811 * landmarks_10_;
  const Scalar _tmp1648 =
      -_tmp1620 * _tmp1647 +
      _tmp439 * (_tmp1641 + _tmp1645 - _tmp433 * _tmp879 + _tmp806 * landmarks_10_);
  const Scalar _tmp1649 =
      -_tmp1626 * _tmp1647 +
      _tmp442 * (-_tmp1615 + _tmp1636 - _tmp432 * _tmp879 + _tmp818 * landmarks_10_);
  const Scalar _tmp1650 = _tmp1622 * _tmp1648 + _tmp1628 * _tmp1649;
  const Scalar _tmp1651 = -_tmp1632 * _tmp1650 + _tmp1634 * _tmp1650 + _tmp1648 * _tmp451;
  const Scalar _tmp1652 = _tmp1640 - _tmp1645 - _tmp431 * _tmp838 + _tmp839 * landmarks_10_;
  const Scalar _tmp1653 =
      -_tmp1620 * _tmp1652 + _tmp439 * (_tmp1624 + _tmp1646 + _tmp837 * landmarks_10_);
  const Scalar _tmp1654 =
      -_tmp1626 * _tmp1652 +
      _tmp442 * (_tmp1614 + _tmp1637 - _tmp432 * _tmp838 + _tmp843 * landmarks_10_);
  const Scalar _tmp1655 = _tmp1622 * _tmp1653 + _tmp1628 * _tmp1654;
  const Scalar _tmp1656 = -_tmp1632 * _tmp1655 + _tmp1634 * _tmp1655 + _tmp1653 * _tmp451;
  const Scalar _tmp1657 =
      _tmp1635 * _tmp891 - _tmp1644 * _tmp801 - _tmp1651 * _tmp822 + _tmp1656 * _tmp848;
  const Scalar _tmp1658 = _tmp265 * _tmp766;
  const Scalar _tmp1659 = _tmp264 * _tmp94;
  const Scalar _tmp1660 = _tmp1658 - _tmp1659 + _tmp777 * landmarks_4_;
  const Scalar _tmp1661 =
      _tmp280 * ((((_tmp19 + _tmp268) > 0) - ((_tmp19 + _tmp268) < 0)) + 1) / (_tmp269 * _tmp269);
  const Scalar _tmp1662 = _tmp273 * _tmp789;
  const Scalar _tmp1663 = _tmp1661 * _tmp1662;
  const Scalar _tmp1664 = _tmp265 * _tmp90;
  const Scalar _tmp1665 = _tmp263 * _tmp94;
  const Scalar _tmp1666 =
      -_tmp1660 * _tmp1663 + _tmp274 * (-_tmp1664 + _tmp1665 + _tmp788 * landmarks_4_);
  const Scalar _tmp1667 = _tmp266 * _tmp780;
  const Scalar _tmp1668 = _tmp1661 * _tmp1667;
  const Scalar _tmp1669 = _tmp264 * _tmp90;
  const Scalar _tmp1670 = _tmp263 * _tmp766;
  const Scalar _tmp1671 =
      -_tmp1660 * _tmp1668 + _tmp271 * (_tmp1669 - _tmp1670 + _tmp771 * landmarks_4_);
  const Scalar _tmp1672 = 2 * _tmp272;
  const Scalar _tmp1673 = 2 * _tmp275;
  const Scalar _tmp1674 = _tmp1666 * _tmp1673 + _tmp1671 * _tmp1672;
  const Scalar _tmp1675 = (1.0 / 2.0) * _tmp275;
  const Scalar _tmp1676 = _tmp282 / (_tmp276 * std::sqrt(_tmp276));
  const Scalar _tmp1677 = _tmp1675 * _tmp1676;
  const Scalar _tmp1678 = _tmp158 * _tmp277 * std::pow(_tmp278, _tmp795) * _tmp281 / _tmp279;
  const Scalar _tmp1679 = _tmp1675 * _tmp1678;
  const Scalar _tmp1680 = _tmp1666 * _tmp283 - _tmp1674 * _tmp1677 + _tmp1674 * _tmp1679;
  const Scalar _tmp1681 = _tmp265 * _tmp94;
  const Scalar _tmp1682 = _tmp264 * _tmp766;
  const Scalar _tmp1683 = _tmp1681 + _tmp1682 + _tmp811 * landmarks_4_;
  const Scalar _tmp1684 = _tmp265 * _tmp88;
  const Scalar _tmp1685 =
      -_tmp1663 * _tmp1683 +
      _tmp274 * (_tmp1670 - _tmp1684 - _tmp264 * _tmp879 + _tmp818 * landmarks_4_);
  const Scalar _tmp1686 = _tmp264 * _tmp88;
  const Scalar _tmp1687 =
      -_tmp1668 * _tmp1683 +
      _tmp271 * (_tmp1665 + _tmp1686 - _tmp265 * _tmp879 + _tmp806 * landmarks_4_);
  const Scalar _tmp1688 = _tmp1672 * _tmp1687 + _tmp1673 * _tmp1685;
  const Scalar _tmp1689 = -_tmp1677 * _tmp1688 + _tmp1679 * _tmp1688 + _tmp1685 * _tmp283;
  const Scalar _tmp1690 =
      _tmp1661 * (_tmp1669 + _tmp1684 - _tmp263 * _tmp826 + _tmp828 * landmarks_4_);
  const Scalar _tmp1691 = _tmp263 * _tmp90;
  const Scalar _tmp1692 =
      -_tmp1662 * _tmp1690 + _tmp274 * (_tmp1681 + _tmp1691 + _tmp833 * landmarks_4_);
  const Scalar _tmp1693 = _tmp263 * _tmp88;
  const Scalar _tmp1694 =
      -_tmp1667 * _tmp1690 +
      _tmp271 * (_tmp1659 - _tmp1693 - _tmp265 * _tmp826 + _tmp825 * landmarks_4_);
  const Scalar _tmp1695 = _tmp1672 * _tmp1694 + _tmp1673 * _tmp1692;
  const Scalar _tmp1696 = -_tmp1677 * _tmp1695 + _tmp1679 * _tmp1695 + _tmp1692 * _tmp283;
  const Scalar _tmp1697 = _tmp1664 - _tmp1686 - _tmp263 * _tmp838 + _tmp839 * landmarks_4_;
  const Scalar _tmp1698 =
      -_tmp1663 * _tmp1697 +
      _tmp274 * (_tmp1658 + _tmp1693 - _tmp264 * _tmp838 + _tmp843 * landmarks_4_);
  const Scalar _tmp1699 =
      -_tmp1668 * _tmp1697 + _tmp271 * (_tmp1682 + _tmp1691 + _tmp837 * landmarks_4_);
  const Scalar _tmp1700 = _tmp1672 * _tmp1699 + _tmp1673 * _tmp1698;
  const Scalar _tmp1701 = -_tmp1677 * _tmp1700 + _tmp1679 * _tmp1700 + _tmp1698 * _tmp283;
  const Scalar _tmp1702 =
      -_tmp1680 * _tmp801 - _tmp1689 * _tmp822 + _tmp1696 * _tmp891 + _tmp1701 * _tmp848;
  const Scalar _tmp1703 = _tmp209 * _tmp88;
  const Scalar _tmp1704 = _tmp207 * _tmp766;
  const Scalar _tmp1705 = _tmp209 * _tmp94;
  const Scalar _tmp1706 = _tmp208 * _tmp766;
  const Scalar _tmp1707 =
      _tmp224 * ((((_tmp19 + _tmp212) > 0) - ((_tmp19 + _tmp212) < 0)) + 1) / (_tmp213 * _tmp213);
  const Scalar _tmp1708 = _tmp1707 * (_tmp1705 + _tmp1706 + _tmp811 * landmarks_2_);
  const Scalar _tmp1709 = _tmp217 * _tmp789;
  const Scalar _tmp1710 =
      -_tmp1708 * _tmp1709 +
      _tmp218 * (-_tmp1703 + _tmp1704 - _tmp208 * _tmp879 + _tmp818 * landmarks_2_);
  const Scalar _tmp1711 = _tmp210 * _tmp780;
  const Scalar _tmp1712 = _tmp208 * _tmp88;
  const Scalar _tmp1713 = _tmp207 * _tmp94;
  const Scalar _tmp1714 =
      -_tmp1708 * _tmp1711 +
      _tmp215 * (_tmp1712 + _tmp1713 - _tmp209 * _tmp879 + _tmp806 * landmarks_2_);
  const Scalar _tmp1715 = 2 * _tmp216;
  const Scalar _tmp1716 = 2 * _tmp219;
  const Scalar _tmp1717 = _tmp1710 * _tmp1716 + _tmp1714 * _tmp1715;
  const Scalar _tmp1718 = (1.0 / 2.0) * _tmp219;
  const Scalar _tmp1719 = _tmp158 * _tmp221 * std::pow(_tmp222, _tmp795) * _tmp225 / _tmp223;
  const Scalar _tmp1720 = _tmp1718 * _tmp1719;
  const Scalar _tmp1721 = _tmp226 / (_tmp220 * std::sqrt(_tmp220));
  const Scalar _tmp1722 = _tmp1718 * _tmp1721;
  const Scalar _tmp1723 = _tmp1710 * _tmp227 + _tmp1717 * _tmp1720 - _tmp1717 * _tmp1722;
  const Scalar _tmp1724 = _tmp207 * _tmp90;
  const Scalar _tmp1725 = _tmp208 * _tmp90;
  const Scalar _tmp1726 =
      _tmp1707 * (_tmp1703 + _tmp1725 - _tmp207 * _tmp826 + _tmp828 * landmarks_2_);
  const Scalar _tmp1727 =
      -_tmp1709 * _tmp1726 + _tmp218 * (_tmp1705 + _tmp1724 + _tmp833 * landmarks_2_);
  const Scalar _tmp1728 = _tmp208 * _tmp94;
  const Scalar _tmp1729 = _tmp207 * _tmp88;
  const Scalar _tmp1730 =
      -_tmp1711 * _tmp1726 +
      _tmp215 * (_tmp1728 - _tmp1729 - _tmp209 * _tmp826 + _tmp825 * landmarks_2_);
  const Scalar _tmp1731 = _tmp1715 * _tmp1730 + _tmp1716 * _tmp1727;
  const Scalar _tmp1732 = _tmp1720 * _tmp1731 - _tmp1722 * _tmp1731 + _tmp1727 * _tmp227;
  const Scalar _tmp1733 = _tmp209 * _tmp90;
  const Scalar _tmp1734 = _tmp209 * _tmp766;
  const Scalar _tmp1735 = _tmp1707 * (-_tmp1728 + _tmp1734 + _tmp777 * landmarks_2_);
  const Scalar _tmp1736 =
      -_tmp1709 * _tmp1735 + _tmp218 * (_tmp1713 - _tmp1733 + _tmp788 * landmarks_2_);
  const Scalar _tmp1737 =
      -_tmp1711 * _tmp1735 + _tmp215 * (-_tmp1704 + _tmp1725 + _tmp771 * landmarks_2_);
  const Scalar _tmp1738 = _tmp1715 * _tmp1737 + _tmp1716 * _tmp1736;
  const Scalar _tmp1739 = _tmp1720 * _tmp1738 - _tmp1722 * _tmp1738 + _tmp1736 * _tmp227;
  const Scalar _tmp1740 =
      _tmp1707 * (-_tmp1712 + _tmp1733 - _tmp207 * _tmp838 + _tmp839 * landmarks_2_);
  const Scalar _tmp1741 =
      -_tmp1711 * _tmp1740 + _tmp215 * (_tmp1706 + _tmp1724 + _tmp837 * landmarks_2_);
  const Scalar _tmp1742 =
      -_tmp1709 * _tmp1740 +
      _tmp218 * (_tmp1729 + _tmp1734 - _tmp208 * _tmp838 + _tmp843 * landmarks_2_);
  const Scalar _tmp1743 = _tmp1715 * _tmp1741 + _tmp1716 * _tmp1742;
  const Scalar _tmp1744 = _tmp1721 * _tmp1743;
  const Scalar _tmp1745 = -_tmp1718 * _tmp1744 + _tmp1720 * _tmp1743 + _tmp1742 * _tmp227;
  const Scalar _tmp1746 =
      -_tmp1723 * _tmp822 + _tmp1732 * _tmp891 - _tmp1739 * _tmp801 + _tmp1745 * _tmp848;
  const Scalar _tmp1747 = _tmp236 * _tmp94;
  const Scalar _tmp1748 = 2 * _tmp237;
  const Scalar _tmp1749 = _tmp1748 * _views_1_pose[1];
  const Scalar _tmp1750 = -_tmp1747 + _tmp1749 + _tmp777 * landmarks_3_;
  const Scalar _tmp1751 =
      _tmp250 * ((((_tmp19 + _tmp240) > 0) - ((_tmp19 + _tmp240) < 0)) + 1) / (_tmp241 * _tmp241);
  const Scalar _tmp1752 = _tmp238 * _tmp780;
  const Scalar _tmp1753 = _tmp1751 * _tmp1752;
  const Scalar _tmp1754 = _tmp236 * _tmp90;
  const Scalar _tmp1755 = _tmp235 * _tmp766;
  const Scalar _tmp1756 =
      -_tmp1750 * _tmp1753 + _tmp243 * (_tmp1754 - _tmp1755 + _tmp771 * landmarks_3_);
  const Scalar _tmp1757 = 2 * _tmp244;
  const Scalar _tmp1758 = _tmp245 * _tmp789;
  const Scalar _tmp1759 = _tmp1751 * _tmp1758;
  const Scalar _tmp1760 = _tmp235 * _tmp94;
  const Scalar _tmp1761 = _tmp237 * _tmp90;
  const Scalar _tmp1762 =
      -_tmp1750 * _tmp1759 + _tmp246 * (_tmp1760 - _tmp1761 + _tmp788 * landmarks_3_);
  const Scalar _tmp1763 = 2 * _tmp247;
  const Scalar _tmp1764 = _tmp1756 * _tmp1757 + _tmp1762 * _tmp1763;
  const Scalar _tmp1765 = _tmp249 * _tmp251 * std::pow(_tmp252, _tmp795) / _tmp253;
  const Scalar _tmp1766 = _tmp1020 * _tmp1765;
  const Scalar _tmp1767 = _tmp1766 * _tmp244;
  const Scalar _tmp1768 = _tmp254 / (_tmp248 * std::sqrt(_tmp248));
  const Scalar _tmp1769 = (1.0 / 2.0) * _tmp1768;
  const Scalar _tmp1770 = _tmp1769 * _tmp244;
  const Scalar _tmp1771 = _tmp1756 * _tmp255 + _tmp1764 * _tmp1767 - _tmp1764 * _tmp1770;
  const Scalar _tmp1772 = _tmp1748 * _views_1_pose[0];
  const Scalar _tmp1773 = _tmp236 * _tmp766;
  const Scalar _tmp1774 = _tmp1751 * (_tmp1772 + _tmp1773 + _tmp811 * landmarks_3_);
  const Scalar _tmp1775 = 4 * _tmp237;
  const Scalar _tmp1776 = _tmp236 * _tmp88;
  const Scalar _tmp1777 = -_tmp1752 * _tmp1774 + _tmp243 * (_tmp1760 - _tmp1775 * _views_1_pose[2] +
                                                            _tmp1776 + _tmp806 * landmarks_3_);
  const Scalar _tmp1778 = _tmp1748 * _views_1_pose[3];
  const Scalar _tmp1779 =
      -_tmp1758 * _tmp1774 +
      _tmp246 * (_tmp1755 - _tmp1778 - _tmp236 * _tmp879 + _tmp818 * landmarks_3_);
  const Scalar _tmp1780 = _tmp1757 * _tmp1777 + _tmp1763 * _tmp1779;
  const Scalar _tmp1781 = _tmp1767 * _tmp1780 - _tmp1770 * _tmp1780 + _tmp1777 * _tmp255;
  const Scalar _tmp1782 =
      _tmp1751 * (_tmp1754 + _tmp1778 - _tmp235 * _tmp826 + _tmp828 * landmarks_3_);
  const Scalar _tmp1783 = _tmp235 * _tmp88;
  const Scalar _tmp1784 = -_tmp1752 * _tmp1782 + _tmp243 * (_tmp1747 - _tmp1775 * _views_1_pose[1] -
                                                            _tmp1783 + _tmp825 * landmarks_3_);
  const Scalar _tmp1785 = _tmp235 * _tmp90;
  const Scalar _tmp1786 =
      -_tmp1758 * _tmp1782 + _tmp246 * (_tmp1772 + _tmp1785 + _tmp833 * landmarks_3_);
  const Scalar _tmp1787 = _tmp1757 * _tmp1784 + _tmp1763 * _tmp1786;
  const Scalar _tmp1788 = _tmp1767 * _tmp1787 - _tmp1770 * _tmp1787 + _tmp1784 * _tmp255;
  const Scalar _tmp1789 = _tmp1761 - _tmp1776 - _tmp235 * _tmp838 + _tmp839 * landmarks_3_;
  const Scalar _tmp1790 =
      -_tmp1753 * _tmp1789 + _tmp243 * (_tmp1773 + _tmp1785 + _tmp837 * landmarks_3_);
  const Scalar _tmp1791 =
      -_tmp1759 * _tmp1789 +
      _tmp246 * (_tmp1749 + _tmp1783 - _tmp236 * _tmp838 + _tmp843 * landmarks_3_);
  const Scalar _tmp1792 = _tmp1757 * _tmp1790 + _tmp1763 * _tmp1791;
  const Scalar _tmp1793 = _tmp1767 * _tmp1792 - _tmp1770 * _tmp1792 + _tmp1790 * _tmp255;
  const Scalar _tmp1794 =
      -_tmp1771 * _tmp801 - _tmp1781 * _tmp822 + _tmp1788 * _tmp891 + _tmp1793 * _tmp848;
  const Scalar _tmp1795 = (1.0 / 2.0) * _tmp272;
  const Scalar _tmp1796 = _tmp1676 * _tmp1795;
  const Scalar _tmp1797 = _tmp1678 * _tmp1795;
  const Scalar _tmp1798 = _tmp1671 * _tmp283 - _tmp1674 * _tmp1796 + _tmp1674 * _tmp1797;
  const Scalar _tmp1799 = _tmp1694 * _tmp283 - _tmp1695 * _tmp1796 + _tmp1695 * _tmp1797;
  const Scalar _tmp1800 = _tmp1687 * _tmp283 - _tmp1688 * _tmp1796 + _tmp1688 * _tmp1797;
  const Scalar _tmp1801 = _tmp1699 * _tmp283 - _tmp1700 * _tmp1796 + _tmp1700 * _tmp1797;
  const Scalar _tmp1802 =
      -_tmp1798 * _tmp801 + _tmp1799 * _tmp891 - _tmp1800 * _tmp822 + _tmp1801 * _tmp848;
  const Scalar _tmp1803 = (1.0 / 2.0) * _tmp471;
  const Scalar _tmp1804 = _tmp1248 * _tmp1803;
  const Scalar _tmp1805 = -_tmp1235 * _tmp1804 + _tmp1238 * _tmp1804 + _tmp1247 * _tmp479;
  const Scalar _tmp1806 = _tmp1235 * _tmp1803;
  const Scalar _tmp1807 = _tmp1238 * _tmp1803;
  const Scalar _tmp1808 = _tmp1232 * _tmp479 - _tmp1234 * _tmp1806 + _tmp1234 * _tmp1807;
  const Scalar _tmp1809 = (1.0 / 2.0) * _tmp1808;
  const Scalar _tmp1810 = _tmp1254 * _tmp479 - _tmp1255 * _tmp1806 + _tmp1255 * _tmp1807;
  const Scalar _tmp1811 = _tmp1259 * _tmp479 - _tmp1260 * _tmp1806 + _tmp1260 * _tmp1807;
  const Scalar _tmp1812 =
      -_tmp1805 * _tmp801 - _tmp1809 * _views_1_pose[1] + _tmp1810 * _tmp891 + _tmp1811 * _tmp848;
  const Scalar _tmp1813 = (1.0 / 2.0) * _tmp216;
  const Scalar _tmp1814 = _tmp1719 * _tmp1813;
  const Scalar _tmp1815 = _tmp1721 * _tmp1813;
  const Scalar _tmp1816 = _tmp1737 * _tmp227 + _tmp1738 * _tmp1814 - _tmp1738 * _tmp1815;
  const Scalar _tmp1817 = _tmp1717 * _tmp1813;
  const Scalar _tmp1818 = _tmp1714 * _tmp227 + _tmp1719 * _tmp1817 - _tmp1721 * _tmp1817;
  const Scalar _tmp1819 = _tmp1730 * _tmp227 + _tmp1731 * _tmp1814 - _tmp1731 * _tmp1815;
  const Scalar _tmp1820 = _tmp1741 * _tmp227 + _tmp1743 * _tmp1814 - _tmp1744 * _tmp1813;
  const Scalar _tmp1821 =
      -_tmp1816 * _tmp801 - _tmp1818 * _tmp822 + _tmp1819 * _tmp891 + _tmp1820 * _tmp848;
  const Scalar _tmp1822 = 2 * _tmp293;
  const Scalar _tmp1823 = _tmp1822 * _views_1_pose[0];
  const Scalar _tmp1824 = _tmp292 * _tmp766;
  const Scalar _tmp1825 = _tmp1823 + _tmp1824 + _tmp811 * landmarks_5_;
  const Scalar _tmp1826 =
      _tmp306 * ((((_tmp19 + _tmp296) > 0) - ((_tmp19 + _tmp296) < 0)) + 1) / (_tmp297 * _tmp297);
  const Scalar _tmp1827 = _tmp1826 * _tmp294;
  const Scalar _tmp1828 = _tmp1827 * _tmp780;
  const Scalar _tmp1829 = _tmp292 * _tmp88;
  const Scalar _tmp1830 = 4 * _tmp293;
  const Scalar _tmp1831 = _tmp291 * _tmp94;
  const Scalar _tmp1832 = -_tmp1825 * _tmp1828 + _tmp299 * (_tmp1829 - _tmp1830 * _views_1_pose[2] +
                                                            _tmp1831 + _tmp806 * landmarks_5_);
  const Scalar _tmp1833 = 2 * _tmp300;
  const Scalar _tmp1834 = _tmp291 * _tmp766;
  const Scalar _tmp1835 = _tmp1822 * _views_1_pose[3];
  const Scalar _tmp1836 = _tmp1826 * _tmp301;
  const Scalar _tmp1837 = _tmp1836 * _tmp789;
  const Scalar _tmp1838 =
      -_tmp1825 * _tmp1837 +
      _tmp302 * (_tmp1834 - _tmp1835 - _tmp292 * _tmp879 + _tmp818 * landmarks_5_);
  const Scalar _tmp1839 = 2 * _tmp303;
  const Scalar _tmp1840 = _tmp1832 * _tmp1833 + _tmp1838 * _tmp1839;
  const Scalar _tmp1841 = (1.0 / 2.0) * _tmp300;
  const Scalar _tmp1842 = _tmp158 * _tmp305 * _tmp307 * std::pow(_tmp308, _tmp795) / _tmp309;
  const Scalar _tmp1843 = _tmp1841 * _tmp1842;
  const Scalar _tmp1844 = _tmp310 / (_tmp304 * std::sqrt(_tmp304));
  const Scalar _tmp1845 = _tmp1841 * _tmp1844;
  const Scalar _tmp1846 = _tmp1832 * _tmp311 + _tmp1840 * _tmp1843 - _tmp1840 * _tmp1845;
  const Scalar _tmp1847 = _tmp292 * _tmp90;
  const Scalar _tmp1848 = _tmp1835 + _tmp1847 - _tmp291 * _tmp826 + _tmp828 * landmarks_5_;
  const Scalar _tmp1849 = _tmp292 * _tmp94;
  const Scalar _tmp1850 = _tmp291 * _tmp88;
  const Scalar _tmp1851 =
      -_tmp1828 * _tmp1848 +
      _tmp299 * (-_tmp1830 * _views_1_pose[1] + _tmp1849 - _tmp1850 + _tmp825 * landmarks_5_);
  const Scalar _tmp1852 = _tmp291 * _tmp90;
  const Scalar _tmp1853 =
      -_tmp1837 * _tmp1848 + _tmp302 * (_tmp1823 + _tmp1852 + _tmp833 * landmarks_5_);
  const Scalar _tmp1854 = _tmp1833 * _tmp1851 + _tmp1839 * _tmp1853;
  const Scalar _tmp1855 = _tmp1843 * _tmp1854 - _tmp1845 * _tmp1854 + _tmp1851 * _tmp311;
  const Scalar _tmp1856 = _tmp1822 * _views_1_pose[1];
  const Scalar _tmp1857 = -_tmp1849 + _tmp1856 + _tmp777 * landmarks_5_;
  const Scalar _tmp1858 =
      -_tmp1828 * _tmp1857 + _tmp299 * (-_tmp1834 + _tmp1847 + _tmp771 * landmarks_5_);
  const Scalar _tmp1859 = _tmp1822 * _views_1_pose[2];
  const Scalar _tmp1860 =
      -_tmp1837 * _tmp1857 + _tmp302 * (_tmp1831 - _tmp1859 + _tmp788 * landmarks_5_);
  const Scalar _tmp1861 = _tmp1833 * _tmp1858 + _tmp1839 * _tmp1860;
  const Scalar _tmp1862 = _tmp1843 * _tmp1861 - _tmp1845 * _tmp1861 + _tmp1858 * _tmp311;
  const Scalar _tmp1863 = -_tmp1829 + _tmp1859 - _tmp291 * _tmp838 + _tmp839 * landmarks_5_;
  const Scalar _tmp1864 =
      -_tmp1828 * _tmp1863 + _tmp299 * (_tmp1824 + _tmp1852 + _tmp837 * landmarks_5_);
  const Scalar _tmp1865 =
      -_tmp1837 * _tmp1863 +
      _tmp302 * (_tmp1850 + _tmp1856 - _tmp292 * _tmp838 + _tmp843 * landmarks_5_);
  const Scalar _tmp1866 = _tmp1833 * _tmp1864 + _tmp1839 * _tmp1865;
  const Scalar _tmp1867 = _tmp1843 * _tmp1866 - _tmp1845 * _tmp1866 + _tmp1864 * _tmp311;
  const Scalar _tmp1868 =
      -_tmp1846 * _tmp822 + _tmp1855 * _tmp891 - _tmp1862 * _tmp801 + _tmp1867 * _tmp848;
  const Scalar _tmp1869 = _tmp1766 * _tmp247;
  const Scalar _tmp1870 = _tmp1769 * _tmp247;
  const Scalar _tmp1871 = _tmp1762 * _tmp255 + _tmp1764 * _tmp1869 - _tmp1764 * _tmp1870;
  const Scalar _tmp1872 = _tmp1779 * _tmp255 + _tmp1780 * _tmp1869 - _tmp1780 * _tmp1870;
  const Scalar _tmp1873 = _tmp1786 * _tmp255 + _tmp1787 * _tmp1869 - _tmp1787 * _tmp1870;
  const Scalar _tmp1874 = (1.0 / 2.0) * _tmp1791 * _tmp255 + (1.0 / 2.0) * _tmp1792 * _tmp1869 -
                          1.0 / 2.0 * _tmp1792 * _tmp1870;
  const Scalar _tmp1875 =
      -_tmp1871 * _tmp801 - _tmp1872 * _tmp822 + _tmp1873 * _tmp891 + _tmp1874 * _views_1_pose[3];
  const Scalar _tmp1876 = (1.0 / 2.0) * _tmp443;
  const Scalar _tmp1877 = _tmp1633 * _tmp1876;
  const Scalar _tmp1878 = _tmp1630 * _tmp1876;
  const Scalar _tmp1879 = _tmp1642 * _tmp451 + _tmp1643 * _tmp1877 - _tmp1643 * _tmp1878;
  const Scalar _tmp1880 = _tmp1649 * _tmp451 + _tmp1650 * _tmp1877 - _tmp1650 * _tmp1878;
  const Scalar _tmp1881 = _tmp1627 * _tmp451 + _tmp1629 * _tmp1877 - _tmp1629 * _tmp1878;
  const Scalar _tmp1882 = _tmp1655 * _tmp1876;
  const Scalar _tmp1883 = -_tmp1630 * _tmp1882 + _tmp1633 * _tmp1882 + _tmp1654 * _tmp451;
  const Scalar _tmp1884 =
      -_tmp1879 * _tmp801 - _tmp1880 * _tmp822 + _tmp1881 * _tmp891 + _tmp1883 * _tmp848;
  const Scalar _tmp1885 = _tmp348 * _tmp766;
  const Scalar _tmp1886 = _tmp347 * _tmp90;
  const Scalar _tmp1887 = _tmp349 * _tmp766;
  const Scalar _tmp1888 = _tmp347 * _tmp94;
  const Scalar _tmp1889 = _tmp1887 - _tmp1888 + _tmp777 * landmarks_7_;
  const Scalar _tmp1890 =
      _tmp364 * ((((_tmp19 + _tmp352) > 0) - ((_tmp19 + _tmp352) < 0)) + 1) / (_tmp353 * _tmp353);
  const Scalar _tmp1891 = _tmp1890 * _tmp350;
  const Scalar _tmp1892 = _tmp1891 * _tmp780;
  const Scalar _tmp1893 =
      -_tmp1889 * _tmp1892 + _tmp355 * (-_tmp1885 + _tmp1886 + _tmp771 * landmarks_7_);
  const Scalar _tmp1894 = 2 * _tmp356;
  const Scalar _tmp1895 = _tmp1890 * _tmp357;
  const Scalar _tmp1896 = _tmp1895 * _tmp789;
  const Scalar _tmp1897 = _tmp349 * _tmp90;
  const Scalar _tmp1898 = _tmp348 * _tmp94;
  const Scalar _tmp1899 =
      -_tmp1889 * _tmp1896 + _tmp358 * (-_tmp1897 + _tmp1898 + _tmp788 * landmarks_7_);
  const Scalar _tmp1900 = 2 * _tmp359;
  const Scalar _tmp1901 = _tmp1893 * _tmp1894 + _tmp1899 * _tmp1900;
  const Scalar _tmp1902 = _tmp366 / (_tmp360 * std::sqrt(_tmp360));
  const Scalar _tmp1903 = _tmp1902 * _tmp356;
  const Scalar _tmp1904 = (1.0 / 2.0) * _tmp1903;
  const Scalar _tmp1905 = (1.0 / 2.0) * _tmp1901;
  const Scalar _tmp1906 = _tmp361 * std::pow(_tmp362, _tmp795) * _tmp365 / _tmp363;
  const Scalar _tmp1907 = _tmp1906 * _tmp356;
  const Scalar _tmp1908 = _tmp158 * _tmp1907;
  const Scalar _tmp1909 = _tmp1893 * _tmp367 - _tmp1901 * _tmp1904 + _tmp1905 * _tmp1908;
  const Scalar _tmp1910 = _tmp348 * _tmp88;
  const Scalar _tmp1911 = 4 * _tmp348;
  const Scalar _tmp1912 = _tmp349 * _tmp88;
  const Scalar _tmp1913 =
      _tmp1886 - _tmp1911 * _views_1_pose[1] + _tmp1912 + _tmp828 * landmarks_7_;
  const Scalar _tmp1914 =
      -_tmp1892 * _tmp1913 +
      _tmp355 * (_tmp1888 - _tmp1910 - _tmp349 * _tmp826 + _tmp825 * landmarks_7_);
  const Scalar _tmp1915 = _tmp349 * _tmp94;
  const Scalar _tmp1916 = _tmp348 * _tmp90;
  const Scalar _tmp1917 =
      -_tmp1896 * _tmp1913 + _tmp358 * (_tmp1915 + _tmp1916 + _tmp833 * landmarks_7_);
  const Scalar _tmp1918 = (1.0 / 2.0) * _tmp1894 * _tmp1914 + (1.0 / 2.0) * _tmp1900 * _tmp1917;
  const Scalar _tmp1919 = -_tmp1903 * _tmp1918 + _tmp1908 * _tmp1918 + _tmp1914 * _tmp367;
  const Scalar _tmp1920 = _tmp347 * _tmp88;
  const Scalar _tmp1921 = _tmp347 * _tmp766;
  const Scalar _tmp1922 = _tmp1915 + _tmp1921 + _tmp811 * landmarks_7_;
  const Scalar _tmp1923 =
      -_tmp1892 * _tmp1922 +
      _tmp355 * (_tmp1898 + _tmp1920 - _tmp349 * _tmp879 + _tmp806 * landmarks_7_);
  const Scalar _tmp1924 = 4 * _tmp347;
  const Scalar _tmp1925 =
      -_tmp1896 * _tmp1922 +
      _tmp358 * (_tmp1885 - _tmp1912 - _tmp1924 * _views_1_pose[2] + _tmp818 * landmarks_7_);
  const Scalar _tmp1926 = _tmp1894 * _tmp1923 + _tmp1900 * _tmp1925;
  const Scalar _tmp1927 = _tmp1020 * _tmp1907;
  const Scalar _tmp1928 = -_tmp1904 * _tmp1926 + _tmp1923 * _tmp367 + _tmp1926 * _tmp1927;
  const Scalar _tmp1929 =
      _tmp1897 - _tmp1911 * _views_1_pose[0] - _tmp1920 + _tmp839 * landmarks_7_;
  const Scalar _tmp1930 =
      -_tmp1892 * _tmp1929 + _tmp355 * (_tmp1916 + _tmp1921 + _tmp837 * landmarks_7_);
  const Scalar _tmp1931 =
      -_tmp1896 * _tmp1929 +
      _tmp358 * (_tmp1887 + _tmp1910 - _tmp1924 * _views_1_pose[0] + _tmp843 * landmarks_7_);
  const Scalar _tmp1932 = _tmp1894 * _tmp1930 + _tmp1900 * _tmp1931;
  const Scalar _tmp1933 = -_tmp1904 * _tmp1932 + _tmp1927 * _tmp1932 + _tmp1930 * _tmp367;
  const Scalar _tmp1934 =
      -_tmp1909 * _tmp801 + _tmp1919 * _tmp891 - _tmp1928 * _tmp822 + _tmp1933 * _tmp848;
  const Scalar _tmp1935 = _tmp1902 * _tmp359;
  const Scalar _tmp1936 = (1.0 / 2.0) * _tmp1935;
  const Scalar _tmp1937 = _tmp1020 * _tmp1906 * _tmp359;
  const Scalar _tmp1938 = _tmp1925 * _tmp367 - _tmp1926 * _tmp1936 + _tmp1926 * _tmp1937;
  const Scalar _tmp1939 = _tmp158 * _tmp1906;
  const Scalar _tmp1940 = _tmp1939 * _tmp359;
  const Scalar _tmp1941 = _tmp1917 * _tmp367 - _tmp1918 * _tmp1935 + _tmp1918 * _tmp1940;
  const Scalar _tmp1942 = _tmp1899 * _tmp367 - _tmp1905 * _tmp1935 + _tmp1905 * _tmp1940;
  const Scalar _tmp1943 = _tmp1931 * _tmp367 - _tmp1932 * _tmp1936 + _tmp1932 * _tmp1937;
  const Scalar _tmp1944 =
      -_tmp1938 * _tmp822 + _tmp1941 * _tmp891 - _tmp1942 * _tmp801 + _tmp1943 * _tmp848;
  const Scalar _tmp1945 = (1.0 / 2.0) * _tmp496;
  const Scalar _tmp1946 = _tmp1182 * _tmp1945;
  const Scalar _tmp1947 = _tmp1184 * _tmp1945;
  const Scalar _tmp1948 = _tmp1172 * _tmp507 + _tmp1180 * _tmp1946 - _tmp1180 * _tmp1947;
  const Scalar _tmp1949 = _tmp1191 * _tmp507 + _tmp1194 * _tmp1946 - _tmp1194 * _tmp1947;
  const Scalar _tmp1950 = _tmp1198 * _tmp507 + _tmp1201 * _tmp1946 - _tmp1201 * _tmp1947;
  const Scalar _tmp1951 = _tmp1204 * _tmp507 + _tmp1206 * _tmp1946 - _tmp1207 * _tmp1945;
  const Scalar _tmp1952 =
      -_tmp1948 * _tmp801 - _tmp1949 * _tmp822 + _tmp1950 * _tmp891 + _tmp1951 * _tmp848;
  const Scalar _tmp1953 = (1.0 / 2.0) * _tmp412;
  const Scalar _tmp1954 = _tmp1278 * _tmp1953;
  const Scalar _tmp1955 = _tmp1281 * _tmp1953;
  const Scalar _tmp1956 = _tmp1270 * _tmp423 - _tmp1277 * _tmp1954 + _tmp1277 * _tmp1955;
  const Scalar _tmp1957 = _tmp1297 * _tmp423 - _tmp1298 * _tmp1954 + _tmp1298 * _tmp1955;
  const Scalar _tmp1958 = _tmp1287 * _tmp423 - _tmp1291 * _tmp1954 + _tmp1291 * _tmp1955;
  const Scalar _tmp1959 = _tmp1302 * _tmp423 - _tmp1303 * _tmp1954 + _tmp1303 * _tmp1955;
  const Scalar _tmp1960 =
      -_tmp1956 * _tmp801 - _tmp1957 * _tmp822 + _tmp1958 * _tmp891 + _tmp1959 * _tmp848;
  const Scalar _tmp1961 = (1.0 / 2.0) * _tmp303;
  const Scalar _tmp1962 = _tmp1842 * _tmp1961;
  const Scalar _tmp1963 = _tmp1844 * _tmp1961;
  const Scalar _tmp1964 = _tmp1860 * _tmp311 + _tmp1861 * _tmp1962 - _tmp1861 * _tmp1963;
  const Scalar _tmp1965 = _tmp1853 * _tmp311 + _tmp1854 * _tmp1962 - _tmp1854 * _tmp1963;
  const Scalar _tmp1966 = _tmp1840 * _tmp1961;
  const Scalar _tmp1967 = _tmp1838 * _tmp311 + _tmp1842 * _tmp1966 - _tmp1844 * _tmp1966;
  const Scalar _tmp1968 = _tmp1865 * _tmp311 + _tmp1866 * _tmp1962 - _tmp1866 * _tmp1963;
  const Scalar _tmp1969 =
      -_tmp1964 * _tmp801 + _tmp1965 * _tmp891 - _tmp1967 * _tmp822 + _tmp1968 * _tmp848;
  const Scalar _tmp1970 = _tmp321 * _tmp766;
  const Scalar _tmp1971 = _tmp320 * _tmp94;
  const Scalar _tmp1972 = _tmp1970 - _tmp1971 + _tmp777 * landmarks_6_;
  const Scalar _tmp1973 =
      _tmp334 * ((((_tmp19 + _tmp324) > 0) - ((_tmp19 + _tmp324) < 0)) + 1) / (_tmp325 * _tmp325);
  const Scalar _tmp1974 = _tmp1973 * _tmp322;
  const Scalar _tmp1975 = _tmp1974 * _tmp780;
  const Scalar _tmp1976 = _tmp320 * _tmp90;
  const Scalar _tmp1977 = _tmp319 * _tmp766;
  const Scalar _tmp1978 =
      -_tmp1972 * _tmp1975 + _tmp327 * (_tmp1976 - _tmp1977 + _tmp771 * landmarks_6_);
  const Scalar _tmp1979 = 2 * _tmp328;
  const Scalar _tmp1980 = _tmp321 * _tmp90;
  const Scalar _tmp1981 = _tmp319 * _tmp94;
  const Scalar _tmp1982 = _tmp329 * _tmp789;
  const Scalar _tmp1983 = _tmp1973 * _tmp1982;
  const Scalar _tmp1984 =
      -_tmp1972 * _tmp1983 + _tmp330 * (-_tmp1980 + _tmp1981 + _tmp788 * landmarks_6_);
  const Scalar _tmp1985 = 2 * _tmp331;
  const Scalar _tmp1986 = _tmp1978 * _tmp1979 + _tmp1984 * _tmp1985;
  const Scalar _tmp1987 = (1.0 / 2.0) * _tmp328;
  const Scalar _tmp1988 = _tmp158 * _tmp333 * _tmp335 * std::pow(_tmp336, _tmp795) / _tmp337;
  const Scalar _tmp1989 = _tmp1987 * _tmp1988;
  const Scalar _tmp1990 = _tmp338 / (_tmp332 * std::sqrt(_tmp332));
  const Scalar _tmp1991 = _tmp1987 * _tmp1990;
  const Scalar _tmp1992 = _tmp1978 * _tmp339 + _tmp1986 * _tmp1989 - _tmp1986 * _tmp1991;
  const Scalar _tmp1993 = _tmp321 * _tmp94;
  const Scalar _tmp1994 = _tmp320 * _tmp766;
  const Scalar _tmp1995 = _tmp1993 + _tmp1994 + _tmp811 * landmarks_6_;
  const Scalar _tmp1996 = _tmp320 * _tmp88;
  const Scalar _tmp1997 =
      -_tmp1975 * _tmp1995 +
      _tmp327 * (_tmp1981 + _tmp1996 - _tmp321 * _tmp879 + _tmp806 * landmarks_6_);
  const Scalar _tmp1998 = _tmp321 * _tmp88;
  const Scalar _tmp1999 =
      -_tmp1983 * _tmp1995 +
      _tmp330 * (_tmp1977 - _tmp1998 - _tmp320 * _tmp879 + _tmp818 * landmarks_6_);
  const Scalar _tmp2000 = _tmp1979 * _tmp1997 + _tmp1985 * _tmp1999;
  const Scalar _tmp2001 = _tmp1989 * _tmp2000 - _tmp1991 * _tmp2000 + _tmp1997 * _tmp339;
  const Scalar _tmp2002 = _tmp1976 + _tmp1998 - _tmp319 * _tmp826 + _tmp828 * landmarks_6_;
  const Scalar _tmp2003 = _tmp319 * _tmp88;
  const Scalar _tmp2004 =
      -_tmp1975 * _tmp2002 +
      _tmp327 * (_tmp1971 - _tmp2003 - _tmp321 * _tmp826 + _tmp825 * landmarks_6_);
  const Scalar _tmp2005 = _tmp319 * _tmp90;
  const Scalar _tmp2006 =
      -_tmp1983 * _tmp2002 + _tmp330 * (_tmp1993 + _tmp2005 + _tmp833 * landmarks_6_);
  const Scalar _tmp2007 = _tmp1979 * _tmp2004 + _tmp1985 * _tmp2006;
  const Scalar _tmp2008 = _tmp1989 * _tmp2007 - _tmp1991 * _tmp2007 + _tmp2004 * _tmp339;
  const Scalar _tmp2009 =
      _tmp1973 * (_tmp1980 - _tmp1996 - _tmp319 * _tmp838 + _tmp839 * landmarks_6_);
  const Scalar _tmp2010 =
      -_tmp2009 * _tmp322 * _tmp780 + _tmp327 * (_tmp1994 + _tmp2005 + _tmp837 * landmarks_6_);
  const Scalar _tmp2011 =
      -_tmp1982 * _tmp2009 +
      _tmp330 * (_tmp1970 + _tmp2003 - _tmp320 * _tmp838 + _tmp843 * landmarks_6_);
  const Scalar _tmp2012 = _tmp1979 * _tmp2010 + _tmp1985 * _tmp2011;
  const Scalar _tmp2013 = _tmp1989 * _tmp2012 - _tmp1991 * _tmp2012 + _tmp2010 * _tmp339;
  const Scalar _tmp2014 =
      -_tmp1992 * _tmp801 - _tmp2001 * _tmp822 + _tmp2008 * _tmp891 + _tmp2013 * _tmp848;
  const Scalar _tmp2015 = (1.0 / 2.0) * _tmp331;
  const Scalar _tmp2016 = _tmp1988 * _tmp2015;
  const Scalar _tmp2017 = _tmp1990 * _tmp2015;
  const Scalar _tmp2018 = _tmp1984 * _tmp339 + _tmp1986 * _tmp2016 - _tmp1986 * _tmp2017;
  const Scalar _tmp2019 = _tmp2000 * _tmp2015;
  const Scalar _tmp2020 = _tmp1988 * _tmp2019 - _tmp1990 * _tmp2019 + _tmp1999 * _tmp339;
  const Scalar _tmp2021 = _tmp2006 * _tmp339 + _tmp2007 * _tmp2016 - _tmp2007 * _tmp2017;
  const Scalar _tmp2022 = _tmp2011 * _tmp339 + _tmp2012 * _tmp2016 - _tmp2012 * _tmp2017;
  const Scalar _tmp2023 =
      -_tmp2018 * _tmp801 - _tmp2020 * _tmp822 + _tmp2021 * _tmp891 + _tmp2022 * _tmp848;
  const Scalar _tmp2024 =
      _tmp801 * _tmp883 - _tmp822 * _tmp872 + _tmp848 * _tmp890 - _tmp891 * _tmp896;
  const Scalar _tmp2025 =
      _tmp801 * _tmp902 - _tmp822 * _tmp901 + _tmp848 * _tmp904 - _tmp891 * _tmp905;
  const Scalar _tmp2026 =
      _tmp801 * _tmp940 - _tmp822 * _tmp930 + _tmp848 * _tmp949 - _tmp891 * _tmp954;
  const Scalar _tmp2027 =
      -_tmp1160 * _tmp822 + _tmp1161 * _tmp801 + _tmp1162 * _tmp848 - _tmp1163 * _tmp891;
  const Scalar _tmp2028 =
      -_tmp1186 * _tmp822 + _tmp1195 * _tmp801 + _tmp1202 * _tmp848 - _tmp1208 * _tmp891;
  const Scalar _tmp2029 =
      -_tmp1123 * _tmp822 + _tmp1133 * _tmp801 + _tmp1142 * _tmp848 - _tmp1147 * _tmp891;
  const Scalar _tmp2030 =
      -_tmp1948 * _tmp822 + _tmp1949 * _tmp801 + _tmp1950 * _tmp848 - _tmp1951 * _tmp891;
  const Scalar _tmp2031 =
      -_tmp1805 * _tmp822 + _tmp1808 * _tmp801 + _tmp1810 * _tmp848 - _tmp1811 * _tmp891;
  const Scalar _tmp2032 =
      _tmp1240 * _tmp801 - _tmp1249 * _tmp822 + _tmp1256 * _tmp848 - _tmp1261 * _tmp891;
  const Scalar _tmp2033 =
      _tmp1635 * _tmp848 - _tmp1644 * _tmp822 + _tmp1651 * _tmp801 - _tmp1656 * _tmp891;
  const Scalar _tmp2034 =
      -_tmp1566 * _tmp822 + _tmp1569 * _tmp801 + _tmp1570 * _tmp848 - _tmp1571 * _tmp891;
  const Scalar _tmp2035 =
      _tmp1078 * _tmp801 + _tmp1088 * _views_1_pose[3] - _tmp1096 * _tmp822 - _tmp1101 * _tmp891;
  const Scalar _tmp2036 =
      -_tmp1956 * _tmp822 + _tmp1957 * _tmp801 + _tmp1958 * _tmp848 - _tmp1959 * _tmp891;
  const Scalar _tmp2037 =
      -_tmp1575 * _tmp822 + _tmp1576 * _tmp801 + _tmp1577 * _tmp848 - _tmp1579 * _tmp891;
  const Scalar _tmp2038 =
      -_tmp1354 * _tmp822 + _tmp1355 * _tmp801 + _tmp1356 * _tmp848 - _tmp1357 * _tmp891;
  const Scalar _tmp2039 =
      -_tmp1152 * _tmp822 + _tmp1153 * _tmp801 + _tmp1154 * _tmp848 - _tmp1155 * _tmp891;
  const Scalar _tmp2040 =
      -_tmp1382 * _tmp822 + _tmp1393 * _tmp801 + _tmp1401 * _tmp848 - _tmp1406 * _tmp891;
  const Scalar _tmp2041 =
      -_tmp1474 * _tmp822 + _tmp1489 * _tmp848 + _tmp1495 * _tmp801 - _tmp1501 * _tmp891;
  const Scalar _tmp2042 =
      _tmp1846 * _tmp801 + _tmp1855 * _tmp848 - _tmp1862 * _tmp822 - _tmp1867 * _tmp891;
  const Scalar _tmp2043 =
      -_tmp1909 * _tmp822 + _tmp1919 * _tmp848 + _tmp1928 * _tmp801 - _tmp1933 * _tmp891;
  const Scalar _tmp2044 =
      -_tmp1283 * _tmp822 + _tmp1292 * _tmp848 + _tmp1299 * _tmp801 - _tmp1304 * _tmp891;
  const Scalar _tmp2045 =
      -_tmp1525 * _tmp822 + _tmp1534 * _tmp801 + _tmp1541 * _tmp848 - _tmp1546 * _tmp891;
  const Scalar _tmp2046 =
      _tmp1433 * _tmp801 - _tmp1437 * _tmp822 + _tmp1450 * _tmp848 - _tmp1452 * _tmp891;
  const Scalar _tmp2047 =
      -_tmp1583 * _tmp822 + _tmp1585 * _tmp848 + _tmp1586 * _tmp801 - _tmp1588 * _tmp891;
  const Scalar _tmp2048 =
      -_tmp1871 * _tmp822 + _tmp1872 * _tmp801 + _tmp1873 * _tmp848 - _tmp1874 * _views_1_pose[2];
  const Scalar _tmp2049 =
      -_tmp1213 * _tmp822 + _tmp1214 * _tmp848 + _tmp1215 * _tmp801 - _tmp1216 * _tmp891;
  const Scalar _tmp2050 =
      -_tmp1001 * _tmp891 + _tmp801 * _tmp979 - _tmp822 * _tmp996 + _tmp848 * _tmp989;
  const Scalar _tmp2051 =
      _tmp1325 * _tmp801 - _tmp1337 * _tmp822 + _tmp1344 * _tmp848 - _tmp1349 * _tmp891;
  const Scalar _tmp2052 =
      _tmp1601 * _tmp801 + _tmp1602 * _tmp848 - _tmp1603 * _tmp822 - _tmp1604 * _tmp891;
  const Scalar _tmp2053 =
      _tmp1410 * _tmp801 + _tmp1412 * _tmp848 - _tmp1413 * _tmp822 - _tmp1414 * _tmp891;
  const Scalar _tmp2054 =
      -_tmp1608 * _tmp822 + _tmp1609 * _tmp801 + _tmp1610 * _tmp848 - _tmp1611 * _tmp891;
  const Scalar _tmp2055 =
      -_tmp1816 * _tmp822 + _tmp1818 * _tmp801 + _tmp1819 * _tmp848 - _tmp1820 * _tmp891;
  const Scalar _tmp2056 =
      -_tmp1559 * _tmp822 + _tmp1560 * _tmp801 + _tmp1561 * _tmp848 - _tmp1562 * _tmp891;
  const Scalar _tmp2057 =
      -_tmp2018 * _tmp822 + _tmp2020 * _tmp801 + _tmp2021 * _tmp848 - _tmp2022 * _tmp891;
  const Scalar _tmp2058 =
      _tmp1723 * _tmp801 + _tmp1732 * _tmp848 - _tmp1739 * _tmp822 - _tmp1745 * _tmp891;
  const Scalar _tmp2059 =
      -_tmp1771 * _tmp822 + _tmp1781 * _tmp801 + _tmp1788 * _tmp848 - _tmp1793 * _tmp891;
  const Scalar _tmp2060 =
      -_tmp1680 * _tmp822 + _tmp1689 * _tmp801 + _tmp1696 * _tmp848 - _tmp1701 * _tmp891;
  const Scalar _tmp2061 =
      -_tmp1798 * _tmp822 + _tmp1799 * _tmp848 + _tmp1800 * _tmp801 - _tmp1801 * _tmp891;
  const Scalar _tmp2062 =
      _tmp1551 * _tmp801 + _tmp1552 * _tmp848 - _tmp1553 * _tmp822 - _tmp1554 * _tmp891;
  const Scalar _tmp2063 =
      -_tmp1964 * _tmp822 + _tmp1965 * _tmp848 + _tmp1967 * _tmp801 - _tmp1968 * _tmp891;
  const Scalar _tmp2064 =
      -_tmp1027 * _tmp822 + _tmp1038 * _tmp848 + _tmp1047 * _tmp801 - _tmp1054 * _tmp891;
  const Scalar _tmp2065 =
      -_tmp1879 * _tmp822 + _tmp1880 * _tmp801 + _tmp1881 * _tmp848 - _tmp1883 * _tmp891;
  const Scalar _tmp2066 =
      _tmp1592 * _tmp848 - _tmp1593 * _tmp822 + _tmp1595 * _tmp801 - _tmp1596 * _tmp891;
  const Scalar _tmp2067 =
      -_tmp1992 * _tmp822 + _tmp2001 * _tmp801 + _tmp2008 * _tmp848 - _tmp2013 * _tmp891;
  const Scalar _tmp2068 =
      -_tmp800 * _tmp822 + _tmp801 * _tmp821 + _tmp836 * _views_1_pose[3] - _tmp847 * _tmp891;
  const Scalar _tmp2069 =
      _tmp1938 * _tmp801 + _tmp1941 * _tmp848 - _tmp1942 * _tmp822 - _tmp1943 * _tmp891;
  const Scalar _tmp2070 =
      -_tmp801 * _tmp949 + _tmp822 * _tmp954 + _tmp848 * _tmp940 - _tmp891 * _tmp930;
  const Scalar _tmp2071 =
      _tmp1001 * _tmp822 - _tmp801 * _tmp989 + _tmp848 * _tmp979 - _tmp891 * _tmp996;
  const Scalar _tmp2072 =
      -_tmp1566 * _tmp891 + _tmp1569 * _tmp848 - _tmp1570 * _tmp801 + _tmp1571 * _tmp822;
  const Scalar _tmp2073 =
      -_tmp1575 * _tmp891 + _tmp1576 * _tmp848 - _tmp1577 * _tmp801 + _tmp1579 * _tmp822;
  const Scalar _tmp2074 =
      -_tmp1186 * _tmp891 + _tmp1195 * _tmp848 - _tmp1202 * _tmp801 + _tmp1208 * _tmp822;
  const Scalar _tmp2075 =
      -_tmp1559 * _tmp891 + _tmp1560 * _tmp848 - _tmp1561 * _tmp801 + _tmp1562 * _tmp822;
  const Scalar _tmp2076 =
      -_tmp1948 * _tmp891 + _tmp1949 * _tmp848 - _tmp1950 * _tmp801 + _tmp1951 * _tmp822;
  const Scalar _tmp2077 =
      -_tmp800 * _tmp891 + _tmp821 * _tmp848 + _tmp822 * _tmp847 - _tmp836 * _views_1_pose[0];
  const Scalar _tmp2078 =
      -_tmp1805 * _tmp891 + _tmp1809 * _views_1_pose[3] - _tmp1810 * _tmp801 + _tmp1811 * _tmp822;
  const Scalar _tmp2079 =
      -_tmp1152 * _tmp891 + _tmp1153 * _tmp848 - _tmp1154 * _tmp801 + _tmp1155 * _tmp822;
  const Scalar _tmp2080 =
      _tmp1240 * _tmp848 - _tmp1249 * _tmp891 - _tmp1256 * _tmp801 + _tmp1261 * _tmp822;
  const Scalar _tmp2081 =
      -_tmp1635 * _tmp801 - _tmp1644 * _tmp891 + _tmp1651 * _tmp848 + _tmp1656 * _tmp822;
  const Scalar _tmp2082 =
      -_tmp1283 * _tmp891 - _tmp1292 * _tmp801 + _tmp1299 * _tmp848 + _tmp1304 * _tmp822;
  const Scalar _tmp2083 =
      -_tmp801 * _tmp890 + _tmp822 * _tmp896 + _tmp848 * _tmp883 - _tmp872 * _tmp891;
  const Scalar _tmp2084 =
      -_tmp1525 * _tmp891 + _tmp1534 * _tmp848 - _tmp1541 * _tmp801 + _tmp1546 * _tmp822;
  const Scalar _tmp2085 =
      -_tmp1879 * _tmp891 + _tmp1880 * _tmp848 - _tmp1881 * _tmp801 + _tmp1883 * _tmp822;
  const Scalar _tmp2086 =
      -_tmp1382 * _tmp891 + _tmp1393 * _tmp848 - _tmp1401 * _tmp801 + _tmp1406 * _tmp822;
  const Scalar _tmp2087 =
      _tmp1551 * _tmp848 - _tmp1552 * _tmp801 - _tmp1553 * _tmp891 + _tmp1554 * _tmp822;
  const Scalar _tmp2088 =
      _tmp1410 * _tmp848 - _tmp1412 * _tmp801 - _tmp1413 * _tmp891 + _tmp1414 * _tmp822;
  const Scalar _tmp2089 =
      -_tmp801 * _tmp904 + _tmp822 * _tmp905 + _tmp848 * _tmp902 - _tmp891 * _tmp901;
  const Scalar _tmp2090 =
      _tmp1433 * _tmp848 - _tmp1437 * _tmp891 - _tmp1450 * _tmp801 + _tmp1452 * _tmp822;
  const Scalar _tmp2091 =
      -_tmp1992 * _tmp891 + _tmp2001 * _tmp848 - _tmp2008 * _tmp801 + _tmp2013 * _tmp822;
  const Scalar _tmp2092 =
      _tmp1601 * _tmp848 - _tmp1602 * _tmp801 - _tmp1603 * _tmp891 + _tmp1604 * _tmp822;
  const Scalar _tmp2093 =
      -_tmp1583 * _tmp891 - _tmp1585 * _tmp801 + _tmp1586 * _tmp848 + _tmp1588 * _tmp822;
  const Scalar _tmp2094 =
      -_tmp1213 * _tmp891 - _tmp1214 * _tmp801 + _tmp1215 * _tmp848 + _tmp1216 * _tmp822;
  const Scalar _tmp2095 =
      -_tmp1592 * _tmp801 - _tmp1593 * _tmp891 + _tmp1595 * _tmp848 + _tmp1596 * _tmp822;
  const Scalar _tmp2096 =
      _tmp1938 * _tmp848 - _tmp1941 * _tmp801 - _tmp1942 * _tmp891 + _tmp1943 * _tmp822;
  const Scalar _tmp2097 =
      -_tmp1027 * _tmp891 - _tmp1038 * _tmp801 + _tmp1047 * _tmp848 + _tmp1054 * _tmp822;
  const Scalar _tmp2098 =
      -_tmp1123 * _tmp891 + _tmp1133 * _tmp848 - _tmp1142 * _tmp801 + _tmp1147 * _tmp822;
  const Scalar _tmp2099 =
      -_tmp1608 * _tmp891 + _tmp1609 * _tmp848 - _tmp1610 * _tmp801 + _tmp1611 * _tmp822;
  const Scalar _tmp2100 =
      -_tmp1816 * _tmp891 + _tmp1818 * _tmp848 - _tmp1819 * _tmp801 + _tmp1820 * _tmp822;
  const Scalar _tmp2101 =
      _tmp1723 * _tmp848 - _tmp1732 * _tmp801 - _tmp1739 * _tmp891 + _tmp1745 * _tmp822;
  const Scalar _tmp2102 =
      -_tmp1771 * _tmp891 + _tmp1781 * _tmp848 - _tmp1788 * _tmp801 + _tmp1793 * _tmp822;
  const Scalar _tmp2103 =
      -_tmp1871 * _tmp891 + _tmp1872 * _tmp848 - _tmp1873 * _tmp801 + _tmp1874 * _views_1_pose[1];
  const Scalar _tmp2104 =
      _tmp1078 * _tmp848 - _tmp1087 * _tmp801 - _tmp1096 * _tmp891 + _tmp1101 * _tmp822;
  const Scalar _tmp2105 =
      -_tmp1680 * _tmp891 + _tmp1689 * _tmp848 - _tmp1696 * _tmp801 + _tmp1701 * _tmp822;
  const Scalar _tmp2106 =
      -_tmp1354 * _tmp891 + _tmp1355 * _tmp848 - _tmp1356 * _tmp801 + _tmp1357 * _tmp822;
  const Scalar _tmp2107 =
      -_tmp2018 * _tmp891 + _tmp2020 * _tmp848 - _tmp2021 * _tmp801 + _tmp2022 * _tmp822;
  const Scalar _tmp2108 =
      -_tmp1798 * _tmp891 - _tmp1799 * _tmp801 + _tmp1800 * _tmp848 + _tmp1801 * _tmp822;
  const Scalar _tmp2109 =
      -_tmp1474 * _tmp891 - _tmp1489 * _tmp801 + _tmp1495 * _tmp848 + _tmp1501 * _tmp822;
  const Scalar _tmp2110 =
      -_tmp1964 * _tmp891 - _tmp1965 * _tmp801 + _tmp1967 * _tmp848 + _tmp1968 * _tmp822;
  const Scalar _tmp2111 =
      -_tmp1160 * _tmp891 + _tmp1161 * _tmp848 - _tmp1162 * _tmp801 + _tmp1163 * _tmp822;
  const Scalar _tmp2112 =
      _tmp1325 * _tmp848 - _tmp1337 * _tmp891 - _tmp1344 * _tmp801 + _tmp1349 * _tmp822;
  const Scalar _tmp2113 =
      _tmp1846 * _tmp848 - _tmp1855 * _tmp801 - _tmp1862 * _tmp891 + _tmp1867 * _tmp822;
  const Scalar _tmp2114 =
      -_tmp1956 * _tmp891 + _tmp1957 * _tmp848 - _tmp1958 * _tmp801 + _tmp1959 * _tmp822;
  const Scalar _tmp2115 =
      -_tmp1909 * _tmp891 - _tmp1919 * _tmp801 + _tmp1928 * _tmp848 + _tmp1933 * _tmp822;
  const Scalar _tmp2116 = _tmp694 * landmarks_19_;
  const Scalar _tmp2117 = _tmp863 * landmarks_19_;
  const Scalar _tmp2118 = _tmp141 * _tmp2117 - _tmp151 * _tmp2116;
  const Scalar _tmp2119 = _tmp855 * landmarks_19_;
  const Scalar _tmp2120 = _tmp691 * landmarks_19_;
  const Scalar _tmp2121 = _tmp141 * _tmp2119 - _tmp2120 * _tmp99;
  const Scalar _tmp2122 = _tmp2118 * _tmp865 + _tmp2121 * _tmp859;
  const Scalar _tmp2123 = _tmp1557 * _tmp2122 - _tmp1558 * _tmp2122 + _tmp2118 * _tmp703;
  const Scalar _tmp2124 = _tmp638 * landmarks_17_;
  const Scalar _tmp2125 = _tmp141 * landmarks_17_;
  const Scalar _tmp2126 = -_tmp151 * _tmp2124 + _tmp2125 * _tmp921;
  const Scalar _tmp2127 = _tmp635 * landmarks_17_;
  const Scalar _tmp2128 = _tmp2125 * _tmp915 - _tmp2127 * _tmp99;
  const Scalar _tmp2129 = _tmp2126 * _tmp923 + _tmp2128 * _tmp917;
  const Scalar _tmp2130 = -_tmp1211 * _tmp2129 + _tmp1212 * _tmp2129 + _tmp2126 * _tmp647;
  const Scalar _tmp2131 = _tmp2128 * _tmp647 - _tmp2129 * _tmp927 + _tmp2129 * _tmp929;
  const Scalar _tmp2132 = _tmp961 * landmarks_16_;
  const Scalar _tmp2133 = _tmp610 * landmarks_16_;
  const Scalar _tmp2134 = _tmp141 * _tmp2132 - _tmp151 * _tmp2133;
  const Scalar _tmp2135 = _tmp607 * landmarks_16_;
  const Scalar _tmp2136 = _tmp969 * landmarks_16_;
  const Scalar _tmp2137 = _tmp141 * _tmp2136 - _tmp2135 * _tmp99;
  const Scalar _tmp2138 = _tmp2134 * _tmp972 + _tmp2137 * _tmp971;
  const Scalar _tmp2139 = _tmp2138 * _tmp977;
  const Scalar _tmp2140 = _tmp2134 * _tmp619 + _tmp2138 * _tmp976 - _tmp2139 * _tmp974;
  const Scalar _tmp2141 = -_tmp1564 * _tmp2139 + _tmp1567 * _tmp2138 + _tmp2137 * _tmp619;
  const Scalar _tmp2142 = _tmp579 * landmarks_15_;
  const Scalar _tmp2143 = _tmp1015 * landmarks_15_;
  const Scalar _tmp2144 = _tmp141 * _tmp2143 - _tmp2142 * _tmp99;
  const Scalar _tmp2145 = _tmp1008 * landmarks_15_;
  const Scalar _tmp2146 = _tmp582 * landmarks_15_;
  const Scalar _tmp2147 = _tmp141 * _tmp2145 - _tmp151 * _tmp2146;
  const Scalar _tmp2148 = _tmp1017 * _tmp2144 + _tmp1018 * _tmp2147;
  const Scalar _tmp2149 = _tmp1023 * _tmp2148 - _tmp1026 * _tmp2148 + _tmp2147 * _tmp591;
  const Scalar _tmp2150 = _tmp1573 * _tmp2148 - _tmp1574 * _tmp2148 + _tmp2144 * _tmp591;
  const Scalar _tmp2151 = _tmp663 * landmarks_18_;
  const Scalar _tmp2152 = _tmp841 * landmarks_18_;
  const Scalar _tmp2153 = _tmp141 * _tmp2152 - _tmp2151 * _tmp99;
  const Scalar _tmp2154 = _tmp666 * landmarks_18_;
  const Scalar _tmp2155 = _tmp844 * landmarks_18_;
  const Scalar _tmp2156 = _tmp141 * _tmp2155 - _tmp151 * _tmp2154;
  const Scalar _tmp2157 = _tmp2153 * _tmp783 + _tmp2156 * _tmp792;
  const Scalar _tmp2158 = _tmp2153 * _tmp675 + _tmp2157 * _tmp899 - _tmp2157 * _tmp900;
  const Scalar _tmp2159 = _tmp1061 * landmarks_14_;
  const Scalar _tmp2160 = _tmp551 * landmarks_14_;
  const Scalar _tmp2161 = _tmp141 * _tmp2159 - _tmp2160 * _tmp99;
  const Scalar _tmp2162 = _tmp1067 * landmarks_14_;
  const Scalar _tmp2163 = _tmp554 * landmarks_14_;
  const Scalar _tmp2164 = _tmp141 * _tmp2162 - _tmp151 * _tmp2163;
  const Scalar _tmp2165 = _tmp1065 * _tmp2161 + _tmp1071 * _tmp2164;
  const Scalar _tmp2166 = -_tmp1075 * _tmp2165 + _tmp1077 * _tmp2165 + _tmp2164 * _tmp563;
  const Scalar _tmp2167 = -_tmp1150 * _tmp2165 + _tmp1151 * _tmp2165 + _tmp2161 * _tmp563;
  const Scalar _tmp2168 = _tmp526 * landmarks_13_;
  const Scalar _tmp2169 = _tmp1136 * landmarks_13_;
  const Scalar _tmp2170 = _tmp141 * _tmp2169 - _tmp151 * _tmp2168;
  const Scalar _tmp2171 = _tmp523 * landmarks_13_;
  const Scalar _tmp2172 = _tmp1139 * landmarks_13_;
  const Scalar _tmp2173 = _tmp141 * _tmp2172 - _tmp2171 * _tmp99;
  const Scalar _tmp2174 = _tmp1115 * _tmp2173 + _tmp1116 * _tmp2170;
  const Scalar _tmp2175 = -_tmp1120 * _tmp2174 + _tmp1122 * _tmp2174 + _tmp2170 * _tmp535;
  const Scalar _tmp2176 = _tmp1169 * landmarks_12_;
  const Scalar _tmp2177 = _tmp495 * landmarks_12_;
  const Scalar _tmp2178 = _tmp141 * _tmp2176 - _tmp2177 * _tmp99;
  const Scalar _tmp2179 = _tmp1175 * landmarks_12_;
  const Scalar _tmp2180 = _tmp498 * landmarks_12_;
  const Scalar _tmp2181 = _tmp141 * _tmp2179 - _tmp151 * _tmp2180;
  const Scalar _tmp2182 = _tmp1173 * _tmp2178 + _tmp1179 * _tmp2181;
  const Scalar _tmp2183 = _tmp1183 * _tmp2182 - _tmp1185 * _tmp2182 + _tmp2181 * _tmp507;
  const Scalar _tmp2184 = _tmp1946 * _tmp2182 - _tmp1947 * _tmp2182 + _tmp2178 * _tmp507;
  const Scalar _tmp2185 = _tmp467 * landmarks_11_;
  const Scalar _tmp2186 = _tmp1225 * landmarks_11_;
  const Scalar _tmp2187 = _tmp141 * _tmp2186 - _tmp2185 * _tmp99;
  const Scalar _tmp2188 = _tmp1229 * landmarks_11_;
  const Scalar _tmp2189 = _tmp470 * landmarks_11_;
  const Scalar _tmp2190 = _tmp141 * _tmp2188 - _tmp151 * _tmp2189;
  const Scalar _tmp2191 = _tmp1227 * _tmp2187 + _tmp1233 * _tmp2190;
  const Scalar _tmp2192 = -_tmp1237 * _tmp2191 + _tmp1239 * _tmp2191 + _tmp2187 * _tmp479;
  const Scalar _tmp2193 = _tmp439 * landmarks_10_;
  const Scalar _tmp2194 = _tmp1620 * landmarks_10_;
  const Scalar _tmp2195 = _tmp141 * _tmp2194 - _tmp2193 * _tmp99;
  const Scalar _tmp2196 = _tmp442 * landmarks_10_;
  const Scalar _tmp2197 = _tmp1626 * landmarks_10_;
  const Scalar _tmp2198 = _tmp141 * _tmp2197 - _tmp151 * _tmp2196;
  const Scalar _tmp2199 = _tmp1622 * _tmp2195 + _tmp1628 * _tmp2198;
  const Scalar _tmp2200 = -_tmp1632 * _tmp2199 + _tmp1634 * _tmp2199 + _tmp2195 * _tmp451;
  const Scalar _tmp2201 = _tmp1707 * landmarks_2_;
  const Scalar _tmp2202 = _tmp1711 * _tmp2201;
  const Scalar _tmp2203 = _tmp215 * landmarks_2_;
  const Scalar _tmp2204 = _tmp141 * _tmp2202 - _tmp2203 * _tmp99;
  const Scalar _tmp2205 = _tmp218 * landmarks_2_;
  const Scalar _tmp2206 = _tmp1709 * _tmp2201;
  const Scalar _tmp2207 = _tmp141 * _tmp2206 - _tmp151 * _tmp2205;
  const Scalar _tmp2208 = _tmp1715 * _tmp2204 + _tmp1716 * _tmp2207;
  const Scalar _tmp2209 = _tmp1720 * _tmp2208 - _tmp1722 * _tmp2208 + _tmp2207 * _tmp227;
  const Scalar _tmp2210 = -_tmp1158 * _tmp2174 + _tmp1159 * _tmp2174 + _tmp2173 * _tmp535;
  const Scalar _tmp2211 = _tmp1753 * landmarks_3_;
  const Scalar _tmp2212 = _tmp243 * landmarks_3_;
  const Scalar _tmp2213 = _tmp141 * _tmp2211 - _tmp2212 * _tmp99;
  const Scalar _tmp2214 = _tmp1759 * landmarks_3_;
  const Scalar _tmp2215 = _tmp246 * landmarks_3_;
  const Scalar _tmp2216 = _tmp141 * _tmp2214 - _tmp151 * _tmp2215;
  const Scalar _tmp2217 = _tmp1757 * _tmp2213 + _tmp1763 * _tmp2216;
  const Scalar _tmp2218 = _tmp1869 * _tmp2217 - _tmp1870 * _tmp2217 + _tmp2216 * _tmp255;
  const Scalar _tmp2219 = _tmp1767 * _tmp2217 - _tmp1770 * _tmp2217 + _tmp2213 * _tmp255;
  const Scalar _tmp2220 = _tmp2121 * _tmp703 + _tmp2122 * _tmp869 - _tmp2122 * _tmp871;
  const Scalar _tmp2221 = _tmp1814 * _tmp2208 - _tmp1815 * _tmp2208 + _tmp2204 * _tmp227;
  const Scalar _tmp2222 = _tmp1877 * _tmp2199 - _tmp1878 * _tmp2199 + _tmp2198 * _tmp451;
  const Scalar _tmp2223 = _tmp1508 * landmarks_1_;
  const Scalar _tmp2224 = _tmp187 * landmarks_1_;
  const Scalar _tmp2225 = _tmp141 * _tmp2223 - _tmp2224 * _tmp99;
  const Scalar _tmp2226 = _tmp1514 * landmarks_1_;
  const Scalar _tmp2227 = _tmp190 * landmarks_1_;
  const Scalar _tmp2228 = _tmp141 * _tmp2226 - _tmp151 * _tmp2227;
  const Scalar _tmp2229 = _tmp1512 * _tmp2225 + _tmp1518 * _tmp2228;
  const Scalar _tmp2230 = -_tmp1522 * _tmp2229 + _tmp1524 * _tmp2229 + _tmp199 * _tmp2225;
  const Scalar _tmp2231 = _tmp302 * landmarks_5_;
  const Scalar _tmp2232 = _tmp1837 * landmarks_5_;
  const Scalar _tmp2233 = _tmp141 * _tmp2232 - _tmp151 * _tmp2231;
  const Scalar _tmp2234 = _tmp1828 * landmarks_5_;
  const Scalar _tmp2235 = _tmp299 * landmarks_5_;
  const Scalar _tmp2236 = _tmp141 * _tmp2234 - _tmp2235 * _tmp99;
  const Scalar _tmp2237 = _tmp1833 * _tmp2236 + _tmp1839 * _tmp2233;
  const Scalar _tmp2238 = _tmp1962 * _tmp2237 - _tmp1963 * _tmp2237 + _tmp2233 * _tmp311;
  const Scalar _tmp2239 = _tmp147 * landmarks_0_;
  const Scalar _tmp2240 = _tmp1367 * landmarks_0_;
  const Scalar _tmp2241 = _tmp141 * _tmp2240 - _tmp2239 * _tmp99;
  const Scalar _tmp2242 = _tmp154 * landmarks_0_;
  const Scalar _tmp2243 = _tmp1373 * landmarks_0_;
  const Scalar _tmp2244 = _tmp141 * _tmp2243 - _tmp151 * _tmp2242;
  const Scalar _tmp2245 = _tmp1369 * _tmp2241 + _tmp1375 * _tmp2244;
  const Scalar _tmp2246 = -_tmp1379 * _tmp2245 + _tmp1381 * _tmp2245 + _tmp171 * _tmp2244;
  const Scalar _tmp2247 = _tmp1843 * _tmp2237 - _tmp1845 * _tmp2237 + _tmp2236 * _tmp311;
  const Scalar _tmp2248 = _tmp411 * landmarks_9_;
  const Scalar _tmp2249 = _tmp1268 * landmarks_9_;
  const Scalar _tmp2250 = _tmp141 * _tmp2249;
  const Scalar _tmp2251 = _tmp1265 * _tmp2250 - _tmp2248 * _tmp99;
  const Scalar _tmp2252 = _tmp414 * landmarks_9_;
  const Scalar _tmp2253 = _tmp1272 * _tmp2250 - _tmp151 * _tmp2252;
  const Scalar _tmp2254 = _tmp1271 * _tmp2251 + _tmp1276 * _tmp2253;
  const Scalar _tmp2255 = -_tmp1280 * _tmp2254 + _tmp1282 * _tmp2254 + _tmp2253 * _tmp423;
  const Scalar _tmp2256 = priors_1_0_weight / (_tmp80 * _tmp80);
  const Scalar _tmp2257 = _tmp1975 * landmarks_6_;
  const Scalar _tmp2258 = _tmp327 * landmarks_6_;
  const Scalar _tmp2259 = _tmp141 * _tmp2257 - _tmp2258 * _tmp99;
  const Scalar _tmp2260 = _tmp330 * landmarks_6_;
  const Scalar _tmp2261 = _tmp1983 * landmarks_6_;
  const Scalar _tmp2262 = _tmp141 * _tmp2261 - _tmp151 * _tmp2260;
  const Scalar _tmp2263 = _tmp1979 * _tmp2259 + _tmp1985 * _tmp2262;
  const Scalar _tmp2264 = _tmp2016 * _tmp2263 - _tmp2017 * _tmp2263 + _tmp2262 * _tmp339;
  const Scalar _tmp2265 = _tmp2156 * _tmp675 + _tmp2157 * _tmp797 - _tmp2157 * _tmp799;
  const Scalar _tmp2266 = _tmp1409 * _tmp2245 - _tmp1411 * _tmp2245 + _tmp171 * _tmp2241;
  const Scalar _tmp2267 = -_tmp1806 * _tmp2191 + _tmp1807 * _tmp2191 + _tmp2190 * _tmp479;
  const Scalar _tmp2268 = _tmp1548 * _tmp2229;
  const Scalar _tmp2269 = -_tmp1520 * _tmp2268 + _tmp1523 * _tmp2268 + _tmp199 * _tmp2228;
  const Scalar _tmp2270 = _tmp1668 * landmarks_4_;
  const Scalar _tmp2271 = _tmp271 * landmarks_4_;
  const Scalar _tmp2272 = _tmp141 * _tmp2270 - _tmp2271 * _tmp99;
  const Scalar _tmp2273 = _tmp1663 * landmarks_4_;
  const Scalar _tmp2274 = _tmp274 * landmarks_4_;
  const Scalar _tmp2275 = _tmp141 * _tmp2273 - _tmp151 * _tmp2274;
  const Scalar _tmp2276 = _tmp1672 * _tmp2272 + _tmp1673 * _tmp2275;
  const Scalar _tmp2277 = -_tmp1796 * _tmp2276 + _tmp1797 * _tmp2276 + _tmp2272 * _tmp283;
  const Scalar _tmp2278 = -_tmp1677 * _tmp2276 + _tmp1679 * _tmp2276 + _tmp2275 * _tmp283;
  const Scalar _tmp2279 = _tmp355 * landmarks_7_;
  const Scalar _tmp2280 = _tmp1892 * landmarks_7_;
  const Scalar _tmp2281 = _tmp141 * _tmp2280 - _tmp2279 * _tmp99;
  const Scalar _tmp2282 = _tmp1896 * landmarks_7_;
  const Scalar _tmp2283 = _tmp358 * landmarks_7_;
  const Scalar _tmp2284 = _tmp141 * _tmp2282 - _tmp151 * _tmp2283;
  const Scalar _tmp2285 = _tmp1894 * _tmp2281 + _tmp1900 * _tmp2284;
  const Scalar _tmp2286 = -_tmp1904 * _tmp2285 + _tmp1927 * _tmp2285 + _tmp2281 * _tmp367;
  const Scalar _tmp2287 = -_tmp1936 * _tmp2285 + _tmp1937 * _tmp2285 + _tmp2284 * _tmp367;
  const Scalar _tmp2288 = _tmp1989 * _tmp2263 - _tmp1991 * _tmp2263 + _tmp2259 * _tmp339;
  const Scalar _tmp2289 = _tmp383 * landmarks_8_;
  const Scalar _tmp2290 = _tmp141 * landmarks_8_;
  const Scalar _tmp2291 = _tmp1331 * _tmp2290 - _tmp2289 * _tmp99;
  const Scalar _tmp2292 = _tmp386 * landmarks_8_;
  const Scalar _tmp2293 = _tmp1333 * _tmp2290 - _tmp151 * _tmp2292;
  const Scalar _tmp2294 = _tmp1313 * _tmp2291 + _tmp1318 * _tmp2293;
  const Scalar _tmp2295 = _tmp1322 * _tmp2294 - _tmp1324 * _tmp2294 + _tmp2291 * _tmp395;
  const Scalar _tmp2296 = _tmp1351 * _tmp2294;
  const Scalar _tmp2297 = _tmp1321 * _tmp2296 - _tmp1323 * _tmp2296 + _tmp2293 * _tmp395;
  const Scalar _tmp2298 = priors_0_1_weight / (_tmp43 * _tmp43);
  const Scalar _tmp2299 = _tmp1953 * _tmp2254;
  const Scalar _tmp2300 = -_tmp1278 * _tmp2299 + _tmp1281 * _tmp2299 + _tmp2251 * _tmp423;
  const Scalar _tmp2301 = _tmp140 * _tmp2119 - _tmp2120 * _tmp96;
  const Scalar _tmp2302 = _tmp140 * _tmp2117 - _tmp150 * _tmp2116;
  const Scalar _tmp2303 = _tmp2301 * _tmp859 + _tmp2302 * _tmp865;
  const Scalar _tmp2304 = _tmp1556 * _tmp2303;
  const Scalar _tmp2305 = _tmp2302 * _tmp703 + _tmp2304 * _tmp868 - _tmp2304 * _tmp870;
  const Scalar _tmp2306 = _tmp140 * landmarks_17_;
  const Scalar _tmp2307 = -_tmp150 * _tmp2124 + _tmp2306 * _tmp921;
  const Scalar _tmp2308 = -_tmp2127 * _tmp96 + _tmp2306 * _tmp915;
  const Scalar _tmp2309 = _tmp2307 * _tmp923 + _tmp2308 * _tmp917;
  const Scalar _tmp2310 = -_tmp1211 * _tmp2309 + _tmp1212 * _tmp2309 + _tmp2307 * _tmp647;
  const Scalar _tmp2311 = _tmp2308 * _tmp647 - _tmp2309 * _tmp927 + _tmp2309 * _tmp929;
  const Scalar _tmp2312 = _tmp140 * _tmp2152 - _tmp2151 * _tmp96;
  const Scalar _tmp2313 = _tmp140 * _tmp2155 - _tmp150 * _tmp2154;
  const Scalar _tmp2314 = _tmp2312 * _tmp783 + _tmp2313 * _tmp792;
  const Scalar _tmp2315 = _tmp2313 * _tmp675 + _tmp2314 * _tmp797 - _tmp2314 * _tmp799;
  const Scalar _tmp2316 = _tmp140 * _tmp2136 - _tmp2135 * _tmp96;
  const Scalar _tmp2317 = _tmp140 * _tmp2132 - _tmp150 * _tmp2133;
  const Scalar _tmp2318 = _tmp2316 * _tmp971 + _tmp2317 * _tmp972;
  const Scalar _tmp2319 = _tmp2317 * _tmp619 + _tmp2318 * _tmp976 - _tmp2318 * _tmp978;
  const Scalar _tmp2320 = _tmp2312 * _tmp675 + _tmp2314 * _tmp899 - _tmp2314 * _tmp900;
  const Scalar _tmp2321 = _tmp140 * _tmp2143 - _tmp2142 * _tmp96;
  const Scalar _tmp2322 = _tmp140 * _tmp2145 - _tmp150 * _tmp2146;
  const Scalar _tmp2323 = _tmp1017 * _tmp2321 + _tmp1018 * _tmp2322;
  const Scalar _tmp2324 = _tmp1023 * _tmp2323 - _tmp1026 * _tmp2323 + _tmp2322 * _tmp591;
  const Scalar _tmp2325 = _tmp140 * _tmp2159 - _tmp2160 * _tmp96;
  const Scalar _tmp2326 = _tmp140 * _tmp2162 - _tmp150 * _tmp2163;
  const Scalar _tmp2327 = _tmp1065 * _tmp2325 + _tmp1071 * _tmp2326;
  const Scalar _tmp2328 = _tmp1076 * _tmp2327;
  const Scalar _tmp2329 = _tmp1149 * _tmp2328 - _tmp1150 * _tmp2327 + _tmp2325 * _tmp563;
  const Scalar _tmp2330 = _tmp140 * _tmp2172 - _tmp2171 * _tmp96;
  const Scalar _tmp2331 = _tmp140 * _tmp2169 - _tmp150 * _tmp2168;
  const Scalar _tmp2332 = _tmp1115 * _tmp2330 + _tmp1116 * _tmp2331;
  const Scalar _tmp2333 = _tmp1118 * _tmp2332;
  const Scalar _tmp2334 = -_tmp1157 * _tmp2333 + _tmp1159 * _tmp2332 + _tmp2330 * _tmp535;
  const Scalar _tmp2335 = _tmp140 * _tmp2176 - _tmp2177 * _tmp96;
  const Scalar _tmp2336 = _tmp140 * _tmp2179 - _tmp150 * _tmp2180;
  const Scalar _tmp2337 = _tmp1173 * _tmp2335 + _tmp1179 * _tmp2336;
  const Scalar _tmp2338 = _tmp1945 * _tmp2337;
  const Scalar _tmp2339 = _tmp1182 * _tmp2338 - _tmp1184 * _tmp2338 + _tmp2335 * _tmp507;
  const Scalar _tmp2340 = _tmp2301 * _tmp703 + _tmp2303 * _tmp869 - _tmp2303 * _tmp871;
  const Scalar _tmp2341 = _tmp1567 * _tmp2318 - _tmp1568 * _tmp2318 + _tmp2316 * _tmp619;
  const Scalar _tmp2342 = _tmp140 * _tmp2194 - _tmp2193 * _tmp96;
  const Scalar _tmp2343 = _tmp140 * _tmp2197 - _tmp150 * _tmp2196;
  const Scalar _tmp2344 = _tmp1622 * _tmp2342 + _tmp1628 * _tmp2343;
  const Scalar _tmp2345 = _tmp1877 * _tmp2344 - _tmp1878 * _tmp2344 + _tmp2343 * _tmp451;
  const Scalar _tmp2346 = _tmp1573 * _tmp2323 - _tmp1574 * _tmp2323 + _tmp2321 * _tmp591;
  const Scalar _tmp2347 = _tmp1183 * _tmp2337 - _tmp1185 * _tmp2337 + _tmp2336 * _tmp507;
  const Scalar _tmp2348 = -_tmp1632 * _tmp2344 + _tmp1634 * _tmp2344 + _tmp2342 * _tmp451;
  const Scalar _tmp2349 = _tmp140 * _tmp2211 - _tmp2212 * _tmp96;
  const Scalar _tmp2350 = _tmp140 * _tmp2214 - _tmp150 * _tmp2215;
  const Scalar _tmp2351 = _tmp1757 * _tmp2349 + _tmp1763 * _tmp2350;
  const Scalar _tmp2352 = _tmp1869 * _tmp2351 - _tmp1870 * _tmp2351 + _tmp2350 * _tmp255;
  const Scalar _tmp2353 = _tmp1767 * _tmp2351 - _tmp1770 * _tmp2351 + _tmp2349 * _tmp255;
  const Scalar _tmp2354 = _tmp140 * _tmp2257 - _tmp2258 * _tmp96;
  const Scalar _tmp2355 = _tmp140 * _tmp2261 - _tmp150 * _tmp2260;
  const Scalar _tmp2356 = _tmp1979 * _tmp2354 + _tmp1985 * _tmp2355;
  const Scalar _tmp2357 = _tmp1989 * _tmp2356 - _tmp1991 * _tmp2356 + _tmp2354 * _tmp339;
  const Scalar _tmp2358 = _tmp140 * _tmp2206 - _tmp150 * _tmp2205;
  const Scalar _tmp2359 = _tmp140 * _tmp2202 - _tmp2203 * _tmp96;
  const Scalar _tmp2360 = _tmp1715 * _tmp2359 + _tmp1716 * _tmp2358;
  const Scalar _tmp2361 = _tmp1720 * _tmp2360 - _tmp1722 * _tmp2360 + _tmp227 * _tmp2358;
  const Scalar _tmp2362 = _tmp140 * _tmp2273 - _tmp150 * _tmp2274;
  const Scalar _tmp2363 = _tmp140 * _tmp2270 - _tmp2271 * _tmp96;
  const Scalar _tmp2364 = _tmp1672 * _tmp2363 + _tmp1673 * _tmp2362;
  const Scalar _tmp2365 = _tmp1676 * _tmp2364;
  const Scalar _tmp2366 = -_tmp1675 * _tmp2365 + _tmp1679 * _tmp2364 + _tmp2362 * _tmp283;
  const Scalar _tmp2367 = _tmp140 * _tmp2223 - _tmp2224 * _tmp96;
  const Scalar _tmp2368 = _tmp140 * _tmp2226 - _tmp150 * _tmp2227;
  const Scalar _tmp2369 = _tmp1512 * _tmp2367 + _tmp1518 * _tmp2368;
  const Scalar _tmp2370 = -_tmp1549 * _tmp2369 + _tmp1550 * _tmp2369 + _tmp199 * _tmp2368;
  const Scalar _tmp2371 = _tmp140 * _tmp2186 - _tmp2185 * _tmp96;
  const Scalar _tmp2372 = _tmp140 * _tmp2188 - _tmp150 * _tmp2189;
  const Scalar _tmp2373 = _tmp1227 * _tmp2371 + _tmp1233 * _tmp2372;
  const Scalar _tmp2374 = -_tmp1237 * _tmp2373 + _tmp1239 * _tmp2373 + _tmp2371 * _tmp479;
  const Scalar _tmp2375 = _tmp140 * _tmp2249;
  const Scalar _tmp2376 = _tmp1265 * _tmp2375 - _tmp2248 * _tmp96;
  const Scalar _tmp2377 = _tmp1272 * _tmp2375 - _tmp150 * _tmp2252;
  const Scalar _tmp2378 = _tmp1271 * _tmp2376 + _tmp1276 * _tmp2377;
  const Scalar _tmp2379 = -_tmp1280 * _tmp2378 + _tmp1282 * _tmp2378 + _tmp2377 * _tmp423;
  const Scalar _tmp2380 = priors_0_1_weight / (_tmp47 * _tmp47);
  const Scalar _tmp2381 = priors_1_0_weight / (_tmp83 * _tmp83);
  const Scalar _tmp2382 = _tmp1331 * landmarks_8_;
  const Scalar _tmp2383 = _tmp140 * _tmp2382 - _tmp2289 * _tmp96;
  const Scalar _tmp2384 = _tmp1333 * landmarks_8_;
  const Scalar _tmp2385 = _tmp140 * _tmp2384 - _tmp150 * _tmp2292;
  const Scalar _tmp2386 = _tmp1313 * _tmp2383 + _tmp1318 * _tmp2385;
  const Scalar _tmp2387 = _tmp1322 * _tmp2386 - _tmp1324 * _tmp2386 + _tmp2383 * _tmp395;
  const Scalar _tmp2388 = _tmp1073 * _tmp2328 - _tmp1075 * _tmp2327 + _tmp2326 * _tmp563;
  const Scalar _tmp2389 = -_tmp1806 * _tmp2373 + _tmp1807 * _tmp2373 + _tmp2372 * _tmp479;
  const Scalar _tmp2390 = _tmp140 * landmarks_0_;
  const Scalar _tmp2391 = _tmp1367 * _tmp2390 - _tmp2239 * _tmp96;
  const Scalar _tmp2392 = _tmp1373 * _tmp2390 - _tmp150 * _tmp2242;
  const Scalar _tmp2393 = _tmp1369 * _tmp2391 + _tmp1375 * _tmp2392;
  const Scalar _tmp2394 = _tmp1377 * _tmp2393;
  const Scalar _tmp2395 = -_tmp1378 * _tmp2394 + _tmp1380 * _tmp2394 + _tmp171 * _tmp2392;
  const Scalar _tmp2396 = -_tmp1522 * _tmp2369 + _tmp1524 * _tmp2369 + _tmp199 * _tmp2367;
  const Scalar _tmp2397 = _tmp1814 * _tmp2360 - _tmp1815 * _tmp2360 + _tmp227 * _tmp2359;
  const Scalar _tmp2398 = _tmp1409 * _tmp2393 - _tmp1411 * _tmp2393 + _tmp171 * _tmp2391;
  const Scalar _tmp2399 = -_tmp1795 * _tmp2365 + _tmp1797 * _tmp2364 + _tmp2363 * _tmp283;
  const Scalar _tmp2400 = _tmp140 * _tmp2234 - _tmp2235 * _tmp96;
  const Scalar _tmp2401 = _tmp140 * _tmp2232 - _tmp150 * _tmp2231;
  const Scalar _tmp2402 = _tmp1833 * _tmp2400 + _tmp1839 * _tmp2401;
  const Scalar _tmp2403 = _tmp1843 * _tmp2402 - _tmp1845 * _tmp2402 + _tmp2400 * _tmp311;
  const Scalar _tmp2404 = -_tmp1119 * _tmp2333 + _tmp1122 * _tmp2332 + _tmp2331 * _tmp535;
  const Scalar _tmp2405 = _tmp140 * _tmp2280 - _tmp2279 * _tmp96;
  const Scalar _tmp2406 = _tmp140 * _tmp2282 - _tmp150 * _tmp2283;
  const Scalar _tmp2407 = _tmp1894 * _tmp2405 + _tmp1900 * _tmp2406;
  const Scalar _tmp2408 = -_tmp1904 * _tmp2407 + _tmp1927 * _tmp2407 + _tmp2405 * _tmp367;
  const Scalar _tmp2409 = _tmp1962 * _tmp2402 - _tmp1963 * _tmp2402 + _tmp2401 * _tmp311;
  const Scalar _tmp2410 = -_tmp1954 * _tmp2378 + _tmp1955 * _tmp2378 + _tmp2376 * _tmp423;
  const Scalar _tmp2411 = _tmp2016 * _tmp2356 - _tmp2017 * _tmp2356 + _tmp2355 * _tmp339;
  const Scalar _tmp2412 = -_tmp1936 * _tmp2407 + _tmp1937 * _tmp2407 + _tmp2406 * _tmp367;
  const Scalar _tmp2413 = _tmp1352 * _tmp2386 - _tmp1353 * _tmp2386 + _tmp2385 * _tmp395;
  const Scalar _tmp2414 = _tmp137 * _tmp2119 - _tmp2120 * _tmp92;
  const Scalar _tmp2415 = _tmp137 * _tmp2117 - _tmp149 * _tmp2116;
  const Scalar _tmp2416 = _tmp2414 * _tmp859 + _tmp2415 * _tmp865;
  const Scalar _tmp2417 = _tmp2416 * _tmp870;
  const Scalar _tmp2418 = -_tmp1556 * _tmp2417 + _tmp1557 * _tmp2416 + _tmp2415 * _tmp703;
  const Scalar _tmp2419 = _tmp2414 * _tmp703 + _tmp2416 * _tmp869 - _tmp2417 * _tmp867;
  const Scalar _tmp2420 = _tmp137 * _tmp2152 - _tmp2151 * _tmp92;
  const Scalar _tmp2421 = _tmp137 * _tmp2155 - _tmp149 * _tmp2154;
  const Scalar _tmp2422 = _tmp2420 * _tmp783 + _tmp2421 * _tmp792;
  const Scalar _tmp2423 = _tmp2421 * _tmp675 + _tmp2422 * _tmp797 - _tmp2422 * _tmp799;
  const Scalar _tmp2424 = _tmp137 * landmarks_17_;
  const Scalar _tmp2425 = -_tmp2127 * _tmp92 + _tmp2424 * _tmp915;
  const Scalar _tmp2426 = -_tmp149 * _tmp2124 + _tmp2424 * _tmp921;
  const Scalar _tmp2427 = _tmp2425 * _tmp917 + _tmp2426 * _tmp923;
  const Scalar _tmp2428 = _tmp2425 * _tmp647 - _tmp2427 * _tmp927 + _tmp2427 * _tmp929;
  const Scalar _tmp2429 = _tmp137 * _tmp2132 - _tmp149 * _tmp2133;
  const Scalar _tmp2430 = _tmp137 * _tmp2136 - _tmp2135 * _tmp92;
  const Scalar _tmp2431 = _tmp2429 * _tmp972 + _tmp2430 * _tmp971;
  const Scalar _tmp2432 = _tmp2429 * _tmp619 + _tmp2431 * _tmp976 - _tmp2431 * _tmp978;
  const Scalar _tmp2433 = _tmp137 * _tmp2143 - _tmp2142 * _tmp92;
  const Scalar _tmp2434 = _tmp137 * _tmp2145 - _tmp149 * _tmp2146;
  const Scalar _tmp2435 = _tmp1017 * _tmp2433 + _tmp1018 * _tmp2434;
  const Scalar _tmp2436 = _tmp1023 * _tmp2435 - _tmp1026 * _tmp2435 + _tmp2434 * _tmp591;
  const Scalar _tmp2437 = _tmp137 * _tmp2172 - _tmp2171 * _tmp92;
  const Scalar _tmp2438 = _tmp137 * _tmp2169 - _tmp149 * _tmp2168;
  const Scalar _tmp2439 = _tmp1115 * _tmp2437 + _tmp1116 * _tmp2438;
  const Scalar _tmp2440 = _tmp1157 * _tmp2439;
  const Scalar _tmp2441 = -_tmp1118 * _tmp2440 + _tmp1121 * _tmp2440 + _tmp2437 * _tmp535;
  const Scalar _tmp2442 = _tmp137 * _tmp2176 - _tmp2177 * _tmp92;
  const Scalar _tmp2443 = _tmp137 * _tmp2179 - _tmp149 * _tmp2180;
  const Scalar _tmp2444 = _tmp1173 * _tmp2442 + _tmp1179 * _tmp2443;
  const Scalar _tmp2445 = _tmp1946 * _tmp2444 - _tmp1947 * _tmp2444 + _tmp2442 * _tmp507;
  const Scalar _tmp2446 = _tmp2420 * _tmp675 + _tmp2422 * _tmp899 - _tmp2422 * _tmp900;
  const Scalar _tmp2447 = _tmp137 * _tmp2186 - _tmp2185 * _tmp92;
  const Scalar _tmp2448 = _tmp137 * _tmp2188 - _tmp149 * _tmp2189;
  const Scalar _tmp2449 = _tmp1227 * _tmp2447 + _tmp1233 * _tmp2448;
  const Scalar _tmp2450 = -_tmp1237 * _tmp2449 + _tmp1239 * _tmp2449 + _tmp2447 * _tmp479;
  const Scalar _tmp2451 = _tmp1567 * _tmp2431 - _tmp1568 * _tmp2431 + _tmp2430 * _tmp619;
  const Scalar _tmp2452 = -_tmp1806 * _tmp2449 + _tmp1807 * _tmp2449 + _tmp2448 * _tmp479;
  const Scalar _tmp2453 = _tmp137 * _tmp2194 - _tmp2193 * _tmp92;
  const Scalar _tmp2454 = _tmp137 * _tmp2197 - _tmp149 * _tmp2196;
  const Scalar _tmp2455 = _tmp1622 * _tmp2453 + _tmp1628 * _tmp2454;
  const Scalar _tmp2456 = _tmp1877 * _tmp2455 - _tmp1878 * _tmp2455 + _tmp2454 * _tmp451;
  const Scalar _tmp2457 = _tmp137 * _tmp2159 - _tmp2160 * _tmp92;
  const Scalar _tmp2458 = _tmp137 * _tmp2162 - _tmp149 * _tmp2163;
  const Scalar _tmp2459 = _tmp1065 * _tmp2457 + _tmp1071 * _tmp2458;
  const Scalar _tmp2460 = -_tmp1150 * _tmp2459 + _tmp1151 * _tmp2459 + _tmp2457 * _tmp563;
  const Scalar _tmp2461 = -_tmp1632 * _tmp2455 + _tmp1634 * _tmp2455 + _tmp2453 * _tmp451;
  const Scalar _tmp2462 = _tmp137 * _tmp2211 - _tmp2212 * _tmp92;
  const Scalar _tmp2463 = _tmp137 * _tmp2214 - _tmp149 * _tmp2215;
  const Scalar _tmp2464 = _tmp1757 * _tmp2462 + _tmp1763 * _tmp2463;
  const Scalar _tmp2465 = _tmp1869 * _tmp2464 - _tmp1870 * _tmp2464 + _tmp2463 * _tmp255;
  const Scalar _tmp2466 = _tmp137 * _tmp2223 - _tmp2224 * _tmp92;
  const Scalar _tmp2467 = _tmp137 * _tmp2226 - _tmp149 * _tmp2227;
  const Scalar _tmp2468 = _tmp1512 * _tmp2466 + _tmp1518 * _tmp2467;
  const Scalar _tmp2469 = -_tmp1522 * _tmp2468 + _tmp1524 * _tmp2468 + _tmp199 * _tmp2466;
  const Scalar _tmp2470 = _tmp137 * _tmp2202 - _tmp2203 * _tmp92;
  const Scalar _tmp2471 = _tmp137 * _tmp2206 - _tmp149 * _tmp2205;
  const Scalar _tmp2472 = _tmp1715 * _tmp2470 + _tmp1716 * _tmp2471;
  const Scalar _tmp2473 = _tmp1814 * _tmp2472 - _tmp1815 * _tmp2472 + _tmp227 * _tmp2470;
  const Scalar _tmp2474 = priors_0_1_weight / (_tmp51 * _tmp51);
  const Scalar _tmp2475 = -_tmp1211 * _tmp2427 + _tmp1212 * _tmp2427 + _tmp2426 * _tmp647;
  const Scalar _tmp2476 = priors_1_0_weight / (_tmp86 * _tmp86);
  const Scalar _tmp2477 = _tmp137 * _tmp2273 - _tmp149 * _tmp2274;
  const Scalar _tmp2478 = _tmp137 * _tmp2270 - _tmp2271 * _tmp92;
  const Scalar _tmp2479 = _tmp1672 * _tmp2478 + _tmp1673 * _tmp2477;
  const Scalar _tmp2480 = -_tmp1677 * _tmp2479 + _tmp1679 * _tmp2479 + _tmp2477 * _tmp283;
  const Scalar _tmp2481 = _tmp137 * _tmp2282 - _tmp149 * _tmp2283;
  const Scalar _tmp2482 = _tmp137 * _tmp2280 - _tmp2279 * _tmp92;
  const Scalar _tmp2483 = (1.0 / 2.0) * _tmp1894 * _tmp2482 + (1.0 / 2.0) * _tmp1900 * _tmp2481;
  const Scalar _tmp2484 = _tmp2483 * _tmp359;
  const Scalar _tmp2485 = -_tmp1902 * _tmp2484 + _tmp1939 * _tmp2484 + _tmp2481 * _tmp367;
  const Scalar _tmp2486 = _tmp1767 * _tmp2464 - _tmp1770 * _tmp2464 + _tmp2462 * _tmp255;
  const Scalar _tmp2487 = -_tmp1549 * _tmp2468 + _tmp1550 * _tmp2468 + _tmp199 * _tmp2467;
  const Scalar _tmp2488 = _tmp137 * _tmp2257 - _tmp2258 * _tmp92;
  const Scalar _tmp2489 = _tmp137 * _tmp2261 - _tmp149 * _tmp2260;
  const Scalar _tmp2490 = _tmp1979 * _tmp2488 + _tmp1985 * _tmp2489;
  const Scalar _tmp2491 = _tmp2016 * _tmp2490 - _tmp2017 * _tmp2490 + _tmp2489 * _tmp339;
  const Scalar _tmp2492 = _tmp1720 * _tmp2472 - _tmp1722 * _tmp2472 + _tmp227 * _tmp2471;
  const Scalar _tmp2493 = _tmp137 * _tmp2240 - _tmp2239 * _tmp92;
  const Scalar _tmp2494 = _tmp137 * _tmp2243 - _tmp149 * _tmp2242;
  const Scalar _tmp2495 = _tmp1369 * _tmp2493 + _tmp1375 * _tmp2494;
  const Scalar _tmp2496 = _tmp1409 * _tmp2495 - _tmp1411 * _tmp2495 + _tmp171 * _tmp2493;
  const Scalar _tmp2497 = -_tmp1379 * _tmp2495 + _tmp1381 * _tmp2495 + _tmp171 * _tmp2494;
  const Scalar _tmp2498 = _tmp1183 * _tmp2444 - _tmp1185 * _tmp2444 + _tmp2443 * _tmp507;
  const Scalar _tmp2499 = _tmp137 * _tmp2232 - _tmp149 * _tmp2231;
  const Scalar _tmp2500 = _tmp137 * _tmp2234 - _tmp2235 * _tmp92;
  const Scalar _tmp2501 = _tmp1833 * _tmp2500 + _tmp1839 * _tmp2499;
  const Scalar _tmp2502 = _tmp1962 * _tmp2501 - _tmp1963 * _tmp2501 + _tmp2499 * _tmp311;
  const Scalar _tmp2503 = _tmp1573 * _tmp2435 - _tmp1574 * _tmp2435 + _tmp2433 * _tmp591;
  const Scalar _tmp2504 = -_tmp1796 * _tmp2479 + _tmp1797 * _tmp2479 + _tmp2478 * _tmp283;
  const Scalar _tmp2505 = -_tmp1075 * _tmp2459 + _tmp1077 * _tmp2459 + _tmp2458 * _tmp563;
  const Scalar _tmp2506 = _tmp1843 * _tmp2501 - _tmp1845 * _tmp2501 + _tmp2500 * _tmp311;
  const Scalar _tmp2507 = _tmp1989 * _tmp2490 - _tmp1991 * _tmp2490 + _tmp2488 * _tmp339;
  const Scalar _tmp2508 = -_tmp1120 * _tmp2439 + _tmp1122 * _tmp2439 + _tmp2438 * _tmp535;
  const Scalar _tmp2509 = -_tmp1903 * _tmp2483 + _tmp1908 * _tmp2483 + _tmp2482 * _tmp367;
  const Scalar _tmp2510 = _tmp137 * _tmp2382 - _tmp2289 * _tmp92;
  const Scalar _tmp2511 = _tmp137 * _tmp2384 - _tmp149 * _tmp2292;
  const Scalar _tmp2512 = _tmp1313 * _tmp2510 + _tmp1318 * _tmp2511;
  const Scalar _tmp2513 = _tmp1322 * _tmp2512 - _tmp1324 * _tmp2512 + _tmp2510 * _tmp395;
  const Scalar _tmp2514 = _tmp1352 * _tmp2512 - _tmp1353 * _tmp2512 + _tmp2511 * _tmp395;
  const Scalar _tmp2515 = _tmp137 * _tmp2249;
  const Scalar _tmp2516 = _tmp1265 * _tmp2515 - _tmp2248 * _tmp92;
  const Scalar _tmp2517 = _tmp1272 * _tmp2515 - _tmp149 * _tmp2252;
  const Scalar _tmp2518 = _tmp1271 * _tmp2516 + _tmp1276 * _tmp2517;
  const Scalar _tmp2519 = -_tmp1954 * _tmp2518 + _tmp1955 * _tmp2518 + _tmp2516 * _tmp423;
  const Scalar _tmp2520 = -_tmp1280 * _tmp2518 + _tmp1282 * _tmp2518 + _tmp2517 * _tmp423;
  const Scalar _tmp2521 = (matches_0_0_weight * matches_0_0_weight) / (_tmp707 * _tmp707);
  const Scalar _tmp2522 = _tmp100 * _tmp147 - _tmp1367 * _tmp142;
  const Scalar _tmp2523 = _tmp142 * _tmp789;
  const Scalar _tmp2524 = -_tmp1372 * _tmp2523 + _tmp152 * _tmp154;
  const Scalar _tmp2525 = _tmp1369 * _tmp2522 + _tmp1375 * _tmp2524;
  const Scalar _tmp2526 = -_tmp1379 * _tmp2525 + _tmp1381 * _tmp2525 + _tmp171 * _tmp2524;
  const Scalar _tmp2527 = _tmp1409 * _tmp2525 - _tmp1411 * _tmp2525 + _tmp171 * _tmp2522;
  const Scalar _tmp2528 = (matches_0_1_weight * matches_0_1_weight) / (_tmp710 * _tmp710);
  const Scalar _tmp2529 = _tmp142 * _tmp780;
  const Scalar _tmp2530 = _tmp100 * _tmp187 - _tmp1507 * _tmp2529;
  const Scalar _tmp2531 = -_tmp1513 * _tmp2523 + _tmp152 * _tmp190;
  const Scalar _tmp2532 = _tmp1512 * _tmp2530 + _tmp1518 * _tmp2531;
  const Scalar _tmp2533 = -_tmp1549 * _tmp2532 + _tmp1550 * _tmp2532 + _tmp199 * _tmp2531;
  const Scalar _tmp2534 = -_tmp1522 * _tmp2532 + _tmp1524 * _tmp2532 + _tmp199 * _tmp2530;
  const Scalar _tmp2535 = (matches_0_2_weight * matches_0_2_weight) / (_tmp713 * _tmp713);
  const Scalar _tmp2536 = _tmp152 * _tmp218 - _tmp1707 * _tmp217 * _tmp2523;
  const Scalar _tmp2537 = _tmp100 * _views_1_calibration[0];
  const Scalar _tmp2538 = -_tmp1707 * _tmp210 * _tmp2529 + _tmp214 * _tmp2537;
  const Scalar _tmp2539 = _tmp1715 * _tmp2538 + _tmp1716 * _tmp2536;
  const Scalar _tmp2540 = _tmp1720 * _tmp2539 - _tmp1722 * _tmp2539 + _tmp227 * _tmp2536;
  const Scalar _tmp2541 = _tmp1814 * _tmp2539 - _tmp1815 * _tmp2539 + _tmp227 * _tmp2538;
  const Scalar _tmp2542 = (matches_0_3_weight * matches_0_3_weight) / (_tmp716 * _tmp716);
  const Scalar _tmp2543 = -_tmp142 * _tmp1753 + _tmp242 * _tmp2537;
  const Scalar _tmp2544 = _tmp152 * _tmp246 - _tmp1751 * _tmp245 * _tmp2523;
  const Scalar _tmp2545 = (1.0 / 2.0) * _tmp1757 * _tmp2543 + (1.0 / 2.0) * _tmp1763 * _tmp2544;
  const Scalar _tmp2546 = _tmp247 * _tmp2545;
  const Scalar _tmp2547 = _tmp158 * _tmp1765;
  const Scalar _tmp2548 = -_tmp1768 * _tmp2546 + _tmp2544 * _tmp255 + _tmp2546 * _tmp2547;
  const Scalar _tmp2549 = _tmp244 * _tmp2545;
  const Scalar _tmp2550 = -_tmp1768 * _tmp2549 + _tmp2543 * _tmp255 + _tmp2547 * _tmp2549;
  const Scalar _tmp2551 = (matches_0_4_weight * matches_0_4_weight) / (_tmp719 * _tmp719);
  const Scalar _tmp2552 = _tmp152 * _tmp274 - _tmp1661 * _tmp2523 * _tmp273;
  const Scalar _tmp2553 = -_tmp1661 * _tmp2529 * _tmp266 + _tmp2537 * _tmp270;
  const Scalar _tmp2554 = _tmp1672 * _tmp2553 + _tmp1673 * _tmp2552;
  const Scalar _tmp2555 = _tmp1675 * _tmp2554;
  const Scalar _tmp2556 = -_tmp1676 * _tmp2555 + _tmp1678 * _tmp2555 + _tmp2552 * _tmp283;
  const Scalar _tmp2557 = -_tmp1796 * _tmp2554 + _tmp1797 * _tmp2554 + _tmp2553 * _tmp283;
  const Scalar _tmp2558 = (matches_0_5_weight * matches_0_5_weight) / (_tmp722 * _tmp722);
  const Scalar _tmp2559 = _tmp100 * _tmp299 - _tmp1827 * _tmp2529;
  const Scalar _tmp2560 = _tmp152 * _tmp302 - _tmp1836 * _tmp2523;
  const Scalar _tmp2561 = _tmp1833 * _tmp2559 + _tmp1839 * _tmp2560;
  const Scalar _tmp2562 = _tmp1962 * _tmp2561 - _tmp1963 * _tmp2561 + _tmp2560 * _tmp311;
  const Scalar _tmp2563 = _tmp1843 * _tmp2561 - _tmp1845 * _tmp2561 + _tmp2559 * _tmp311;
  const Scalar _tmp2564 = (matches_0_6_weight * matches_0_6_weight) / (_tmp725 * _tmp725);
  const Scalar _tmp2565 = -_tmp1974 * _tmp2529 + _tmp2537 * _tmp326;
  const Scalar _tmp2566 = _tmp152 * _tmp330 - _tmp1973 * _tmp2523 * _tmp329;
  const Scalar _tmp2567 = _tmp1979 * _tmp2565 + _tmp1985 * _tmp2566;
  const Scalar _tmp2568 = _tmp2016 * _tmp2567 - _tmp2017 * _tmp2567 + _tmp2566 * _tmp339;
  const Scalar _tmp2569 = _tmp1989 * _tmp2567 - _tmp1991 * _tmp2567 + _tmp2565 * _tmp339;
  const Scalar _tmp2570 = _tmp152 * _tmp358 - _tmp1895 * _tmp2523;
  const Scalar _tmp2571 = -_tmp1891 * _tmp2529 + _tmp2537 * _tmp354;
  const Scalar _tmp2572 = _tmp1894 * _tmp2571 + _tmp1900 * _tmp2570;
  const Scalar _tmp2573 = -_tmp1936 * _tmp2572 + _tmp1937 * _tmp2572 + _tmp2570 * _tmp367;
  const Scalar _tmp2574 = (matches_0_7_weight * matches_0_7_weight) / (_tmp728 * _tmp728);
  const Scalar _tmp2575 = -_tmp1904 * _tmp2572 + _tmp1927 * _tmp2572 + _tmp2571 * _tmp367;
  const Scalar _tmp2576 = -_tmp1330 * _tmp2529 + _tmp2537 * _tmp382;
  const Scalar _tmp2577 = -_tmp1310 * _tmp2523 * _tmp385 + _tmp152 * _tmp386;
  const Scalar _tmp2578 = _tmp1313 * _tmp2576 + _tmp1318 * _tmp2577;
  const Scalar _tmp2579 = _tmp1352 * _tmp2578 - _tmp1353 * _tmp2578 + _tmp2577 * _tmp395;
  const Scalar _tmp2580 = (matches_0_8_weight * matches_0_8_weight) / (_tmp731 * _tmp731);
  const Scalar _tmp2581 = _tmp1322 * _tmp2578 - _tmp1324 * _tmp2578 + _tmp2576 * _tmp395;
  const Scalar _tmp2582 = (matches_0_9_weight * matches_0_9_weight) / (_tmp734 * _tmp734);
  const Scalar _tmp2583 = _tmp100 * _tmp411 - _tmp1268 * _tmp2529 * _tmp406;
  const Scalar _tmp2584 = -_tmp1268 * _tmp2523 * _tmp413 + _tmp152 * _tmp414;
  const Scalar _tmp2585 = _tmp1271 * _tmp2583 + _tmp1276 * _tmp2584;
  const Scalar _tmp2586 = -_tmp1280 * _tmp2585 + _tmp1282 * _tmp2585 + _tmp2584 * _tmp423;
  const Scalar _tmp2587 = -_tmp1954 * _tmp2585 + _tmp1955 * _tmp2585 + _tmp2583 * _tmp423;
  const Scalar _tmp2588 = (matches_0_10_weight * matches_0_10_weight) / (_tmp737 * _tmp737);
  const Scalar _tmp2589 = _tmp100 * _tmp439 - _tmp1619 * _tmp2529;
  const Scalar _tmp2590 = _tmp152 * _tmp442 - _tmp1625 * _tmp2523;
  const Scalar _tmp2591 = _tmp1622 * _tmp2589 + _tmp1628 * _tmp2590;
  const Scalar _tmp2592 = _tmp1877 * _tmp2591 - _tmp1878 * _tmp2591 + _tmp2590 * _tmp451;
  const Scalar _tmp2593 = -_tmp1632 * _tmp2591 + _tmp1634 * _tmp2591 + _tmp2589 * _tmp451;
  const Scalar _tmp2594 = (matches_0_11_weight * matches_0_11_weight) / (_tmp740 * _tmp740);
  const Scalar _tmp2595 = -_tmp1228 * _tmp2523 + _tmp152 * _tmp470;
  const Scalar _tmp2596 = -_tmp1224 * _tmp2529 + _tmp2537 * _tmp466;
  const Scalar _tmp2597 = _tmp1227 * _tmp2596 + _tmp1233 * _tmp2595;
  const Scalar _tmp2598 = -_tmp1806 * _tmp2597 + _tmp1807 * _tmp2597 + _tmp2595 * _tmp479;
  const Scalar _tmp2599 = -_tmp1237 * _tmp2597 + _tmp1239 * _tmp2597 + _tmp2596 * _tmp479;
  const Scalar _tmp2600 = (matches_0_12_weight * matches_0_12_weight) / (_tmp743 * _tmp743);
  const Scalar _tmp2601 = -_tmp1169 * _tmp142 + _tmp2537 * _tmp494;
  const Scalar _tmp2602 = -_tmp1174 * _tmp2523 + _tmp152 * _tmp498;
  const Scalar _tmp2603 = _tmp1173 * _tmp2601 + _tmp1179 * _tmp2602;
  const Scalar _tmp2604 = _tmp1183 * _tmp2603 - _tmp1185 * _tmp2603 + _tmp2602 * _tmp507;
  const Scalar _tmp2605 = _tmp1946 * _tmp2603 - _tmp1947 * _tmp2603 + _tmp2601 * _tmp507;
  const Scalar _tmp2606 = (matches_0_13_weight * matches_0_13_weight) / (_tmp746 * _tmp746);
  const Scalar _tmp2607 = -_tmp1107 * _tmp2523 * _tmp525 + _tmp152 * _tmp526;
  const Scalar _tmp2608 = -_tmp1107 * _tmp2529 * _tmp518 + _tmp2537 * _tmp522;
  const Scalar _tmp2609 = _tmp1115 * _tmp2608 + _tmp1116 * _tmp2607;
  const Scalar _tmp2610 = -_tmp1120 * _tmp2609 + _tmp1122 * _tmp2609 + _tmp2607 * _tmp535;
  const Scalar _tmp2611 = -_tmp1158 * _tmp2609 + _tmp1159 * _tmp2609 + _tmp2608 * _tmp535;
  const Scalar _tmp2612 = (matches_0_14_weight * matches_0_14_weight) / (_tmp749 * _tmp749);
  const Scalar _tmp2613 = -_tmp1060 * _tmp2529 + _tmp2537 * _tmp550;
  const Scalar _tmp2614 = -_tmp1066 * _tmp2523 + _tmp152 * _tmp554;
  const Scalar _tmp2615 = _tmp1065 * _tmp2613 + _tmp1071 * _tmp2614;
  const Scalar _tmp2616 = -_tmp1075 * _tmp2615 + _tmp1077 * _tmp2615 + _tmp2614 * _tmp563;
  const Scalar _tmp2617 = -_tmp1150 * _tmp2615 + _tmp1151 * _tmp2615 + _tmp2613 * _tmp563;
  const Scalar _tmp2618 = (matches_0_15_weight * matches_0_15_weight) / (_tmp752 * _tmp752);
  const Scalar _tmp2619 = -_tmp1015 * _tmp142 + _tmp2537 * _tmp578;
  const Scalar _tmp2620 = -_tmp1006 * _tmp2523 * _tmp581 + _tmp152 * _tmp582;
  const Scalar _tmp2621 = _tmp1017 * _tmp2619 + _tmp1018 * _tmp2620;
  const Scalar _tmp2622 = _tmp1023 * _tmp2621 - _tmp1026 * _tmp2621 + _tmp2620 * _tmp591;
  const Scalar _tmp2623 = _tmp1573 * _tmp2621 - _tmp1574 * _tmp2621 + _tmp2619 * _tmp591;
  const Scalar _tmp2624 = (matches_0_16_weight * matches_0_16_weight) / (_tmp755 * _tmp755);
  const Scalar _tmp2625 = _tmp152 * _tmp610 - _tmp2523 * _tmp609 * _tmp959;
  const Scalar _tmp2626 = -_tmp2529 * _tmp602 * _tmp959 + _tmp2537 * _tmp606;
  const Scalar _tmp2627 = _tmp2625 * _tmp972 + _tmp2626 * _tmp971;
  const Scalar _tmp2628 = _tmp2625 * _tmp619 + _tmp2627 * _tmp976 - _tmp2627 * _tmp978;
  const Scalar _tmp2629 = _tmp1567 * _tmp2627 - _tmp1568 * _tmp2627 + _tmp2626 * _tmp619;
  const Scalar _tmp2630 = (matches_0_17_weight * matches_0_17_weight) / (_tmp758 * _tmp758);
  const Scalar _tmp2631 = _tmp152 * _tmp638 - _tmp2523 * _tmp920;
  const Scalar _tmp2632 = -_tmp2529 * _tmp914 + _tmp2537 * _tmp634;
  const Scalar _tmp2633 = _tmp2631 * _tmp923 + _tmp2632 * _tmp917;
  const Scalar _tmp2634 = -_tmp1211 * _tmp2633 + _tmp1212 * _tmp2633 + _tmp2631 * _tmp647;
  const Scalar _tmp2635 = _tmp2632 * _tmp647 - _tmp2633 * _tmp927 + _tmp2633 * _tmp929;
  const Scalar _tmp2636 = (matches_0_18_weight * matches_0_18_weight) / (_tmp761 * _tmp761);
  const Scalar _tmp2637 = _tmp100 * _tmp663 - _tmp142 * _tmp841;
  const Scalar _tmp2638 = _tmp152 * _tmp666 - _tmp2523 * _tmp665 * _tmp778;
  const Scalar _tmp2639 = _tmp2637 * _tmp783 + _tmp2638 * _tmp792;
  const Scalar _tmp2640 = _tmp2638 * _tmp675 + _tmp2639 * _tmp797 - _tmp2639 * _tmp799;
  const Scalar _tmp2641 = _tmp2637 * _tmp675 + _tmp2639 * _tmp899 - _tmp2639 * _tmp900;
  const Scalar _tmp2642 = (matches_0_19_weight * matches_0_19_weight) / (_tmp764 * _tmp764);
  const Scalar _tmp2643 = -_tmp2529 * _tmp854 + _tmp2537 * _tmp690;
  const Scalar _tmp2644 = _tmp152 * _tmp694 - _tmp2523 * _tmp862;
  const Scalar _tmp2645 = _tmp2643 * _tmp859 + _tmp2644 * _tmp865;
  const Scalar _tmp2646 = _tmp1557 * _tmp2645 - _tmp1558 * _tmp2645 + _tmp2644 * _tmp703;
  const Scalar _tmp2647 = _tmp2643 * _tmp703 + _tmp2645 * _tmp869 - _tmp2645 * _tmp871;

  // Output terms (4)
  if (b != nullptr) {
    Eigen::Matrix<Scalar, 72, 1>& _b = (*b);

    _b(0, 0) = _tmp31;
    _b(1, 0) = _tmp35;
    _b(2, 0) = _tmp40;
    _b(3, 0) = _tmp42 * _tmp44;
    _b(4, 0) = _tmp46 * _tmp48;
    _b(5, 0) = _tmp50 * _tmp52;
    _b(6, 0) = _tmp69;
    _b(7, 0) = _tmp74;
    _b(8, 0) = _tmp78;
    _b(9, 0) = _tmp79 * _tmp81;
    _b(10, 0) = _tmp82 * _tmp84;
    _b(11, 0) = _tmp85 * _tmp87;
    _b(12, 0) = _tmp172;
    _b(13, 0) = _tmp173;
    _b(14, 0) = _tmp200;
    _b(15, 0) = _tmp201;
    _b(16, 0) = _tmp228;
    _b(17, 0) = _tmp229;
    _b(18, 0) = _tmp256;
    _b(19, 0) = _tmp257;
    _b(20, 0) = _tmp284;
    _b(21, 0) = _tmp285;
    _b(22, 0) = _tmp312;
    _b(23, 0) = _tmp313;
    _b(24, 0) = _tmp340;
    _b(25, 0) = _tmp341;
    _b(26, 0) = _tmp368;
    _b(27, 0) = _tmp369;
    _b(28, 0) = _tmp396;
    _b(29, 0) = _tmp397;
    _b(30, 0) = _tmp424;
    _b(31, 0) = _tmp425;
    _b(32, 0) = _tmp452;
    _b(33, 0) = _tmp453;
    _b(34, 0) = _tmp480;
    _b(35, 0) = _tmp481;
    _b(36, 0) = _tmp508;
    _b(37, 0) = _tmp509;
    _b(38, 0) = _tmp536;
    _b(39, 0) = _tmp537;
    _b(40, 0) = _tmp564;
    _b(41, 0) = _tmp565;
    _b(42, 0) = _tmp592;
    _b(43, 0) = _tmp593;
    _b(44, 0) = _tmp620;
    _b(45, 0) = _tmp621;
    _b(46, 0) = _tmp648;
    _b(47, 0) = _tmp649;
    _b(48, 0) = _tmp676;
    _b(49, 0) = _tmp677;
    _b(50, 0) = _tmp704;
    _b(51, 0) = _tmp705;
    _b(52, 0) = _tmp706 * _tmp708;
    _b(53, 0) = _tmp709 * _tmp711;
    _b(54, 0) = _tmp712 * _tmp714;
    _b(55, 0) = _tmp715 * _tmp717;
    _b(56, 0) = _tmp718 * _tmp720;
    _b(57, 0) = _tmp721 * _tmp723;
    _b(58, 0) = _tmp724 * _tmp726;
    _b(59, 0) = _tmp727 * _tmp729;
    _b(60, 0) = _tmp730 * _tmp732;
    _b(61, 0) = _tmp733 * _tmp735;
    _b(62, 0) = _tmp736 * _tmp738;
    _b(63, 0) = _tmp739 * _tmp741;
    _b(64, 0) = _tmp742 * _tmp744;
    _b(65, 0) = _tmp745 * _tmp747;
    _b(66, 0) = _tmp748 * _tmp750;
    _b(67, 0) = _tmp751 * _tmp753;
    _b(68, 0) = _tmp754 * _tmp756;
    _b(69, 0) = _tmp757 * _tmp759;
    _b(70, 0) = _tmp760 * _tmp762;
    _b(71, 0) = _tmp763 * _tmp765;
  }

  if (Jtb != nullptr) {
    Eigen::Matrix<Scalar, 26, 1>& _Jtb = (*Jtb);

    _Jtb(0, 0) = _tmp1002 * _tmp621 + _tmp1055 * _tmp593 + _tmp1102 * _tmp565 + _tmp1148 * _tmp537 +
                 _tmp1156 * _tmp564 + _tmp1164 * _tmp536 + _tmp1209 * _tmp509 + _tmp1217 * _tmp649 +
                 _tmp1262 * _tmp480 + _tmp1305 * _tmp425 + _tmp1350 * _tmp396 + _tmp1358 * _tmp397 +
                 _tmp1407 * _tmp173 + _tmp1415 * _tmp172 + _tmp1453 * _tmp78 + _tmp1502 * _tmp31 +
                 _tmp1547 * _tmp200 + _tmp1555 * _tmp201 + _tmp1563 * _tmp705 + _tmp1572 * _tmp620 +
                 _tmp1580 * _tmp592 + _tmp1589 * _tmp35 + _tmp1597 * _tmp69 + _tmp1605 * _tmp74 +
                 _tmp1612 * _tmp40 + _tmp1657 * _tmp452 + _tmp1702 * _tmp285 + _tmp1746 * _tmp229 +
                 _tmp1794 * _tmp256 + _tmp1802 * _tmp284 + _tmp1812 * _tmp481 + _tmp1821 * _tmp228 +
                 _tmp1868 * _tmp312 + _tmp1875 * _tmp257 + _tmp1884 * _tmp453 + _tmp1934 * _tmp368 +
                 _tmp1944 * _tmp369 + _tmp1952 * _tmp508 + _tmp1960 * _tmp424 + _tmp1969 * _tmp313 +
                 _tmp2014 * _tmp340 + _tmp2023 * _tmp341 + _tmp648 * _tmp955 + _tmp676 * _tmp906 +
                 _tmp677 * _tmp849 + _tmp704 * _tmp897;
    _Jtb(1, 0) = _tmp172 * _tmp2053 + _tmp173 * _tmp2040 + _tmp200 * _tmp2045 + _tmp201 * _tmp2062 +
                 _tmp2024 * _tmp704 + _tmp2025 * _tmp676 + _tmp2026 * _tmp648 + _tmp2027 * _tmp536 +
                 _tmp2028 * _tmp509 + _tmp2029 * _tmp537 + _tmp2030 * _tmp508 + _tmp2031 * _tmp481 +
                 _tmp2032 * _tmp480 + _tmp2033 * _tmp452 + _tmp2034 * _tmp620 + _tmp2035 * _tmp565 +
                 _tmp2036 * _tmp424 + _tmp2037 * _tmp592 + _tmp2038 * _tmp397 + _tmp2039 * _tmp564 +
                 _tmp2041 * _tmp31 + _tmp2042 * _tmp312 + _tmp2043 * _tmp368 + _tmp2044 * _tmp425 +
                 _tmp2046 * _tmp78 + _tmp2047 * _tmp35 + _tmp2048 * _tmp257 + _tmp2049 * _tmp649 +
                 _tmp2050 * _tmp621 + _tmp2051 * _tmp396 + _tmp2052 * _tmp74 + _tmp2054 * _tmp40 +
                 _tmp2055 * _tmp228 + _tmp2056 * _tmp705 + _tmp2057 * _tmp341 + _tmp2058 * _tmp229 +
                 _tmp2059 * _tmp256 + _tmp2060 * _tmp285 + _tmp2061 * _tmp284 + _tmp2063 * _tmp313 +
                 _tmp2064 * _tmp593 + _tmp2065 * _tmp453 + _tmp2066 * _tmp69 + _tmp2067 * _tmp340 +
                 _tmp2068 * _tmp677 + _tmp2069 * _tmp369;
    _Jtb(2, 0) = _tmp172 * _tmp2088 + _tmp173 * _tmp2086 + _tmp200 * _tmp2084 + _tmp201 * _tmp2087 +
                 _tmp2070 * _tmp648 + _tmp2071 * _tmp621 + _tmp2072 * _tmp620 + _tmp2073 * _tmp592 +
                 _tmp2074 * _tmp509 + _tmp2075 * _tmp705 + _tmp2076 * _tmp508 + _tmp2077 * _tmp677 +
                 _tmp2078 * _tmp481 + _tmp2079 * _tmp564 + _tmp2080 * _tmp480 + _tmp2081 * _tmp452 +
                 _tmp2082 * _tmp425 + _tmp2083 * _tmp704 + _tmp2085 * _tmp453 + _tmp2089 * _tmp676 +
                 _tmp2090 * _tmp78 + _tmp2091 * _tmp340 + _tmp2092 * _tmp74 + _tmp2093 * _tmp35 +
                 _tmp2094 * _tmp649 + _tmp2095 * _tmp69 + _tmp2096 * _tmp369 + _tmp2097 * _tmp593 +
                 _tmp2098 * _tmp537 + _tmp2099 * _tmp40 + _tmp2100 * _tmp228 + _tmp2101 * _tmp229 +
                 _tmp2102 * _tmp256 + _tmp2103 * _tmp257 + _tmp2104 * _tmp565 + _tmp2105 * _tmp285 +
                 _tmp2106 * _tmp397 + _tmp2107 * _tmp341 + _tmp2108 * _tmp284 + _tmp2109 * _tmp31 +
                 _tmp2110 * _tmp313 + _tmp2111 * _tmp536 + _tmp2112 * _tmp396 + _tmp2113 * _tmp312 +
                 _tmp2114 * _tmp424 + _tmp2115 * _tmp368;
    _Jtb(3, 0) = _tmp172 * _tmp2266 + _tmp173 * _tmp2246 + _tmp200 * _tmp2230 + _tmp201 * _tmp2269 +
                 _tmp2123 * _tmp705 + _tmp2130 * _tmp649 + _tmp2131 * _tmp648 + _tmp2140 * _tmp621 +
                 _tmp2141 * _tmp620 + _tmp2149 * _tmp593 + _tmp2150 * _tmp592 + _tmp2158 * _tmp676 +
                 _tmp2166 * _tmp565 + _tmp2167 * _tmp564 + _tmp2175 * _tmp537 + _tmp2183 * _tmp509 +
                 _tmp2184 * _tmp508 + _tmp2192 * _tmp480 + _tmp2200 * _tmp452 + _tmp2209 * _tmp229 +
                 _tmp2210 * _tmp536 + _tmp2218 * _tmp257 + _tmp2219 * _tmp256 + _tmp2220 * _tmp704 +
                 _tmp2221 * _tmp228 + _tmp2222 * _tmp453 + _tmp2238 * _tmp313 + _tmp2247 * _tmp312 +
                 _tmp2255 * _tmp425 - _tmp2256 * _tmp79 + _tmp2264 * _tmp341 + _tmp2265 * _tmp677 +
                 _tmp2267 * _tmp481 + _tmp2277 * _tmp284 + _tmp2278 * _tmp285 + _tmp2286 * _tmp368 +
                 _tmp2287 * _tmp369 + _tmp2288 * _tmp340 + _tmp2295 * _tmp396 + _tmp2297 * _tmp397 +
                 _tmp2298 * _tmp42 + _tmp2300 * _tmp424;
    _Jtb(4, 0) = _tmp172 * _tmp2398 + _tmp173 * _tmp2395 + _tmp200 * _tmp2396 + _tmp201 * _tmp2370 +
                 _tmp228 * _tmp2397 + _tmp229 * _tmp2361 + _tmp2305 * _tmp705 + _tmp2310 * _tmp649 +
                 _tmp2311 * _tmp648 + _tmp2315 * _tmp677 + _tmp2319 * _tmp621 + _tmp2320 * _tmp676 +
                 _tmp2324 * _tmp593 + _tmp2329 * _tmp564 + _tmp2334 * _tmp536 + _tmp2339 * _tmp508 +
                 _tmp2340 * _tmp704 + _tmp2341 * _tmp620 + _tmp2345 * _tmp453 + _tmp2346 * _tmp592 +
                 _tmp2347 * _tmp509 + _tmp2348 * _tmp452 + _tmp2352 * _tmp257 + _tmp2353 * _tmp256 +
                 _tmp2357 * _tmp340 + _tmp2366 * _tmp285 + _tmp2374 * _tmp480 + _tmp2379 * _tmp425 +
                 _tmp2380 * _tmp46 - _tmp2381 * _tmp82 + _tmp2387 * _tmp396 + _tmp2388 * _tmp565 +
                 _tmp2389 * _tmp481 + _tmp2399 * _tmp284 + _tmp2403 * _tmp312 + _tmp2404 * _tmp537 +
                 _tmp2408 * _tmp368 + _tmp2409 * _tmp313 + _tmp2410 * _tmp424 + _tmp2411 * _tmp341 +
                 _tmp2412 * _tmp369 + _tmp2413 * _tmp397;
    _Jtb(5, 0) = _tmp172 * _tmp2496 + _tmp173 * _tmp2497 + _tmp200 * _tmp2469 + _tmp201 * _tmp2487 +
                 _tmp228 * _tmp2473 + _tmp229 * _tmp2492 + _tmp2418 * _tmp705 + _tmp2419 * _tmp704 +
                 _tmp2423 * _tmp677 + _tmp2428 * _tmp648 + _tmp2432 * _tmp621 + _tmp2436 * _tmp593 +
                 _tmp2441 * _tmp536 + _tmp2445 * _tmp508 + _tmp2446 * _tmp676 + _tmp2450 * _tmp480 +
                 _tmp2451 * _tmp620 + _tmp2452 * _tmp481 + _tmp2456 * _tmp453 + _tmp2460 * _tmp564 +
                 _tmp2461 * _tmp452 + _tmp2465 * _tmp257 + _tmp2474 * _tmp50 + _tmp2475 * _tmp649 -
                 _tmp2476 * _tmp85 + _tmp2480 * _tmp285 + _tmp2485 * _tmp369 + _tmp2486 * _tmp256 +
                 _tmp2491 * _tmp341 + _tmp2498 * _tmp509 + _tmp2502 * _tmp313 + _tmp2503 * _tmp592 +
                 _tmp2504 * _tmp284 + _tmp2505 * _tmp565 + _tmp2506 * _tmp312 + _tmp2507 * _tmp340 +
                 _tmp2508 * _tmp537 + _tmp2509 * _tmp368 + _tmp2513 * _tmp396 + _tmp2514 * _tmp397 +
                 _tmp2519 * _tmp424 + _tmp2520 * _tmp425;
    _Jtb(6, 0) = _tmp172 * _tmp2527 + _tmp173 * _tmp2526 + _tmp2521 * _tmp706;
    _Jtb(7, 0) = _tmp200 * _tmp2534 + _tmp201 * _tmp2533 + _tmp2528 * _tmp709;
    _Jtb(8, 0) = _tmp228 * _tmp2541 + _tmp229 * _tmp2540 + _tmp2535 * _tmp712;
    _Jtb(9, 0) = _tmp2542 * _tmp715 + _tmp2548 * _tmp257 + _tmp2550 * _tmp256;
    _Jtb(10, 0) = _tmp2551 * _tmp718 + _tmp2556 * _tmp285 + _tmp2557 * _tmp284;
    _Jtb(11, 0) = _tmp2558 * _tmp721 + _tmp2562 * _tmp313 + _tmp2563 * _tmp312;
    _Jtb(12, 0) = _tmp2564 * _tmp724 + _tmp2568 * _tmp341 + _tmp2569 * _tmp340;
    _Jtb(13, 0) = _tmp2573 * _tmp369 + _tmp2574 * _tmp727 + _tmp2575 * _tmp368;
    _Jtb(14, 0) = _tmp2579 * _tmp397 + _tmp2580 * _tmp730 + _tmp2581 * _tmp396;
    _Jtb(15, 0) = _tmp2582 * _tmp733 + _tmp2586 * _tmp425 + _tmp2587 * _tmp424;
    _Jtb(16, 0) = _tmp2588 * _tmp736 + _tmp2592 * _tmp453 + _tmp2593 * _tmp452;
    _Jtb(17, 0) = _tmp2594 * _tmp739 + _tmp2598 * _tmp481 + _tmp2599 * _tmp480;
    _Jtb(18, 0) = _tmp2600 * _tmp742 + _tmp2604 * _tmp509 + _tmp2605 * _tmp508;
    _Jtb(19, 0) = _tmp2606 * _tmp745 + _tmp2610 * _tmp537 + _tmp2611 * _tmp536;
    _Jtb(20, 0) = _tmp2612 * _tmp748 + _tmp2616 * _tmp565 + _tmp2617 * _tmp564;
    _Jtb(21, 0) = _tmp2618 * _tmp751 + _tmp2622 * _tmp593 + _tmp2623 * _tmp592;
    _Jtb(22, 0) = _tmp2624 * _tmp754 + _tmp2628 * _tmp621 + _tmp2629 * _tmp620;
    _Jtb(23, 0) = _tmp2630 * _tmp757 + _tmp2634 * _tmp649 + _tmp2635 * _tmp648;
    _Jtb(24, 0) = _tmp2636 * _tmp760 + _tmp2640 * _tmp677 + _tmp2641 * _tmp676;
    _Jtb(25, 0) = _tmp2642 * _tmp763 + _tmp2646 * _tmp705 + _tmp2647 * _tmp704;
  }

  if (J != nullptr) {
    static constexpr int kRows_J = 72;
    static constexpr int kCols_J = 26;
    static constexpr int kNumNonZero_J = 324;
    static constexpr int kColPtrs_J[] = {0,   46,  92,  138, 180, 222, 264, 267, 270,
                                         273, 276, 279, 282, 285, 288, 291, 294, 297,
                                         300, 303, 306, 309, 312, 315, 318, 321, 324};
    static constexpr int kRowIndices_J[] = {
        0,  1,  2,  6,  7,  8,  12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,
        28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49,
        50, 51, 0,  1,  2,  6,  7,  8,  12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,
        26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
        48, 49, 50, 51, 0,  1,  2,  6,  7,  8,  12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,
        24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45,
        46, 47, 48, 49, 50, 51, 3,  9,  12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,
        26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
        48, 49, 50, 51, 4,  10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,
        28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49,
        50, 51, 5,  11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
        30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
        12, 13, 52, 14, 15, 53, 16, 17, 54, 18, 19, 55, 20, 21, 56, 22, 23, 57, 24, 25, 58, 26,
        27, 59, 28, 29, 60, 30, 31, 61, 32, 33, 62, 34, 35, 63, 36, 37, 64, 38, 39, 65, 40, 41,
        66, 42, 43, 67, 44, 45, 68, 46, 47, 69, 48, 49, 70, 50, 51, 71};
    if (J->nonZeros() != 324 || J->outerSize() != 26 || J->innerSize() != 72 ||
        !J->isCompressed()) {
      // Matrix does not have the expected layout, create a correctly initialized sparse matrix
      Scalar J_empty_value_ptr[324];
      *J = Eigen::Map<const Eigen::SparseMatrix<Scalar>>(
          kRows_J, kCols_J, kNumNonZero_J, kColPtrs_J, kRowIndices_J, J_empty_value_ptr);
    }
    Scalar* J_value_ptr = J->valuePtr();

    J_value_ptr[0] = _tmp1502;
    J_value_ptr[1] = _tmp1589;
    J_value_ptr[2] = _tmp1612;
    J_value_ptr[3] = _tmp1597;
    J_value_ptr[4] = _tmp1605;
    J_value_ptr[5] = _tmp1453;
    J_value_ptr[6] = _tmp1415;
    J_value_ptr[7] = _tmp1407;
    J_value_ptr[8] = _tmp1547;
    J_value_ptr[9] = _tmp1555;
    J_value_ptr[10] = _tmp1821;
    J_value_ptr[11] = _tmp1746;
    J_value_ptr[12] = _tmp1794;
    J_value_ptr[13] = _tmp1875;
    J_value_ptr[14] = _tmp1802;
    J_value_ptr[15] = _tmp1702;
    J_value_ptr[16] = _tmp1868;
    J_value_ptr[17] = _tmp1969;
    J_value_ptr[18] = _tmp2014;
    J_value_ptr[19] = _tmp2023;
    J_value_ptr[20] = _tmp1934;
    J_value_ptr[21] = _tmp1944;
    J_value_ptr[22] = _tmp1350;
    J_value_ptr[23] = _tmp1358;
    J_value_ptr[24] = _tmp1960;
    J_value_ptr[25] = _tmp1305;
    J_value_ptr[26] = _tmp1657;
    J_value_ptr[27] = _tmp1884;
    J_value_ptr[28] = _tmp1262;
    J_value_ptr[29] = _tmp1812;
    J_value_ptr[30] = _tmp1952;
    J_value_ptr[31] = _tmp1209;
    J_value_ptr[32] = _tmp1164;
    J_value_ptr[33] = _tmp1148;
    J_value_ptr[34] = _tmp1156;
    J_value_ptr[35] = _tmp1102;
    J_value_ptr[36] = _tmp1580;
    J_value_ptr[37] = _tmp1055;
    J_value_ptr[38] = _tmp1572;
    J_value_ptr[39] = _tmp1002;
    J_value_ptr[40] = _tmp955;
    J_value_ptr[41] = _tmp1217;
    J_value_ptr[42] = _tmp906;
    J_value_ptr[43] = _tmp849;
    J_value_ptr[44] = _tmp897;
    J_value_ptr[45] = _tmp1563;
    J_value_ptr[46] = _tmp2041;
    J_value_ptr[47] = _tmp2047;
    J_value_ptr[48] = _tmp2054;
    J_value_ptr[49] = _tmp2066;
    J_value_ptr[50] = _tmp2052;
    J_value_ptr[51] = _tmp2046;
    J_value_ptr[52] = _tmp2053;
    J_value_ptr[53] = _tmp2040;
    J_value_ptr[54] = _tmp2045;
    J_value_ptr[55] = _tmp2062;
    J_value_ptr[56] = _tmp2055;
    J_value_ptr[57] = _tmp2058;
    J_value_ptr[58] = _tmp2059;
    J_value_ptr[59] = _tmp2048;
    J_value_ptr[60] = _tmp2061;
    J_value_ptr[61] = _tmp2060;
    J_value_ptr[62] = _tmp2042;
    J_value_ptr[63] = _tmp2063;
    J_value_ptr[64] = _tmp2067;
    J_value_ptr[65] = _tmp2057;
    J_value_ptr[66] = _tmp2043;
    J_value_ptr[67] = _tmp2069;
    J_value_ptr[68] = _tmp2051;
    J_value_ptr[69] = _tmp2038;
    J_value_ptr[70] = _tmp2036;
    J_value_ptr[71] = _tmp2044;
    J_value_ptr[72] = _tmp2033;
    J_value_ptr[73] = _tmp2065;
    J_value_ptr[74] = _tmp2032;
    J_value_ptr[75] = _tmp2031;
    J_value_ptr[76] = _tmp2030;
    J_value_ptr[77] = _tmp2028;
    J_value_ptr[78] = _tmp2027;
    J_value_ptr[79] = _tmp2029;
    J_value_ptr[80] = _tmp2039;
    J_value_ptr[81] = _tmp2035;
    J_value_ptr[82] = _tmp2037;
    J_value_ptr[83] = _tmp2064;
    J_value_ptr[84] = _tmp2034;
    J_value_ptr[85] = _tmp2050;
    J_value_ptr[86] = _tmp2026;
    J_value_ptr[87] = _tmp2049;
    J_value_ptr[88] = _tmp2025;
    J_value_ptr[89] = _tmp2068;
    J_value_ptr[90] = _tmp2024;
    J_value_ptr[91] = _tmp2056;
    J_value_ptr[92] = _tmp2109;
    J_value_ptr[93] = _tmp2093;
    J_value_ptr[94] = _tmp2099;
    J_value_ptr[95] = _tmp2095;
    J_value_ptr[96] = _tmp2092;
    J_value_ptr[97] = _tmp2090;
    J_value_ptr[98] = _tmp2088;
    J_value_ptr[99] = _tmp2086;
    J_value_ptr[100] = _tmp2084;
    J_value_ptr[101] = _tmp2087;
    J_value_ptr[102] = _tmp2100;
    J_value_ptr[103] = _tmp2101;
    J_value_ptr[104] = _tmp2102;
    J_value_ptr[105] = _tmp2103;
    J_value_ptr[106] = _tmp2108;
    J_value_ptr[107] = _tmp2105;
    J_value_ptr[108] = _tmp2113;
    J_value_ptr[109] = _tmp2110;
    J_value_ptr[110] = _tmp2091;
    J_value_ptr[111] = _tmp2107;
    J_value_ptr[112] = _tmp2115;
    J_value_ptr[113] = _tmp2096;
    J_value_ptr[114] = _tmp2112;
    J_value_ptr[115] = _tmp2106;
    J_value_ptr[116] = _tmp2114;
    J_value_ptr[117] = _tmp2082;
    J_value_ptr[118] = _tmp2081;
    J_value_ptr[119] = _tmp2085;
    J_value_ptr[120] = _tmp2080;
    J_value_ptr[121] = _tmp2078;
    J_value_ptr[122] = _tmp2076;
    J_value_ptr[123] = _tmp2074;
    J_value_ptr[124] = _tmp2111;
    J_value_ptr[125] = _tmp2098;
    J_value_ptr[126] = _tmp2079;
    J_value_ptr[127] = _tmp2104;
    J_value_ptr[128] = _tmp2073;
    J_value_ptr[129] = _tmp2097;
    J_value_ptr[130] = _tmp2072;
    J_value_ptr[131] = _tmp2071;
    J_value_ptr[132] = _tmp2070;
    J_value_ptr[133] = _tmp2094;
    J_value_ptr[134] = _tmp2089;
    J_value_ptr[135] = _tmp2077;
    J_value_ptr[136] = _tmp2083;
    J_value_ptr[137] = _tmp2075;
    J_value_ptr[138] = _tmp44;
    J_value_ptr[139] = -_tmp81;
    J_value_ptr[140] = _tmp2266;
    J_value_ptr[141] = _tmp2246;
    J_value_ptr[142] = _tmp2230;
    J_value_ptr[143] = _tmp2269;
    J_value_ptr[144] = _tmp2221;
    J_value_ptr[145] = _tmp2209;
    J_value_ptr[146] = _tmp2219;
    J_value_ptr[147] = _tmp2218;
    J_value_ptr[148] = _tmp2277;
    J_value_ptr[149] = _tmp2278;
    J_value_ptr[150] = _tmp2247;
    J_value_ptr[151] = _tmp2238;
    J_value_ptr[152] = _tmp2288;
    J_value_ptr[153] = _tmp2264;
    J_value_ptr[154] = _tmp2286;
    J_value_ptr[155] = _tmp2287;
    J_value_ptr[156] = _tmp2295;
    J_value_ptr[157] = _tmp2297;
    J_value_ptr[158] = _tmp2300;
    J_value_ptr[159] = _tmp2255;
    J_value_ptr[160] = _tmp2200;
    J_value_ptr[161] = _tmp2222;
    J_value_ptr[162] = _tmp2192;
    J_value_ptr[163] = _tmp2267;
    J_value_ptr[164] = _tmp2184;
    J_value_ptr[165] = _tmp2183;
    J_value_ptr[166] = _tmp2210;
    J_value_ptr[167] = _tmp2175;
    J_value_ptr[168] = _tmp2167;
    J_value_ptr[169] = _tmp2166;
    J_value_ptr[170] = _tmp2150;
    J_value_ptr[171] = _tmp2149;
    J_value_ptr[172] = _tmp2141;
    J_value_ptr[173] = _tmp2140;
    J_value_ptr[174] = _tmp2131;
    J_value_ptr[175] = _tmp2130;
    J_value_ptr[176] = _tmp2158;
    J_value_ptr[177] = _tmp2265;
    J_value_ptr[178] = _tmp2220;
    J_value_ptr[179] = _tmp2123;
    J_value_ptr[180] = _tmp48;
    J_value_ptr[181] = -_tmp84;
    J_value_ptr[182] = _tmp2398;
    J_value_ptr[183] = _tmp2395;
    J_value_ptr[184] = _tmp2396;
    J_value_ptr[185] = _tmp2370;
    J_value_ptr[186] = _tmp2397;
    J_value_ptr[187] = _tmp2361;
    J_value_ptr[188] = _tmp2353;
    J_value_ptr[189] = _tmp2352;
    J_value_ptr[190] = _tmp2399;
    J_value_ptr[191] = _tmp2366;
    J_value_ptr[192] = _tmp2403;
    J_value_ptr[193] = _tmp2409;
    J_value_ptr[194] = _tmp2357;
    J_value_ptr[195] = _tmp2411;
    J_value_ptr[196] = _tmp2408;
    J_value_ptr[197] = _tmp2412;
    J_value_ptr[198] = _tmp2387;
    J_value_ptr[199] = _tmp2413;
    J_value_ptr[200] = _tmp2410;
    J_value_ptr[201] = _tmp2379;
    J_value_ptr[202] = _tmp2348;
    J_value_ptr[203] = _tmp2345;
    J_value_ptr[204] = _tmp2374;
    J_value_ptr[205] = _tmp2389;
    J_value_ptr[206] = _tmp2339;
    J_value_ptr[207] = _tmp2347;
    J_value_ptr[208] = _tmp2334;
    J_value_ptr[209] = _tmp2404;
    J_value_ptr[210] = _tmp2329;
    J_value_ptr[211] = _tmp2388;
    J_value_ptr[212] = _tmp2346;
    J_value_ptr[213] = _tmp2324;
    J_value_ptr[214] = _tmp2341;
    J_value_ptr[215] = _tmp2319;
    J_value_ptr[216] = _tmp2311;
    J_value_ptr[217] = _tmp2310;
    J_value_ptr[218] = _tmp2320;
    J_value_ptr[219] = _tmp2315;
    J_value_ptr[220] = _tmp2340;
    J_value_ptr[221] = _tmp2305;
    J_value_ptr[222] = _tmp52;
    J_value_ptr[223] = -_tmp87;
    J_value_ptr[224] = _tmp2496;
    J_value_ptr[225] = _tmp2497;
    J_value_ptr[226] = _tmp2469;
    J_value_ptr[227] = _tmp2487;
    J_value_ptr[228] = _tmp2473;
    J_value_ptr[229] = _tmp2492;
    J_value_ptr[230] = _tmp2486;
    J_value_ptr[231] = _tmp2465;
    J_value_ptr[232] = _tmp2504;
    J_value_ptr[233] = _tmp2480;
    J_value_ptr[234] = _tmp2506;
    J_value_ptr[235] = _tmp2502;
    J_value_ptr[236] = _tmp2507;
    J_value_ptr[237] = _tmp2491;
    J_value_ptr[238] = _tmp2509;
    J_value_ptr[239] = _tmp2485;
    J_value_ptr[240] = _tmp2513;
    J_value_ptr[241] = _tmp2514;
    J_value_ptr[242] = _tmp2519;
    J_value_ptr[243] = _tmp2520;
    J_value_ptr[244] = _tmp2461;
    J_value_ptr[245] = _tmp2456;
    J_value_ptr[246] = _tmp2450;
    J_value_ptr[247] = _tmp2452;
    J_value_ptr[248] = _tmp2445;
    J_value_ptr[249] = _tmp2498;
    J_value_ptr[250] = _tmp2441;
    J_value_ptr[251] = _tmp2508;
    J_value_ptr[252] = _tmp2460;
    J_value_ptr[253] = _tmp2505;
    J_value_ptr[254] = _tmp2503;
    J_value_ptr[255] = _tmp2436;
    J_value_ptr[256] = _tmp2451;
    J_value_ptr[257] = _tmp2432;
    J_value_ptr[258] = _tmp2428;
    J_value_ptr[259] = _tmp2475;
    J_value_ptr[260] = _tmp2446;
    J_value_ptr[261] = _tmp2423;
    J_value_ptr[262] = _tmp2419;
    J_value_ptr[263] = _tmp2418;
    J_value_ptr[264] = _tmp2527;
    J_value_ptr[265] = _tmp2526;
    J_value_ptr[266] = _tmp708;
    J_value_ptr[267] = _tmp2534;
    J_value_ptr[268] = _tmp2533;
    J_value_ptr[269] = _tmp711;
    J_value_ptr[270] = _tmp2541;
    J_value_ptr[271] = _tmp2540;
    J_value_ptr[272] = _tmp714;
    J_value_ptr[273] = _tmp2550;
    J_value_ptr[274] = _tmp2548;
    J_value_ptr[275] = _tmp717;
    J_value_ptr[276] = _tmp2557;
    J_value_ptr[277] = _tmp2556;
    J_value_ptr[278] = _tmp720;
    J_value_ptr[279] = _tmp2563;
    J_value_ptr[280] = _tmp2562;
    J_value_ptr[281] = _tmp723;
    J_value_ptr[282] = _tmp2569;
    J_value_ptr[283] = _tmp2568;
    J_value_ptr[284] = _tmp726;
    J_value_ptr[285] = _tmp2575;
    J_value_ptr[286] = _tmp2573;
    J_value_ptr[287] = _tmp729;
    J_value_ptr[288] = _tmp2581;
    J_value_ptr[289] = _tmp2579;
    J_value_ptr[290] = _tmp732;
    J_value_ptr[291] = _tmp2587;
    J_value_ptr[292] = _tmp2586;
    J_value_ptr[293] = _tmp735;
    J_value_ptr[294] = _tmp2593;
    J_value_ptr[295] = _tmp2592;
    J_value_ptr[296] = _tmp738;
    J_value_ptr[297] = _tmp2599;
    J_value_ptr[298] = _tmp2598;
    J_value_ptr[299] = _tmp741;
    J_value_ptr[300] = _tmp2605;
    J_value_ptr[301] = _tmp2604;
    J_value_ptr[302] = _tmp744;
    J_value_ptr[303] = _tmp2611;
    J_value_ptr[304] = _tmp2610;
    J_value_ptr[305] = _tmp747;
    J_value_ptr[306] = _tmp2617;
    J_value_ptr[307] = _tmp2616;
    J_value_ptr[308] = _tmp750;
    J_value_ptr[309] = _tmp2623;
    J_value_ptr[310] = _tmp2622;
    J_value_ptr[311] = _tmp753;
    J_value_ptr[312] = _tmp2629;
    J_value_ptr[313] = _tmp2628;
    J_value_ptr[314] = _tmp756;
    J_value_ptr[315] = _tmp2635;
    J_value_ptr[316] = _tmp2634;
    J_value_ptr[317] = _tmp759;
    J_value_ptr[318] = _tmp2641;
    J_value_ptr[319] = _tmp2640;
    J_value_ptr[320] = _tmp762;
    J_value_ptr[321] = _tmp2647;
    J_value_ptr[322] = _tmp2646;
    J_value_ptr[323] = _tmp765;
  }

  if (H != nullptr) {
    static constexpr int kRows_H = 26;
    static constexpr int kCols_H = 26;
    static constexpr int kNumNonZero_H = 161;
    static constexpr int kColPtrs_H[] = {0,   26,  51,  75,  98,  120, 141, 142, 143,
                                         144, 145, 146, 147, 148, 149, 150, 151, 152,
                                         153, 154, 155, 156, 157, 158, 159, 160, 161};
    static constexpr int kRowIndices_H[] = {
        0,  1,  2,  3,  4,  5,  6, 7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,
        23, 24, 25, 1,  2,  3,  4, 5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
        21, 22, 23, 24, 25, 2,  3, 4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
        20, 21, 22, 23, 24, 25, 3, 4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
        20, 21, 22, 23, 24, 25, 4, 5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
        21, 22, 23, 24, 25, 5,  6, 7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,
        23, 24, 25, 6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25};
    if (H->nonZeros() != 161 || H->outerSize() != 26 || H->innerSize() != 26 ||
        !H->isCompressed()) {
      // Matrix does not have the expected layout, create a correctly initialized sparse matrix
      Scalar H_empty_value_ptr[161];
      *H = Eigen::Map<const Eigen::SparseMatrix<Scalar>>(
          kRows_H, kCols_H, kNumNonZero_H, kColPtrs_H, kRowIndices_H, H_empty_value_ptr);
    }
    Scalar* H_value_ptr = H->valuePtr();

    H_value_ptr[0] = (_tmp1002 * _tmp1002) + (_tmp1055 * _tmp1055) + (_tmp1102 * _tmp1102) +
                     (_tmp1148 * _tmp1148) + (_tmp1156 * _tmp1156) + (_tmp1164 * _tmp1164) +
                     (_tmp1209 * _tmp1209) + (_tmp1217 * _tmp1217) + (_tmp1262 * _tmp1262) +
                     (_tmp1305 * _tmp1305) + (_tmp1350 * _tmp1350) + (_tmp1358 * _tmp1358) +
                     (_tmp1407 * _tmp1407) + (_tmp1415 * _tmp1415) + (_tmp1453 * _tmp1453) +
                     (_tmp1502 * _tmp1502) + (_tmp1547 * _tmp1547) + (_tmp1555 * _tmp1555) +
                     (_tmp1563 * _tmp1563) + (_tmp1572 * _tmp1572) + (_tmp1580 * _tmp1580) +
                     (_tmp1589 * _tmp1589) + (_tmp1597 * _tmp1597) + (_tmp1605 * _tmp1605) +
                     (_tmp1612 * _tmp1612) + (_tmp1657 * _tmp1657) + (_tmp1702 * _tmp1702) +
                     (_tmp1746 * _tmp1746) + (_tmp1794 * _tmp1794) + (_tmp1802 * _tmp1802) +
                     (_tmp1812 * _tmp1812) + (_tmp1821 * _tmp1821) + (_tmp1868 * _tmp1868) +
                     (_tmp1875 * _tmp1875) + (_tmp1884 * _tmp1884) + (_tmp1934 * _tmp1934) +
                     (_tmp1944 * _tmp1944) + (_tmp1952 * _tmp1952) + (_tmp1960 * _tmp1960) +
                     (_tmp1969 * _tmp1969) + (_tmp2014 * _tmp2014) + (_tmp2023 * _tmp2023) +
                     (_tmp849 * _tmp849) + (_tmp897 * _tmp897) + (_tmp906 * _tmp906) +
                     (_tmp955 * _tmp955);
    H_value_ptr[1] =
        _tmp1002 * _tmp2050 + _tmp1055 * _tmp2064 + _tmp1102 * _tmp2035 + _tmp1148 * _tmp2029 +
        _tmp1156 * _tmp2039 + _tmp1164 * _tmp2027 + _tmp1209 * _tmp2028 + _tmp1217 * _tmp2049 +
        _tmp1262 * _tmp2032 + _tmp1305 * _tmp2044 + _tmp1350 * _tmp2051 + _tmp1358 * _tmp2038 +
        _tmp1407 * _tmp2040 + _tmp1415 * _tmp2053 + _tmp1453 * _tmp2046 + _tmp1502 * _tmp2041 +
        _tmp1547 * _tmp2045 + _tmp1555 * _tmp2062 + _tmp1563 * _tmp2056 + _tmp1572 * _tmp2034 +
        _tmp1580 * _tmp2037 + _tmp1589 * _tmp2047 + _tmp1597 * _tmp2066 + _tmp1605 * _tmp2052 +
        _tmp1612 * _tmp2054 + _tmp1657 * _tmp2033 + _tmp1702 * _tmp2060 + _tmp1746 * _tmp2058 +
        _tmp1794 * _tmp2059 + _tmp1802 * _tmp2061 + _tmp1812 * _tmp2031 + _tmp1821 * _tmp2055 +
        _tmp1868 * _tmp2042 + _tmp1875 * _tmp2048 + _tmp1884 * _tmp2065 + _tmp1934 * _tmp2043 +
        _tmp1944 * _tmp2069 + _tmp1952 * _tmp2030 + _tmp1960 * _tmp2036 + _tmp1969 * _tmp2063 +
        _tmp2014 * _tmp2067 + _tmp2023 * _tmp2057 + _tmp2024 * _tmp897 + _tmp2025 * _tmp906 +
        _tmp2026 * _tmp955 + _tmp2068 * _tmp849;
    H_value_ptr[2] =
        _tmp1002 * _tmp2071 + _tmp1055 * _tmp2097 + _tmp1102 * _tmp2104 + _tmp1148 * _tmp2098 +
        _tmp1156 * _tmp2079 + _tmp1164 * _tmp2111 + _tmp1209 * _tmp2074 + _tmp1217 * _tmp2094 +
        _tmp1262 * _tmp2080 + _tmp1305 * _tmp2082 + _tmp1350 * _tmp2112 + _tmp1358 * _tmp2106 +
        _tmp1407 * _tmp2086 + _tmp1415 * _tmp2088 + _tmp1453 * _tmp2090 + _tmp1502 * _tmp2109 +
        _tmp1547 * _tmp2084 + _tmp1555 * _tmp2087 + _tmp1563 * _tmp2075 + _tmp1572 * _tmp2072 +
        _tmp1580 * _tmp2073 + _tmp1589 * _tmp2093 + _tmp1597 * _tmp2095 + _tmp1605 * _tmp2092 +
        _tmp1612 * _tmp2099 + _tmp1657 * _tmp2081 + _tmp1702 * _tmp2105 + _tmp1746 * _tmp2101 +
        _tmp1794 * _tmp2102 + _tmp1802 * _tmp2108 + _tmp1812 * _tmp2078 + _tmp1821 * _tmp2100 +
        _tmp1868 * _tmp2113 + _tmp1875 * _tmp2103 + _tmp1884 * _tmp2085 + _tmp1934 * _tmp2115 +
        _tmp1944 * _tmp2096 + _tmp1952 * _tmp2076 + _tmp1960 * _tmp2114 + _tmp1969 * _tmp2110 +
        _tmp2014 * _tmp2091 + _tmp2023 * _tmp2107 + _tmp2070 * _tmp955 + _tmp2077 * _tmp849 +
        _tmp2083 * _tmp897 + _tmp2089 * _tmp906;
    H_value_ptr[3] =
        _tmp1002 * _tmp2140 + _tmp1055 * _tmp2149 + _tmp1102 * _tmp2166 + _tmp1148 * _tmp2175 +
        _tmp1156 * _tmp2167 + _tmp1164 * _tmp2210 + _tmp1209 * _tmp2183 + _tmp1217 * _tmp2130 +
        _tmp1262 * _tmp2192 + _tmp1305 * _tmp2255 + _tmp1350 * _tmp2295 + _tmp1358 * _tmp2297 +
        _tmp1407 * _tmp2246 + _tmp1415 * _tmp2266 + _tmp1547 * _tmp2230 + _tmp1555 * _tmp2269 +
        _tmp1563 * _tmp2123 + _tmp1572 * _tmp2141 + _tmp1580 * _tmp2150 + _tmp1657 * _tmp2200 +
        _tmp1702 * _tmp2278 + _tmp1746 * _tmp2209 + _tmp1794 * _tmp2219 + _tmp1802 * _tmp2277 +
        _tmp1812 * _tmp2267 + _tmp1821 * _tmp2221 + _tmp1868 * _tmp2247 + _tmp1875 * _tmp2218 +
        _tmp1884 * _tmp2222 + _tmp1934 * _tmp2286 + _tmp1944 * _tmp2287 + _tmp1952 * _tmp2184 +
        _tmp1960 * _tmp2300 + _tmp1969 * _tmp2238 + _tmp2014 * _tmp2288 + _tmp2023 * _tmp2264 +
        _tmp2131 * _tmp955 + _tmp2158 * _tmp906 + _tmp2220 * _tmp897 + _tmp2265 * _tmp849;
    H_value_ptr[4] =
        _tmp1002 * _tmp2319 + _tmp1055 * _tmp2324 + _tmp1102 * _tmp2388 + _tmp1148 * _tmp2404 +
        _tmp1156 * _tmp2329 + _tmp1164 * _tmp2334 + _tmp1209 * _tmp2347 + _tmp1217 * _tmp2310 +
        _tmp1262 * _tmp2374 + _tmp1305 * _tmp2379 + _tmp1350 * _tmp2387 + _tmp1358 * _tmp2413 +
        _tmp1407 * _tmp2395 + _tmp1415 * _tmp2398 + _tmp1547 * _tmp2396 + _tmp1555 * _tmp2370 +
        _tmp1563 * _tmp2305 + _tmp1572 * _tmp2341 + _tmp1580 * _tmp2346 + _tmp1657 * _tmp2348 +
        _tmp1702 * _tmp2366 + _tmp1746 * _tmp2361 + _tmp1794 * _tmp2353 + _tmp1802 * _tmp2399 +
        _tmp1812 * _tmp2389 + _tmp1821 * _tmp2397 + _tmp1868 * _tmp2403 + _tmp1875 * _tmp2352 +
        _tmp1884 * _tmp2345 + _tmp1934 * _tmp2408 + _tmp1944 * _tmp2412 + _tmp1952 * _tmp2339 +
        _tmp1960 * _tmp2410 + _tmp1969 * _tmp2409 + _tmp2014 * _tmp2357 + _tmp2023 * _tmp2411 +
        _tmp2311 * _tmp955 + _tmp2315 * _tmp849 + _tmp2320 * _tmp906 + _tmp2340 * _tmp897;
    H_value_ptr[5] =
        _tmp1002 * _tmp2432 + _tmp1055 * _tmp2436 + _tmp1102 * _tmp2505 + _tmp1148 * _tmp2508 +
        _tmp1156 * _tmp2460 + _tmp1164 * _tmp2441 + _tmp1209 * _tmp2498 + _tmp1217 * _tmp2475 +
        _tmp1262 * _tmp2450 + _tmp1305 * _tmp2520 + _tmp1350 * _tmp2513 + _tmp1358 * _tmp2514 +
        _tmp1407 * _tmp2497 + _tmp1415 * _tmp2496 + _tmp1547 * _tmp2469 + _tmp1555 * _tmp2487 +
        _tmp1563 * _tmp2418 + _tmp1572 * _tmp2451 + _tmp1580 * _tmp2503 + _tmp1657 * _tmp2461 +
        _tmp1702 * _tmp2480 + _tmp1746 * _tmp2492 + _tmp1794 * _tmp2486 + _tmp1802 * _tmp2504 +
        _tmp1812 * _tmp2452 + _tmp1821 * _tmp2473 + _tmp1868 * _tmp2506 + _tmp1875 * _tmp2465 +
        _tmp1884 * _tmp2456 + _tmp1934 * _tmp2509 + _tmp1944 * _tmp2485 + _tmp1952 * _tmp2445 +
        _tmp1960 * _tmp2519 + _tmp1969 * _tmp2502 + _tmp2014 * _tmp2507 + _tmp2023 * _tmp2491 +
        _tmp2419 * _tmp897 + _tmp2423 * _tmp849 + _tmp2428 * _tmp955 + _tmp2446 * _tmp906;
    H_value_ptr[6] = _tmp1407 * _tmp2526 + _tmp1415 * _tmp2527;
    H_value_ptr[7] = _tmp1547 * _tmp2534 + _tmp1555 * _tmp2533;
    H_value_ptr[8] = _tmp1746 * _tmp2540 + _tmp1821 * _tmp2541;
    H_value_ptr[9] = _tmp1794 * _tmp2550 + _tmp1875 * _tmp2548;
    H_value_ptr[10] = _tmp1702 * _tmp2556 + _tmp1802 * _tmp2557;
    H_value_ptr[11] = _tmp1868 * _tmp2563 + _tmp1969 * _tmp2562;
    H_value_ptr[12] = _tmp2014 * _tmp2569 + _tmp2023 * _tmp2568;
    H_value_ptr[13] = _tmp1934 * _tmp2575 + _tmp1944 * _tmp2573;
    H_value_ptr[14] = _tmp1350 * _tmp2581 + _tmp1358 * _tmp2579;
    H_value_ptr[15] = _tmp1305 * _tmp2586 + _tmp1960 * _tmp2587;
    H_value_ptr[16] = _tmp1657 * _tmp2593 + _tmp1884 * _tmp2592;
    H_value_ptr[17] = _tmp1262 * _tmp2599 + _tmp1812 * _tmp2598;
    H_value_ptr[18] = _tmp1209 * _tmp2604 + _tmp1952 * _tmp2605;
    H_value_ptr[19] = _tmp1148 * _tmp2610 + _tmp1164 * _tmp2611;
    H_value_ptr[20] = _tmp1102 * _tmp2616 + _tmp1156 * _tmp2617;
    H_value_ptr[21] = _tmp1055 * _tmp2622 + _tmp1580 * _tmp2623;
    H_value_ptr[22] = _tmp1002 * _tmp2628 + _tmp1572 * _tmp2629;
    H_value_ptr[23] = _tmp1217 * _tmp2634 + _tmp2635 * _tmp955;
    H_value_ptr[24] = _tmp2640 * _tmp849 + _tmp2641 * _tmp906;
    H_value_ptr[25] = _tmp1563 * _tmp2646 + _tmp2647 * _tmp897;
    H_value_ptr[26] = (_tmp2024 * _tmp2024) + (_tmp2025 * _tmp2025) + (_tmp2026 * _tmp2026) +
                      (_tmp2027 * _tmp2027) + (_tmp2028 * _tmp2028) + (_tmp2029 * _tmp2029) +
                      (_tmp2030 * _tmp2030) + (_tmp2031 * _tmp2031) + (_tmp2032 * _tmp2032) +
                      (_tmp2033 * _tmp2033) + (_tmp2034 * _tmp2034) + (_tmp2035 * _tmp2035) +
                      (_tmp2036 * _tmp2036) + (_tmp2037 * _tmp2037) + (_tmp2038 * _tmp2038) +
                      (_tmp2039 * _tmp2039) + (_tmp2040 * _tmp2040) + (_tmp2041 * _tmp2041) +
                      (_tmp2042 * _tmp2042) + (_tmp2043 * _tmp2043) + (_tmp2044 * _tmp2044) +
                      (_tmp2045 * _tmp2045) + (_tmp2046 * _tmp2046) + (_tmp2047 * _tmp2047) +
                      (_tmp2048 * _tmp2048) + (_tmp2049 * _tmp2049) + (_tmp2050 * _tmp2050) +
                      (_tmp2051 * _tmp2051) + (_tmp2052 * _tmp2052) + (_tmp2053 * _tmp2053) +
                      (_tmp2054 * _tmp2054) + (_tmp2055 * _tmp2055) + (_tmp2056 * _tmp2056) +
                      (_tmp2057 * _tmp2057) + (_tmp2058 * _tmp2058) + (_tmp2059 * _tmp2059) +
                      (_tmp2060 * _tmp2060) + (_tmp2061 * _tmp2061) + (_tmp2062 * _tmp2062) +
                      (_tmp2063 * _tmp2063) + (_tmp2064 * _tmp2064) + (_tmp2065 * _tmp2065) +
                      (_tmp2066 * _tmp2066) + (_tmp2067 * _tmp2067) + (_tmp2068 * _tmp2068) +
                      (_tmp2069 * _tmp2069);
    H_value_ptr[27] =
        _tmp2024 * _tmp2083 + _tmp2025 * _tmp2089 + _tmp2026 * _tmp2070 + _tmp2027 * _tmp2111 +
        _tmp2028 * _tmp2074 + _tmp2029 * _tmp2098 + _tmp2030 * _tmp2076 + _tmp2031 * _tmp2078 +
        _tmp2032 * _tmp2080 + _tmp2033 * _tmp2081 + _tmp2034 * _tmp2072 + _tmp2035 * _tmp2104 +
        _tmp2036 * _tmp2114 + _tmp2037 * _tmp2073 + _tmp2038 * _tmp2106 + _tmp2039 * _tmp2079 +
        _tmp2040 * _tmp2086 + _tmp2041 * _tmp2109 + _tmp2042 * _tmp2113 + _tmp2043 * _tmp2115 +
        _tmp2044 * _tmp2082 + _tmp2045 * _tmp2084 + _tmp2046 * _tmp2090 + _tmp2047 * _tmp2093 +
        _tmp2048 * _tmp2103 + _tmp2049 * _tmp2094 + _tmp2050 * _tmp2071 + _tmp2051 * _tmp2112 +
        _tmp2052 * _tmp2092 + _tmp2053 * _tmp2088 + _tmp2054 * _tmp2099 + _tmp2055 * _tmp2100 +
        _tmp2056 * _tmp2075 + _tmp2057 * _tmp2107 + _tmp2058 * _tmp2101 + _tmp2059 * _tmp2102 +
        _tmp2060 * _tmp2105 + _tmp2061 * _tmp2108 + _tmp2062 * _tmp2087 + _tmp2063 * _tmp2110 +
        _tmp2064 * _tmp2097 + _tmp2065 * _tmp2085 + _tmp2066 * _tmp2095 + _tmp2067 * _tmp2091 +
        _tmp2068 * _tmp2077 + _tmp2069 * _tmp2096;
    H_value_ptr[28] =
        _tmp2024 * _tmp2220 + _tmp2025 * _tmp2158 + _tmp2026 * _tmp2131 + _tmp2027 * _tmp2210 +
        _tmp2028 * _tmp2183 + _tmp2029 * _tmp2175 + _tmp2030 * _tmp2184 + _tmp2031 * _tmp2267 +
        _tmp2032 * _tmp2192 + _tmp2033 * _tmp2200 + _tmp2034 * _tmp2141 + _tmp2035 * _tmp2166 +
        _tmp2036 * _tmp2300 + _tmp2037 * _tmp2150 + _tmp2038 * _tmp2297 + _tmp2039 * _tmp2167 +
        _tmp2040 * _tmp2246 + _tmp2042 * _tmp2247 + _tmp2043 * _tmp2286 + _tmp2044 * _tmp2255 +
        _tmp2045 * _tmp2230 + _tmp2048 * _tmp2218 + _tmp2049 * _tmp2130 + _tmp2050 * _tmp2140 +
        _tmp2051 * _tmp2295 + _tmp2053 * _tmp2266 + _tmp2055 * _tmp2221 + _tmp2056 * _tmp2123 +
        _tmp2057 * _tmp2264 + _tmp2058 * _tmp2209 + _tmp2059 * _tmp2219 + _tmp2060 * _tmp2278 +
        _tmp2061 * _tmp2277 + _tmp2062 * _tmp2269 + _tmp2063 * _tmp2238 + _tmp2064 * _tmp2149 +
        _tmp2065 * _tmp2222 + _tmp2067 * _tmp2288 + _tmp2068 * _tmp2265 + _tmp2069 * _tmp2287;
    H_value_ptr[29] =
        _tmp2024 * _tmp2340 + _tmp2025 * _tmp2320 + _tmp2026 * _tmp2311 + _tmp2027 * _tmp2334 +
        _tmp2028 * _tmp2347 + _tmp2029 * _tmp2404 + _tmp2030 * _tmp2339 + _tmp2031 * _tmp2389 +
        _tmp2032 * _tmp2374 + _tmp2033 * _tmp2348 + _tmp2034 * _tmp2341 + _tmp2035 * _tmp2388 +
        _tmp2036 * _tmp2410 + _tmp2037 * _tmp2346 + _tmp2038 * _tmp2413 + _tmp2039 * _tmp2329 +
        _tmp2040 * _tmp2395 + _tmp2042 * _tmp2403 + _tmp2043 * _tmp2408 + _tmp2044 * _tmp2379 +
        _tmp2045 * _tmp2396 + _tmp2048 * _tmp2352 + _tmp2049 * _tmp2310 + _tmp2050 * _tmp2319 +
        _tmp2051 * _tmp2387 + _tmp2053 * _tmp2398 + _tmp2055 * _tmp2397 + _tmp2056 * _tmp2305 +
        _tmp2057 * _tmp2411 + _tmp2058 * _tmp2361 + _tmp2059 * _tmp2353 + _tmp2060 * _tmp2366 +
        _tmp2061 * _tmp2399 + _tmp2062 * _tmp2370 + _tmp2063 * _tmp2409 + _tmp2064 * _tmp2324 +
        _tmp2065 * _tmp2345 + _tmp2067 * _tmp2357 + _tmp2068 * _tmp2315 + _tmp2069 * _tmp2412;
    H_value_ptr[30] =
        _tmp2024 * _tmp2419 + _tmp2025 * _tmp2446 + _tmp2026 * _tmp2428 + _tmp2027 * _tmp2441 +
        _tmp2028 * _tmp2498 + _tmp2029 * _tmp2508 + _tmp2030 * _tmp2445 + _tmp2031 * _tmp2452 +
        _tmp2032 * _tmp2450 + _tmp2033 * _tmp2461 + _tmp2034 * _tmp2451 + _tmp2035 * _tmp2505 +
        _tmp2036 * _tmp2519 + _tmp2037 * _tmp2503 + _tmp2038 * _tmp2514 + _tmp2039 * _tmp2460 +
        _tmp2040 * _tmp2497 + _tmp2042 * _tmp2506 + _tmp2043 * _tmp2509 + _tmp2044 * _tmp2520 +
        _tmp2045 * _tmp2469 + _tmp2048 * _tmp2465 + _tmp2049 * _tmp2475 + _tmp2050 * _tmp2432 +
        _tmp2051 * _tmp2513 + _tmp2053 * _tmp2496 + _tmp2055 * _tmp2473 + _tmp2056 * _tmp2418 +
        _tmp2057 * _tmp2491 + _tmp2058 * _tmp2492 + _tmp2059 * _tmp2486 + _tmp2060 * _tmp2480 +
        _tmp2061 * _tmp2504 + _tmp2062 * _tmp2487 + _tmp2063 * _tmp2502 + _tmp2064 * _tmp2436 +
        _tmp2065 * _tmp2456 + _tmp2067 * _tmp2507 + _tmp2068 * _tmp2423 + _tmp2069 * _tmp2485;
    H_value_ptr[31] = _tmp2040 * _tmp2526 + _tmp2053 * _tmp2527;
    H_value_ptr[32] = _tmp2045 * _tmp2534 + _tmp2062 * _tmp2533;
    H_value_ptr[33] = _tmp2055 * _tmp2541 + _tmp2058 * _tmp2540;
    H_value_ptr[34] = _tmp2048 * _tmp2548 + _tmp2059 * _tmp2550;
    H_value_ptr[35] = _tmp2060 * _tmp2556 + _tmp2061 * _tmp2557;
    H_value_ptr[36] = _tmp2042 * _tmp2563 + _tmp2063 * _tmp2562;
    H_value_ptr[37] = _tmp2057 * _tmp2568 + _tmp2067 * _tmp2569;
    H_value_ptr[38] = _tmp2043 * _tmp2575 + _tmp2069 * _tmp2573;
    H_value_ptr[39] = _tmp2038 * _tmp2579 + _tmp2051 * _tmp2581;
    H_value_ptr[40] = _tmp2036 * _tmp2587 + _tmp2044 * _tmp2586;
    H_value_ptr[41] = _tmp2033 * _tmp2593 + _tmp2065 * _tmp2592;
    H_value_ptr[42] = _tmp2031 * _tmp2598 + _tmp2032 * _tmp2599;
    H_value_ptr[43] = _tmp2028 * _tmp2604 + _tmp2030 * _tmp2605;
    H_value_ptr[44] = _tmp2027 * _tmp2611 + _tmp2029 * _tmp2610;
    H_value_ptr[45] = _tmp2035 * _tmp2616 + _tmp2039 * _tmp2617;
    H_value_ptr[46] = _tmp2037 * _tmp2623 + _tmp2064 * _tmp2622;
    H_value_ptr[47] = _tmp2034 * _tmp2629 + _tmp2050 * _tmp2628;
    H_value_ptr[48] = _tmp2026 * _tmp2635 + _tmp2049 * _tmp2634;
    H_value_ptr[49] = _tmp2025 * _tmp2641 + _tmp2068 * _tmp2640;
    H_value_ptr[50] = _tmp2024 * _tmp2647 + _tmp2056 * _tmp2646;
    H_value_ptr[51] = (_tmp2070 * _tmp2070) + (_tmp2071 * _tmp2071) + (_tmp2072 * _tmp2072) +
                      (_tmp2073 * _tmp2073) + (_tmp2074 * _tmp2074) + (_tmp2075 * _tmp2075) +
                      (_tmp2076 * _tmp2076) + (_tmp2077 * _tmp2077) + (_tmp2078 * _tmp2078) +
                      (_tmp2079 * _tmp2079) + (_tmp2080 * _tmp2080) + (_tmp2081 * _tmp2081) +
                      (_tmp2082 * _tmp2082) + (_tmp2083 * _tmp2083) + (_tmp2084 * _tmp2084) +
                      (_tmp2085 * _tmp2085) + (_tmp2086 * _tmp2086) + (_tmp2087 * _tmp2087) +
                      (_tmp2088 * _tmp2088) + (_tmp2089 * _tmp2089) + (_tmp2090 * _tmp2090) +
                      (_tmp2091 * _tmp2091) + (_tmp2092 * _tmp2092) + (_tmp2093 * _tmp2093) +
                      (_tmp2094 * _tmp2094) + (_tmp2095 * _tmp2095) + (_tmp2096 * _tmp2096) +
                      (_tmp2097 * _tmp2097) + (_tmp2098 * _tmp2098) + (_tmp2099 * _tmp2099) +
                      (_tmp2100 * _tmp2100) + (_tmp2101 * _tmp2101) + (_tmp2102 * _tmp2102) +
                      (_tmp2103 * _tmp2103) + (_tmp2104 * _tmp2104) + (_tmp2105 * _tmp2105) +
                      (_tmp2106 * _tmp2106) + (_tmp2107 * _tmp2107) + (_tmp2108 * _tmp2108) +
                      (_tmp2109 * _tmp2109) + (_tmp2110 * _tmp2110) + (_tmp2111 * _tmp2111) +
                      (_tmp2112 * _tmp2112) + (_tmp2113 * _tmp2113) + (_tmp2114 * _tmp2114) +
                      (_tmp2115 * _tmp2115);
    H_value_ptr[52] =
        _tmp2070 * _tmp2131 + _tmp2071 * _tmp2140 + _tmp2072 * _tmp2141 + _tmp2073 * _tmp2150 +
        _tmp2074 * _tmp2183 + _tmp2075 * _tmp2123 + _tmp2076 * _tmp2184 + _tmp2077 * _tmp2265 +
        _tmp2078 * _tmp2267 + _tmp2079 * _tmp2167 + _tmp2080 * _tmp2192 + _tmp2081 * _tmp2200 +
        _tmp2082 * _tmp2255 + _tmp2083 * _tmp2220 + _tmp2084 * _tmp2230 + _tmp2085 * _tmp2222 +
        _tmp2086 * _tmp2246 + _tmp2087 * _tmp2269 + _tmp2088 * _tmp2266 + _tmp2089 * _tmp2158 +
        _tmp2091 * _tmp2288 + _tmp2094 * _tmp2130 + _tmp2096 * _tmp2287 + _tmp2097 * _tmp2149 +
        _tmp2098 * _tmp2175 + _tmp2100 * _tmp2221 + _tmp2101 * _tmp2209 + _tmp2102 * _tmp2219 +
        _tmp2103 * _tmp2218 + _tmp2104 * _tmp2166 + _tmp2105 * _tmp2278 + _tmp2106 * _tmp2297 +
        _tmp2107 * _tmp2264 + _tmp2108 * _tmp2277 + _tmp2110 * _tmp2238 + _tmp2111 * _tmp2210 +
        _tmp2112 * _tmp2295 + _tmp2113 * _tmp2247 + _tmp2114 * _tmp2300 + _tmp2115 * _tmp2286;
    H_value_ptr[53] =
        _tmp2070 * _tmp2311 + _tmp2071 * _tmp2319 + _tmp2072 * _tmp2341 + _tmp2073 * _tmp2346 +
        _tmp2074 * _tmp2347 + _tmp2075 * _tmp2305 + _tmp2076 * _tmp2339 + _tmp2077 * _tmp2315 +
        _tmp2078 * _tmp2389 + _tmp2079 * _tmp2329 + _tmp2080 * _tmp2374 + _tmp2081 * _tmp2348 +
        _tmp2082 * _tmp2379 + _tmp2083 * _tmp2340 + _tmp2084 * _tmp2396 + _tmp2085 * _tmp2345 +
        _tmp2086 * _tmp2395 + _tmp2087 * _tmp2370 + _tmp2088 * _tmp2398 + _tmp2089 * _tmp2320 +
        _tmp2091 * _tmp2357 + _tmp2094 * _tmp2310 + _tmp2096 * _tmp2412 + _tmp2097 * _tmp2324 +
        _tmp2098 * _tmp2404 + _tmp2100 * _tmp2397 + _tmp2101 * _tmp2361 + _tmp2102 * _tmp2353 +
        _tmp2103 * _tmp2352 + _tmp2104 * _tmp2388 + _tmp2105 * _tmp2366 + _tmp2106 * _tmp2413 +
        _tmp2107 * _tmp2411 + _tmp2108 * _tmp2399 + _tmp2110 * _tmp2409 + _tmp2111 * _tmp2334 +
        _tmp2112 * _tmp2387 + _tmp2113 * _tmp2403 + _tmp2114 * _tmp2410 + _tmp2115 * _tmp2408;
    H_value_ptr[54] =
        _tmp2070 * _tmp2428 + _tmp2071 * _tmp2432 + _tmp2072 * _tmp2451 + _tmp2073 * _tmp2503 +
        _tmp2074 * _tmp2498 + _tmp2075 * _tmp2418 + _tmp2076 * _tmp2445 + _tmp2077 * _tmp2423 +
        _tmp2078 * _tmp2452 + _tmp2079 * _tmp2460 + _tmp2080 * _tmp2450 + _tmp2081 * _tmp2461 +
        _tmp2082 * _tmp2520 + _tmp2083 * _tmp2419 + _tmp2084 * _tmp2469 + _tmp2085 * _tmp2456 +
        _tmp2086 * _tmp2497 + _tmp2087 * _tmp2487 + _tmp2088 * _tmp2496 + _tmp2089 * _tmp2446 +
        _tmp2091 * _tmp2507 + _tmp2094 * _tmp2475 + _tmp2096 * _tmp2485 + _tmp2097 * _tmp2436 +
        _tmp2098 * _tmp2508 + _tmp2100 * _tmp2473 + _tmp2101 * _tmp2492 + _tmp2102 * _tmp2486 +
        _tmp2103 * _tmp2465 + _tmp2104 * _tmp2505 + _tmp2105 * _tmp2480 + _tmp2106 * _tmp2514 +
        _tmp2107 * _tmp2491 + _tmp2108 * _tmp2504 + _tmp2110 * _tmp2502 + _tmp2111 * _tmp2441 +
        _tmp2112 * _tmp2513 + _tmp2113 * _tmp2506 + _tmp2114 * _tmp2519 + _tmp2115 * _tmp2509;
    H_value_ptr[55] = _tmp2086 * _tmp2526 + _tmp2088 * _tmp2527;
    H_value_ptr[56] = _tmp2084 * _tmp2534 + _tmp2087 * _tmp2533;
    H_value_ptr[57] = _tmp2100 * _tmp2541 + _tmp2101 * _tmp2540;
    H_value_ptr[58] = _tmp2102 * _tmp2550 + _tmp2103 * _tmp2548;
    H_value_ptr[59] = _tmp2105 * _tmp2556 + _tmp2108 * _tmp2557;
    H_value_ptr[60] = _tmp2110 * _tmp2562 + _tmp2113 * _tmp2563;
    H_value_ptr[61] = _tmp2091 * _tmp2569 + _tmp2107 * _tmp2568;
    H_value_ptr[62] = _tmp2096 * _tmp2573 + _tmp2115 * _tmp2575;
    H_value_ptr[63] = _tmp2106 * _tmp2579 + _tmp2112 * _tmp2581;
    H_value_ptr[64] = _tmp2082 * _tmp2586 + _tmp2114 * _tmp2587;
    H_value_ptr[65] = _tmp2081 * _tmp2593 + _tmp2085 * _tmp2592;
    H_value_ptr[66] = _tmp2078 * _tmp2598 + _tmp2080 * _tmp2599;
    H_value_ptr[67] = _tmp2074 * _tmp2604 + _tmp2076 * _tmp2605;
    H_value_ptr[68] = _tmp2098 * _tmp2610 + _tmp2111 * _tmp2611;
    H_value_ptr[69] = _tmp2079 * _tmp2617 + _tmp2104 * _tmp2616;
    H_value_ptr[70] = _tmp2073 * _tmp2623 + _tmp2097 * _tmp2622;
    H_value_ptr[71] = _tmp2071 * _tmp2628 + _tmp2072 * _tmp2629;
    H_value_ptr[72] = _tmp2070 * _tmp2635 + _tmp2094 * _tmp2634;
    H_value_ptr[73] = _tmp2077 * _tmp2640 + _tmp2089 * _tmp2641;
    H_value_ptr[74] = _tmp2075 * _tmp2646 + _tmp2083 * _tmp2647;
    H_value_ptr[75] = (_tmp2123 * _tmp2123) + (_tmp2130 * _tmp2130) + (_tmp2131 * _tmp2131) +
                      (_tmp2140 * _tmp2140) + (_tmp2141 * _tmp2141) + (_tmp2149 * _tmp2149) +
                      (_tmp2150 * _tmp2150) + (_tmp2158 * _tmp2158) + (_tmp2166 * _tmp2166) +
                      (_tmp2167 * _tmp2167) + (_tmp2175 * _tmp2175) + (_tmp2183 * _tmp2183) +
                      (_tmp2184 * _tmp2184) + (_tmp2192 * _tmp2192) + (_tmp2200 * _tmp2200) +
                      (_tmp2209 * _tmp2209) + (_tmp2210 * _tmp2210) + (_tmp2218 * _tmp2218) +
                      (_tmp2219 * _tmp2219) + (_tmp2220 * _tmp2220) + (_tmp2221 * _tmp2221) +
                      (_tmp2222 * _tmp2222) + (_tmp2230 * _tmp2230) + (_tmp2238 * _tmp2238) +
                      (_tmp2246 * _tmp2246) + (_tmp2247 * _tmp2247) + (_tmp2255 * _tmp2255) +
                      _tmp2256 + (_tmp2264 * _tmp2264) + (_tmp2265 * _tmp2265) +
                      (_tmp2266 * _tmp2266) + (_tmp2267 * _tmp2267) + (_tmp2269 * _tmp2269) +
                      (_tmp2277 * _tmp2277) + (_tmp2278 * _tmp2278) + (_tmp2286 * _tmp2286) +
                      (_tmp2287 * _tmp2287) + (_tmp2288 * _tmp2288) + (_tmp2295 * _tmp2295) +
                      (_tmp2297 * _tmp2297) + _tmp2298 + (_tmp2300 * _tmp2300);
    H_value_ptr[76] =
        _tmp2123 * _tmp2305 + _tmp2130 * _tmp2310 + _tmp2131 * _tmp2311 + _tmp2140 * _tmp2319 +
        _tmp2141 * _tmp2341 + _tmp2149 * _tmp2324 + _tmp2150 * _tmp2346 + _tmp2158 * _tmp2320 +
        _tmp2166 * _tmp2388 + _tmp2167 * _tmp2329 + _tmp2175 * _tmp2404 + _tmp2183 * _tmp2347 +
        _tmp2184 * _tmp2339 + _tmp2192 * _tmp2374 + _tmp2200 * _tmp2348 + _tmp2209 * _tmp2361 +
        _tmp2210 * _tmp2334 + _tmp2218 * _tmp2352 + _tmp2219 * _tmp2353 + _tmp2220 * _tmp2340 +
        _tmp2221 * _tmp2397 + _tmp2222 * _tmp2345 + _tmp2230 * _tmp2396 + _tmp2238 * _tmp2409 +
        _tmp2246 * _tmp2395 + _tmp2247 * _tmp2403 + _tmp2255 * _tmp2379 + _tmp2264 * _tmp2411 +
        _tmp2265 * _tmp2315 + _tmp2266 * _tmp2398 + _tmp2267 * _tmp2389 + _tmp2269 * _tmp2370 +
        _tmp2277 * _tmp2399 + _tmp2278 * _tmp2366 + _tmp2286 * _tmp2408 + _tmp2287 * _tmp2412 +
        _tmp2288 * _tmp2357 + _tmp2295 * _tmp2387 + _tmp2297 * _tmp2413 + _tmp2300 * _tmp2410;
    H_value_ptr[77] =
        _tmp2123 * _tmp2418 + _tmp2130 * _tmp2475 + _tmp2131 * _tmp2428 + _tmp2140 * _tmp2432 +
        _tmp2141 * _tmp2451 + _tmp2149 * _tmp2436 + _tmp2150 * _tmp2503 + _tmp2158 * _tmp2446 +
        _tmp2166 * _tmp2505 + _tmp2167 * _tmp2460 + _tmp2175 * _tmp2508 + _tmp2183 * _tmp2498 +
        _tmp2184 * _tmp2445 + _tmp2192 * _tmp2450 + _tmp2200 * _tmp2461 + _tmp2209 * _tmp2492 +
        _tmp2210 * _tmp2441 + _tmp2218 * _tmp2465 + _tmp2219 * _tmp2486 + _tmp2220 * _tmp2419 +
        _tmp2221 * _tmp2473 + _tmp2222 * _tmp2456 + _tmp2230 * _tmp2469 + _tmp2238 * _tmp2502 +
        _tmp2246 * _tmp2497 + _tmp2247 * _tmp2506 + _tmp2255 * _tmp2520 + _tmp2264 * _tmp2491 +
        _tmp2265 * _tmp2423 + _tmp2266 * _tmp2496 + _tmp2267 * _tmp2452 + _tmp2269 * _tmp2487 +
        _tmp2277 * _tmp2504 + _tmp2278 * _tmp2480 + _tmp2286 * _tmp2509 + _tmp2287 * _tmp2485 +
        _tmp2288 * _tmp2507 + _tmp2295 * _tmp2513 + _tmp2297 * _tmp2514 + _tmp2300 * _tmp2519;
    H_value_ptr[78] = _tmp2246 * _tmp2526 + _tmp2266 * _tmp2527;
    H_value_ptr[79] = _tmp2230 * _tmp2534 + _tmp2269 * _tmp2533;
    H_value_ptr[80] = _tmp2209 * _tmp2540 + _tmp2221 * _tmp2541;
    H_value_ptr[81] = _tmp2218 * _tmp2548 + _tmp2219 * _tmp2550;
    H_value_ptr[82] = _tmp2277 * _tmp2557 + _tmp2278 * _tmp2556;
    H_value_ptr[83] = _tmp2238 * _tmp2562 + _tmp2247 * _tmp2563;
    H_value_ptr[84] = _tmp2264 * _tmp2568 + _tmp2288 * _tmp2569;
    H_value_ptr[85] = _tmp2286 * _tmp2575 + _tmp2287 * _tmp2573;
    H_value_ptr[86] = _tmp2295 * _tmp2581 + _tmp2297 * _tmp2579;
    H_value_ptr[87] = _tmp2255 * _tmp2586 + _tmp2300 * _tmp2587;
    H_value_ptr[88] = _tmp2200 * _tmp2593 + _tmp2222 * _tmp2592;
    H_value_ptr[89] = _tmp2192 * _tmp2599 + _tmp2267 * _tmp2598;
    H_value_ptr[90] = _tmp2183 * _tmp2604 + _tmp2184 * _tmp2605;
    H_value_ptr[91] = _tmp2175 * _tmp2610 + _tmp2210 * _tmp2611;
    H_value_ptr[92] = _tmp2166 * _tmp2616 + _tmp2167 * _tmp2617;
    H_value_ptr[93] = _tmp2149 * _tmp2622 + _tmp2150 * _tmp2623;
    H_value_ptr[94] = _tmp2140 * _tmp2628 + _tmp2141 * _tmp2629;
    H_value_ptr[95] = _tmp2130 * _tmp2634 + _tmp2131 * _tmp2635;
    H_value_ptr[96] = _tmp2158 * _tmp2641 + _tmp2265 * _tmp2640;
    H_value_ptr[97] = _tmp2123 * _tmp2646 + _tmp2220 * _tmp2647;
    H_value_ptr[98] = (_tmp2305 * _tmp2305) + (_tmp2310 * _tmp2310) + (_tmp2311 * _tmp2311) +
                      (_tmp2315 * _tmp2315) + (_tmp2319 * _tmp2319) + (_tmp2320 * _tmp2320) +
                      (_tmp2324 * _tmp2324) + (_tmp2329 * _tmp2329) + (_tmp2334 * _tmp2334) +
                      (_tmp2339 * _tmp2339) + (_tmp2340 * _tmp2340) + (_tmp2341 * _tmp2341) +
                      (_tmp2345 * _tmp2345) + (_tmp2346 * _tmp2346) + (_tmp2347 * _tmp2347) +
                      (_tmp2348 * _tmp2348) + (_tmp2352 * _tmp2352) + (_tmp2353 * _tmp2353) +
                      (_tmp2357 * _tmp2357) + (_tmp2361 * _tmp2361) + (_tmp2366 * _tmp2366) +
                      (_tmp2370 * _tmp2370) + (_tmp2374 * _tmp2374) + (_tmp2379 * _tmp2379) +
                      _tmp2380 + _tmp2381 + (_tmp2387 * _tmp2387) + (_tmp2388 * _tmp2388) +
                      (_tmp2389 * _tmp2389) + (_tmp2395 * _tmp2395) + (_tmp2396 * _tmp2396) +
                      (_tmp2397 * _tmp2397) + (_tmp2398 * _tmp2398) + (_tmp2399 * _tmp2399) +
                      (_tmp2403 * _tmp2403) + (_tmp2404 * _tmp2404) + (_tmp2408 * _tmp2408) +
                      (_tmp2409 * _tmp2409) + (_tmp2410 * _tmp2410) + (_tmp2411 * _tmp2411) +
                      (_tmp2412 * _tmp2412) + (_tmp2413 * _tmp2413);
    H_value_ptr[99] =
        _tmp2305 * _tmp2418 + _tmp2310 * _tmp2475 + _tmp2311 * _tmp2428 + _tmp2315 * _tmp2423 +
        _tmp2319 * _tmp2432 + _tmp2320 * _tmp2446 + _tmp2324 * _tmp2436 + _tmp2329 * _tmp2460 +
        _tmp2334 * _tmp2441 + _tmp2339 * _tmp2445 + _tmp2340 * _tmp2419 + _tmp2341 * _tmp2451 +
        _tmp2345 * _tmp2456 + _tmp2346 * _tmp2503 + _tmp2347 * _tmp2498 + _tmp2348 * _tmp2461 +
        _tmp2352 * _tmp2465 + _tmp2353 * _tmp2486 + _tmp2357 * _tmp2507 + _tmp2361 * _tmp2492 +
        _tmp2366 * _tmp2480 + _tmp2370 * _tmp2487 + _tmp2374 * _tmp2450 + _tmp2379 * _tmp2520 +
        _tmp2387 * _tmp2513 + _tmp2388 * _tmp2505 + _tmp2389 * _tmp2452 + _tmp2395 * _tmp2497 +
        _tmp2396 * _tmp2469 + _tmp2397 * _tmp2473 + _tmp2398 * _tmp2496 + _tmp2399 * _tmp2504 +
        _tmp2403 * _tmp2506 + _tmp2404 * _tmp2508 + _tmp2408 * _tmp2509 + _tmp2409 * _tmp2502 +
        _tmp2410 * _tmp2519 + _tmp2411 * _tmp2491 + _tmp2412 * _tmp2485 + _tmp2413 * _tmp2514;
    H_value_ptr[100] = _tmp2395 * _tmp2526 + _tmp2398 * _tmp2527;
    H_value_ptr[101] = _tmp2370 * _tmp2533 + _tmp2396 * _tmp2534;
    H_value_ptr[102] = _tmp2361 * _tmp2540 + _tmp2397 * _tmp2541;
    H_value_ptr[103] = _tmp2352 * _tmp2548 + _tmp2353 * _tmp2550;
    H_value_ptr[104] = _tmp2366 * _tmp2556 + _tmp2399 * _tmp2557;
    H_value_ptr[105] = _tmp2403 * _tmp2563 + _tmp2409 * _tmp2562;
    H_value_ptr[106] = _tmp2357 * _tmp2569 + _tmp2411 * _tmp2568;
    H_value_ptr[107] = _tmp2408 * _tmp2575 + _tmp2412 * _tmp2573;
    H_value_ptr[108] = _tmp2387 * _tmp2581 + _tmp2413 * _tmp2579;
    H_value_ptr[109] = _tmp2379 * _tmp2586 + _tmp2410 * _tmp2587;
    H_value_ptr[110] = _tmp2345 * _tmp2592 + _tmp2348 * _tmp2593;
    H_value_ptr[111] = _tmp2374 * _tmp2599 + _tmp2389 * _tmp2598;
    H_value_ptr[112] = _tmp2339 * _tmp2605 + _tmp2347 * _tmp2604;
    H_value_ptr[113] = _tmp2334 * _tmp2611 + _tmp2404 * _tmp2610;
    H_value_ptr[114] = _tmp2329 * _tmp2617 + _tmp2388 * _tmp2616;
    H_value_ptr[115] = _tmp2324 * _tmp2622 + _tmp2346 * _tmp2623;
    H_value_ptr[116] = _tmp2319 * _tmp2628 + _tmp2341 * _tmp2629;
    H_value_ptr[117] = _tmp2310 * _tmp2634 + _tmp2311 * _tmp2635;
    H_value_ptr[118] = _tmp2315 * _tmp2640 + _tmp2320 * _tmp2641;
    H_value_ptr[119] = _tmp2305 * _tmp2646 + _tmp2340 * _tmp2647;
    H_value_ptr[120] = (_tmp2418 * _tmp2418) + (_tmp2419 * _tmp2419) + (_tmp2423 * _tmp2423) +
                       (_tmp2428 * _tmp2428) + (_tmp2432 * _tmp2432) + (_tmp2436 * _tmp2436) +
                       (_tmp2441 * _tmp2441) + (_tmp2445 * _tmp2445) + (_tmp2446 * _tmp2446) +
                       (_tmp2450 * _tmp2450) + (_tmp2451 * _tmp2451) + (_tmp2452 * _tmp2452) +
                       (_tmp2456 * _tmp2456) + (_tmp2460 * _tmp2460) + (_tmp2461 * _tmp2461) +
                       (_tmp2465 * _tmp2465) + (_tmp2469 * _tmp2469) + (_tmp2473 * _tmp2473) +
                       _tmp2474 + (_tmp2475 * _tmp2475) + _tmp2476 + (_tmp2480 * _tmp2480) +
                       (_tmp2485 * _tmp2485) + (_tmp2486 * _tmp2486) + (_tmp2487 * _tmp2487) +
                       (_tmp2491 * _tmp2491) + (_tmp2492 * _tmp2492) + (_tmp2496 * _tmp2496) +
                       (_tmp2497 * _tmp2497) + (_tmp2498 * _tmp2498) + (_tmp2502 * _tmp2502) +
                       (_tmp2503 * _tmp2503) + (_tmp2504 * _tmp2504) + (_tmp2505 * _tmp2505) +
                       (_tmp2506 * _tmp2506) + (_tmp2507 * _tmp2507) + (_tmp2508 * _tmp2508) +
                       (_tmp2509 * _tmp2509) + (_tmp2513 * _tmp2513) + (_tmp2514 * _tmp2514) +
                       (_tmp2519 * _tmp2519) + (_tmp2520 * _tmp2520);
    H_value_ptr[121] = _tmp2496 * _tmp2527 + _tmp2497 * _tmp2526;
    H_value_ptr[122] = _tmp2469 * _tmp2534 + _tmp2487 * _tmp2533;
    H_value_ptr[123] = _tmp2473 * _tmp2541 + _tmp2492 * _tmp2540;
    H_value_ptr[124] = _tmp2465 * _tmp2548 + _tmp2486 * _tmp2550;
    H_value_ptr[125] = _tmp2480 * _tmp2556 + _tmp2504 * _tmp2557;
    H_value_ptr[126] = _tmp2502 * _tmp2562 + _tmp2506 * _tmp2563;
    H_value_ptr[127] = _tmp2491 * _tmp2568 + _tmp2507 * _tmp2569;
    H_value_ptr[128] = _tmp2485 * _tmp2573 + _tmp2509 * _tmp2575;
    H_value_ptr[129] = _tmp2513 * _tmp2581 + _tmp2514 * _tmp2579;
    H_value_ptr[130] = _tmp2519 * _tmp2587 + _tmp2520 * _tmp2586;
    H_value_ptr[131] = _tmp2456 * _tmp2592 + _tmp2461 * _tmp2593;
    H_value_ptr[132] = _tmp2450 * _tmp2599 + _tmp2452 * _tmp2598;
    H_value_ptr[133] = _tmp2445 * _tmp2605 + _tmp2498 * _tmp2604;
    H_value_ptr[134] = _tmp2441 * _tmp2611 + _tmp2508 * _tmp2610;
    H_value_ptr[135] = _tmp2460 * _tmp2617 + _tmp2505 * _tmp2616;
    H_value_ptr[136] = _tmp2436 * _tmp2622 + _tmp2503 * _tmp2623;
    H_value_ptr[137] = _tmp2432 * _tmp2628 + _tmp2451 * _tmp2629;
    H_value_ptr[138] = _tmp2428 * _tmp2635 + _tmp2475 * _tmp2634;
    H_value_ptr[139] = _tmp2423 * _tmp2640 + _tmp2446 * _tmp2641;
    H_value_ptr[140] = _tmp2418 * _tmp2646 + _tmp2419 * _tmp2647;
    H_value_ptr[141] = _tmp2521 + (_tmp2526 * _tmp2526) + (_tmp2527 * _tmp2527);
    H_value_ptr[142] = _tmp2528 + (_tmp2533 * _tmp2533) + (_tmp2534 * _tmp2534);
    H_value_ptr[143] = _tmp2535 + (_tmp2540 * _tmp2540) + (_tmp2541 * _tmp2541);
    H_value_ptr[144] = _tmp2542 + (_tmp2548 * _tmp2548) + (_tmp2550 * _tmp2550);
    H_value_ptr[145] = _tmp2551 + (_tmp2556 * _tmp2556) + (_tmp2557 * _tmp2557);
    H_value_ptr[146] = _tmp2558 + (_tmp2562 * _tmp2562) + (_tmp2563 * _tmp2563);
    H_value_ptr[147] = _tmp2564 + (_tmp2568 * _tmp2568) + (_tmp2569 * _tmp2569);
    H_value_ptr[148] = (_tmp2573 * _tmp2573) + _tmp2574 + (_tmp2575 * _tmp2575);
    H_value_ptr[149] = (_tmp2579 * _tmp2579) + _tmp2580 + (_tmp2581 * _tmp2581);
    H_value_ptr[150] = _tmp2582 + (_tmp2586 * _tmp2586) + (_tmp2587 * _tmp2587);
    H_value_ptr[151] = _tmp2588 + (_tmp2592 * _tmp2592) + (_tmp2593 * _tmp2593);
    H_value_ptr[152] = _tmp2594 + (_tmp2598 * _tmp2598) + (_tmp2599 * _tmp2599);
    H_value_ptr[153] = _tmp2600 + (_tmp2604 * _tmp2604) + (_tmp2605 * _tmp2605);
    H_value_ptr[154] = _tmp2606 + (_tmp2610 * _tmp2610) + (_tmp2611 * _tmp2611);
    H_value_ptr[155] = _tmp2612 + (_tmp2616 * _tmp2616) + (_tmp2617 * _tmp2617);
    H_value_ptr[156] = _tmp2618 + (_tmp2622 * _tmp2622) + (_tmp2623 * _tmp2623);
    H_value_ptr[157] = _tmp2624 + (_tmp2628 * _tmp2628) + (_tmp2629 * _tmp2629);
    H_value_ptr[158] = _tmp2630 + (_tmp2634 * _tmp2634) + (_tmp2635 * _tmp2635);
    H_value_ptr[159] = _tmp2636 + (_tmp2640 * _tmp2640) + (_tmp2641 * _tmp2641);
    H_value_ptr[160] = _tmp2642 + (_tmp2646 * _tmp2646) + (_tmp2647 * _tmp2647);
  }
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace bundle_adjustment_example
