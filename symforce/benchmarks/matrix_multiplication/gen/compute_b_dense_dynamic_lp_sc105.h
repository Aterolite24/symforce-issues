// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     cpp_templates/function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once


#include <Eigen/Dense>



namespace sym {


/**
* This function was autogenerated. Do not modify by hand.
*
* Args:
*     x0: Scalar
*     x1: Scalar
*
* Outputs:
*     result: Matrix105_163
*/
template <typename Scalar>
Eigen::Matrix<Scalar, Eigen::Dynamic, Eigen::Dynamic> ComputeBDenseDynamicLpSc105(const Scalar x0, const Scalar x1) {

    // Total ops: 87

    // Input arrays

    // Intermediate terms (45)
    const Scalar _tmp0 = x0 + 1;
    const Scalar _tmp1 = std::pow(x0, Scalar(2));
    const Scalar _tmp2 = -_tmp1;
    const Scalar _tmp3 = x0 - 1;
    const Scalar _tmp4 = x0 - 3;
    const Scalar _tmp5 = 2*_tmp1;
    const Scalar _tmp6 = 2*x0;
    const Scalar _tmp7 = -_tmp6;
    const Scalar _tmp8 = Scalar(1.0) / (x0);
    const Scalar _tmp9 = _tmp8*x1;
    const Scalar _tmp10 = 4*x1;
    const Scalar _tmp11 = -_tmp10;
    const Scalar _tmp12 = x1 + 2;
    const Scalar _tmp13 = -_tmp12;
    const Scalar _tmp14 = -x1;
    const Scalar _tmp15 = x0 - 2;
    const Scalar _tmp16 = 3*x0;
    const Scalar _tmp17 = 2*_tmp8;
    const Scalar _tmp18 = std::pow(x1, Scalar(2));
    const Scalar _tmp19 = x1 - 2;
    const Scalar _tmp20 = 4*x0;
    const Scalar _tmp21 = _tmp14 + x0;
    const Scalar _tmp22 = 2*x1;
    const Scalar _tmp23 = _tmp22 - 2;
    const Scalar _tmp24 = x1 + 1;
    const Scalar _tmp25 = -_tmp24;
    const Scalar _tmp26 = -_tmp3;
    const Scalar _tmp27 = -_tmp22;
    const Scalar _tmp28 = x1 - 1;
    const Scalar _tmp29 = x1 + 3;
    const Scalar _tmp30 = _tmp1*x1;
    const Scalar _tmp31 = -_tmp28;
    const Scalar _tmp32 = -_tmp18;
    const Scalar _tmp33 = x1 + 4;
    const Scalar _tmp34 = Scalar(1.0) / (x1);
    const Scalar _tmp35 = -x0;
    const Scalar _tmp36 = -_tmp19;
    const Scalar _tmp37 = x0*x1;
    const Scalar _tmp38 = -_tmp37;
    const Scalar _tmp39 = -_tmp21;
    const Scalar _tmp40 = x0 + 2;
    const Scalar _tmp41 = -_tmp40;
    const Scalar _tmp42 = -2*_tmp18;
    const Scalar _tmp43 = _tmp6 + 1;
    const Scalar _tmp44 = -_tmp23;

    // Output terms (1)
    Eigen::Matrix<Scalar, Eigen::Dynamic, Eigen::Dynamic> _result(105, 163);

    _result.setZero();

    _result(0, 0) = x0;
    _result(1, 1) = x1;
    _result(2, 2) = _tmp0 + x1;
    _result(7, 3) = x1;
    _result(8, 4) = -1;
    _result(9, 5) = x1;
    _result(10, 6) = _tmp2;
    _result(11, 7) = _tmp3 + x1;
    _result(18, 9) = _tmp4;
    _result(19, 10) = -_tmp5;
    _result(20, 11) = 1;
    _result(21, 12) = _tmp7;
    _result(22, 13) = Scalar(-1.5);
    _result(23, 14) = x1;
    _result(29, 15) = (Scalar(1)/Scalar(2))*_tmp9;
    _result(30, 16) = -1;
    _result(31, 17) = -1;
    _result(32, 18) = 2;
    _result(33, 19) = _tmp11;
    _result(34, 20) = -1;
    _result(40, 21) = 4;
    _result(41, 22) = -2;
    _result(42, 23) = -1;
    _result(43, 24) = _tmp13;
    _result(44, 25) = _tmp6;
    _result(45, 26) = x0;
    _result(51, 27) = _tmp3;
    _result(52, 28) = _tmp14;
    _result(53, 29) = -2;
    _result(54, 30) = -1;
    _result(55, 31) = 2;
    _result(56, 32) = -1;
    _result(62, 33) = x1;
    _result(63, 34) = 1;
    _result(64, 35) = _tmp11;
    _result(65, 36) = _tmp7;
    _result(66, 37) = _tmp15;
    _result(67, 38) = 4;
    _result(73, 39) = -_tmp16;
    _result(74, 40) = -2;
    _result(75, 41) = 1;
    _result(76, 42) = -_tmp17;
    _result(77, 43) = -_tmp14 - _tmp18;
    _result(78, 44) = 2;
    _result(84, 45) = 2;
    _result(85, 46) = x1;
    _result(86, 47) = -1;
    _result(87, 48) = _tmp19;
    _result(88, 49) = x0;
    _result(89, 50) = -1;
    _result(95, 51) = 3;
    _result(96, 52) = x0;
    _result(97, 53) = x1;
    _result(98, 54) = 1;
    _result(99, 55) = _tmp6;
    _result(100, 56) = _tmp20;
    _result(102, 57) = _tmp5;
    _result(103, 58) = _tmp19;
    _result(104, 59) = _tmp3;
    _result(1, 60) = 2;
    _result(4, 60) = _tmp15;
    _result(0, 61) = _tmp7;
    _result(1, 61) = Scalar(-1.0);
    _result(5, 61) = _tmp14;
    _result(0, 62) = _tmp16;
    _result(1, 62) = _tmp0;
    _result(6, 62) = Scalar(-1.0);
    _result(13, 63) = -1;
    _result(3, 64) = _tmp21;
    _result(12, 64) = _tmp3;
    _result(14, 64) = -_tmp20;
    _result(4, 65) = _tmp12*x1;
    _result(7, 65) = -Scalar(0.5)*x0;
    _result(15, 65) = _tmp7;
    _result(5, 66) = _tmp2;
    _result(8, 66) = _tmp6;
    _result(16, 66) = -2;
    _result(6, 67) = 3;
    _result(9, 67) = _tmp23;
    _result(17, 67) = _tmp9 + 2;
    _result(7, 68) = _tmp25;
    _result(10, 68) = x1;
    _result(8, 69) = _tmp5;
    _result(11, 69) = _tmp26;
    _result(9, 70) = -1;
    _result(12, 70) = _tmp13;
    _result(10, 71) = 4;
    _result(11, 71) = x0;
    _result(15, 71) = x0;
    _result(10, 72) = 3;
    _result(11, 72) = 2;
    _result(16, 72) = _tmp27;
    _result(10, 73) = 2;
    _result(11, 73) = _tmp0;
    _result(17, 73) = 4;
    _result(13, 74) = _tmp28;
    _result(14, 74) = _tmp22 + 4;
    _result(24, 74) = 1;
    _result(14, 75) = _tmp14;
    _result(23, 75) = _tmp29;
    _result(25, 75) = _tmp6;
    _result(15, 76) = -1;
    _result(18, 76) = 2;
    _result(26, 76) = -2;
    _result(16, 77) = Scalar(-2.0);
    _result(19, 77) = _tmp6 - 4;
    _result(27, 77) = -4;
    _result(17, 78) = _tmp30;
    _result(20, 78) = _tmp1 - 2;
    _result(28, 78) = 1;
    _result(18, 79) = _tmp15;
    _result(21, 79) = _tmp15;
    _result(19, 80) = -_tmp28*_tmp8;
    _result(22, 80) = 3*x1;
    _result(20, 81) = _tmp31;
    _result(23, 81) = -2;
    _result(21, 82) = -2;
    _result(22, 82) = x1;
    _result(26, 82) = -3;
    _result(21, 83) = x0;
    _result(22, 83) = _tmp32;
    _result(27, 83) = x1;
    _result(21, 84) = -2;
    _result(22, 84) = _tmp14;
    _result(28, 84) = _tmp33;
    _result(24, 85) = _tmp34;
    _result(25, 85) = _tmp22 + 2;
    _result(35, 85) = 1;
    _result(25, 86) = x1;
    _result(34, 86) = _tmp6 + 2;
    _result(36, 86) = x1;
    _result(26, 87) = _tmp31;
    _result(29, 87) = _tmp22;
    _result(37, 87) = 1;
    _result(27, 88) = -3;
    _result(30, 88) = x0;
    _result(38, 88) = -1;
    _result(28, 89) = -2;
    _result(31, 89) = _tmp25;
    _result(39, 89) = _tmp35;
    _result(29, 90) = _tmp13;
    _result(32, 90) = _tmp29;
    _result(30, 91) = -x0 - x1;
    _result(33, 91) = -3;
    _result(31, 92) = -2;
    _result(34, 92) = _tmp27;
    _result(32, 93) = x0;
    _result(33, 93) = _tmp36;
    _result(32, 94) = -_tmp15;
    _result(33, 94) = _tmp0*x1;
    _result(38, 94) = 1;
    _result(32, 95) = -Scalar(1)/Scalar(2)*x1;
    _result(33, 95) = _tmp22;
    _result(39, 95) = 2;
    _result(35, 96) = x0;
    _result(36, 96) = -1;
    _result(46, 96) = -2;
    _result(36, 97) = -2;
    _result(45, 97) = -2;
    _result(47, 97) = Scalar(-3.0);
    _result(37, 98) = _tmp25;
    _result(40, 98) = x1;
    _result(48, 98) = x1;
    _result(38, 99) = _tmp4;
    _result(41, 99) = _tmp33;
    _result(49, 99) = 2;
    _result(39, 100) = _tmp22;
    _result(42, 100) = _tmp22;
    _result(50, 100) = -2;
    _result(40, 101) = _tmp7;
    _result(43, 101) = -2*_tmp34 + x0;
    _result(41, 102) = _tmp26;
    _result(44, 102) = -5;
    _result(42, 103) = -2;
    _result(45, 103) = 1;
    _result(44, 104) = _tmp3;
    _result(48, 104) = _tmp38;
    _result(43, 105) = _tmp19;
    _result(44, 105) = -6;
    _result(49, 105) = 4;
    _result(43, 106) = -2;
    _result(44, 106) = _tmp19;
    _result(50, 106) = _tmp35;
    _result(46, 107) = _tmp19;
    _result(47, 107) = _tmp4;
    _result(57, 107) = 3;
    _result(47, 108) = 1;
    _result(56, 108) = x0;
    _result(58, 108) = _tmp39;
    _result(48, 109) = x0;
    _result(51, 109) = _tmp22 - 1;
    _result(59, 109) = -2;
    _result(49, 110) = _tmp40;
    _result(52, 110) = _tmp41;
    _result(60, 110) = -1;
    _result(50, 111) = _tmp11;
    _result(53, 111) = _tmp41;
    _result(51, 112) = x0;
    _result(54, 112) = x1;
    _result(52, 113) = -2;
    _result(55, 113) = _tmp32;
    _result(53, 114) = Scalar(1.0);
    _result(56, 114) = 4;
    _result(54, 115) = _tmp42;
    _result(55, 115) = -2;
    _result(59, 115) = 2;
    _result(54, 116) = -3;
    _result(55, 116) = -1;
    _result(60, 116) = -1;
    _result(54, 117) = x1 - 3;
    _result(55, 117) = _tmp6;
    _result(61, 117) = _tmp6;
    _result(57, 118) = _tmp17;
    _result(58, 118) = _tmp6 + 4;
    _result(68, 118) = _tmp28;
    _result(58, 119) = x0;
    _result(67, 119) = -2;
    _result(69, 119) = 2;
    _result(59, 120) = _tmp24;
    _result(62, 120) = -_tmp8;
    _result(70, 120) = x0;
    _result(60, 121) = x0;
    _result(63, 121) = -1;
    _result(71, 121) = 2;
    _result(61, 122) = _tmp38;
    _result(64, 122) = _tmp43;
    _result(72, 122) = -2;
    _result(62, 123) = -2;
    _result(65, 123) = _tmp27;
    _result(63, 124) = -1;
    _result(66, 124) = Scalar(0.5);
    _result(64, 125) = 3;
    _result(67, 125) = _tmp10;
    _result(65, 126) = 2;
    _result(66, 126) = 1;
    _result(70, 126) = _tmp26;
    _result(65, 127) = _tmp43;
    _result(66, 127) = -1;
    _result(71, 127) = 4;
    _result(66, 128) = _tmp36;
    _result(72, 128) = _tmp3*x0;
    _result(68, 129) = _tmp42;
    _result(69, 129) = _tmp6;
    _result(79, 129) = _tmp44;
    _result(69, 130) = -2;
    _result(78, 130) = _tmp27;
    _result(80, 130) = Scalar(-1.0);
    _result(70, 131) = -2;
    _result(73, 131) = _tmp6;
    _result(71, 132) = -1;
    _result(82, 132) = x0;
    _result(72, 133) = x0;
    _result(75, 133) = _tmp11;
    _result(83, 133) = _tmp25;
    _result(73, 134) = -4;
    _result(76, 134) = -4;
    _result(74, 135) = -3;
    _result(77, 135) = (Scalar(1)/Scalar(2))*_tmp34;
    _result(75, 136) = _tmp28;
    _result(78, 136) = -3;
    _result(76, 137) = x1;
    _result(77, 137) = -1;
    _result(81, 137) = 4;
    _result(76, 138) = 2;
    _result(77, 138) = _tmp36;
    _result(82, 138) = _tmp28;
    _result(76, 139) = -1;
    _result(77, 139) = x1;
    _result(83, 139) = 4;
    _result(79, 140) = _tmp30;
    _result(80, 140) = _tmp2;
    _result(90, 140) = Scalar(-0.5);
    _result(80, 141) = 2 - _tmp6;
    _result(89, 141) = x1 + Scalar(-1.0);
    _result(81, 142) = _tmp25;
    _result(92, 142) = 1;
    _result(82, 143) = _tmp22;
    _result(85, 143) = _tmp39;
    _result(93, 143) = 2;
    _result(83, 144) = _tmp15;
    _result(86, 144) = _tmp11;
    _result(94, 144) = 1;
    _result(84, 145) = x1;
    _result(87, 145) = Scalar(1.0);
    _result(85, 146) = 3;
    _result(88, 146) = -1;
    _result(86, 147) = Scalar(-3.0);
    _result(89, 147) = _tmp26;
    _result(87, 148) = -1;
    _result(88, 148) = -2;
    _result(92, 148) = _tmp44;
    _result(87, 149) = -2;
    _result(88, 149) = _tmp12;
    _result(93, 149) = 1;
    _result(87, 150) = 1;
    _result(88, 150) = -1;
    _result(94, 150) = 2;
    _result(90, 151) = x1;
    _result(91, 151) = -2;
    _result(101, 151) = -2;
    _result(91, 152) = -2;
    _result(100, 152) = -_tmp9;
    _result(92, 153) = _tmp17 + x1;
    _result(95, 153) = _tmp28;
    _result(93, 154) = _tmp26;
    _result(96, 154) = _tmp35;
    _result(94, 155) = _tmp35;
    _result(97, 155) = 4;
    _result(95, 156) = x1;
    _result(98, 156) = -1;
    _result(96, 157) = _tmp8;
    _result(97, 158) = 1;
    _result(100, 158) = _tmp37 - 1;
    _result(98, 159) = -_tmp0;
    _result(99, 159) = -1;
    _result(102, 159) = -3;
    _result(103, 159) = -2;
    _result(98, 160) = -3;
    _result(99, 160) = Scalar(2.0);
    _result(102, 160) = _tmp35;
    _result(103, 160) = 1;
    _result(98, 161) = _tmp22;
    _result(99, 161) = 4;
    _result(102, 161) = -1;
    _result(103, 161) = x1;
    _result(104, 161) = 1;
    _result(101, 162) = _tmp44;
    _result(104, 162) = _tmp27;

    return _result;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
