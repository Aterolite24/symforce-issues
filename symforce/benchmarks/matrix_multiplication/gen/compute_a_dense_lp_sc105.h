// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     cpp_templates/function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once


#include <Eigen/Dense>



namespace sym {


/**
* This function was autogenerated. Do not modify by hand.
*
* Args:
*     x0: Scalar
*     x1: Scalar
*
* Outputs:
*     result: Matrix105_163
*/
template <typename Scalar>
Eigen::Matrix<Scalar, 105, 163> ComputeADenseLpSc105(const Scalar x0, const Scalar x1) {

    // Total ops: 84

    // Input arrays

    // Intermediate terms (43)
    const Scalar _tmp0 = x1 - 1;
    const Scalar _tmp1 = x1 + 1;
    const Scalar _tmp2 = x0 - 2;
    const Scalar _tmp3 = x0 - 1;
    const Scalar _tmp4 = -_tmp3;
    const Scalar _tmp5 = 2*x1;
    const Scalar _tmp6 = -_tmp0;
    const Scalar _tmp7 = std::pow(x0, Scalar(2));
    const Scalar _tmp8 = -_tmp7;
    const Scalar _tmp9 = std::pow(x1, Scalar(2));
    const Scalar _tmp10 = -_tmp9;
    const Scalar _tmp11 = x0 + 2;
    const Scalar _tmp12 = x1 + 2;
    const Scalar _tmp13 = -_tmp12;
    const Scalar _tmp14 = 2*x0;
    const Scalar _tmp15 = x0 + 3;
    const Scalar _tmp16 = (Scalar(1)/Scalar(2))*x1;
    const Scalar _tmp17 = -_tmp1;
    const Scalar _tmp18 = -x1;
    const Scalar _tmp19 = x0 + 1;
    const Scalar _tmp20 = -_tmp19;
    const Scalar _tmp21 = _tmp5 + 4;
    const Scalar _tmp22 = Scalar(1.0) / (x0);
    const Scalar _tmp23 = _tmp18 + x0;
    const Scalar _tmp24 = -_tmp23;
    const Scalar _tmp25 = -_tmp11;
    const Scalar _tmp26 = -_tmp22;
    const Scalar _tmp27 = -_tmp2;
    const Scalar _tmp28 = -_tmp14;
    const Scalar _tmp29 = Scalar(1.0) / (x1);
    const Scalar _tmp30 = -_tmp5;
    const Scalar _tmp31 = -x0*x1;
    const Scalar _tmp32 = -_tmp14 - _tmp5;
    const Scalar _tmp33 = 4*x1;
    const Scalar _tmp34 = x1 - 2;
    const Scalar _tmp35 = -_tmp34;
    const Scalar _tmp36 = _tmp0 + x0;
    const Scalar _tmp37 = 2*_tmp29;
    const Scalar _tmp38 = -x0;
    const Scalar _tmp39 = -_tmp37;
    const Scalar _tmp40 = 4*x0;
    const Scalar _tmp41 = 3*x0;
    const Scalar _tmp42 = -2*_tmp22;

    // Output terms (1)
    Eigen::Matrix<Scalar, 105, 163> _result;

    _result.setZero();

    _result(0, 0) = _tmp0;
    _result(1, 1) = -3;
    _result(2, 2) = _tmp1;
    _result(7, 3) = -2;
    _result(8, 4) = -1;
    _result(9, 5) = _tmp2 + x1;
    _result(10, 6) = _tmp2;
    _result(11, 7) = Scalar(-3.0);
    _result(12, 8) = 2;
    _result(18, 9) = _tmp4;
    _result(19, 10) = _tmp5;
    _result(20, 11) = _tmp6;
    _result(21, 12) = _tmp8;
    _result(22, 13) = _tmp10;
    _result(23, 14) = _tmp11*x0;
    _result(29, 15) = _tmp6;
    _result(30, 16) = _tmp13;
    _result(31, 17) = -4;
    _result(32, 18) = -8;
    _result(33, 19) = _tmp14;
    _result(34, 20) = x0;
    _result(40, 21) = x1;
    _result(41, 22) = 1;
    _result(42, 23) = 1;
    _result(43, 24) = -1;
    _result(44, 25) = x0;
    _result(45, 26) = -4;
    _result(51, 27) = 2;
    _result(52, 28) = -_tmp15;
    _result(53, 29) = 2;
    _result(54, 30) = x0;
    _result(55, 31) = -_tmp16;
    _result(56, 32) = 2;
    _result(62, 33) = 1;
    _result(63, 34) = -8;
    _result(64, 35) = 1;
    _result(65, 36) = 1;
    _result(66, 37) = x1;
    _result(67, 38) = _tmp17;
    _result(73, 39) = _tmp14;
    _result(74, 40) = 1 - _tmp5;
    _result(75, 41) = -1;
    _result(76, 42) = _tmp18;
    _result(77, 43) = Scalar(-3.0);
    _result(78, 44) = 2;
    _result(84, 45) = _tmp15;
    _result(85, 46) = 2;
    _result(86, 47) = -2;
    _result(87, 48) = _tmp20;
    _result(88, 49) = 2;
    _result(89, 50) = -2;
    _result(95, 51) = -2;
    _result(96, 52) = 2;
    _result(97, 53) = _tmp11;
    _result(98, 54) = _tmp20;
    _result(99, 55) = _tmp18;
    _result(100, 56) = 4;
    _result(102, 57) = 2;
    _result(103, 58) = -_tmp21;
    _result(104, 59) = _tmp9 + 2;
    _result(0, 60) = _tmp14 + 1;
    _result(1, 60) = -2;
    _result(4, 60) = -2;
    _result(0, 61) = 2;
    _result(1, 61) = 2;
    _result(5, 61) = -1;
    _result(0, 62) = 1;
    _result(1, 62) = _tmp5;
    _result(6, 62) = 3;
    _result(3, 63) = -1;
    _result(13, 63) = -1;
    _result(3, 64) = -3;
    _result(12, 64) = -1;
    _result(14, 64) = 2;
    _result(4, 65) = -2;
    _result(7, 65) = -_tmp22*x1;
    _result(15, 65) = 1;
    _result(5, 66) = 2;
    _result(8, 66) = 3;
    _result(16, 66) = _tmp5 + 1;
    _result(6, 67) = _tmp24;
    _result(9, 67) = _tmp16;
    _result(17, 67) = _tmp18;
    _result(10, 68) = _tmp25;
    _result(8, 69) = _tmp26;
    _result(11, 69) = _tmp23;
    _result(9, 70) = 2;
    _result(12, 70) = _tmp27;
    _result(10, 71) = 1;
    _result(15, 71) = _tmp6;
    _result(10, 72) = _tmp28;
    _result(11, 72) = -1;
    _result(16, 72) = 2;
    _result(10, 73) = _tmp1;
    _result(11, 73) = 1;
    _result(17, 73) = _tmp3;
    _result(13, 74) = -2;
    _result(14, 74) = -2;
    _result(24, 74) = x0;
    _result(14, 75) = Scalar(-2.0);
    _result(23, 75) = -_tmp29;
    _result(25, 75) = _tmp18;
    _result(15, 76) = 2;
    _result(18, 76) = _tmp24;
    _result(26, 76) = 2;
    _result(16, 77) = _tmp30;
    _result(19, 77) = _tmp11;
    _result(27, 77) = _tmp14 + 2;
    _result(17, 78) = x0;
    _result(20, 78) = x0;
    _result(28, 78) = _tmp31;
    _result(18, 79) = _tmp32;
    _result(21, 79) = _tmp2*_tmp29;
    _result(19, 80) = _tmp14;
    _result(22, 80) = _tmp20;
    _result(20, 81) = _tmp18;
    _result(21, 82) = -1;
    _result(22, 82) = _tmp32;
    _result(26, 82) = _tmp20;
    _result(21, 83) = Scalar(-0.5);
    _result(22, 83) = _tmp25;
    _result(27, 83) = -1;
    _result(21, 84) = -1;
    _result(22, 84) = _tmp20;
    _result(28, 84) = _tmp1;
    _result(25, 85) = 2;
    _result(35, 85) = x1;
    _result(25, 86) = _tmp13;
    _result(34, 86) = Scalar(1.0);
    _result(36, 86) = _tmp20;
    _result(26, 87) = _tmp19;
    _result(29, 87) = x0;
    _result(37, 87) = 4 - _tmp5;
    _result(27, 88) = -2;
    _result(30, 88) = -1;
    _result(38, 88) = x0;
    _result(28, 89) = _tmp30;
    _result(31, 89) = -2;
    _result(39, 89) = -3;
    _result(29, 90) = _tmp0;
    _result(32, 90) = -2;
    _result(30, 91) = -_tmp33;
    _result(33, 91) = _tmp27;
    _result(31, 92) = x0;
    _result(32, 93) = _tmp35;
    _result(33, 93) = Scalar(-3.0);
    _result(37, 93) = -2;
    _result(32, 94) = (Scalar(1)/Scalar(2))*x0;
    _result(33, 94) = _tmp36;
    _result(32, 95) = _tmp35;
    _result(33, 95) = x1;
    _result(35, 96) = 2;
    _result(36, 96) = _tmp5;
    _result(46, 96) = _tmp37 + 2;
    _result(36, 97) = _tmp18;
    _result(45, 97) = 2;
    _result(47, 97) = -2;
    _result(37, 98) = 1;
    _result(40, 98) = 4;
    _result(48, 98) = 1;
    _result(38, 99) = -1;
    _result(41, 99) = x1 + 3;
    _result(49, 99) = _tmp27;
    _result(39, 100) = _tmp11;
    _result(42, 100) = 2;
    _result(50, 100) = -2;
    _result(40, 101) = _tmp33;
    _result(43, 101) = 4;
    _result(41, 102) = _tmp35;
    _result(44, 102) = _tmp23;
    _result(42, 103) = _tmp14;
    _result(45, 103) = x0;
    _result(43, 104) = 1;
    _result(44, 104) = 6;
    _result(43, 105) = Scalar(1.0);
    _result(44, 105) = x1;
    _result(49, 105) = x0;
    _result(43, 106) = -_tmp12 - _tmp38;
    _result(44, 106) = x0;
    _result(50, 106) = _tmp5;
    _result(47, 107) = _tmp20;
    _result(57, 107) = _tmp31;
    _result(47, 108) = -4;
    _result(56, 108) = _tmp18;
    _result(58, 108) = -2;
    _result(48, 109) = _tmp31;
    _result(51, 109) = 4;
    _result(59, 109) = -1;
    _result(49, 110) = -2;
    _result(52, 110) = -1;
    _result(60, 110) = -1;
    _result(50, 111) = _tmp0;
    _result(53, 111) = -2;
    _result(51, 112) = -_tmp30 - x0;
    _result(54, 112) = x0;
    _result(52, 113) = _tmp26;
    _result(55, 113) = 1;
    _result(53, 114) = _tmp10;
    _result(56, 114) = _tmp19;
    _result(54, 115) = x0;
    _result(55, 115) = -2;
    _result(59, 115) = -4;
    _result(54, 116) = _tmp6;
    _result(55, 116) = _tmp30;
    _result(60, 116) = -5;
    _result(54, 117) = x1 - 3;
    _result(55, 117) = _tmp39;
    _result(61, 117) = -1;
    _result(57, 118) = 3;
    _result(58, 118) = 3;
    _result(68, 118) = x0;
    _result(58, 119) = 1;
    _result(67, 119) = _tmp34;
    _result(69, 119) = _tmp21;
    _result(62, 120) = -1;
    _result(70, 120) = x1;
    _result(60, 121) = x0;
    _result(63, 121) = x1;
    _result(71, 121) = -1;
    _result(61, 122) = _tmp37;
    _result(64, 122) = _tmp36;
    _result(72, 122) = _tmp14 + x1;
    _result(62, 123) = _tmp40;
    _result(65, 123) = -4;
    _result(63, 124) = _tmp25;
    _result(66, 124) = _tmp0;
    _result(64, 125) = _tmp13;
    _result(67, 125) = -1;
    _result(65, 126) = -1;
    _result(66, 126) = _tmp6;
    _result(70, 126) = _tmp4;
    _result(65, 127) = -3;
    _result(66, 127) = _tmp0;
    _result(71, 127) = _tmp19;
    _result(65, 128) = 1;
    _result(66, 128) = 2;
    _result(72, 128) = x0;
    _result(68, 129) = _tmp27;
    _result(69, 129) = 1;
    _result(79, 129) = _tmp7 + 1;
    _result(69, 130) = -2;
    _result(78, 130) = _tmp20;
    _result(80, 130) = 4;
    _result(70, 131) = -_tmp40;
    _result(73, 131) = _tmp17;
    _result(81, 131) = 1;
    _result(71, 132) = -2;
    _result(74, 132) = _tmp41;
    _result(82, 132) = -2;
    _result(72, 133) = Scalar(1.0);
    _result(75, 133) = _tmp34;
    _result(83, 133) = -_tmp14 - _tmp30;
    _result(76, 134) = _tmp5 + x0;
    _result(74, 135) = -_tmp39 - 2;
    _result(77, 135) = _tmp3;
    _result(75, 136) = _tmp4;
    _result(78, 136) = 1;
    _result(76, 137) = _tmp20;
    _result(77, 137) = _tmp35;
    _result(81, 137) = _tmp11;
    _result(77, 138) = 2;
    _result(82, 138) = -2;
    _result(76, 139) = 2;
    _result(77, 139) = _tmp8;
    _result(83, 139) = -2;
    _result(79, 140) = -2;
    _result(80, 140) = x1;
    _result(90, 140) = 1;
    _result(80, 141) = x0;
    _result(89, 141) = x0;
    _result(91, 141) = _tmp1;
    _result(81, 142) = _tmp11;
    _result(84, 142) = x0 + x1;
    _result(92, 142) = x1;
    _result(82, 143) = _tmp35;
    _result(85, 143) = _tmp9 - 2;
    _result(93, 143) = x0;
    _result(83, 144) = -1;
    _result(94, 144) = -1;
    _result(84, 145) = -4;
    _result(88, 146) = x1;
    _result(86, 147) = _tmp0*x1;
    _result(89, 147) = -1;
    _result(88, 148) = _tmp5;
    _result(92, 148) = x0;
    _result(88, 149) = -2;
    _result(93, 149) = x0;
    _result(88, 150) = 4;
    _result(94, 150) = _tmp30;
    _result(90, 151) = -1;
    _result(91, 151) = -1;
    _result(101, 151) = Scalar(-2.0);
    _result(91, 152) = 2;
    _result(100, 152) = -2;
    _result(92, 153) = _tmp28;
    _result(95, 153) = 1;
    _result(93, 154) = -1;
    _result(96, 154) = x0;
    _result(94, 155) = _tmp28;
    _result(97, 155) = _tmp37 + x1;
    _result(95, 156) = -2;
    _result(98, 156) = 2;
    _result(96, 157) = x1;
    _result(99, 157) = _tmp35;
    _result(97, 158) = Scalar(2.0);
    _result(100, 158) = -2;
    _result(98, 159) = _tmp41;
    _result(99, 159) = _tmp20;
    _result(102, 159) = _tmp38;
    _result(98, 160) = -1;
    _result(102, 160) = _tmp6;
    _result(103, 160) = Scalar(-1.0);
    _result(98, 161) = -2;
    _result(99, 161) = _tmp42;
    _result(102, 161) = _tmp16 + Scalar(1)/Scalar(2);
    _result(103, 161) = Scalar(1.0)*x0;
    _result(101, 162) = 1;
    _result(104, 162) = _tmp42;

    return _result;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
