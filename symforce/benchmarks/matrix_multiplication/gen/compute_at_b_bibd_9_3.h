// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     cpp_templates/function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once


#include <Eigen/Dense>
#include <Eigen/Sparse>



namespace sym {


/**
* This function was autogenerated. Do not modify by hand.
*
* Args:
*     x0: Scalar
*     x1: Scalar
*
* Outputs:
*     result: Matrix84_84
*
*/
template <typename Scalar>
__attribute__((noinline))
Eigen::SparseMatrix<Scalar> ComputeAtBBibd93(const Scalar x0, const Scalar x1) {

    // Total ops: 835

    // Input arrays

    // Intermediate terms (301)
    const Scalar _tmp0 = std::pow(x0, Scalar(2));
    const Scalar _tmp1 = x1 + 2;
    const Scalar _tmp2 = x0 - 1;
    const Scalar _tmp3 = x1 - 1;
    const Scalar _tmp4 = -_tmp3;
    const Scalar _tmp5 = 12*x0;
    const Scalar _tmp6 = 6*x0;
    const Scalar _tmp7 = 2*x1;
    const Scalar _tmp8 = x0 + 1;
    const Scalar _tmp9 = _tmp8*x0;
    const Scalar _tmp10 = 2*_tmp9;
    const Scalar _tmp11 = -_tmp10;
    const Scalar _tmp12 = 3*x1;
    const Scalar _tmp13 = _tmp12 + 6;
    const Scalar _tmp14 = 8*x1;
    const Scalar _tmp15 = _tmp2*x1;
    const Scalar _tmp16 = -_tmp15;
    const Scalar _tmp17 = _tmp7*x0;
    const Scalar _tmp18 = -_tmp17;
    const Scalar _tmp19 = -x1;
    const Scalar _tmp20 = std::pow(x1, Scalar(2));
    const Scalar _tmp21 = 2*_tmp20;
    const Scalar _tmp22 = -_tmp21;
    const Scalar _tmp23 = x1 - 2;
    const Scalar _tmp24 = _tmp23*_tmp8;
    const Scalar _tmp25 = x1 - 4;
    const Scalar _tmp26 = -_tmp9;
    const Scalar _tmp27 = 4*x0;
    const Scalar _tmp28 = -_tmp27;
    const Scalar _tmp29 = 2*x0;
    const Scalar _tmp30 = _tmp29 + 1;
    const Scalar _tmp31 = -_tmp1;
    const Scalar _tmp32 = -_tmp29;
    const Scalar _tmp33 = Scalar(2.0)*x1;
    const Scalar _tmp34 = _tmp33*x0;
    const Scalar _tmp35 = Scalar(4.0)*x0;
    const Scalar _tmp36 = 4*x1;
    const Scalar _tmp37 = _tmp0*_tmp36;
    const Scalar _tmp38 = x0*x1;
    const Scalar _tmp39 = [&]() { const Scalar base = x1; return base * base * base; }();
    const Scalar _tmp40 = _tmp27*x1;
    const Scalar _tmp41 = -_tmp20;
    const Scalar _tmp42 = x1 + 1;
    const Scalar _tmp43 = (Scalar(1)/Scalar(2))*x1;
    const Scalar _tmp44 = _tmp42*_tmp43;
    const Scalar _tmp45 = -_tmp38;
    const Scalar _tmp46 = 4*_tmp20;
    const Scalar _tmp47 = -_tmp46;
    const Scalar _tmp48 = _tmp21*x0;
    const Scalar _tmp49 = -_tmp48;
    const Scalar _tmp50 = x0 + 2;
    const Scalar _tmp51 = _tmp20*_tmp50;
    const Scalar _tmp52 = _tmp20*x0;
    const Scalar _tmp53 = -_tmp52;
    const Scalar _tmp54 = 8*x0;
    const Scalar _tmp55 = -_tmp54;
    const Scalar _tmp56 = _tmp7 + 4;
    const Scalar _tmp57 = -_tmp56;
    const Scalar _tmp58 = x0 + x1;
    const Scalar _tmp59 = _tmp58*_tmp7;
    const Scalar _tmp60 = _tmp50*x0;
    const Scalar _tmp61 = -_tmp60;
    const Scalar _tmp62 = -_tmp0;
    const Scalar _tmp63 = _tmp29 + _tmp7;
    const Scalar _tmp64 = _tmp63*x0;
    const Scalar _tmp65 = -_tmp64;
    const Scalar _tmp66 = -x0;
    const Scalar _tmp67 = _tmp14*x0;
    const Scalar _tmp68 = -_tmp67;
    const Scalar _tmp69 = _tmp1*_tmp7;
    const Scalar _tmp70 = -_tmp69;
    const Scalar _tmp71 = Scalar(1.0)*x1;
    const Scalar _tmp72 = -_tmp6;
    const Scalar _tmp73 = _tmp29 + 2;
    const Scalar _tmp74 = 4*_tmp0;
    const Scalar _tmp75 = -_tmp74;
    const Scalar _tmp76 = -_tmp7;
    const Scalar _tmp77 = x1 + Scalar(-0.5);
    const Scalar _tmp78 = x1 - 3;
    const Scalar _tmp79 = _tmp29*_tmp78;
    const Scalar _tmp80 = _tmp7 + 2;
    const Scalar _tmp81 = _tmp7 - 6;
    const Scalar _tmp82 = _tmp38 - 2;
    const Scalar _tmp83 = 2*_tmp0;
    const Scalar _tmp84 = -_tmp83;
    const Scalar _tmp85 = _tmp29 - 2;
    const Scalar _tmp86 = -_tmp85;
    const Scalar _tmp87 = _tmp7 - 2;
    const Scalar _tmp88 = _tmp27 - 4;
    const Scalar _tmp89 = Scalar(1.0) / (x0);
    const Scalar _tmp90 = _tmp12 + 3;
    const Scalar _tmp91 = 3*x0;
    const Scalar _tmp92 = _tmp12 + _tmp91;
    const Scalar _tmp93 = _tmp91 - 9;
    const Scalar _tmp94 = -_tmp8;
    const Scalar _tmp95 = -_tmp58;
    const Scalar _tmp96 = _tmp23*_tmp58;
    const Scalar _tmp97 = -_tmp63;
    const Scalar _tmp98 = -_tmp42;
    const Scalar _tmp99 = _tmp20*_tmp23;
    const Scalar _tmp100 = -_tmp23;
    const Scalar _tmp101 = _tmp2*x0;
    const Scalar _tmp102 = -_tmp87;
    const Scalar _tmp103 = _tmp58*x1;
    const Scalar _tmp104 = -_tmp2;
    const Scalar _tmp105 = _tmp7 + 6;
    const Scalar _tmp106 = -_tmp73;
    const Scalar _tmp107 = _tmp50*x1;
    const Scalar _tmp108 = _tmp2*_tmp7;
    const Scalar _tmp109 = _tmp63 - 2;
    const Scalar _tmp110 = Scalar(1.0)*x0;
    const Scalar _tmp111 = _tmp1*x0;
    const Scalar _tmp112 = -_tmp111;
    const Scalar _tmp113 = _tmp7 - 4;
    const Scalar _tmp114 = _tmp113*_tmp2;
    const Scalar _tmp115 = -_tmp114;
    const Scalar _tmp116 = _tmp101*_tmp7;
    const Scalar _tmp117 = 5*x0;
    const Scalar _tmp118 = _tmp117 - 5;
    const Scalar _tmp119 = x0 - 2;
    const Scalar _tmp120 = _tmp119*_tmp29;
    const Scalar _tmp121 = -_tmp120;
    const Scalar _tmp122 = _tmp119*x1;
    const Scalar _tmp123 = -_tmp122;
    const Scalar _tmp124 = _tmp119*x0;
    const Scalar _tmp125 = _tmp29 + _tmp76;
    const Scalar _tmp126 = _tmp29 - 8;
    const Scalar _tmp127 = _tmp42*_tmp7;
    const Scalar _tmp128 = -_tmp40;
    const Scalar _tmp129 = (Scalar(1)/Scalar(2))*_tmp60;
    const Scalar _tmp130 = _tmp42*x1;
    const Scalar _tmp131 = -_tmp130;
    const Scalar _tmp132 = _tmp7 + 1;
    const Scalar _tmp133 = x1 + 3;
    const Scalar _tmp134 = Scalar(0.5)*x1;
    const Scalar _tmp135 = _tmp12*x0;
    const Scalar _tmp136 = _tmp8*x1;
    const Scalar _tmp137 = -_tmp136;
    const Scalar _tmp138 = _tmp0*_tmp7;
    const Scalar _tmp139 = Scalar(0.5)*x0;
    const Scalar _tmp140 = _tmp42 + _tmp66;
    const Scalar _tmp141 = _tmp1*_tmp29;
    const Scalar _tmp142 = -_tmp71;
    const Scalar _tmp143 = _tmp8 + x1;
    const Scalar _tmp144 = _tmp110 + Scalar(-1.0);
    const Scalar _tmp145 = -_tmp79;
    const Scalar _tmp146 = x1 + 4;
    const Scalar _tmp147 = _tmp146*_tmp29;
    const Scalar _tmp148 = _tmp42*x0;
    const Scalar _tmp149 = _tmp146*x1;
    const Scalar _tmp150 = _tmp146*x0;
    const Scalar _tmp151 = -_tmp146;
    const Scalar _tmp152 = _tmp23*_tmp29;
    const Scalar _tmp153 = -_tmp152;
    const Scalar _tmp154 = -_tmp23*x1;
    const Scalar _tmp155 = _tmp0*x1;
    const Scalar _tmp156 = -_tmp155;
    const Scalar _tmp157 = _tmp23*x0;
    const Scalar _tmp158 = Scalar(1.0)*_tmp38;
    const Scalar _tmp159 = Scalar(2.0)*x0;
    const Scalar _tmp160 = _tmp27 - 8;
    const Scalar _tmp161 = -_tmp160;
    const Scalar _tmp162 = 12*x1;
    const Scalar _tmp163 = _tmp2 + x1;
    const Scalar _tmp164 = _tmp27 + 4;
    const Scalar _tmp165 = -_tmp164;
    const Scalar _tmp166 = x0 - 3;
    const Scalar _tmp167 = _tmp166*x1;
    const Scalar _tmp168 = _tmp6*x1;
    const Scalar _tmp169 = 6*x1;
    const Scalar _tmp170 = -_tmp169;
    const Scalar _tmp171 = _tmp23*_tmp7;
    const Scalar _tmp172 = _tmp23*_tmp42;
    const Scalar _tmp173 = -_tmp171;
    const Scalar _tmp174 = 8*_tmp0;
    const Scalar _tmp175 = _tmp36 - 8;
    const Scalar _tmp176 = -_tmp175;
    const Scalar _tmp177 = _tmp19 + _tmp50;
    const Scalar _tmp178 = 2*_tmp89;
    const Scalar _tmp179 = Scalar(1.0)*_tmp89;
    const Scalar _tmp180 = _tmp43*x0;
    const Scalar _tmp181 = -_tmp178;
    const Scalar _tmp182 = _tmp27 + 8;
    const Scalar _tmp183 = _tmp29 + 4;
    const Scalar _tmp184 = _tmp19 + x0;
    const Scalar _tmp185 = -_tmp183;
    const Scalar _tmp186 = _tmp91 + 6;
    const Scalar _tmp187 = -_tmp186;
    const Scalar _tmp188 = -_tmp89;
    const Scalar _tmp189 = _tmp29*_tmp50;
    const Scalar _tmp190 = -_tmp189;
    const Scalar _tmp191 = _tmp110 + Scalar(2.0);
    const Scalar _tmp192 = _tmp50*_tmp7;
    const Scalar _tmp193 = -_tmp192;
    const Scalar _tmp194 = -_tmp179;
    const Scalar _tmp195 = _tmp1*_tmp50;
    const Scalar _tmp196 = _tmp50*_tmp8;
    const Scalar _tmp197 = _tmp146*_tmp23;
    const Scalar _tmp198 = _tmp7*_tmp8;
    const Scalar _tmp199 = _tmp29*_tmp58;
    const Scalar _tmp200 = (Scalar(1)/Scalar(2))*_tmp89;
    const Scalar _tmp201 = _tmp29 - 4;
    const Scalar _tmp202 = _tmp201*_tmp42;
    const Scalar _tmp203 = -_tmp166;
    const Scalar _tmp204 = -_tmp38*_tmp50;
    const Scalar _tmp205 = _tmp201*_tmp29;
    const Scalar _tmp206 = -_tmp91;
    const Scalar _tmp207 = _tmp201*x0;
    const Scalar _tmp208 = Scalar(3.0)*x0;
    const Scalar _tmp209 = _tmp9*x1;
    const Scalar _tmp210 = -_tmp110;
    const Scalar _tmp211 = _tmp177*x1;
    const Scalar _tmp212 = -_tmp36;
    const Scalar _tmp213 = -_tmp80;
    const Scalar _tmp214 = -_tmp7*_tmp9;
    const Scalar _tmp215 = _tmp87*x1;
    const Scalar _tmp216 = -_tmp147;
    const Scalar _tmp217 = _tmp38*_tmp87;
    const Scalar _tmp218 = _tmp32 + _tmp7;
    const Scalar _tmp219 = _tmp29*_tmp87;
    const Scalar _tmp220 = -_tmp217;
    const Scalar _tmp221 = _tmp36 - 4;
    const Scalar _tmp222 = -_tmp126;
    const Scalar _tmp223 = _tmp119*_tmp23;
    const Scalar _tmp224 = -_tmp157;
    const Scalar _tmp225 = -_tmp201;
    const Scalar _tmp226 = _tmp119*_tmp50;
    const Scalar _tmp227 = -_tmp148;
    const Scalar _tmp228 = [&]() { const Scalar base = x0; return base * base * base; }();
    const Scalar _tmp229 = -_tmp228;
    const Scalar _tmp230 = _tmp25*x1;
    const Scalar _tmp231 = _tmp1*x1;
    const Scalar _tmp232 = _tmp0*_tmp50;
    const Scalar _tmp233 = -_tmp221;
    const Scalar _tmp234 = _tmp3*x1;
    const Scalar _tmp235 = -_tmp159 + Scalar(-4.0);
    const Scalar _tmp236 = -_tmp12;
    const Scalar _tmp237 = _tmp113*x0;
    const Scalar _tmp238 = -_tmp237;
    const Scalar _tmp239 = _tmp27 + _tmp36;
    const Scalar _tmp240 = -_tmp73*x0;
    const Scalar _tmp241 = -_tmp125;
    const Scalar _tmp242 = _tmp184*x1;
    const Scalar _tmp243 = _tmp184*x0;
    const Scalar _tmp244 = _tmp42*_tmp50;
    const Scalar _tmp245 = Scalar(1.0) / (x1);
    const Scalar _tmp246 = 2*_tmp245;
    const Scalar _tmp247 = _tmp71 + Scalar(1.0);
    const Scalar _tmp248 = _tmp29*_tmp42;
    const Scalar _tmp249 = _tmp3*_tmp38;
    const Scalar _tmp250 = -_tmp249;
    const Scalar _tmp251 = Scalar(3.0)*x1;
    const Scalar _tmp252 = _tmp201*x1;
    const Scalar _tmp253 = -_tmp252;
    const Scalar _tmp254 = _tmp113*_tmp58;
    const Scalar _tmp255 = -_tmp113*_tmp7;
    const Scalar _tmp256 = -_tmp184*_tmp29;
    const Scalar _tmp257 = x0 - 4;
    const Scalar _tmp258 = _tmp257*_tmp29;
    const Scalar _tmp259 = _tmp29 - 6;
    const Scalar _tmp260 = -_tmp259;
    const Scalar _tmp261 = _tmp29*_tmp3;
    const Scalar _tmp262 = -_tmp261;
    const Scalar _tmp263 = Scalar(1.0) / (_tmp8);
    const Scalar _tmp264 = _tmp0 + x1;
    const Scalar _tmp265 = _tmp264*x0;
    const Scalar _tmp266 = Scalar(4.0)*x1;
    const Scalar _tmp267 = -_tmp264;
    const Scalar _tmp268 = _tmp58*x0;
    const Scalar _tmp269 = _tmp166*x0;
    const Scalar _tmp270 = 3 - _tmp12;
    const Scalar _tmp271 = -_tmp113;
    const Scalar _tmp272 = -_tmp166*_tmp50;
    const Scalar _tmp273 = _tmp7 - 1;
    const Scalar _tmp274 = _tmp113*_tmp3;
    const Scalar _tmp275 = Scalar(2.0)*_tmp89;
    const Scalar _tmp276 = _tmp3*x0;
    const Scalar _tmp277 = _tmp276*_tmp7;
    const Scalar _tmp278 = 5*x1;
    const Scalar _tmp279 = 4*_tmp245;
    const Scalar _tmp280 = -_tmp279;
    const Scalar _tmp281 = x0 + 3;
    const Scalar _tmp282 = _tmp281*_tmp7;
    const Scalar _tmp283 = _tmp63 + 2;
    const Scalar _tmp284 = -_tmp243;
    const Scalar _tmp285 = -_tmp13;
    const Scalar _tmp286 = _tmp1 + x0;
    const Scalar _tmp287 = _tmp286*x1;
    const Scalar _tmp288 = -_tmp212 - _tmp27;
    const Scalar _tmp289 = _tmp191 + _tmp71;
    const Scalar _tmp290 = _tmp212 + 6;
    const Scalar _tmp291 = 6*_tmp245;
    const Scalar _tmp292 = _tmp110 + Scalar(-2.0);
    const Scalar _tmp293 = _tmp3*_tmp50;
    const Scalar _tmp294 = -_tmp293;
    const Scalar _tmp295 = std::pow(_tmp50, Scalar(2));
    const Scalar _tmp296 = -_tmp25*_tmp29;
    const Scalar _tmp297 = _tmp38 + 2;
    const Scalar _tmp298 = _tmp297*x1;
    const Scalar _tmp299 = _tmp158 + Scalar(2.0);
    const Scalar _tmp300 = _tmp7 + x0;

    // Output terms (1)
    static constexpr int kRows_result = 84;
    static constexpr int kCols_result = 84;
    static constexpr int kNumNonZero_result = 1473;
    static constexpr int kColPtrs_result[] = {0, 7, 25, 42, 59, 77, 96, 107, 126, 145, 162, 181, 199, 217, 234, 252, 271, 290, 308, 325, 343, 361, 378, 396, 413, 429, 447, 465, 484, 503, 521, 538, 557, 575, 593, 610, 627, 646, 665, 683, 700, 718, 736, 753, 771, 789, 805, 818, 836, 855, 873, 890, 909, 928, 941, 960, 979, 997, 1016, 1034, 1051, 1068, 1085, 1104, 1122, 1139, 1157, 1176, 1194, 1212, 1229, 1247, 1266, 1285, 1304, 1323, 1341, 1359, 1377, 1396, 1415, 1432, 1450, 1467, 1473};
    static constexpr int kRowIndices_result[] = {0, 7, 8, 9, 10, 11, 12, 0, 1, 2, 3, 4, 6, 7, 13, 14, 15, 16, 17, 28, 34, 35, 36, 37, 38, 0, 1, 2, 3, 4, 6, 13, 18, 19, 20, 21, 29, 34, 39, 40, 41, 42, 0, 1, 2, 3, 4, 6, 9, 14, 18, 22, 23, 24, 30, 35, 39, 43, 45, 0, 1, 2, 3, 4, 6, 10, 15, 19, 22, 25, 26, 31, 36, 40, 43, 46, 47, 0, 1, 2, 3, 4, 5, 6, 11, 16, 20, 23, 25, 27, 32, 37, 41, 44, 46, 48, 6, 12, 17, 21, 24, 26, 33, 38, 42, 45, 47, 0, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 28, 49, 50, 51, 52, 53, 0, 2, 7, 8, 9, 10, 11, 12, 13, 18, 19, 20, 21, 29, 49, 54, 55, 56, 57, 0, 7, 8, 9, 10, 11, 12, 14, 18, 22, 23, 24, 30, 50, 58, 59, 60, 0, 4, 7, 8, 9, 10, 11, 12, 15, 19, 22, 25, 26, 31, 51, 55, 58, 61, 62, 0, 5, 7, 8, 9, 10, 11, 12, 16, 20, 23, 25, 27, 32, 56, 59, 61, 63, 0, 6, 7, 8, 9, 10, 11, 12, 17, 21, 24, 26, 33, 53, 57, 60, 62, 63, 1, 2, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 34, 49, 64, 65, 67, 1, 7, 9, 13, 14, 15, 16, 17, 18, 22, 23, 24, 35, 50, 64, 68, 69, 70, 1, 4, 7, 10, 13, 14, 15, 16, 17, 19, 22, 25, 26, 36, 51, 65, 68, 71, 72, 1, 5, 7, 11, 13, 14, 15, 16, 17, 20, 23, 25, 27, 37, 52, 66, 69, 71, 73, 1, 6, 7, 12, 13, 14, 15, 16, 17, 21, 24, 26, 38, 53, 67, 70, 72, 73, 2, 9, 13, 14, 18, 19, 20, 21, 22, 23, 24, 39, 54, 64, 74, 75, 76, 2, 4, 10, 13, 15, 18, 19, 20, 21, 22, 25, 26, 40, 55, 65, 74, 77, 78, 2, 5, 11, 13, 16, 18, 19, 20, 21, 23, 25, 27, 41, 56, 66, 75, 77, 79, 2, 6, 12, 13, 17, 18, 19, 20, 21, 24, 26, 42, 57, 67, 76, 78, 79, 4, 9, 10, 14, 15, 18, 19, 22, 23, 24, 25, 26, 43, 58, 68, 74, 80, 81, 5, 9, 11, 14, 16, 18, 20, 22, 23, 24, 25, 27, 44, 69, 75, 80, 82, 6, 9, 12, 14, 17, 18, 21, 22, 23, 24, 26, 45, 60, 76, 81, 82, 4, 5, 10, 11, 15, 16, 19, 20, 22, 23, 25, 26, 27, 46, 61, 77, 80, 83, 4, 6, 10, 12, 15, 17, 19, 21, 22, 24, 25, 26, 47, 62, 72, 78, 81, 83, 5, 6, 11, 12, 16, 17, 20, 21, 23, 24, 25, 26, 27, 48, 63, 73, 79, 82, 83, 0, 1, 7, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 49, 50, 51, 52, 53, 0, 8, 28, 29, 30, 31, 32, 33, 34, 39, 40, 41, 42, 49, 54, 55, 56, 57, 0, 3, 9, 28, 29, 30, 31, 32, 33, 35, 39, 43, 45, 50, 58, 59, 60, 0, 4, 10, 28, 29, 30, 31, 32, 33, 36, 40, 43, 46, 47, 51, 55, 58, 61, 62, 0, 5, 11, 28, 29, 30, 31, 32, 33, 37, 41, 44, 46, 48, 56, 59, 61, 63, 0, 6, 12, 28, 29, 30, 31, 32, 33, 38, 42, 45, 47, 53, 57, 60, 62, 63, 1, 13, 28, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 49, 64, 65, 67, 1, 3, 28, 30, 34, 35, 36, 37, 38, 39, 43, 45, 50, 64, 68, 69, 70, 1, 4, 15, 28, 31, 34, 35, 36, 37, 38, 40, 43, 46, 47, 51, 65, 68, 71, 72, 1, 5, 16, 28, 32, 34, 35, 36, 37, 38, 41, 44, 46, 48, 52, 66, 69, 71, 73, 1, 6, 17, 28, 33, 34, 35, 36, 37, 38, 42, 45, 47, 53, 67, 70, 72, 73, 3, 18, 29, 30, 34, 35, 39, 40, 41, 42, 43, 45, 54, 64, 74, 75, 76, 4, 19, 29, 31, 34, 36, 39, 40, 41, 42, 43, 46, 47, 55, 65, 74, 77, 78, 5, 20, 29, 32, 34, 37, 39, 40, 41, 42, 44, 46, 48, 56, 66, 75, 77, 79, 6, 21, 29, 33, 34, 38, 39, 40, 41, 42, 45, 47, 57, 67, 76, 78, 79, 3, 4, 22, 30, 31, 35, 36, 39, 40, 43, 45, 46, 47, 58, 68, 74, 80, 81, 3, 5, 23, 30, 32, 35, 37, 39, 41, 43, 44, 45, 46, 48, 69, 75, 80, 82, 3, 6, 24, 30, 33, 35, 38, 39, 42, 43, 45, 47, 60, 76, 81, 82, 4, 5, 31, 32, 36, 37, 40, 41, 43, 44, 46, 47, 48, 4, 6, 26, 31, 33, 36, 38, 40, 42, 43, 45, 46, 47, 62, 72, 78, 81, 83, 5, 6, 27, 32, 33, 37, 38, 41, 42, 44, 45, 46, 47, 48, 63, 73, 79, 82, 83, 7, 8, 13, 28, 29, 34, 49, 50, 51, 52, 53, 54, 55, 56, 57, 64, 65, 67, 7, 9, 28, 30, 35, 49, 50, 51, 52, 53, 58, 59, 60, 64, 68, 69, 70, 7, 10, 15, 28, 31, 36, 49, 50, 51, 52, 53, 55, 58, 61, 62, 65, 68, 71, 72, 7, 11, 16, 28, 32, 37, 49, 50, 51, 52, 53, 56, 59, 61, 63, 66, 69, 71, 73, 7, 12, 28, 33, 49, 50, 51, 52, 53, 57, 60, 62, 63, 8, 9, 18, 29, 30, 39, 49, 50, 54, 55, 56, 57, 58, 59, 60, 64, 74, 75, 76, 8, 10, 19, 29, 31, 40, 49, 51, 54, 55, 56, 57, 58, 61, 62, 65, 74, 77, 78, 8, 11, 20, 29, 32, 41, 49, 54, 55, 56, 57, 59, 61, 63, 66, 75, 77, 79, 8, 12, 21, 29, 33, 42, 49, 53, 54, 55, 56, 57, 60, 62, 63, 67, 76, 78, 79, 9, 10, 22, 30, 31, 43, 50, 51, 55, 58, 59, 60, 61, 62, 68, 74, 80, 81, 9, 11, 23, 30, 32, 44, 50, 56, 58, 59, 60, 61, 63, 69, 75, 80, 82, 9, 12, 24, 30, 33, 45, 50, 53, 57, 58, 59, 60, 62, 63, 76, 81, 82, 10, 11, 25, 31, 32, 46, 51, 55, 56, 58, 59, 61, 62, 63, 77, 80, 83, 10, 12, 26, 31, 33, 47, 51, 53, 55, 57, 58, 60, 61, 62, 63, 72, 78, 81, 83, 11, 12, 27, 32, 33, 48, 53, 56, 57, 59, 60, 61, 62, 63, 73, 79, 82, 83, 13, 18, 34, 35, 39, 49, 50, 54, 64, 65, 67, 68, 69, 70, 74, 75, 76, 13, 15, 19, 34, 36, 40, 49, 51, 55, 64, 65, 67, 68, 71, 72, 74, 77, 78, 13, 16, 20, 34, 37, 41, 49, 52, 56, 64, 65, 66, 67, 69, 71, 73, 75, 77, 79, 13, 17, 21, 34, 38, 42, 49, 53, 57, 64, 65, 67, 70, 72, 73, 76, 78, 79, 15, 22, 35, 36, 43, 50, 51, 58, 64, 65, 68, 69, 70, 71, 72, 74, 80, 81, 16, 23, 35, 37, 44, 50, 52, 64, 66, 68, 69, 70, 71, 73, 75, 80, 82, 17, 24, 35, 38, 45, 50, 53, 60, 64, 67, 68, 69, 70, 72, 73, 76, 81, 82, 15, 16, 25, 36, 37, 46, 51, 52, 61, 65, 66, 68, 69, 71, 72, 73, 77, 80, 83, 15, 17, 26, 36, 38, 47, 51, 53, 62, 65, 67, 68, 70, 71, 72, 73, 78, 81, 83, 16, 17, 27, 37, 38, 48, 52, 53, 63, 66, 67, 69, 70, 71, 72, 73, 79, 82, 83, 18, 19, 22, 39, 40, 43, 54, 55, 58, 64, 65, 68, 74, 75, 76, 77, 78, 80, 81, 18, 20, 23, 39, 41, 44, 54, 56, 64, 66, 69, 74, 75, 76, 77, 79, 80, 82, 18, 21, 24, 39, 42, 45, 54, 57, 60, 64, 67, 74, 75, 76, 78, 79, 81, 82, 19, 20, 25, 40, 41, 46, 55, 56, 61, 65, 66, 74, 75, 77, 78, 79, 80, 83, 19, 21, 26, 40, 42, 47, 55, 57, 62, 65, 67, 72, 74, 76, 77, 78, 79, 81, 83, 20, 21, 27, 41, 42, 48, 56, 57, 63, 66, 67, 73, 75, 76, 77, 78, 79, 82, 83, 22, 23, 25, 43, 44, 46, 58, 61, 68, 69, 74, 75, 77, 80, 81, 82, 83, 22, 24, 26, 43, 45, 47, 58, 60, 62, 68, 72, 74, 76, 78, 80, 81, 82, 83, 23, 24, 27, 44, 45, 48, 60, 63, 69, 73, 75, 76, 79, 80, 81, 82, 83, 25, 46, 61, 77, 80, 83};
    Scalar result_empty_value_ptr[1473];
    Eigen::SparseMatrix<Scalar> result = Eigen::Map<const Eigen::SparseMatrix<Scalar>>(
        kRows_result,
        kCols_result,
        kNumNonZero_result,
        kColPtrs_result,
        kRowIndices_result,
        result_empty_value_ptr
    );
    Scalar* result_value_ptr = result.valuePtr();


    result_value_ptr[0] = _tmp0;
    result_value_ptr[1] = _tmp1;
    result_value_ptr[2] = 1;
    result_value_ptr[3] = -2;
    result_value_ptr[4] = 2;
    result_value_ptr[5] = _tmp2;
    result_value_ptr[6] = _tmp4;
    result_value_ptr[7] = _tmp5;
    result_value_ptr[8] = _tmp11 + _tmp6 + _tmp7 + 3;
    result_value_ptr[9] = -6;
    result_value_ptr[10] = _tmp13;
    result_value_ptr[11] = -12;
    result_value_ptr[12] = Scalar(-1.5);
    result_value_ptr[13] = -_tmp14;
    result_value_ptr[14] = _tmp16;
    result_value_ptr[15] = _tmp18;
    result_value_ptr[16] = _tmp19;
    result_value_ptr[17] = _tmp7;
    result_value_ptr[18] = _tmp22;
    result_value_ptr[19] = _tmp24;
    result_value_ptr[20] = _tmp10;
    result_value_ptr[21] = -_tmp25*_tmp8;
    result_value_ptr[22] = _tmp26;
    result_value_ptr[23] = -_tmp1*_tmp8;
    result_value_ptr[24] = _tmp26;
    result_value_ptr[25] = _tmp28;
    result_value_ptr[26] = -_tmp30;
    result_value_ptr[27] = 4;
    result_value_ptr[28] = _tmp31;
    result_value_ptr[29] = 4;
    result_value_ptr[30] = Scalar(0.5);
    result_value_ptr[31] = _tmp27;
    result_value_ptr[32] = _tmp7;
    result_value_ptr[33] = _tmp7;
    result_value_ptr[34] = _tmp32;
    result_value_ptr[35] = -2;
    result_value_ptr[36] = _tmp33;
    result_value_ptr[37] = -_tmp34;
    result_value_ptr[38] = _tmp35;
    result_value_ptr[39] = Scalar(-2.0);
    result_value_ptr[40] = _tmp34;
    result_value_ptr[41] = Scalar(-4.0);
    result_value_ptr[42] = -_tmp37;
    result_value_ptr[43] = -_tmp30*_tmp38;
    result_value_ptr[44] = _tmp17;
    result_value_ptr[45] = -_tmp1*_tmp38 - _tmp39;
    result_value_ptr[46] = _tmp40;
    result_value_ptr[47] = Scalar(0.5)*_tmp38;
    result_value_ptr[48] = _tmp41;
    result_value_ptr[49] = _tmp44;
    result_value_ptr[50] = _tmp43;
    result_value_ptr[51] = _tmp20;
    result_value_ptr[52] = _tmp45;
    result_value_ptr[53] = _tmp7;
    result_value_ptr[54] = _tmp20;
    result_value_ptr[55] = _tmp47;
    result_value_ptr[56] = _tmp49;
    result_value_ptr[57] = _tmp51;
    result_value_ptr[58] = _tmp53;
    result_value_ptr[59] = _tmp55;
    result_value_ptr[60] = -_tmp27 - 2;
    result_value_ptr[61] = 4;
    result_value_ptr[62] = _tmp57;
    result_value_ptr[63] = x0 + 6;
    result_value_ptr[64] = Scalar(1.0);
    result_value_ptr[65] = 4;
    result_value_ptr[66] = _tmp59;
    result_value_ptr[67] = _tmp29;
    result_value_ptr[68] = Scalar(-2.0);
    result_value_ptr[69] = _tmp29;
    result_value_ptr[70] = 4;
    result_value_ptr[71] = _tmp61;
    result_value_ptr[72] = _tmp0;
    result_value_ptr[73] = _tmp62;
    result_value_ptr[74] = _tmp0;
    result_value_ptr[75] = _tmp65;
    result_value_ptr[76] = _tmp66;
    result_value_ptr[77] = _tmp68;
    result_value_ptr[78] = -_tmp30*_tmp7;
    result_value_ptr[79] = _tmp36;
    result_value_ptr[80] = _tmp70;
    result_value_ptr[81] = _tmp14;
    result_value_ptr[82] = -x1 - 6;
    result_value_ptr[83] = _tmp71;
    result_value_ptr[84] = Scalar(-1.0);
    result_value_ptr[85] = _tmp72;
    result_value_ptr[86] = _tmp73;
    result_value_ptr[87] = _tmp75;
    result_value_ptr[88] = -2;
    result_value_ptr[89] = _tmp29;
    result_value_ptr[90] = _tmp76;
    result_value_ptr[91] = _tmp20;
    result_value_ptr[92] = _tmp49;
    result_value_ptr[93] = _tmp77*x1;
    result_value_ptr[94] = _tmp41;
    result_value_ptr[95] = _tmp20;
    result_value_ptr[96] = -_tmp79 - _tmp80;
    result_value_ptr[97] = _tmp81;
    result_value_ptr[98] = Scalar(3.0) - _tmp71;
    result_value_ptr[99] = -_tmp7*_tmp78;
    result_value_ptr[100] = _tmp1*_tmp78;
    result_value_ptr[101] = -_tmp78*_tmp8;
    result_value_ptr[102] = Scalar(1.0);
    result_value_ptr[103] = _tmp82;
    result_value_ptr[104] = 4;
    result_value_ptr[105] = 1;
    result_value_ptr[106] = _tmp19;
    result_value_ptr[107] = _tmp84;
    result_value_ptr[108] = -8;
    result_value_ptr[109] = _tmp36 + 22;
    result_value_ptr[110] = -2;
    result_value_ptr[111] = 4;
    result_value_ptr[112] = -4;
    result_value_ptr[113] = _tmp86;
    result_value_ptr[114] = _tmp87;
    result_value_ptr[115] = _tmp88;
    result_value_ptr[116] = _tmp54;
    result_value_ptr[117] = 4;
    result_value_ptr[118] = -8;
    result_value_ptr[119] = _tmp14;
    result_value_ptr[120] = (Scalar(3)/Scalar(2))*_tmp89;
    result_value_ptr[121] = _tmp90;
    result_value_ptr[122] = -_tmp92;
    result_value_ptr[123] = _tmp93;
    result_value_ptr[124] = _tmp12;
    result_value_ptr[125] = 12;
    result_value_ptr[126] = _tmp0;
    result_value_ptr[127] = 2;
    result_value_ptr[128] = _tmp1;
    result_value_ptr[129] = _tmp94;
    result_value_ptr[130] = -2;
    result_value_ptr[131] = 2;
    result_value_ptr[132] = _tmp2;
    result_value_ptr[133] = _tmp4;
    result_value_ptr[134] = _tmp27;
    result_value_ptr[135] = _tmp7;
    result_value_ptr[136] = _tmp7;
    result_value_ptr[137] = _tmp32;
    result_value_ptr[138] = -2;
    result_value_ptr[139] = x0;
    result_value_ptr[140] = _tmp19;
    result_value_ptr[141] = -2;
    result_value_ptr[142] = -1;
    result_value_ptr[143] = -4;
    result_value_ptr[144] = -2;
    result_value_ptr[145] = -_tmp0*_tmp58;
    result_value_ptr[146] = -_tmp1*_tmp58;
    result_value_ptr[147] = _tmp95;
    result_value_ptr[148] = _tmp29 + _tmp36 - _tmp96;
    result_value_ptr[149] = _tmp97;
    result_value_ptr[150] = -_tmp2*_tmp58;
    result_value_ptr[151] = _tmp3*_tmp58;
    result_value_ptr[152] = _tmp98;
    result_value_ptr[153] = -1;
    result_value_ptr[154] = _tmp76;
    result_value_ptr[155] = _tmp29;
    result_value_ptr[156] = -4;
    result_value_ptr[157] = _tmp24;
    result_value_ptr[158] = -_tmp23*_tmp78;
    result_value_ptr[159] = -_tmp99;
    result_value_ptr[160] = _tmp100;
    result_value_ptr[161] = _tmp23;
    result_value_ptr[162] = _tmp83;
    result_value_ptr[163] = -1;
    result_value_ptr[164] = _tmp56;
    result_value_ptr[165] = 2;
    result_value_ptr[166] = -4;
    result_value_ptr[167] = 6 - _tmp101;
    result_value_ptr[168] = _tmp85;
    result_value_ptr[169] = _tmp102;
    result_value_ptr[170] = _tmp103;
    result_value_ptr[171] = x0;
    result_value_ptr[172] = Scalar(-1.0);
    result_value_ptr[173] = x0;
    result_value_ptr[174] = 2;
    result_value_ptr[175] = _tmp2*_tmp9;
    result_value_ptr[176] = _tmp101;
    result_value_ptr[177] = _tmp104;
    result_value_ptr[178] = _tmp2;
    result_value_ptr[179] = _tmp85;
    result_value_ptr[180] = _tmp104;
    result_value_ptr[181] = _tmp84;
    result_value_ptr[182] = _tmp105;
    result_value_ptr[183] = _tmp57;
    result_value_ptr[184] = -2;
    result_value_ptr[185] = 4;
    result_value_ptr[186] = -4;
    result_value_ptr[187] = _tmp20 + _tmp32 + Scalar(3.0);
    result_value_ptr[188] = _tmp87;
    result_value_ptr[189] = _tmp6;
    result_value_ptr[190] = _tmp106;
    result_value_ptr[191] = _tmp74;
    result_value_ptr[192] = 2;
    result_value_ptr[193] = _tmp32;
    result_value_ptr[194] = _tmp76;
    result_value_ptr[195] = _tmp107;
    result_value_ptr[196] = x1;
    result_value_ptr[197] = _tmp21;
    result_value_ptr[198] = _tmp18;
    result_value_ptr[199] = _tmp83;
    result_value_ptr[200] = _tmp83;
    result_value_ptr[201] = _tmp56;
    result_value_ptr[202] = 2;
    result_value_ptr[203] = -4;
    result_value_ptr[204] = 4;
    result_value_ptr[205] = _tmp85;
    result_value_ptr[206] = -_tmp108 - _tmp109;
    result_value_ptr[207] = _tmp110;
    result_value_ptr[208] = _tmp17;
    result_value_ptr[209] = _tmp112;
    result_value_ptr[210] = _tmp9;
    result_value_ptr[211] = _tmp115;
    result_value_ptr[212] = _tmp2;
    result_value_ptr[213] = _tmp116;
    result_value_ptr[214] = _tmp85;
    result_value_ptr[215] = -_tmp88;
    result_value_ptr[216] = _tmp118;
    result_value_ptr[217] = -4;
    result_value_ptr[218] = -_tmp119;
    result_value_ptr[219] = 16;
    result_value_ptr[220] = _tmp121 + _tmp73;
    result_value_ptr[221] = _tmp27;
    result_value_ptr[222] = 2;
    result_value_ptr[223] = -4;
    result_value_ptr[224] = _tmp36;
    result_value_ptr[225] = _tmp123;
    result_value_ptr[226] = _tmp123;
    result_value_ptr[227] = _tmp124;
    result_value_ptr[228] = _tmp119;
    result_value_ptr[229] = _tmp125;
    result_value_ptr[230] = _tmp126;
    result_value_ptr[231] = -6;
    result_value_ptr[232] = _tmp87;
    result_value_ptr[233] = Scalar(-2.0);
    result_value_ptr[234] = _tmp32;
    result_value_ptr[235] = _tmp54;
    result_value_ptr[236] = _tmp47;
    result_value_ptr[237] = _tmp101;
    result_value_ptr[238] = _tmp127 + _tmp83;
    result_value_ptr[239] = x0;
    result_value_ptr[240] = _tmp32;
    result_value_ptr[241] = _tmp17;
    result_value_ptr[242] = _tmp7;
    result_value_ptr[243] = _tmp46;
    result_value_ptr[244] = _tmp128;
    result_value_ptr[245] = _tmp14;
    result_value_ptr[246] = _tmp0*_tmp43;
    result_value_ptr[247] = x0;
    result_value_ptr[248] = -_tmp129;
    result_value_ptr[249] = x0;
    result_value_ptr[250] = _tmp29;
    result_value_ptr[251] = _tmp129;
    result_value_ptr[252] = 2;
    result_value_ptr[253] = -1;
    result_value_ptr[254] = -8;
    result_value_ptr[255] = 2;
    result_value_ptr[256] = _tmp104;
    result_value_ptr[257] = _tmp32;
    result_value_ptr[258] = _tmp103 - _tmp20 - 1;
    result_value_ptr[259] = 2;
    result_value_ptr[260] = _tmp76;
    result_value_ptr[261] = x0;
    result_value_ptr[262] = Scalar(-1.0);
    result_value_ptr[263] = x0;
    result_value_ptr[264] = 2;
    result_value_ptr[265] = _tmp71;
    result_value_ptr[266] = _tmp131;
    result_value_ptr[267] = _tmp20;
    result_value_ptr[268] = x1;
    result_value_ptr[269] = _tmp132*x1;
    result_value_ptr[270] = _tmp71;
    result_value_ptr[271] = _tmp27;
    result_value_ptr[272] = _tmp133*x1;
    result_value_ptr[273] = -16*x0;
    result_value_ptr[274] = _tmp134;
    result_value_ptr[275] = -_tmp2*_tmp29;
    result_value_ptr[276] = _tmp75;
    result_value_ptr[277] = _tmp32;
    result_value_ptr[278] = _tmp135 + Scalar(4.5)*x0;
    result_value_ptr[279] = _tmp128;
    result_value_ptr[280] = _tmp137;
    result_value_ptr[281] = _tmp138;
    result_value_ptr[282] = x1;
    result_value_ptr[283] = _tmp45;
    result_value_ptr[284] = Scalar(1.0);
    result_value_ptr[285] = -_tmp139;
    result_value_ptr[286] = Scalar(0.5) - _tmp134;
    result_value_ptr[287] = Scalar(-0.5);
    result_value_ptr[288] = Scalar(-3.0);
    result_value_ptr[289] = -_tmp139 + Scalar(-1.0);
    result_value_ptr[290] = _tmp57;
    result_value_ptr[291] = -_tmp140*_tmp29;
    result_value_ptr[292] = _tmp14 + 16;
    result_value_ptr[293] = _tmp32 + _tmp80;
    result_value_ptr[294] = _tmp1*_tmp2;
    result_value_ptr[295] = _tmp141;
    result_value_ptr[296] = _tmp1;
    result_value_ptr[297] = _tmp57;
    result_value_ptr[298] = _tmp142 + _tmp143*_tmp78 + _tmp144 + _tmp69;
    result_value_ptr[299] = -_tmp140*_tmp7;
    result_value_ptr[300] = _tmp1*_tmp140;
    result_value_ptr[301] = -_tmp140*_tmp8;
    result_value_ptr[302] = _tmp145;
    result_value_ptr[303] = -_tmp78*_tmp83;
    result_value_ptr[304] = -_tmp42*_tmp78;
    result_value_ptr[305] = -_tmp20*_tmp78;
    result_value_ptr[306] = _tmp145;
    result_value_ptr[307] = 12 - _tmp36;
    result_value_ptr[308] = _tmp146;
    result_value_ptr[309] = _tmp18;
    result_value_ptr[310] = _tmp147;
    result_value_ptr[311] = _tmp148;
    result_value_ptr[312] = _tmp117 + _tmp149;
    result_value_ptr[313] = _tmp149;
    result_value_ptr[314] = -_tmp150;
    result_value_ptr[315] = _tmp151;
    result_value_ptr[316] = _tmp17;
    result_value_ptr[317] = _tmp84;
    result_value_ptr[318] = _tmp27;
    result_value_ptr[319] = _tmp72;
    result_value_ptr[320] = _tmp29;
    result_value_ptr[321] = _tmp84;
    result_value_ptr[322] = _tmp62;
    result_value_ptr[323] = _tmp6;
    result_value_ptr[324] = _tmp6;
    result_value_ptr[325] = _tmp100;
    result_value_ptr[326] = _tmp38;
    result_value_ptr[327] = _tmp18;
    result_value_ptr[328] = _tmp153;
    result_value_ptr[329] = -_tmp52*_tmp58;
    result_value_ptr[330] = _tmp154;
    result_value_ptr[331] = _tmp113 + _tmp154 + _tmp156;
    result_value_ptr[332] = _tmp157;
    result_value_ptr[333] = _tmp23;
    result_value_ptr[334] = _tmp158;
    result_value_ptr[335] = _tmp156;
    result_value_ptr[336] = _tmp18;
    result_value_ptr[337] = x1;
    result_value_ptr[338] = _tmp113;
    result_value_ptr[339] = 1;
    result_value_ptr[340] = _tmp73;
    result_value_ptr[341] = _tmp23;
    result_value_ptr[342] = x0;
    result_value_ptr[343] = Scalar(1.0);
    result_value_ptr[344] = _tmp105;
    result_value_ptr[345] = Scalar(1.0);
    result_value_ptr[346] = _tmp159;
    result_value_ptr[347] = _tmp6;
    result_value_ptr[348] = _tmp71;
    result_value_ptr[349] = _tmp71;
    result_value_ptr[350] = -Scalar(11.0)*x0 - 2;
    result_value_ptr[351] = Scalar(-1.0);
    result_value_ptr[352] = _tmp74;
    result_value_ptr[353] = 2;
    result_value_ptr[354] = _tmp32;
    result_value_ptr[355] = _tmp47;
    result_value_ptr[356] = _tmp161;
    result_value_ptr[357] = -8;
    result_value_ptr[358] = _tmp14 - 4;
    result_value_ptr[359] = -_tmp162;
    result_value_ptr[360] = 12;
    result_value_ptr[361] = Scalar(2.0);
    result_value_ptr[362] = _tmp55;
    result_value_ptr[363] = 8;
    result_value_ptr[364] = _tmp35;
    result_value_ptr[365] = Scalar(-4.0);
    result_value_ptr[366] = _tmp33;
    result_value_ptr[367] = _tmp33;
    result_value_ptr[368] = -_tmp159;
    result_value_ptr[369] = -_tmp14 - _tmp163*x1 + Scalar(-2.0);
    result_value_ptr[370] = _tmp36 + 8;
    result_value_ptr[371] = _tmp165;
    result_value_ptr[372] = -_tmp107;
    result_value_ptr[373] = _tmp73*x1;
    result_value_ptr[374] = -2;
    result_value_ptr[375] = _tmp142;
    result_value_ptr[376] = _tmp7;
    result_value_ptr[377] = _tmp167;
    result_value_ptr[378] = -4;
    result_value_ptr[379] = _tmp18;
    result_value_ptr[380] = 8;
    result_value_ptr[381] = _tmp148;
    result_value_ptr[382] = _tmp36*_tmp58;
    result_value_ptr[383] = x0;
    result_value_ptr[384] = _tmp27;
    result_value_ptr[385] = _tmp17 + Scalar(14.0);
    result_value_ptr[386] = _tmp84;
    result_value_ptr[387] = _tmp27;
    result_value_ptr[388] = _tmp27;
    result_value_ptr[389] = 8;
    result_value_ptr[390] = -6;
    result_value_ptr[391] = -_tmp5;
    result_value_ptr[392] = 6;
    result_value_ptr[393] = -_tmp168;
    result_value_ptr[394] = _tmp170;
    result_value_ptr[395] = _tmp5;
    result_value_ptr[396] = _tmp36 + 12;
    result_value_ptr[397] = _tmp171;
    result_value_ptr[398] = Scalar(2.0);
    result_value_ptr[399] = -_tmp172;
    result_value_ptr[400] = _tmp5;
    result_value_ptr[401] = _tmp100;
    result_value_ptr[402] = _tmp165;
    result_value_ptr[403] = _tmp173;
    result_value_ptr[404] = _tmp152 + _tmp174 + _tmp88;
    result_value_ptr[405] = _tmp176;
    result_value_ptr[406] = 4;
    result_value_ptr[407] = _tmp28;
    result_value_ptr[408] = _tmp28;
    result_value_ptr[409] = _tmp160;
    result_value_ptr[410] = _tmp22;
    result_value_ptr[411] = _tmp55;
    result_value_ptr[412] = _tmp106;
    result_value_ptr[413] = _tmp27;
    result_value_ptr[414] = _tmp41;
    result_value_ptr[415] = -4;
    result_value_ptr[416] = _tmp44;
    result_value_ptr[417] = Scalar(2.0);
    result_value_ptr[418] = _tmp43;
    result_value_ptr[419] = _tmp36;
    result_value_ptr[420] = _tmp20;
    result_value_ptr[421] = _tmp45;
    result_value_ptr[422] = _tmp171 - 4;
    result_value_ptr[423] = _tmp73;
    result_value_ptr[424] = _tmp113;
    result_value_ptr[425] = _tmp177*_tmp23;
    result_value_ptr[426] = Scalar(4.0) - _tmp33;
    result_value_ptr[427] = _tmp171;
    result_value_ptr[428] = -_tmp23*_tmp38;
    result_value_ptr[429] = _tmp43;
    result_value_ptr[430] = _tmp133*_tmp178;
    result_value_ptr[431] = _tmp19;
    result_value_ptr[432] = _tmp179;
    result_value_ptr[433] = -Scalar(1)/Scalar(2)*_tmp20*_tmp58;
    result_value_ptr[434] = 6;
    result_value_ptr[435] = -_tmp180;
    result_value_ptr[436] = -_tmp178*_tmp8;
    result_value_ptr[437] = _tmp134;
    result_value_ptr[438] = _tmp27;
    result_value_ptr[439] = -_tmp180 - _tmp181 - _tmp182;
    result_value_ptr[440] = _tmp19;
    result_value_ptr[441] = -2;
    result_value_ptr[442] = _tmp183;
    result_value_ptr[443] = -_tmp184*_tmp50;
    result_value_ptr[444] = _tmp185;
    result_value_ptr[445] = _tmp187;
    result_value_ptr[446] = _tmp185;
    result_value_ptr[447] = _tmp188;
    result_value_ptr[448] = _tmp190;
    result_value_ptr[449] = _tmp178;
    result_value_ptr[450] = _tmp183;
    result_value_ptr[451] = _tmp103*_tmp89;
    result_value_ptr[452] = -_tmp191;
    result_value_ptr[453] = 1;
    result_value_ptr[454] = _tmp193;
    result_value_ptr[455] = _tmp194;
    result_value_ptr[456] = _tmp195;
    result_value_ptr[457] = 1;
    result_value_ptr[458] = -_tmp172 - _tmp181 - _tmp196;
    result_value_ptr[459] = _tmp173;
    result_value_ptr[460] = _tmp176;
    result_value_ptr[461] = _tmp197;
    result_value_ptr[462] = _tmp1*_tmp23;
    result_value_ptr[463] = _tmp157;
    result_value_ptr[464] = _tmp23;
    result_value_ptr[465] = _tmp133*_tmp7;
    result_value_ptr[466] = -2;
    result_value_ptr[467] = _tmp71;
    result_value_ptr[468] = _tmp178;
    result_value_ptr[469] = _tmp168;
    result_value_ptr[470] = _tmp194;
    result_value_ptr[471] = -_tmp198;
    result_value_ptr[472] = -_tmp7*_tmp89;
    result_value_ptr[473] = _tmp37;
    result_value_ptr[474] = _tmp1*_tmp89;
    result_value_ptr[475] = _tmp7;
    result_value_ptr[476] = -_tmp8*_tmp89;
    result_value_ptr[477] = -_tmp17 - _tmp6;
    result_value_ptr[478] = _tmp199;
    result_value_ptr[479] = _tmp40;
    result_value_ptr[480] = _tmp83;
    result_value_ptr[481] = _tmp40;
    result_value_ptr[482] = _tmp54;
    result_value_ptr[483] = _tmp84;
    result_value_ptr[484] = _tmp42;
    result_value_ptr[485] = _tmp28;
    result_value_ptr[486] = _tmp102;
    result_value_ptr[487] = _tmp113 + _tmp127 - _tmp200;
    result_value_ptr[488] = _tmp90;
    result_value_ptr[489] = _tmp90;
    result_value_ptr[490] = _tmp202;
    result_value_ptr[491] = _tmp98;
    result_value_ptr[492] = _tmp80;
    result_value_ptr[493] = _tmp27;
    result_value_ptr[494] = 8 - _tmp7;
    result_value_ptr[495] = _tmp32;
    result_value_ptr[496] = _tmp57;
    result_value_ptr[497] = _tmp32;
    result_value_ptr[498] = _tmp98;
    result_value_ptr[499] = _tmp58;
    result_value_ptr[500] = _tmp203;
    result_value_ptr[501] = _tmp19;
    result_value_ptr[502] = -4;
    result_value_ptr[503] = _tmp29;
    result_value_ptr[504] = _tmp204;
    result_value_ptr[505] = _tmp40;
    result_value_ptr[506] = _tmp155 + _tmp6 + _tmp76;
    result_value_ptr[507] = _tmp6;
    result_value_ptr[508] = _tmp205;
    result_value_ptr[509] = _tmp32;
    result_value_ptr[510] = _tmp27;
    result_value_ptr[511] = _tmp17;
    result_value_ptr[512] = _tmp28;
    result_value_ptr[513] = 2;
    result_value_ptr[514] = _tmp18;
    result_value_ptr[515] = 4;
    result_value_ptr[516] = _tmp53;
    result_value_ptr[517] = _tmp18;
    result_value_ptr[518] = _tmp45;
    result_value_ptr[519] = _tmp128;
    result_value_ptr[520] = _tmp18;
    result_value_ptr[521] = _tmp66;
    result_value_ptr[522] = _tmp7;
    result_value_ptr[523] = -_tmp58*_tmp91;
    result_value_ptr[524] = _tmp18;
    result_value_ptr[525] = _tmp206;
    result_value_ptr[526] = 3*_tmp9 - _tmp91 - 2;
    result_value_ptr[527] = -_tmp207;
    result_value_ptr[528] = x0;
    result_value_ptr[529] = _tmp32;
    result_value_ptr[530] = 8;
    result_value_ptr[531] = _tmp27;
    result_value_ptr[532] = _tmp185;
    result_value_ptr[533] = _tmp29;
    result_value_ptr[534] = -_tmp78*_tmp91;
    result_value_ptr[535] = -3*_tmp52;
    result_value_ptr[536] = _tmp206;
    result_value_ptr[537] = _tmp91;
    result_value_ptr[538] = -1;
    result_value_ptr[539] = Scalar(1.0);
    result_value_ptr[540] = _tmp38;
    result_value_ptr[541] = _tmp76;
    result_value_ptr[542] = -3;
    result_value_ptr[543] = -3;
    result_value_ptr[544] = -_tmp208 - _tmp209 + Scalar(2.0);
    result_value_ptr[545] = 1;
    result_value_ptr[546] = -2;
    result_value_ptr[547] = _tmp110;
    result_value_ptr[548] = _tmp210;
    result_value_ptr[549] = _tmp110;
    result_value_ptr[550] = -_tmp159 - _tmp33;
    result_value_ptr[551] = Scalar(-1.0);
    result_value_ptr[552] = _tmp45;
    result_value_ptr[553] = x1;
    result_value_ptr[554] = _tmp19;
    result_value_ptr[555] = _tmp76;
    result_value_ptr[556] = x1;
    result_value_ptr[557] = 3;
    result_value_ptr[558] = _tmp177;
    result_value_ptr[559] = _tmp76;
    result_value_ptr[560] = _tmp169;
    result_value_ptr[561] = 9;
    result_value_ptr[562] = 9;
    result_value_ptr[563] = _tmp6 - 12;
    result_value_ptr[564] = -_tmp125 - 3;
    result_value_ptr[565] = 6;
    result_value_ptr[566] = _tmp211;
    result_value_ptr[567] = -_tmp17*_tmp177;
    result_value_ptr[568] = _tmp177*_tmp77;
    result_value_ptr[569] = -_tmp211;
    result_value_ptr[570] = _tmp211;
    result_value_ptr[571] = _tmp185;
    result_value_ptr[572] = -2;
    result_value_ptr[573] = _tmp212;
    result_value_ptr[574] = _tmp27;
    result_value_ptr[575] = 2;
    result_value_ptr[576] = _tmp213;
    result_value_ptr[577] = _tmp198;
    result_value_ptr[578] = _tmp36;
    result_value_ptr[579] = 6;
    result_value_ptr[580] = 6;
    result_value_ptr[581] = _tmp160;
    result_value_ptr[582] = -2;
    result_value_ptr[583] = _tmp113*_tmp8 + Scalar(5.0);
    result_value_ptr[584] = _tmp82;
    result_value_ptr[585] = 4;
    result_value_ptr[586] = 1;
    result_value_ptr[587] = _tmp19;
    result_value_ptr[588] = _tmp94;
    result_value_ptr[589] = _tmp214;
    result_value_ptr[590] = _tmp106;
    result_value_ptr[591] = _tmp164;
    result_value_ptr[592] = -_tmp117 - 5;
    result_value_ptr[593] = _tmp147;
    result_value_ptr[594] = -4;
    result_value_ptr[595] = -_tmp197;
    result_value_ptr[596] = -_tmp215;
    result_value_ptr[597] = _tmp216 + _tmp217 + _tmp218;
    result_value_ptr[598] = _tmp146*_tmp25;
    result_value_ptr[599] = _tmp150;
    result_value_ptr[600] = _tmp1*_tmp146;
    result_value_ptr[601] = _tmp150;
    result_value_ptr[602] = -_tmp219;
    result_value_ptr[603] = _tmp87;
    result_value_ptr[604] = _tmp220;
    result_value_ptr[605] = _tmp221;
    result_value_ptr[606] = _tmp222;
    result_value_ptr[607] = 6;
    result_value_ptr[608] = _tmp102;
    result_value_ptr[609] = Scalar(2.0);
    result_value_ptr[610] = _tmp120;
    result_value_ptr[611] = _tmp154;
    result_value_ptr[612] = -_tmp223;
    result_value_ptr[613] = _tmp23;
    result_value_ptr[614] = _tmp121;
    result_value_ptr[615] = _tmp119*_tmp25 - _tmp119*_tmp38 - _tmp175;
    result_value_ptr[616] = _tmp124;
    result_value_ptr[617] = _tmp1*_tmp119;
    result_value_ptr[618] = _tmp124;
    result_value_ptr[619] = _tmp153;
    result_value_ptr[620] = _tmp23*_tmp50;
    result_value_ptr[621] = _tmp224;
    result_value_ptr[622] = _tmp225;
    result_value_ptr[623] = _tmp226;
    result_value_ptr[624] = _tmp225;
    result_value_ptr[625] = _tmp161;
    result_value_ptr[626] = -_tmp226;
    result_value_ptr[627] = _tmp84;
    result_value_ptr[628] = _tmp29;
    result_value_ptr[629] = _tmp45;
    result_value_ptr[630] = _tmp157;
    result_value_ptr[631] = _tmp190;
    result_value_ptr[632] = _tmp83;
    result_value_ptr[633] = -_tmp25*x0;
    result_value_ptr[634] = _tmp0 + _tmp110;
    result_value_ptr[635] = _tmp112;
    result_value_ptr[636] = _tmp62;
    result_value_ptr[637] = _tmp84;
    result_value_ptr[638] = _tmp83;
    result_value_ptr[639] = -_tmp29*_tmp63;
    result_value_ptr[640] = _tmp32;
    result_value_ptr[641] = _tmp227;
    result_value_ptr[642] = _tmp38;
    result_value_ptr[643] = x0;
    result_value_ptr[644] = _tmp132*x0;
    result_value_ptr[645] = _tmp110;
    result_value_ptr[646] = _tmp17;
    result_value_ptr[647] = -4;
    result_value_ptr[648] = _tmp229;
    result_value_ptr[649] = _tmp154;
    result_value_ptr[650] = 8;
    result_value_ptr[651] = _tmp18;
    result_value_ptr[652] = _tmp230;
    result_value_ptr[653] = _tmp38;
    result_value_ptr[654] = _tmp231 - _tmp36 - _tmp83;
    result_value_ptr[655] = _tmp38;
    result_value_ptr[656] = _tmp67;
    result_value_ptr[657] = Scalar(2.0) - _tmp36;
    result_value_ptr[658] = _tmp36;
    result_value_ptr[659] = _tmp212;
    result_value_ptr[660] = _tmp228;
    result_value_ptr[661] = _tmp0*_tmp3;
    result_value_ptr[662] = _tmp0;
    result_value_ptr[663] = 6*_tmp0;
    result_value_ptr[664] = _tmp232;
    result_value_ptr[665] = _tmp17;
    result_value_ptr[666] = _tmp3*_tmp80;
    result_value_ptr[667] = -_tmp143*x1;
    result_value_ptr[668] = _tmp154;
    result_value_ptr[669] = Scalar(1.0) - _tmp71;
    result_value_ptr[670] = _tmp18;
    result_value_ptr[671] = _tmp230;
    result_value_ptr[672] = _tmp38;
    result_value_ptr[673] = _tmp231;
    result_value_ptr[674] = _tmp135 - _tmp3*_tmp82;
    result_value_ptr[675] = _tmp233;
    result_value_ptr[676] = _tmp4;
    result_value_ptr[677] = _tmp234;
    result_value_ptr[678] = _tmp138;
    result_value_ptr[679] = _tmp130;
    result_value_ptr[680] = _tmp39;
    result_value_ptr[681] = _tmp17;
    result_value_ptr[682] = _tmp36;
    result_value_ptr[683] = _tmp33;
    result_value_ptr[684] = _tmp76;
    result_value_ptr[685] = x1;
    result_value_ptr[686] = Scalar(-2.0);
    result_value_ptr[687] = _tmp45;
    result_value_ptr[688] = Scalar(8.0);
    result_value_ptr[689] = _tmp12 + Scalar(6.0)*x0;
    result_value_ptr[690] = -1;
    result_value_ptr[691] = _tmp38;
    result_value_ptr[692] = -2;
    result_value_ptr[693] = _tmp235;
    result_value_ptr[694] = _tmp159;
    result_value_ptr[695] = _tmp19;
    result_value_ptr[696] = _tmp38;
    result_value_ptr[697] = _tmp180;
    result_value_ptr[698] = _tmp236;
    result_value_ptr[699] = _tmp236;
    result_value_ptr[700] = -2;
    result_value_ptr[701] = _tmp238;
    result_value_ptr[702] = _tmp215;
    result_value_ptr[703] = _tmp183;
    result_value_ptr[704] = _tmp220;
    result_value_ptr[705] = _tmp32;
    result_value_ptr[706] = _tmp219;
    result_value_ptr[707] = -_tmp218 - _tmp82;
    result_value_ptr[708] = _tmp217;
    result_value_ptr[709] = _tmp233;
    result_value_ptr[710] = _tmp32;
    result_value_ptr[711] = _tmp239;
    result_value_ptr[712] = 2;
    result_value_ptr[713] = _tmp238;
    result_value_ptr[714] = _tmp66;
    result_value_ptr[715] = _tmp240;
    result_value_ptr[716] = _tmp224;
    result_value_ptr[717] = _tmp62;
    result_value_ptr[718] = _tmp184;
    result_value_ptr[719] = _tmp27;
    result_value_ptr[720] = x1;
    result_value_ptr[721] = _tmp241;
    result_value_ptr[722] = _tmp45;
    result_value_ptr[723] = _tmp242;
    result_value_ptr[724] = _tmp29;
    result_value_ptr[725] = -1;
    result_value_ptr[726] = _tmp21 - _tmp243*_tmp7 + _tmp38;
    result_value_ptr[727] = -2;
    result_value_ptr[728] = _tmp184*_tmp77;
    result_value_ptr[729] = -_tmp242;
    result_value_ptr[730] = _tmp242;
    result_value_ptr[731] = _tmp201;
    result_value_ptr[732] = 4;
    result_value_ptr[733] = 2 - _tmp36;
    result_value_ptr[734] = _tmp169;
    result_value_ptr[735] = -6;
    result_value_ptr[736] = _tmp80;
    result_value_ptr[737] = -_tmp163*_tmp42;
    result_value_ptr[738] = _tmp212;
    result_value_ptr[739] = Scalar(-1.0);
    result_value_ptr[740] = _tmp40;
    result_value_ptr[741] = -_tmp82;
    result_value_ptr[742] = _tmp55;
    result_value_ptr[743] = 4;
    result_value_ptr[744] = _tmp128;
    result_value_ptr[745] = 4 - _tmp244;
    result_value_ptr[746] = -1;
    result_value_ptr[747] = x1;
    result_value_ptr[748] = _tmp42*_tmp73;
    result_value_ptr[749] = -_tmp246*_tmp42;
    result_value_ptr[750] = -_tmp247;
    result_value_ptr[751] = _tmp80;
    result_value_ptr[752] = _tmp166*_tmp42;
    result_value_ptr[753] = _tmp47;
    result_value_ptr[754] = -1;
    result_value_ptr[755] = _tmp91;
    result_value_ptr[756] = _tmp36;
    result_value_ptr[757] = _tmp50;
    result_value_ptr[758] = -16*x1;
    result_value_ptr[759] = _tmp66;
    result_value_ptr[760] = _tmp68;
    result_value_ptr[761] = x0;
    result_value_ptr[762] = _tmp32 + _tmp36*_tmp50;
    result_value_ptr[763] = _tmp128;
    result_value_ptr[764] = _tmp63;
    result_value_ptr[765] = 1;
    result_value_ptr[766] = _tmp84;
    result_value_ptr[767] = x0;
    result_value_ptr[768] = _tmp156;
    result_value_ptr[769] = _tmp45;
    result_value_ptr[770] = _tmp83;
    result_value_ptr[771] = _tmp236;
    result_value_ptr[772] = -2;
    result_value_ptr[773] = -_tmp38*_tmp85;
    result_value_ptr[774] = 3;
    result_value_ptr[775] = 4;
    result_value_ptr[776] = -12;
    result_value_ptr[777] = _tmp76;
    result_value_ptr[778] = _tmp72;
    result_value_ptr[779] = _tmp40;
    result_value_ptr[780] = _tmp186;
    result_value_ptr[781] = _tmp138 + _tmp76 + Scalar(1.0);
    result_value_ptr[782] = _tmp206;
    result_value_ptr[783] = _tmp7;
    result_value_ptr[784] = _tmp76;
    result_value_ptr[785] = -_tmp201*_tmp38;
    result_value_ptr[786] = _tmp39*x0;
    result_value_ptr[787] = _tmp37;
    result_value_ptr[788] = _tmp209;
    result_value_ptr[789] = -_tmp20*_tmp89;
    result_value_ptr[790] = -_tmp42*_tmp80;
    result_value_ptr[791] = _tmp192;
    result_value_ptr[792] = _tmp89*x1;
    result_value_ptr[793] = _tmp247;
    result_value_ptr[794] = -_tmp36*_tmp89;
    result_value_ptr[795] = _tmp42*_tmp82;
    result_value_ptr[796] = _tmp76;
    result_value_ptr[797] = _tmp36 + 4;
    result_value_ptr[798] = _tmp107*_tmp89;
    result_value_ptr[799] = _tmp29 + 5;
    result_value_ptr[800] = _tmp131;
    result_value_ptr[801] = _tmp177*_tmp50;
    result_value_ptr[802] = _tmp235;
    result_value_ptr[803] = _tmp192;
    result_value_ptr[804] = _tmp204;
    result_value_ptr[805] = _tmp62;
    result_value_ptr[806] = -2;
    result_value_ptr[807] = _tmp232;
    result_value_ptr[808] = 4;
    result_value_ptr[809] = _tmp229;
    result_value_ptr[810] = _tmp76;
    result_value_ptr[811] = _tmp228;
    result_value_ptr[812] = _tmp40;
    result_value_ptr[813] = _tmp229;
    result_value_ptr[814] = Scalar(1.0) - _tmp7;
    result_value_ptr[815] = _tmp0*_tmp63 + _tmp7;
    result_value_ptr[816] = _tmp0;
    result_value_ptr[817] = _tmp76;
    result_value_ptr[818] = -_tmp234;
    result_value_ptr[819] = -_tmp14 - 8;
    result_value_ptr[820] = _tmp248;
    result_value_ptr[821] = _tmp107*_tmp3;
    result_value_ptr[822] = Scalar(4.0);
    result_value_ptr[823] = _tmp250;
    result_value_ptr[824] = _tmp40 - 8;
    result_value_ptr[825] = _tmp249;
    result_value_ptr[826] = 16;
    result_value_ptr[827] = _tmp250;
    result_value_ptr[828] = 4;
    result_value_ptr[829] = _tmp234*_tmp63;
    result_value_ptr[830] = _tmp212 + _tmp234 + _tmp40;
    result_value_ptr[831] = _tmp54;
    result_value_ptr[832] = _tmp216;
    result_value_ptr[833] = -_tmp141;
    result_value_ptr[834] = _tmp84;
    result_value_ptr[835] = _tmp32;
    result_value_ptr[836] = _tmp225;
    result_value_ptr[837] = -_tmp12*_tmp80;
    result_value_ptr[838] = _tmp169 - 12;
    result_value_ptr[839] = _tmp160;
    result_value_ptr[840] = _tmp251;
    result_value_ptr[841] = _tmp253;
    result_value_ptr[842] = _tmp12*_tmp82;
    result_value_ptr[843] = _tmp207*_tmp7;
    result_value_ptr[844] = _tmp162;
    result_value_ptr[845] = -_tmp201*_tmp77;
    result_value_ptr[846] = _tmp12;
    result_value_ptr[847] = _tmp252;
    result_value_ptr[848] = -3*_tmp20;
    result_value_ptr[849] = -_tmp252 - _tmp254;
    result_value_ptr[850] = _tmp255;
    result_value_ptr[851] = _tmp238;
    result_value_ptr[852] = _tmp255;
    result_value_ptr[853] = 16 - _tmp14;
    result_value_ptr[854] = _tmp237;
    result_value_ptr[855] = _tmp233;
    result_value_ptr[856] = _tmp182;
    result_value_ptr[857] = _tmp28;
    result_value_ptr[858] = _tmp188;
    result_value_ptr[859] = _tmp28;
    result_value_ptr[860] = _tmp256;
    result_value_ptr[861] = -_tmp258 - _tmp76 - 2;
    result_value_ptr[862] = _tmp63;
    result_value_ptr[863] = _tmp260;
    result_value_ptr[864] = _tmp76;
    result_value_ptr[865] = -8;
    result_value_ptr[866] = 8;
    result_value_ptr[867] = 4;
    result_value_ptr[868] = 16;
    result_value_ptr[869] = 8;
    result_value_ptr[870] = _tmp6;
    result_value_ptr[871] = _tmp262;
    result_value_ptr[872] = _tmp159;
    result_value_ptr[873] = _tmp219;
    result_value_ptr[874] = -_tmp263*_tmp58;
    result_value_ptr[875] = 1;
    result_value_ptr[876] = 1;
    result_value_ptr[877] = _tmp155;
    result_value_ptr[878] = _tmp248;
    result_value_ptr[879] = -_tmp199 - _tmp263*_tmp78 - _tmp32;
    result_value_ptr[880] = _tmp166*_tmp29;
    result_value_ptr[881] = _tmp17;
    result_value_ptr[882] = _tmp54;
    result_value_ptr[883] = -_tmp20*_tmp263;
    result_value_ptr[884] = -_tmp263;
    result_value_ptr[885] = _tmp263;
    result_value_ptr[886] = _tmp61;
    result_value_ptr[887] = _tmp29;
    result_value_ptr[888] = _tmp27;
    result_value_ptr[889] = _tmp60;
    result_value_ptr[890] = _tmp221;
    result_value_ptr[891] = -_tmp265;
    result_value_ptr[892] = _tmp47;
    result_value_ptr[893] = _tmp89;
    result_value_ptr[894] = _tmp264*_tmp9;
    result_value_ptr[895] = _tmp266;
    result_value_ptr[896] = _tmp80;
    result_value_ptr[897] = _tmp97;
    result_value_ptr[898] = _tmp259 + _tmp265 - _tmp36*_tmp42;
    result_value_ptr[899] = _tmp7;
    result_value_ptr[900] = 8;
    result_value_ptr[901] = _tmp267;
    result_value_ptr[902] = _tmp264;
    result_value_ptr[903] = _tmp7 + _tmp83;
    result_value_ptr[904] = _tmp267;
    result_value_ptr[905] = _tmp46;
    result_value_ptr[906] = _tmp36;
    result_value_ptr[907] = _tmp132*_tmp36;
    result_value_ptr[908] = _tmp266;
    result_value_ptr[909] = -_tmp87*x0;
    result_value_ptr[910] = _tmp76;
    result_value_ptr[911] = _tmp91;
    result_value_ptr[912] = Scalar(-1)/Scalar(2);
    result_value_ptr[913] = 4;
    result_value_ptr[914] = 6;
    result_value_ptr[915] = _tmp227;
    result_value_ptr[916] = _tmp268;
    result_value_ptr[917] = -_tmp269;
    result_value_ptr[918] = -_tmp38 - _tmp91;
    result_value_ptr[919] = _tmp28;
    result_value_ptr[920] = _tmp185;
    result_value_ptr[921] = -2;
    result_value_ptr[922] = _tmp212;
    result_value_ptr[923] = _tmp27;
    result_value_ptr[924] = _tmp270;
    result_value_ptr[925] = -3;
    result_value_ptr[926] = -18;
    result_value_ptr[927] = _tmp187;
    result_value_ptr[928] = _tmp184*_tmp87;
    result_value_ptr[929] = _tmp18;
    result_value_ptr[930] = _tmp184*_tmp200;
    result_value_ptr[931] = _tmp238;
    result_value_ptr[932] = _tmp184*_tmp42;
    result_value_ptr[933] = -_tmp184*_tmp58;
    result_value_ptr[934] = _tmp166*_tmp184;
    result_value_ptr[935] = _tmp242;
    result_value_ptr[936] = _tmp117 + _tmp212;
    result_value_ptr[937] = _tmp138;
    result_value_ptr[938] = _tmp29;
    result_value_ptr[939] = _tmp28;
    result_value_ptr[940] = _tmp117;
    result_value_ptr[941] = _tmp60;
    result_value_ptr[942] = _tmp95;
    result_value_ptr[943] = 4;
    result_value_ptr[944] = _tmp62;
    result_value_ptr[945] = _tmp8;
    result_value_ptr[946] = -6;
    result_value_ptr[947] = _tmp38;
    result_value_ptr[948] = -_tmp78;
    result_value_ptr[949] = _tmp73;
    result_value_ptr[950] = x0;
    result_value_ptr[951] = _tmp27;
    result_value_ptr[952] = _tmp29;
    result_value_ptr[953] = _tmp41;
    result_value_ptr[954] = -1;
    result_value_ptr[955] = 1;
    result_value_ptr[956] = _tmp32;
    result_value_ptr[957] = _tmp66;
    result_value_ptr[958] = 6;
    result_value_ptr[959] = 6;
    result_value_ptr[960] = _tmp182;
    result_value_ptr[961] = _tmp45;
    result_value_ptr[962] = _tmp271;
    result_value_ptr[963] = _tmp28;
    result_value_ptr[964] = _tmp209;
    result_value_ptr[965] = _tmp19;
    result_value_ptr[966] = _tmp36;
    result_value_ptr[967] = _tmp38;
    result_value_ptr[968] = 8;
    result_value_ptr[969] = 8 - _tmp12;
    result_value_ptr[970] = 16;
    result_value_ptr[971] = 8;
    result_value_ptr[972] = x1;
    result_value_ptr[973] = _tmp7;
    result_value_ptr[974] = _tmp19;
    result_value_ptr[975] = -1;
    result_value_ptr[976] = _tmp106;
    result_value_ptr[977] = _tmp100;
    result_value_ptr[978] = _tmp66;
    result_value_ptr[979] = _tmp272;
    result_value_ptr[980] = x1;
    result_value_ptr[981] = _tmp189;
    result_value_ptr[982] = _tmp269;
    result_value_ptr[983] = -2;
    result_value_ptr[984] = _tmp51;
    result_value_ptr[985] = -_tmp167;
    result_value_ptr[986] = _tmp260;
    result_value_ptr[987] = _tmp203;
    result_value_ptr[988] = _tmp206 + _tmp226 + 14;
    result_value_ptr[989] = _tmp260;
    result_value_ptr[990] = 1;
    result_value_ptr[991] = _tmp7;
    result_value_ptr[992] = _tmp32;
    result_value_ptr[993] = _tmp183;
    result_value_ptr[994] = -_tmp273*_tmp50;
    result_value_ptr[995] = _tmp12*_tmp50;
    result_value_ptr[996] = _tmp187;
    result_value_ptr[997] = -_tmp179*_tmp50;
    result_value_ptr[998] = _tmp3*_tmp7;
    result_value_ptr[999] = -_tmp109;
    result_value_ptr[1000] = Scalar(1.0);
    result_value_ptr[1001] = _tmp274;
    result_value_ptr[1002] = _tmp185;
    result_value_ptr[1003] = -_tmp71*_tmp89;
    result_value_ptr[1004] = _tmp4;
    result_value_ptr[1005] = -_tmp275;
    result_value_ptr[1006] = _tmp194;
    result_value_ptr[1007] = -Scalar(4.0)*_tmp89;
    result_value_ptr[1008] = -_tmp275 - _tmp277 - _tmp28 + 4;
    result_value_ptr[1009] = _tmp102;
    result_value_ptr[1010] = _tmp221;
    result_value_ptr[1011] = 5 - _tmp278;
    result_value_ptr[1012] = _tmp280;
    result_value_ptr[1013] = Scalar(-2.0);
    result_value_ptr[1014] = 4;
    result_value_ptr[1015] = _tmp259;
    result_value_ptr[1016] = _tmp63;
    result_value_ptr[1017] = _tmp64;
    result_value_ptr[1018] = _tmp12;
    result_value_ptr[1019] = _tmp106;
    result_value_ptr[1020] = -_tmp63*_tmp9;
    result_value_ptr[1021] = _tmp19;
    result_value_ptr[1022] = _tmp81;
    result_value_ptr[1023] = _tmp65;
    result_value_ptr[1024] = _tmp63;
    result_value_ptr[1025] = -_tmp17 - _tmp22 - _tmp63;
    result_value_ptr[1026] = 2;
    result_value_ptr[1027] = -2;
    result_value_ptr[1028] = -_tmp239;
    result_value_ptr[1029] = _tmp63;
    result_value_ptr[1030] = x1;
    result_value_ptr[1031] = _tmp53;
    result_value_ptr[1032] = _tmp41;
    result_value_ptr[1033] = _tmp17;
    result_value_ptr[1034] = _tmp199;
    result_value_ptr[1035] = _tmp45;
    result_value_ptr[1036] = -_tmp50*_tmp85;
    result_value_ptr[1037] = _tmp11;
    result_value_ptr[1038] = _tmp29;
    result_value_ptr[1039] = _tmp189;
    result_value_ptr[1040] = _tmp79;
    result_value_ptr[1041] = _tmp61;
    result_value_ptr[1042] = _tmp48;
    result_value_ptr[1043] = x0;
    result_value_ptr[1044] = _tmp32;
    result_value_ptr[1045] = _tmp18;
    result_value_ptr[1046] = _tmp83;
    result_value_ptr[1047] = -_tmp201*_tmp50;
    result_value_ptr[1048] = _tmp51;
    result_value_ptr[1049] = _tmp27*_tmp50;
    result_value_ptr[1050] = _tmp196;
    result_value_ptr[1051] = _tmp63;
    result_value_ptr[1052] = _tmp36;
    result_value_ptr[1053] = _tmp282;
    result_value_ptr[1054] = _tmp106;
    result_value_ptr[1055] = _tmp175;
    result_value_ptr[1056] = _tmp29 + 6;
    result_value_ptr[1057] = _tmp81;
    result_value_ptr[1058] = -2;
    result_value_ptr[1059] = _tmp128;
    result_value_ptr[1060] = _tmp21;
    result_value_ptr[1061] = 2;
    result_value_ptr[1062] = _tmp177*_tmp281 - 6;
    result_value_ptr[1063] = 8;
    result_value_ptr[1064] = -10;
    result_value_ptr[1065] = -_tmp159 + Scalar(-6.0);
    result_value_ptr[1066] = _tmp282;
    result_value_ptr[1067] = -_tmp281*_tmp38;
    result_value_ptr[1068] = _tmp17;
    result_value_ptr[1069] = _tmp7;
    result_value_ptr[1070] = _tmp164 + _tmp36;
    result_value_ptr[1071] = _tmp214;
    result_value_ptr[1072] = -4;
    result_value_ptr[1073] = -_tmp283;
    result_value_ptr[1074] = _tmp18;
    result_value_ptr[1075] = _tmp7;
    result_value_ptr[1076] = _tmp183;
    result_value_ptr[1077] = _tmp76;
    result_value_ptr[1078] = 2;
    result_value_ptr[1079] = _tmp143*_tmp184;
    result_value_ptr[1080] = _tmp7;
    result_value_ptr[1081] = _tmp28;
    result_value_ptr[1082] = _tmp283;
    result_value_ptr[1083] = _tmp90 + _tmp91;
    result_value_ptr[1084] = _tmp283;
    result_value_ptr[1085] = _tmp243;
    result_value_ptr[1086] = _tmp108;
    result_value_ptr[1087] = _tmp98;
    result_value_ptr[1088] = -_tmp184*_tmp9;
    result_value_ptr[1089] = _tmp114;
    result_value_ptr[1090] = _tmp76;
    result_value_ptr[1091] = _tmp284;
    result_value_ptr[1092] = _tmp104;
    result_value_ptr[1093] = _tmp184;
    result_value_ptr[1094] = -_tmp116;
    result_value_ptr[1095] = -_tmp184;
    result_value_ptr[1096] = _tmp86;
    result_value_ptr[1097] = _tmp241;
    result_value_ptr[1098] = _tmp117 - x1 - 8;
    result_value_ptr[1099] = -_tmp118;
    result_value_ptr[1100] = _tmp146;
    result_value_ptr[1101] = _tmp1;
    result_value_ptr[1102] = x0;
    result_value_ptr[1103] = 1;
    result_value_ptr[1104] = _tmp22;
    result_value_ptr[1105] = _tmp18;
    result_value_ptr[1106] = -12;
    result_value_ptr[1107] = _tmp36;
    result_value_ptr[1108] = _tmp238;
    result_value_ptr[1109] = _tmp239;
    result_value_ptr[1110] = x0;
    result_value_ptr[1111] = _tmp193;
    result_value_ptr[1112] = _tmp138;
    result_value_ptr[1113] = _tmp76;
    result_value_ptr[1114] = _tmp29;
    result_value_ptr[1115] = _tmp47;
    result_value_ptr[1116] = _tmp28;
    result_value_ptr[1117] = _tmp117 + _tmp14 + _tmp40;
    result_value_ptr[1118] = _tmp27;
    result_value_ptr[1119] = _tmp14;
    result_value_ptr[1120] = 16;
    result_value_ptr[1121] = _tmp28;
    result_value_ptr[1122] = -4;
    result_value_ptr[1123] = _tmp57;
    result_value_ptr[1124] = _tmp241;
    result_value_ptr[1125] = _tmp48;
    result_value_ptr[1126] = _tmp13;
    result_value_ptr[1127] = _tmp222;
    result_value_ptr[1128] = _tmp36;
    result_value_ptr[1129] = _tmp31;
    result_value_ptr[1130] = _tmp111 + _tmp193 + 6;
    result_value_ptr[1131] = _tmp102;
    result_value_ptr[1132] = Scalar(2.0);
    result_value_ptr[1133] = _tmp36;
    result_value_ptr[1134] = _tmp14;
    result_value_ptr[1135] = _tmp192;
    result_value_ptr[1136] = (Scalar(1)/Scalar(2))*_tmp111;
    result_value_ptr[1137] = _tmp285;
    result_value_ptr[1138] = _tmp285;
    result_value_ptr[1139] = -8;
    result_value_ptr[1140] = -_tmp287;
    result_value_ptr[1141] = _tmp175;
    result_value_ptr[1142] = _tmp288;
    result_value_ptr[1143] = _tmp289;
    result_value_ptr[1144] = _tmp7;
    result_value_ptr[1145] = 16 - _tmp27;
    result_value_ptr[1146] = -_tmp286*_tmp42;
    result_value_ptr[1147] = _tmp175;
    result_value_ptr[1148] = 12;
    result_value_ptr[1149] = _tmp287 + _tmp290;
    result_value_ptr[1150] = Scalar(4.0);
    result_value_ptr[1151] = _tmp286;
    result_value_ptr[1152] = _tmp132*_tmp286;
    result_value_ptr[1153] = _tmp289;
    result_value_ptr[1154] = _tmp164;
    result_value_ptr[1155] = _tmp113;
    result_value_ptr[1156] = _tmp29;
    result_value_ptr[1157] = _tmp32;
    result_value_ptr[1158] = _tmp138;
    result_value_ptr[1159] = _tmp152;
    result_value_ptr[1160] = _tmp284;
    result_value_ptr[1161] = _tmp40;
    result_value_ptr[1162] = _tmp99;
    result_value_ptr[1163] = -_tmp257*x0;
    result_value_ptr[1164] = -_tmp138;
    result_value_ptr[1165] = _tmp223;
    result_value_ptr[1166] = _tmp91;
    result_value_ptr[1167] = -_tmp276;
    result_value_ptr[1168] = -_tmp277 - _tmp76 - 4;
    result_value_ptr[1169] = _tmp110;
    result_value_ptr[1170] = _tmp18;
    result_value_ptr[1171] = -_tmp5*x1;
    result_value_ptr[1172] = -_tmp60*_tmp7;
    result_value_ptr[1173] = -_tmp23*_tmp273;
    result_value_ptr[1174] = _tmp12*_tmp23;
    result_value_ptr[1175] = 6 - _tmp12;
    result_value_ptr[1176] = _tmp28;
    result_value_ptr[1177] = _tmp143;
    result_value_ptr[1178] = _tmp92 - 3;
    result_value_ptr[1179] = _tmp256;
    result_value_ptr[1180] = _tmp32;
    result_value_ptr[1181] = _tmp186;
    result_value_ptr[1182] = -_tmp258;
    result_value_ptr[1183] = _tmp84;
    result_value_ptr[1184] = -_tmp6 - 6;
    result_value_ptr[1185] = _tmp6;
    result_value_ptr[1186] = _tmp262;
    result_value_ptr[1187] = _tmp159 + _tmp19 + _tmp291 - 1;
    result_value_ptr[1188] = _tmp41;
    result_value_ptr[1189] = _tmp32;
    result_value_ptr[1190] = -4;
    result_value_ptr[1191] = Scalar(3.0);
    result_value_ptr[1192] = -6;
    result_value_ptr[1193] = -_tmp93;
    result_value_ptr[1194] = _tmp123;
    result_value_ptr[1195] = 3;
    result_value_ptr[1196] = _tmp250;
    result_value_ptr[1197] = _tmp292;
    result_value_ptr[1198] = -1;
    result_value_ptr[1199] = _tmp102;
    result_value_ptr[1200] = -_tmp119*_tmp42;
    result_value_ptr[1201] = _tmp32;
    result_value_ptr[1202] = _tmp293;
    result_value_ptr[1203] = _tmp122;
    result_value_ptr[1204] = _tmp76 + _tmp8;
    result_value_ptr[1205] = _tmp233;
    result_value_ptr[1206] = _tmp294;
    result_value_ptr[1207] = _tmp119*_tmp132;
    result_value_ptr[1208] = _tmp292;
    result_value_ptr[1209] = _tmp45;
    result_value_ptr[1210] = _tmp19;
    result_value_ptr[1211] = _tmp29;
    result_value_ptr[1212] = _tmp60;
    result_value_ptr[1213] = -_tmp29*_tmp85;
    result_value_ptr[1214] = _tmp38;
    result_value_ptr[1215] = _tmp183;
    result_value_ptr[1216] = _tmp74;
    result_value_ptr[1217] = 2;
    result_value_ptr[1218] = _tmp61;
    result_value_ptr[1219] = -_tmp50;
    result_value_ptr[1220] = _tmp294;
    result_value_ptr[1221] = 2;
    result_value_ptr[1222] = -_tmp119 - _tmp205;
    result_value_ptr[1223] = _tmp50;
    result_value_ptr[1224] = -_tmp6 - 12;
    result_value_ptr[1225] = -_tmp295;
    result_value_ptr[1226] = _tmp48;
    result_value_ptr[1227] = _tmp174;
    result_value_ptr[1228] = _tmp10;
    result_value_ptr[1229] = _tmp143*_tmp25;
    result_value_ptr[1230] = _tmp76;
    result_value_ptr[1231] = _tmp45;
    result_value_ptr[1232] = _tmp296;
    result_value_ptr[1233] = -2;
    result_value_ptr[1234] = -2;
    result_value_ptr[1235] = -_tmp25*_tmp83;
    result_value_ptr[1236] = -_tmp177;
    result_value_ptr[1237] = _tmp50;
    result_value_ptr[1238] = -_tmp25*_tmp42;
    result_value_ptr[1239] = -2;
    result_value_ptr[1240] = -4;
    result_value_ptr[1241] = -_tmp20*_tmp25 - _tmp50;
    result_value_ptr[1242] = _tmp296;
    result_value_ptr[1243] = 16 - _tmp36;
    result_value_ptr[1244] = Scalar(2.0);
    result_value_ptr[1245] = _tmp76;
    result_value_ptr[1246] = _tmp38;
    result_value_ptr[1247] = -_tmp298;
    result_value_ptr[1248] = _tmp91;
    result_value_ptr[1249] = -16;
    result_value_ptr[1250] = _tmp299;
    result_value_ptr[1251] = 6;
    result_value_ptr[1252] = 8;
    result_value_ptr[1253] = -_tmp297*_tmp42;
    result_value_ptr[1254] = _tmp206;
    result_value_ptr[1255] = _tmp288;
    result_value_ptr[1256] = _tmp298;
    result_value_ptr[1257] = _tmp270;
    result_value_ptr[1258] = _tmp297;
    result_value_ptr[1259] = -3;
    result_value_ptr[1260] = _tmp132*_tmp297 - 18;
    result_value_ptr[1261] = _tmp299;
    result_value_ptr[1262] = _tmp187;
    result_value_ptr[1263] = -8;
    result_value_ptr[1264] = -12;
    result_value_ptr[1265] = -8;
    result_value_ptr[1266] = _tmp16;
    result_value_ptr[1267] = _tmp143*_tmp201;
    result_value_ptr[1268] = -_tmp244;
    result_value_ptr[1269] = _tmp144;
    result_value_ptr[1270] = -_tmp205;
    result_value_ptr[1271] = _tmp193;
    result_value_ptr[1272] = -_tmp2*_tmp42;
    result_value_ptr[1273] = -_tmp201*_tmp83;
    result_value_ptr[1274] = -_tmp182;
    result_value_ptr[1275] = _tmp15;
    result_value_ptr[1276] = -_tmp202;
    result_value_ptr[1277] = _tmp2;
    result_value_ptr[1278] = -_tmp20*_tmp201;
    result_value_ptr[1279] = _tmp132*_tmp2;
    result_value_ptr[1280] = _tmp146*_tmp50 - _tmp205 - _tmp210 + Scalar(-1.0);
    result_value_ptr[1281] = 16 - _tmp54;
    result_value_ptr[1282] = _tmp195;
    result_value_ptr[1283] = _tmp60;
    result_value_ptr[1284] = _tmp50;
    result_value_ptr[1285] = _tmp237;
    result_value_ptr[1286] = _tmp283;
    result_value_ptr[1287] = 3;
    result_value_ptr[1288] = _tmp175;
    result_value_ptr[1289] = _tmp28;
    result_value_ptr[1290] = _tmp95;
    result_value_ptr[1291] = _tmp238;
    result_value_ptr[1292] = _tmp75;
    result_value_ptr[1293] = _tmp76;
    result_value_ptr[1294] = -_tmp274;
    result_value_ptr[1295] = _tmp213;
    result_value_ptr[1296] = _tmp271;
    result_value_ptr[1297] = _tmp22;
    result_value_ptr[1298] = 24 - _tmp162;
    result_value_ptr[1299] = _tmp28;
    result_value_ptr[1300] = -_tmp113*_tmp50 + _tmp66 - 8;
    result_value_ptr[1301] = _tmp76;
    result_value_ptr[1302] = -4;
    result_value_ptr[1303] = x0;
    result_value_ptr[1304] = _tmp29;
    result_value_ptr[1305] = _tmp115;
    result_value_ptr[1306] = _tmp91;
    result_value_ptr[1307] = _tmp206;
    result_value_ptr[1308] = _tmp16;
    result_value_ptr[1309] = _tmp66;
    result_value_ptr[1310] = x0;
    result_value_ptr[1311] = _tmp115;
    result_value_ptr[1312] = _tmp84;
    result_value_ptr[1313] = _tmp62;
    result_value_ptr[1314] = _tmp104;
    result_value_ptr[1315] = x0;
    result_value_ptr[1316] = -Scalar(1)/Scalar(2)*_tmp0 + _tmp156 - _tmp2*_tmp73;
    result_value_ptr[1317] = _tmp91;
    result_value_ptr[1318] = _tmp91;
    result_value_ptr[1319] = -_tmp2*_tmp23;
    result_value_ptr[1320] = -_tmp101;
    result_value_ptr[1321] = _tmp45;
    result_value_ptr[1322] = _tmp83;
    result_value_ptr[1323] = 12;
    result_value_ptr[1324] = _tmp28;
    result_value_ptr[1325] = _tmp8*_tmp85;
    result_value_ptr[1326] = -18;
    result_value_ptr[1327] = _tmp22;
    result_value_ptr[1328] = _tmp11;
    result_value_ptr[1329] = 6;
    result_value_ptr[1330] = _tmp225;
    result_value_ptr[1331] = _tmp72;
    result_value_ptr[1332] = -4;
    result_value_ptr[1333] = _tmp201*_tmp8;
    result_value_ptr[1334] = _tmp206;
    result_value_ptr[1335] = -_tmp20*_tmp8 + _tmp36 + 16;
    result_value_ptr[1336] = 18;
    result_value_ptr[1337] = _tmp170;
    result_value_ptr[1338] = 6;
    result_value_ptr[1339] = -4*_tmp9;
    result_value_ptr[1340] = -std::pow(_tmp8, Scalar(2));
    result_value_ptr[1341] = _tmp76;
    result_value_ptr[1342] = _tmp163*_tmp50;
    result_value_ptr[1343] = _tmp128;
    result_value_ptr[1344] = _tmp12;
    result_value_ptr[1345] = _tmp295;
    result_value_ptr[1346] = _tmp28;
    result_value_ptr[1347] = _tmp19;
    result_value_ptr[1348] = -_tmp50*_tmp73;
    result_value_ptr[1349] = -_tmp177*_tmp29;
    result_value_ptr[1350] = _tmp38;
    result_value_ptr[1351] = _tmp246*_tmp50;
    result_value_ptr[1352] = _tmp180;
    result_value_ptr[1353] = _tmp236;
    result_value_ptr[1354] = _tmp236 + Scalar(5.0)*x0 + Scalar(2.0);
    result_value_ptr[1355] = _tmp185;
    result_value_ptr[1356] = _tmp272;
    result_value_ptr[1357] = _tmp128;
    result_value_ptr[1358] = _tmp138;
    result_value_ptr[1359] = _tmp176;
    result_value_ptr[1360] = _tmp261;
    result_value_ptr[1361] = _tmp233;
    result_value_ptr[1362] = _tmp76;
    result_value_ptr[1363] = _tmp20*_tmp3;
    result_value_ptr[1364] = _tmp87;
    result_value_ptr[1365] = _tmp176;
    result_value_ptr[1366] = _tmp119*_tmp3;
    result_value_ptr[1367] = -_tmp184*_tmp3;
    result_value_ptr[1368] = -2;
    result_value_ptr[1369] = _tmp87;
    result_value_ptr[1370] = _tmp165;
    result_value_ptr[1371] = -_tmp273*_tmp3;
    result_value_ptr[1372] = _tmp12*_tmp3 + _tmp290;
    result_value_ptr[1373] = _tmp32;
    result_value_ptr[1374] = _tmp270;
    result_value_ptr[1375] = _tmp270;
    result_value_ptr[1376] = _tmp102;
    result_value_ptr[1377] = _tmp254;
    result_value_ptr[1378] = _tmp163*_tmp300;
    result_value_ptr[1379] = _tmp42;
    result_value_ptr[1380] = _tmp103;
    result_value_ptr[1381] = _tmp300*_tmp50;
    result_value_ptr[1382] = _tmp7;
    result_value_ptr[1383] = _tmp254;
    result_value_ptr[1384] = -_tmp300*_tmp73;
    result_value_ptr[1385] = 4;
    result_value_ptr[1386] = _tmp58;
    result_value_ptr[1387] = _tmp246*_tmp300;
    result_value_ptr[1388] = _tmp151;
    result_value_ptr[1389] = _tmp58*_tmp73;
    result_value_ptr[1390] = _tmp110 + _tmp33;
    result_value_ptr[1391] = _tmp96;
    result_value_ptr[1392] = _tmp268 - _tmp278 - _tmp73;
    result_value_ptr[1393] = -_tmp166*_tmp300;
    result_value_ptr[1394] = _tmp66;
    result_value_ptr[1395] = -1;
    result_value_ptr[1396] = _tmp159;
    result_value_ptr[1397] = _tmp163*x0;
    result_value_ptr[1398] = _tmp170;
    result_value_ptr[1399] = Scalar(1.0)*_tmp20;
    result_value_ptr[1400] = _tmp60;
    result_value_ptr[1401] = _tmp59;
    result_value_ptr[1402] = _tmp292;
    result_value_ptr[1403] = _tmp240;
    result_value_ptr[1404] = _tmp46;
    result_value_ptr[1405] = Scalar(2.0);
    result_value_ptr[1406] = _tmp245*_tmp29;
    result_value_ptr[1407] = _tmp17;
    result_value_ptr[1408] = Scalar(1.0) - _tmp33;
    result_value_ptr[1409] = _tmp110;
    result_value_ptr[1410] = _tmp251;
    result_value_ptr[1411] = _tmp32;
    result_value_ptr[1412] = -_tmp269 - _tmp47 + Scalar(-3.0);
    result_value_ptr[1413] = _tmp14;
    result_value_ptr[1414] = _tmp18;
    result_value_ptr[1415] = _tmp169;
    result_value_ptr[1416] = _tmp85*x0;
    result_value_ptr[1417] = -8*_tmp245;
    result_value_ptr[1418] = _tmp76;
    result_value_ptr[1419] = _tmp84;
    result_value_ptr[1420] = _tmp279;
    result_value_ptr[1421] = _tmp128;
    result_value_ptr[1422] = -_tmp184*_tmp246;
    result_value_ptr[1423] = _tmp7;
    result_value_ptr[1424] = _tmp207;
    result_value_ptr[1425] = _tmp49;
    result_value_ptr[1426] = _tmp53;
    result_value_ptr[1427] = _tmp280;
    result_value_ptr[1428] = -_tmp21 - _tmp291 - _tmp74;
    result_value_ptr[1429] = _tmp40;
    result_value_ptr[1430] = _tmp26;
    result_value_ptr[1431] = _tmp280;
    result_value_ptr[1432] = _tmp91 + 3;
    result_value_ptr[1433] = _tmp135;
    result_value_ptr[1434] = _tmp127;
    result_value_ptr[1435] = _tmp94;
    result_value_ptr[1436] = _tmp91;
    result_value_ptr[1437] = _tmp46;
    result_value_ptr[1438] = _tmp11;
    result_value_ptr[1439] = (Scalar(3)/Scalar(2))*_tmp177*x0;
    result_value_ptr[1440] = _tmp14;
    result_value_ptr[1441] = _tmp8;
    result_value_ptr[1442] = -_tmp146*_tmp7;
    result_value_ptr[1443] = -_tmp209;
    result_value_ptr[1444] = -_tmp208;
    result_value_ptr[1445] = _tmp70;
    result_value_ptr[1446] = _tmp137;
    result_value_ptr[1447] = _tmp10 + _tmp38;
    result_value_ptr[1448] = -Scalar(3)/Scalar(2)*_tmp155;
    result_value_ptr[1449] = _tmp76;
    result_value_ptr[1450] = -_tmp85*x1;
    result_value_ptr[1451] = _tmp36;
    result_value_ptr[1452] = -6;
    result_value_ptr[1453] = _tmp17;
    result_value_ptr[1454] = 4;
    result_value_ptr[1455] = _tmp63;
    result_value_ptr[1456] = _tmp125 + 4;
    result_value_ptr[1457] = _tmp36;
    result_value_ptr[1458] = _tmp253;
    result_value_ptr[1459] = _tmp29;
    result_value_ptr[1460] = _tmp39;
    result_value_ptr[1461] = Scalar(-4.0);
    result_value_ptr[1462] = _tmp36;
    result_value_ptr[1463] = _tmp40;
    result_value_ptr[1464] = _tmp36;
    result_value_ptr[1465] = _tmp136 + _tmp18 + 8;
    result_value_ptr[1466] = _tmp32;
    result_value_ptr[1467] = _tmp28;
    result_value_ptr[1468] = _tmp29;
    result_value_ptr[1469] = _tmp284;
    result_value_ptr[1470] = _tmp32;
    result_value_ptr[1471] = _tmp206;
    result_value_ptr[1472] = _tmp32;

    return result;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
