{%- import "../../../util/util.jinja" as util with context -%}

//  ----------------------------------------------------------------------------
// This file was autogenerated by symforce. Do NOT modify by hand.
// -----------------------------------------------------------------------------
#pragma once

#include <Eigen/Dense>

#include <sym/{{ camelcase_to_snakecase(cls.__name__) }}.h>

namespace sym {

/**
 * C++ GroupOps implementation for {{ cls }}.
 */
template <typename Scalar>
struct GroupOps<{{ cls.__name__ }}<Scalar>> {
  using SelfJacobian = Eigen::Matrix<Scalar,
                                     LieGroupOps<{{ cls.__name__ }}<Scalar>>::TangentDim(),
                                     LieGroupOps<{{ cls.__name__ }}<Scalar>>::TangentDim()>;

  {% for spec in specs['GroupOps'] %}
  static {{ util.function_declaration(spec, is_declaration=True) }};
  {% endfor %}
};


}  // namespace sym
