//  ----------------------------------------------------------------------------
// This file was autogenerated by symforce. Do NOT modify by hand.
// -----------------------------------------------------------------------------
#pragma once

#include <Eigen/Dense>

#include <geo/pose3.h>

namespace geo {
namespace pose3 {

/**
 * C++ GroupOps implementation for <class 'symforce.geo.pose3.Pose3'>.
 */
template <typename Scalar>
struct GroupOps {
  static geo::Pose3<Scalar> Identity();
  static geo::Pose3<Scalar> Inverse(const geo::Pose3<Scalar>& a);
  static geo::Pose3<Scalar> Compose(const geo::Pose3<Scalar>& a, const geo::Pose3<Scalar>& b);
  static geo::Pose3<Scalar> Between(const geo::Pose3<Scalar>& a, const geo::Pose3<Scalar>& b);
};

}  // namespace pose3

// Wrapper to specialize the public concept
template <>
struct GroupOps<Pose3<double>> : public pose3::GroupOps<double> {};
template <>
struct GroupOps<Pose3<float>> : public pose3::GroupOps<float> {};

}  // namespace geo
