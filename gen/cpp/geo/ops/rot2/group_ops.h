//  ----------------------------------------------------------------------------
// This file was autogenerated by symforce. Do NOT modify by hand.
// -----------------------------------------------------------------------------
#pragma once

#include <Eigen/Dense>

#include <geo/rot2.h>

namespace geo {
namespace rot2 {

/**
 * C++ GroupOps implementation for <class 'symforce.geo.rot2.Rot2'>.
 */
template <typename Scalar>
struct GroupOps {
  static geo::Rot2<Scalar> Identity();
  static geo::Rot2<Scalar> Inverse(const geo::Rot2<Scalar>& a);
  static geo::Rot2<Scalar> Compose(const geo::Rot2<Scalar>& a, const geo::Rot2<Scalar>& b);
  static geo::Rot2<Scalar> Between(const geo::Rot2<Scalar>& a, const geo::Rot2<Scalar>& b);
};

}  // namespace rot2

// Wrapper to specialize the public concept
template <>
struct GroupOps<Rot2<double>> : public rot2::GroupOps<double> {};
template <>
struct GroupOps<Rot2<float>> : public rot2::GroupOps<float> {};

}  // namespace geo
