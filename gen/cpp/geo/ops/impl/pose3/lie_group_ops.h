//  -----------------------------------------------------------------------------
// This file was autogenerated by symforce. Do NOT modify by hand.
// -----------------------------------------------------------------------------
#pragma once

#include <Eigen/Dense>

#include <geo/pose3.h>

namespace geo {
namespace pose3 {

/**
 * C++ LieGroupOps implementation for <class 'symforce.geometry.pose3.Pose3'>.
 */
template <typename Scalar>
struct LieGroupOps {
  static constexpr int32_t TangentDim() {
      return 6;
  }

  static Pose3<Scalar> Expmap(const Eigen::Matrix<Scalar, 6, 1>& vec, const Scalar epsilon);
  static Eigen::Matrix<Scalar, 6, 1> Logmap(const Pose3<Scalar>& a, const Scalar epsilon);
  static Pose3<Scalar> Retract(const Pose3<Scalar>& a, const Eigen::Matrix<Scalar, 6, 1>& vec, const Scalar epsilon);
  static Eigen::Matrix<Scalar, 6, 1> LocalCoordinates(const Pose3<Scalar>& a, const Pose3<Scalar>& b, const Scalar epsilon);
};

}  // namespace pose3

// Specialization into the top level concept
template <>
struct LieGroupOps<Pose3<double>> : public pose3::LieGroupOps<double> {};
template <>
struct LieGroupOps<Pose3<float>> : public pose3::LieGroupOps<float> {};

}  // namespace geo
