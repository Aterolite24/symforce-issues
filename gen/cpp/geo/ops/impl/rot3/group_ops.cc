//  ----------------------------------------------------------------------------
// This file was autogenerated by symforce. Do NOT modify by hand.
// -----------------------------------------------------------------------------

#include "./group_ops.h"

namespace geo {
namespace rot3 {

template <typename Scalar>
Rot3<Scalar> GroupOps<Scalar>::Identity() {
    // Input arrays

    // Output array
    Eigen::Matrix<Scalar, 4, 1> res;

    // Intermediate terms (0)

    // Output terms (4)
    res[0] = 0;
    res[1] = 0;
    res[2] = 0;
    res[3] = 1;

    return Rot3<Scalar>(res);
}

template <typename Scalar>
Rot3<Scalar> GroupOps<Scalar>::Inverse(const Rot3<Scalar>& a) {
    // Input arrays
    const Eigen::Matrix<Scalar, 4, 1>& _a = a.Storage();

    // Output array
    Eigen::Matrix<Scalar, 4, 1> res;

    // Intermediate terms (0)

    // Output terms (4)
    res[0] = -_a[0];
    res[1] = -_a[1];
    res[2] = -_a[2];
    res[3] = _a[3];

    return Rot3<Scalar>(res);
}

template <typename Scalar>
Rot3<Scalar> GroupOps<Scalar>::Compose(const Rot3<Scalar>& a, const Rot3<Scalar>& b) {
    // Input arrays
    const Eigen::Matrix<Scalar, 4, 1>& _a = a.Storage();
    const Eigen::Matrix<Scalar, 4, 1>& _b = b.Storage();

    // Output array
    Eigen::Matrix<Scalar, 4, 1> res;

    // Intermediate terms (0)

    // Output terms (4)
    res[0] = _a[0]*_b[3] + _a[1]*_b[2] - _a[2]*_b[1] + _a[3]*_b[0];
    res[1] = -_a[0]*_b[2] + _a[1]*_b[3] + _a[2]*_b[0] + _a[3]*_b[1];
    res[2] = _a[0]*_b[1] - _a[1]*_b[0] + _a[2]*_b[3] + _a[3]*_b[2];
    res[3] = -_a[0]*_b[0] - _a[1]*_b[1] - _a[2]*_b[2] + _a[3]*_b[3];

    return Rot3<Scalar>(res);
}

template <typename Scalar>
Rot3<Scalar> GroupOps<Scalar>::Between(const Rot3<Scalar>& a, const Rot3<Scalar>& b) {
    // Input arrays
    const Eigen::Matrix<Scalar, 4, 1>& _a = a.Storage();
    const Eigen::Matrix<Scalar, 4, 1>& _b = b.Storage();

    // Output array
    Eigen::Matrix<Scalar, 4, 1> res;

    // Intermediate terms (0)

    // Output terms (4)
    res[0] = -_a[0]*_b[3] - _a[1]*_b[2] + _a[2]*_b[1] + _a[3]*_b[0];
    res[1] = _a[0]*_b[2] - _a[1]*_b[3] - _a[2]*_b[0] + _a[3]*_b[1];
    res[2] = -_a[0]*_b[1] + _a[1]*_b[0] - _a[2]*_b[3] + _a[3]*_b[2];
    res[3] = _a[0]*_b[0] + _a[1]*_b[1] + _a[2]*_b[2] + _a[3]*_b[3];

    return Rot3<Scalar>(res);
}


}  // namespace rot3
}  // namespace geo

// Explicit instantiation
template struct geo::rot3::GroupOps<double>;
template struct geo::rot3::GroupOps<float>;
