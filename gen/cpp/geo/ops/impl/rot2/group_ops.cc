//  ----------------------------------------------------------------------------
// This file was autogenerated by symforce. Do NOT modify by hand.
// -----------------------------------------------------------------------------

#include "./group_ops.h"

namespace geo {
namespace rot2 {

template <typename Scalar>
Rot2<Scalar> GroupOps<Scalar>::Identity() {
    // Input arrays

    // Output array
    Eigen::Matrix<Scalar, 2, 1> res;

    // Intermediate terms (0)

    // Output terms (2)
    res[0] = 1;
    res[1] = 0;

    return Rot2<Scalar>(res);
}

template <typename Scalar>
Rot2<Scalar> GroupOps<Scalar>::Inverse(const Rot2<Scalar>& a) {
    // Input arrays
    const Eigen::Matrix<Scalar, 2, 1>& _a = a.Data();

    // Output array
    Eigen::Matrix<Scalar, 2, 1> res;

    // Intermediate terms (1)
    const Scalar _tmp0 = 1.0 / ((_a[0] * _a[0]) + (_a[1] * _a[1]));

    // Output terms (2)
    res[0] = _a[0]*_tmp0;
    res[1] = -_a[1]*_tmp0;

    return Rot2<Scalar>(res);
}

template <typename Scalar>
Rot2<Scalar> GroupOps<Scalar>::Compose(const Rot2<Scalar>& a, const Rot2<Scalar>& b) {
    // Input arrays
    const Eigen::Matrix<Scalar, 2, 1>& _a = a.Data();
    const Eigen::Matrix<Scalar, 2, 1>& _b = b.Data();

    // Output array
    Eigen::Matrix<Scalar, 2, 1> res;

    // Intermediate terms (0)

    // Output terms (2)
    res[0] = _a[0]*_b[0] - _a[1]*_b[1];
    res[1] = _a[0]*_b[1] + _a[1]*_b[0];

    return Rot2<Scalar>(res);
}

template <typename Scalar>
Rot2<Scalar> GroupOps<Scalar>::Between(const Rot2<Scalar>& a, const Rot2<Scalar>& b) {
    // Input arrays
    const Eigen::Matrix<Scalar, 2, 1>& _a = a.Data();
    const Eigen::Matrix<Scalar, 2, 1>& _b = b.Data();

    // Output array
    Eigen::Matrix<Scalar, 2, 1> res;

    // Intermediate terms (3)
    const Scalar _tmp0 = 1.0 / ((_a[0] * _a[0]) + (_a[1] * _a[1]));
    const Scalar _tmp1 = _b[1]*_tmp0;
    const Scalar _tmp2 = _b[0]*_tmp0;

    // Output terms (2)
    res[0] = _a[0]*_tmp2 + _a[1]*_tmp1;
    res[1] = _a[0]*_tmp1 - _a[1]*_tmp2;

    return Rot2<Scalar>(res);
}


}  // namespace rot2
}  // namespace geo

// Explicit instantiation
template struct geo::rot2::GroupOps<double>;
template struct geo::rot2::GroupOps<float>;
