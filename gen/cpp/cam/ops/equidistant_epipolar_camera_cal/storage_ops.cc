//  ----------------------------------------------------------------------------
// This file was autogenerated by symforce. Do NOT modify by hand.
// -----------------------------------------------------------------------------

#include "./storage_ops.h"

namespace cam {
namespace equidistant_epipolar_camera_cal {

template <typename Scalar>
void StorageOps<Scalar>::ToStorage(const EquidistantEpipolarCameraCal<Scalar>& a,
                                   Scalar* const vec) {
  assert(vec != nullptr);
  std::copy_n(a.Data().data(), a.StorageDim(), vec);
}

template <typename Scalar>
EquidistantEpipolarCameraCal<Scalar> StorageOps<Scalar>::FromStorage(const Scalar* const vec) {
  assert(vec != nullptr);
  return EquidistantEpipolarCameraCal<Scalar>(
      Eigen::Map<const typename EquidistantEpipolarCameraCal<Scalar>::DataVec>(vec));
}

}  // namespace equidistant_epipolar_camera_cal
}  // namespace cam

// Explicit instantiation
template struct cam::equidistant_epipolar_camera_cal::StorageOps<double>;
template struct cam::equidistant_epipolar_camera_cal::StorageOps<float>;
