// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     cpp_templates/cam_package/ops/CLASS/storage_ops.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <vector>

#include <Eigen/Dense>
#include <sym/atan_camera_cal.h>

namespace sym {
namespace atan_camera_cal {

/**
 * C++ StorageOps implementation for <class 'symforce.cam.atan_camera_cal.ATANCameraCal'>.
 */
template <typename Scalar>
struct StorageOps {
  static constexpr int32_t StorageDim() {
    return 5;
  }

  static void ToStorage(const sym::ATANCameraCal<Scalar>& a, Scalar* const vec);
  static sym::ATANCameraCal<Scalar> FromStorage(const Scalar* const vec);
};

}  // namespace atan_camera_cal
}  // namespace sym

// Wrapper to specialize the public concept
namespace sym {

template <>
struct StorageOps<sym::ATANCameraCal<double>> : public sym::atan_camera_cal::StorageOps<double> {};
template <>
struct StorageOps<sym::ATANCameraCal<float>> : public sym::atan_camera_cal::StorageOps<float> {};

}  // namespace sym

// Explicit instantiation
extern template struct sym::atan_camera_cal::StorageOps<double>;
extern template struct sym::atan_camera_cal::StorageOps<float>;
