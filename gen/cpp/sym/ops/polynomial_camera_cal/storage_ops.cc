// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     cpp_templates/cam_package/ops/CLASS/storage_ops.cc.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#include "./storage_ops.h"

namespace sym {
namespace polynomial_camera_cal {

template <typename Scalar>
void StorageOps<Scalar>::ToStorage(const PolynomialCameraCal<Scalar>& a, Scalar* const vec) {
  assert(vec != nullptr);
  std::copy_n(a.Data().data(), a.StorageDim(), vec);
}

template <typename Scalar>
PolynomialCameraCal<Scalar> StorageOps<Scalar>::FromStorage(const Scalar* const vec) {
  assert(vec != nullptr);
  return PolynomialCameraCal<Scalar>(
      Eigen::Map<const typename PolynomialCameraCal<Scalar>::DataVec>(vec));
}

}  // namespace polynomial_camera_cal
}  // namespace sym

// Explicit instantiation
template struct sym::polynomial_camera_cal::StorageOps<double>;
template struct sym::polynomial_camera_cal::StorageOps<float>;
