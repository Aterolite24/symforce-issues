//  -----------------------------------------------------------------------------
// This file was autogenerated by symforce. Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

// Import all the known types.
#include <sym/linear_camera_cal.h>
#include <sym/ops/lie_group_ops.h>
#include <sym/ops/storage_ops.h>
#include <sym/pose2.h>
#include <sym/pose3.h>
#include <sym/rot2.h>
#include <sym/rot3.h>
#include <sym/util/typedefs.h>

#include <lcmtypes/sym/type_t.hpp>

namespace sym {

template <typename T>
static constexpr const bool kIsEigenType = std::is_base_of<Eigen::MatrixBase<T>, T>::value;

/**
 * Helper to handle polymorphism by creating a switch from a runtime type enum to dispatch
 * to the templated method func. Used to perform type-aware operations.
 *
 * Args:
 *   name: Name of the output function (ex: PrintByType)
 *   func: Name of a function template (ex: PrintHelper)
 */
#define BY_TYPE_HELPER(name, func)                  \
  template <typename Scalar, typename... Args>      \
  void name(const type_t type, Args&&... args) {    \
    switch (type.value) {                           \
      case type_t::ROT2:                            \
        func<sym::Rot2<Scalar>>(args...);           \
        break;                                      \
      case type_t::ROT3:                            \
        func<sym::Rot3<Scalar>>(args...);           \
        break;                                      \
      case type_t::POSE2:                           \
        func<sym::Pose2<Scalar>>(args...);          \
        break;                                      \
      case type_t::POSE3:                           \
        func<sym::Pose3<Scalar>>(args...);          \
        break;                                      \
      case type_t::SCALAR:                          \
        func<Scalar>(args...);                      \
        break;                                      \
      case type_t::VECTOR1:                         \
        func<Eigen::Matrix<Scalar, 1, 1>>(args...); \
        break;                                      \
      case type_t::VECTOR2:                         \
        func<Eigen::Matrix<Scalar, 2, 1>>(args...); \
        break;                                      \
      case type_t::VECTOR3:                         \
        func<Eigen::Matrix<Scalar, 3, 1>>(args...); \
        break;                                      \
      case type_t::VECTOR4:                         \
        func<Eigen::Matrix<Scalar, 4, 1>>(args...); \
        break;                                      \
      case type_t::VECTOR5:                         \
        func<Eigen::Matrix<Scalar, 5, 1>>(args...); \
        break;                                      \
      case type_t::VECTOR6:                         \
        func<Eigen::Matrix<Scalar, 6, 1>>(args...); \
        break;                                      \
      case type_t::VECTOR7:                         \
        func<Eigen::Matrix<Scalar, 7, 1>>(args...); \
        break;                                      \
      case type_t::VECTOR8:                         \
        func<Eigen::Matrix<Scalar, 8, 1>>(args...); \
        break;                                      \
      case type_t::VECTOR9:                         \
        func<Eigen::Matrix<Scalar, 9, 1>>(args...); \
        break;                                      \
      case type_t::MATRIX12:                        \
        func<Eigen::Matrix<Scalar, 1, 2>>(args...); \
        break;                                      \
      case type_t::MATRIX13:                        \
        func<Eigen::Matrix<Scalar, 1, 3>>(args...); \
        break;                                      \
      case type_t::MATRIX14:                        \
        func<Eigen::Matrix<Scalar, 1, 4>>(args...); \
        break;                                      \
      case type_t::MATRIX15:                        \
        func<Eigen::Matrix<Scalar, 1, 5>>(args...); \
        break;                                      \
      case type_t::MATRIX16:                        \
        func<Eigen::Matrix<Scalar, 1, 6>>(args...); \
        break;                                      \
      case type_t::MATRIX17:                        \
        func<Eigen::Matrix<Scalar, 1, 7>>(args...); \
        break;                                      \
      case type_t::MATRIX18:                        \
        func<Eigen::Matrix<Scalar, 1, 8>>(args...); \
        break;                                      \
      case type_t::MATRIX19:                        \
        func<Eigen::Matrix<Scalar, 1, 9>>(args...); \
        break;                                      \
      case type_t::MATRIX22:                        \
        func<Eigen::Matrix<Scalar, 2, 2>>(args...); \
        break;                                      \
      case type_t::MATRIX23:                        \
        func<Eigen::Matrix<Scalar, 2, 3>>(args...); \
        break;                                      \
      case type_t::MATRIX24:                        \
        func<Eigen::Matrix<Scalar, 2, 4>>(args...); \
        break;                                      \
      case type_t::MATRIX25:                        \
        func<Eigen::Matrix<Scalar, 2, 5>>(args...); \
        break;                                      \
      case type_t::MATRIX26:                        \
        func<Eigen::Matrix<Scalar, 2, 6>>(args...); \
        break;                                      \
      case type_t::MATRIX27:                        \
        func<Eigen::Matrix<Scalar, 2, 7>>(args...); \
        break;                                      \
      case type_t::MATRIX28:                        \
        func<Eigen::Matrix<Scalar, 2, 8>>(args...); \
        break;                                      \
      case type_t::MATRIX29:                        \
        func<Eigen::Matrix<Scalar, 2, 9>>(args...); \
        break;                                      \
      case type_t::MATRIX32:                        \
        func<Eigen::Matrix<Scalar, 3, 2>>(args...); \
        break;                                      \
      case type_t::MATRIX33:                        \
        func<Eigen::Matrix<Scalar, 3, 3>>(args...); \
        break;                                      \
      case type_t::MATRIX34:                        \
        func<Eigen::Matrix<Scalar, 3, 4>>(args...); \
        break;                                      \
      case type_t::MATRIX35:                        \
        func<Eigen::Matrix<Scalar, 3, 5>>(args...); \
        break;                                      \
      case type_t::MATRIX36:                        \
        func<Eigen::Matrix<Scalar, 3, 6>>(args...); \
        break;                                      \
      case type_t::MATRIX37:                        \
        func<Eigen::Matrix<Scalar, 3, 7>>(args...); \
        break;                                      \
      case type_t::MATRIX38:                        \
        func<Eigen::Matrix<Scalar, 3, 8>>(args...); \
        break;                                      \
      case type_t::MATRIX39:                        \
        func<Eigen::Matrix<Scalar, 3, 9>>(args...); \
        break;                                      \
      case type_t::MATRIX42:                        \
        func<Eigen::Matrix<Scalar, 4, 2>>(args...); \
        break;                                      \
      case type_t::MATRIX43:                        \
        func<Eigen::Matrix<Scalar, 4, 3>>(args...); \
        break;                                      \
      case type_t::MATRIX44:                        \
        func<Eigen::Matrix<Scalar, 4, 4>>(args...); \
        break;                                      \
      case type_t::MATRIX45:                        \
        func<Eigen::Matrix<Scalar, 4, 5>>(args...); \
        break;                                      \
      case type_t::MATRIX46:                        \
        func<Eigen::Matrix<Scalar, 4, 6>>(args...); \
        break;                                      \
      case type_t::MATRIX47:                        \
        func<Eigen::Matrix<Scalar, 4, 7>>(args...); \
        break;                                      \
      case type_t::MATRIX48:                        \
        func<Eigen::Matrix<Scalar, 4, 8>>(args...); \
        break;                                      \
      case type_t::MATRIX49:                        \
        func<Eigen::Matrix<Scalar, 4, 9>>(args...); \
        break;                                      \
      case type_t::MATRIX52:                        \
        func<Eigen::Matrix<Scalar, 5, 2>>(args...); \
        break;                                      \
      case type_t::MATRIX53:                        \
        func<Eigen::Matrix<Scalar, 5, 3>>(args...); \
        break;                                      \
      case type_t::MATRIX54:                        \
        func<Eigen::Matrix<Scalar, 5, 4>>(args...); \
        break;                                      \
      case type_t::MATRIX55:                        \
        func<Eigen::Matrix<Scalar, 5, 5>>(args...); \
        break;                                      \
      case type_t::MATRIX56:                        \
        func<Eigen::Matrix<Scalar, 5, 6>>(args...); \
        break;                                      \
      case type_t::MATRIX57:                        \
        func<Eigen::Matrix<Scalar, 5, 7>>(args...); \
        break;                                      \
      case type_t::MATRIX58:                        \
        func<Eigen::Matrix<Scalar, 5, 8>>(args...); \
        break;                                      \
      case type_t::MATRIX59:                        \
        func<Eigen::Matrix<Scalar, 5, 9>>(args...); \
        break;                                      \
      case type_t::MATRIX62:                        \
        func<Eigen::Matrix<Scalar, 6, 2>>(args...); \
        break;                                      \
      case type_t::MATRIX63:                        \
        func<Eigen::Matrix<Scalar, 6, 3>>(args...); \
        break;                                      \
      case type_t::MATRIX64:                        \
        func<Eigen::Matrix<Scalar, 6, 4>>(args...); \
        break;                                      \
      case type_t::MATRIX65:                        \
        func<Eigen::Matrix<Scalar, 6, 5>>(args...); \
        break;                                      \
      case type_t::MATRIX66:                        \
        func<Eigen::Matrix<Scalar, 6, 6>>(args...); \
        break;                                      \
      case type_t::MATRIX67:                        \
        func<Eigen::Matrix<Scalar, 6, 7>>(args...); \
        break;                                      \
      case type_t::MATRIX68:                        \
        func<Eigen::Matrix<Scalar, 6, 8>>(args...); \
        break;                                      \
      case type_t::MATRIX69:                        \
        func<Eigen::Matrix<Scalar, 6, 9>>(args...); \
        break;                                      \
      case type_t::MATRIX72:                        \
        func<Eigen::Matrix<Scalar, 7, 2>>(args...); \
        break;                                      \
      case type_t::MATRIX73:                        \
        func<Eigen::Matrix<Scalar, 7, 3>>(args...); \
        break;                                      \
      case type_t::MATRIX74:                        \
        func<Eigen::Matrix<Scalar, 7, 4>>(args...); \
        break;                                      \
      case type_t::MATRIX75:                        \
        func<Eigen::Matrix<Scalar, 7, 5>>(args...); \
        break;                                      \
      case type_t::MATRIX76:                        \
        func<Eigen::Matrix<Scalar, 7, 6>>(args...); \
        break;                                      \
      case type_t::MATRIX77:                        \
        func<Eigen::Matrix<Scalar, 7, 7>>(args...); \
        break;                                      \
      case type_t::MATRIX78:                        \
        func<Eigen::Matrix<Scalar, 7, 8>>(args...); \
        break;                                      \
      case type_t::MATRIX79:                        \
        func<Eigen::Matrix<Scalar, 7, 9>>(args...); \
        break;                                      \
      case type_t::MATRIX82:                        \
        func<Eigen::Matrix<Scalar, 8, 2>>(args...); \
        break;                                      \
      case type_t::MATRIX83:                        \
        func<Eigen::Matrix<Scalar, 8, 3>>(args...); \
        break;                                      \
      case type_t::MATRIX84:                        \
        func<Eigen::Matrix<Scalar, 8, 4>>(args...); \
        break;                                      \
      case type_t::MATRIX85:                        \
        func<Eigen::Matrix<Scalar, 8, 5>>(args...); \
        break;                                      \
      case type_t::MATRIX86:                        \
        func<Eigen::Matrix<Scalar, 8, 6>>(args...); \
        break;                                      \
      case type_t::MATRIX87:                        \
        func<Eigen::Matrix<Scalar, 8, 7>>(args...); \
        break;                                      \
      case type_t::MATRIX88:                        \
        func<Eigen::Matrix<Scalar, 8, 8>>(args...); \
        break;                                      \
      case type_t::MATRIX89:                        \
        func<Eigen::Matrix<Scalar, 8, 9>>(args...); \
        break;                                      \
      case type_t::MATRIX92:                        \
        func<Eigen::Matrix<Scalar, 9, 2>>(args...); \
        break;                                      \
      case type_t::MATRIX93:                        \
        func<Eigen::Matrix<Scalar, 9, 3>>(args...); \
        break;                                      \
      case type_t::MATRIX94:                        \
        func<Eigen::Matrix<Scalar, 9, 4>>(args...); \
        break;                                      \
      case type_t::MATRIX95:                        \
        func<Eigen::Matrix<Scalar, 9, 5>>(args...); \
        break;                                      \
      case type_t::MATRIX96:                        \
        func<Eigen::Matrix<Scalar, 9, 6>>(args...); \
        break;                                      \
      case type_t::MATRIX97:                        \
        func<Eigen::Matrix<Scalar, 9, 7>>(args...); \
        break;                                      \
      case type_t::MATRIX98:                        \
        func<Eigen::Matrix<Scalar, 9, 8>>(args...); \
        break;                                      \
      case type_t::MATRIX99:                        \
        func<Eigen::Matrix<Scalar, 9, 9>>(args...); \
        break;                                      \
      default:                                      \
        break;                                      \
    }                                               \
  }

}  // namespace sym
