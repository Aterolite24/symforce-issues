// -----------------------------------------------------------------------------
// This file was autogenerated by symforce. Do NOT modify by hand.
// -----------------------------------------------------------------------------
#pragma once

#include <Eigen/Dense>
#include <sym/pose3.h>

namespace sym {

/**
 * Residual that penalizes the difference between between(a, b) and a_T_b.
 *
 * In vector space terms that would be:
 *     (b - a) - a_T_b
 *
 * In lie group terms:
 *     local_coordinates(a_T_b, between(a, b))
 *     to_tangent(compose(inverse(a_T_b), compose(inverse(a), b)))
 *
 * Args:
 *     sqrt_info: Square root information matrix to whiten residual. This can be computed from
 *                a covariance matrix as the cholesky decomposition of the inverse. In the case
 *                of a diagonal it will contain 1/sigma values. Must match the tangent dim.
 *     jacobian: (6x12) jacobian of res wrt args a (6), b (6)
 *     hessian: (12x12) Gauss-Newton hessian for args a (6), b (6)
 *     rhs: (12x1) Gauss-Newton rhs for args a (6), b (6)
 */
template <typename Scalar>
void BetweenFactorPose3(const sym::Pose3<Scalar>& a, const sym::Pose3<Scalar>& b,
                        const sym::Pose3<Scalar>& a_T_b,
                        const Eigen::Matrix<Scalar, 6, 6>& sqrt_info, const Scalar epsilon,
                        Eigen::Matrix<Scalar, 6, 1>* const res = nullptr,
                        Eigen::Matrix<Scalar, 6, 12>* const jacobian = nullptr,
                        Eigen::Matrix<Scalar, 12, 12>* const hessian = nullptr,
                        Eigen::Matrix<Scalar, 12, 1>* const rhs = nullptr) {
  // Total ops: 3204

  // Input arrays
  const Eigen::Matrix<Scalar, 7, 1>& _a = a.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _b = b.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _a_T_b = a_T_b.Data();

  // Intermediate terms (405)
  const Scalar _tmp0 = _a[0] * _b[0] + _a[1] * _b[1] + _a[2] * _b[2] + _a[3] * _b[3];
  const Scalar _tmp1 = _a[0] * _b[2] - _a[1] * _b[3] - _a[2] * _b[0] + _a[3] * _b[1];
  const Scalar _tmp2 = -_a[0] * _b[3] - _a[1] * _b[2] + _a[2] * _b[1] + _a[3] * _b[0];
  const Scalar _tmp3 = -_a[0] * _b[1] + _a[1] * _b[0] - _a[2] * _b[3] + _a[3] * _b[2];
  const Scalar _tmp4 =
      _a_T_b[0] * _tmp3 - _a_T_b[1] * _tmp0 - _a_T_b[2] * _tmp2 + _a_T_b[3] * _tmp1;
  const Scalar _tmp5 =
      _a_T_b[0] * _tmp2 + _a_T_b[1] * _tmp1 + _a_T_b[2] * _tmp3 + _a_T_b[3] * _tmp0;
  const Scalar _tmp6 = (((_tmp5) > 0) - ((_tmp5) < 0));
  const Scalar _tmp7 = 2 * std::min<Scalar>(0, _tmp6) + 1;
  const Scalar _tmp8 = std::fabs(_tmp5);
  const Scalar _tmp9 = 1 - epsilon;
  const Scalar _tmp10 = std::min<Scalar>(_tmp8, _tmp9);
  const Scalar _tmp11 = std::acos(_tmp10);
  const Scalar _tmp12 = 1 - std::pow<Scalar>(_tmp10, 2);
  const Scalar _tmp13 = 2 * _tmp11 / std::sqrt(_tmp12);
  const Scalar _tmp14 = _tmp13 * _tmp7;
  const Scalar _tmp15 = _tmp14 * _tmp4;
  const Scalar _tmp16 =
      -_a_T_b[0] * _tmp0 - _a_T_b[1] * _tmp3 + _a_T_b[2] * _tmp1 + _a_T_b[3] * _tmp2;
  const Scalar _tmp17 = _tmp14 * _tmp16;
  const Scalar _tmp18 =
      _tmp7 * (-_a_T_b[0] * _tmp1 + _a_T_b[1] * _tmp2 - _a_T_b[2] * _tmp0 + _a_T_b[3] * _tmp3);
  const Scalar _tmp19 = _tmp13 * _tmp18;
  const Scalar _tmp20 = 2 * std::pow<Scalar>(_a[0], 2);
  const Scalar _tmp21 = -_tmp20;
  const Scalar _tmp22 = 2 * std::pow<Scalar>(_a[2], 2);
  const Scalar _tmp23 = 1 - _tmp22;
  const Scalar _tmp24 = _tmp21 + _tmp23;
  const Scalar _tmp25 = 2 * _a[0];
  const Scalar _tmp26 = _a[1] * _tmp25;
  const Scalar _tmp27 = 2 * _a[2];
  const Scalar _tmp28 = _a[3] * _tmp27;
  const Scalar _tmp29 = -_tmp28;
  const Scalar _tmp30 = _tmp26 + _tmp29;
  const Scalar _tmp31 = _a[3] * _tmp25;
  const Scalar _tmp32 = 2 * _a[1];
  const Scalar _tmp33 = _a[2] * _tmp32;
  const Scalar _tmp34 = _tmp31 + _tmp33;
  const Scalar _tmp35 = -_a[4] * _tmp30 - _a[5] * _tmp24 - _a[6] * _tmp34 - _a_T_b[5] +
                        _b[4] * _tmp30 + _b[5] * _tmp24 + _b[6] * _tmp34;
  const Scalar _tmp36 = 2 * std::pow<Scalar>(_a[1], 2);
  const Scalar _tmp37 = -_tmp36;
  const Scalar _tmp38 = _tmp23 + _tmp37;
  const Scalar _tmp39 = _tmp26 + _tmp28;
  const Scalar _tmp40 = _a[3] * _tmp32;
  const Scalar _tmp41 = -_tmp40;
  const Scalar _tmp42 = _a[2] * _tmp25;
  const Scalar _tmp43 = _tmp41 + _tmp42;
  const Scalar _tmp44 = -_a[4] * _tmp38 - _a[5] * _tmp39 - _a[6] * _tmp43 - _a_T_b[4] +
                        _b[4] * _tmp38 + _b[5] * _tmp39 + _b[6] * _tmp43;
  const Scalar _tmp45 = _tmp21 + _tmp37 + 1;
  const Scalar _tmp46 = -_tmp31;
  const Scalar _tmp47 = _tmp33 + _tmp46;
  const Scalar _tmp48 = _tmp40 + _tmp42;
  const Scalar _tmp49 = -_a[4] * _tmp48 - _a[5] * _tmp47 - _a[6] * _tmp45 - _a_T_b[6] +
                        _b[4] * _tmp48 + _b[5] * _tmp47 + _b[6] * _tmp45;
  const Scalar _tmp50 = _tmp15 * sqrt_info(0, 1) + _tmp17 * sqrt_info(0, 0) +
                        _tmp19 * sqrt_info(0, 2) + _tmp35 * sqrt_info(0, 4) +
                        _tmp44 * sqrt_info(0, 3) + _tmp49 * sqrt_info(0, 5);
  const Scalar _tmp51 = _tmp15 * sqrt_info(1, 1) + _tmp17 * sqrt_info(1, 0) +
                        _tmp19 * sqrt_info(1, 2) + _tmp35 * sqrt_info(1, 4) +
                        _tmp44 * sqrt_info(1, 3) + _tmp49 * sqrt_info(1, 5);
  const Scalar _tmp52 = _tmp15 * sqrt_info(2, 1) + _tmp17 * sqrt_info(2, 0) +
                        _tmp19 * sqrt_info(2, 2) + _tmp35 * sqrt_info(2, 4) +
                        _tmp44 * sqrt_info(2, 3) + _tmp49 * sqrt_info(2, 5);
  const Scalar _tmp53 = _tmp14 * sqrt_info(3, 1);
  const Scalar _tmp54 = _tmp17 * sqrt_info(3, 0) + _tmp19 * sqrt_info(3, 2) +
                        _tmp35 * sqrt_info(3, 4) + _tmp4 * _tmp53 + _tmp44 * sqrt_info(3, 3) +
                        _tmp49 * sqrt_info(3, 5);
  const Scalar _tmp55 = _tmp15 * sqrt_info(4, 1) + _tmp17 * sqrt_info(4, 0) +
                        _tmp19 * sqrt_info(4, 2) + _tmp35 * sqrt_info(4, 4) +
                        _tmp44 * sqrt_info(4, 3) + _tmp49 * sqrt_info(4, 5);
  const Scalar _tmp56 = _tmp18 * sqrt_info(5, 2);
  const Scalar _tmp57 = _tmp13 * _tmp56 + _tmp15 * sqrt_info(5, 1) + _tmp17 * sqrt_info(5, 0) +
                        _tmp35 * sqrt_info(5, 4) + _tmp44 * sqrt_info(5, 3) +
                        _tmp49 * sqrt_info(5, 5);
  const Scalar _tmp58 = _a_T_b[1] * _b[3];
  const Scalar _tmp59 = -_tmp58;
  const Scalar _tmp60 = _a_T_b[2] * _b[0];
  const Scalar _tmp61 = _a_T_b[0] * _b[2];
  const Scalar _tmp62 = -_tmp61;
  const Scalar _tmp63 = _a_T_b[3] * _b[1];
  const Scalar _tmp64 = _tmp62 + _tmp63;
  const Scalar _tmp65 = _tmp59 + _tmp60 + _tmp64;
  const Scalar _tmp66 = _tmp6 * ((((-_tmp8 + _tmp9) > 0) - ((-_tmp8 + _tmp9) < 0)) + 1);
  const Scalar _tmp67 = _tmp10 * _tmp11 * _tmp66 / (_tmp12 * std::sqrt(_tmp12));
  const Scalar _tmp68 = _tmp67 * _tmp7;
  const Scalar _tmp69 = _tmp16 * _tmp68;
  const Scalar _tmp70 = _tmp65 * _tmp69;
  const Scalar _tmp71 = _tmp18 * _tmp67;
  const Scalar _tmp72 = _tmp65 * _tmp71;
  const Scalar _tmp73 = _tmp4 * _tmp68;
  const Scalar _tmp74 = _tmp65 * _tmp73;
  const Scalar _tmp75 = _a_T_b[3] * _b[2];
  const Scalar _tmp76 = _a_T_b[1] * _b[0];
  const Scalar _tmp77 = -_tmp76;
  const Scalar _tmp78 = _a_T_b[0] * _b[1];
  const Scalar _tmp79 = -_tmp78;
  const Scalar _tmp80 = _a_T_b[2] * _b[3];
  const Scalar _tmp81 = -_tmp80;
  const Scalar _tmp82 = _tmp79 + _tmp81;
  const Scalar _tmp83 = -_tmp75 + _tmp77 + _tmp82;
  const Scalar _tmp84 = _tmp14 * _tmp83;
  const Scalar _tmp85 = _a_T_b[0] * _b[0];
  const Scalar _tmp86 = _a_T_b[1] * _b[1];
  const Scalar _tmp87 = _a_T_b[3] * _b[3];
  const Scalar _tmp88 = -_tmp87;
  const Scalar _tmp89 = _a_T_b[2] * _b[2];
  const Scalar _tmp90 = _tmp88 + _tmp89;
  const Scalar _tmp91 = _tmp85 - _tmp86 + _tmp90;
  const Scalar _tmp92 = _tmp14 * _tmp91;
  const Scalar _tmp93 = _a_T_b[1] * _b[2];
  const Scalar _tmp94 = -_tmp93;
  const Scalar _tmp95 = _a_T_b[0] * _b[3];
  const Scalar _tmp96 = _a_T_b[2] * _b[1];
  const Scalar _tmp97 = -_tmp96;
  const Scalar _tmp98 = _a_T_b[3] * _b[0];
  const Scalar _tmp99 = _tmp97 + _tmp98;
  const Scalar _tmp100 = _tmp14 * (_tmp94 + _tmp95 + _tmp99);
  const Scalar _tmp101 = _tmp66 / _tmp12;
  const Scalar _tmp102 = _tmp101 * _tmp18;
  const Scalar _tmp103 = _tmp102 * sqrt_info(0, 2);
  const Scalar _tmp104 = _tmp101 * _tmp7;
  const Scalar _tmp105 = _tmp104 * _tmp16;
  const Scalar _tmp106 = _tmp105 * _tmp65;
  const Scalar _tmp107 = _tmp104 * _tmp4;
  const Scalar _tmp108 = _tmp107 * sqrt_info(0, 1);
  const Scalar _tmp109 = -_a[6] * _tmp27 + _b[6] * _tmp27;
  const Scalar _tmp110 = 2 * _a[4];
  const Scalar _tmp111 = -_a[0] * _tmp110 + _b[4] * _tmp25;
  const Scalar _tmp112 = _tmp109 + _tmp111;
  const Scalar _tmp113 = 4 * _a[1];
  const Scalar _tmp114 = 2 * _a[5];
  const Scalar _tmp115 = _a[0] * _tmp114;
  const Scalar _tmp116 = _b[5] * _tmp25;
  const Scalar _tmp117 = 2 * _a[3];
  const Scalar _tmp118 = _b[6] * _tmp117;
  const Scalar _tmp119 = _a[6] * _tmp117;
  const Scalar _tmp120 = _a[4] * _tmp113 - _b[4] * _tmp113 - _tmp115 + _tmp116 - _tmp118 + _tmp119;
  const Scalar _tmp121 = _b[4] * _tmp117;
  const Scalar _tmp122 = _a[3] * _tmp110;
  const Scalar _tmp123 = -_a[2] * _tmp114 + _b[5] * _tmp27;
  const Scalar _tmp124 = _a[6] * _tmp113 - _b[6] * _tmp113 + _tmp121 - _tmp122 + _tmp123;
  const Scalar _tmp125 = _tmp100 * sqrt_info(0, 2) - _tmp103 * _tmp65 - _tmp106 * sqrt_info(0, 0) -
                         _tmp108 * _tmp65 + _tmp112 * sqrt_info(0, 4) + _tmp120 * sqrt_info(0, 3) +
                         _tmp124 * sqrt_info(0, 5) + _tmp70 * sqrt_info(0, 0) +
                         _tmp72 * sqrt_info(0, 2) + _tmp74 * sqrt_info(0, 1) +
                         _tmp84 * sqrt_info(0, 0) + _tmp92 * sqrt_info(0, 1);
  const Scalar _tmp126 = (Scalar(1) / Scalar(2)) * _a[2];
  const Scalar _tmp127 = _tmp75 + _tmp77;
  const Scalar _tmp128 = _tmp127 + _tmp78 + _tmp81;
  const Scalar _tmp129 = _tmp105 * _tmp128;
  const Scalar _tmp130 = _tmp102 * _tmp128;
  const Scalar _tmp131 = -_tmp95;
  const Scalar _tmp132 = _tmp131 + _tmp94;
  const Scalar _tmp133 = _tmp132 + _tmp97 - _tmp98;
  const Scalar _tmp134 = _tmp133 * _tmp14;
  const Scalar _tmp135 = -_tmp60;
  const Scalar _tmp136 = _tmp135 + _tmp58 + _tmp64;
  const Scalar _tmp137 = _tmp136 * _tmp14;
  const Scalar _tmp138 = _tmp128 * _tmp73;
  const Scalar _tmp139 = _tmp128 * _tmp71;
  const Scalar _tmp140 = _tmp128 * _tmp69;
  const Scalar _tmp141 = _tmp85 + _tmp86;
  const Scalar _tmp142 = _tmp14 * (_tmp141 + _tmp88 - _tmp89);
  const Scalar _tmp143 = _b[5] * _tmp117;
  const Scalar _tmp144 = _a[3] * _tmp114;
  const Scalar _tmp145 = 4 * _a[2];
  const Scalar _tmp146 = _a[0] * _b[6];
  const Scalar _tmp147 = -_a[6] * _tmp25 + 2 * _tmp146;
  const Scalar _tmp148 = _a[4] * _tmp145 - _b[4] * _tmp145 + _tmp143 - _tmp144 + _tmp147;
  const Scalar _tmp149 = -_a[1] * _tmp114 + _b[5] * _tmp32;
  const Scalar _tmp150 = _tmp111 + _tmp149;
  const Scalar _tmp151 = _b[6] * _tmp32;
  const Scalar _tmp152 = _a[6] * _tmp32;
  const Scalar _tmp153 = 4 * _b[5];
  const Scalar _tmp154 = -_a[2] * _tmp153 + _a[5] * _tmp145 - _tmp121 + _tmp122 + _tmp151 - _tmp152;
  const Scalar _tmp155 =
      -_tmp108 * _tmp128 - _tmp129 * sqrt_info(0, 0) - _tmp130 * sqrt_info(0, 2) +
      _tmp134 * sqrt_info(0, 1) + _tmp137 * sqrt_info(0, 0) + _tmp138 * sqrt_info(0, 1) +
      _tmp139 * sqrt_info(0, 2) + _tmp140 * sqrt_info(0, 0) + _tmp142 * sqrt_info(0, 2) +
      _tmp148 * sqrt_info(0, 3) + _tmp150 * sqrt_info(0, 5) + _tmp154 * sqrt_info(0, 4);
  const Scalar _tmp156 = (Scalar(1) / Scalar(2)) * _a[1];
  const Scalar _tmp157 = _tmp141 + _tmp87 + _tmp89;
  const Scalar _tmp158 = _tmp105 * _tmp157;
  const Scalar _tmp159 = _tmp157 * _tmp73;
  const Scalar _tmp160 = _tmp157 * _tmp69;
  const Scalar _tmp161 = _tmp102 * _tmp157;
  const Scalar _tmp162 = _tmp157 * _tmp71;
  const Scalar _tmp163 = _tmp14 * (_tmp75 + _tmp76 + _tmp82);
  const Scalar _tmp164 = _tmp132 + _tmp96 + _tmp98;
  const Scalar _tmp165 = _tmp14 * _tmp164;
  const Scalar _tmp166 = _tmp135 + _tmp59;
  const Scalar _tmp167 = _tmp14 * (_tmp166 + _tmp61 + _tmp63);
  const Scalar _tmp168 = _b[4] * _tmp27;
  const Scalar _tmp169 = _a[2] * _tmp110;
  const Scalar _tmp170 = _tmp147 - _tmp168 + _tmp169;
  const Scalar _tmp171 = -_a[1] * _tmp110 + _b[4] * _tmp32;
  const Scalar _tmp172 = _tmp115 - _tmp116 + _tmp171;
  const Scalar _tmp173 = _tmp123 - _tmp151 + _tmp152;
  const Scalar _tmp174 =
      -_tmp108 * _tmp157 - _tmp158 * sqrt_info(0, 0) + _tmp159 * sqrt_info(0, 1) +
      _tmp160 * sqrt_info(0, 0) - _tmp161 * sqrt_info(0, 2) + _tmp162 * sqrt_info(0, 2) +
      _tmp163 * sqrt_info(0, 2) + _tmp165 * sqrt_info(0, 0) + _tmp167 * sqrt_info(0, 1) +
      _tmp170 * sqrt_info(0, 4) + _tmp172 * sqrt_info(0, 5) + _tmp173 * sqrt_info(0, 3);
  const Scalar _tmp175 = (Scalar(1) / Scalar(2)) * _tmp174;
  const Scalar _tmp176 = _tmp131 + _tmp93 + _tmp99;
  const Scalar _tmp177 = _tmp176 * _tmp69;
  const Scalar _tmp178 = -_tmp85 + _tmp86 + _tmp90;
  const Scalar _tmp179 = _tmp14 * _tmp178;
  const Scalar _tmp180 = _tmp105 * _tmp176;
  const Scalar _tmp181 = _tmp176 * _tmp73;
  const Scalar _tmp182 = _tmp102 * _tmp176;
  const Scalar _tmp183 = _tmp176 * _tmp71;
  const Scalar _tmp184 = _tmp127 + _tmp79 + _tmp80;
  const Scalar _tmp185 = _tmp14 * _tmp184;
  const Scalar _tmp186 = _tmp166 + _tmp62 - _tmp63;
  const Scalar _tmp187 = _tmp14 * _tmp186;
  const Scalar _tmp188 = 4 * _a[0];
  const Scalar _tmp189 = _a[6] * _tmp188 - _tmp143 + _tmp144 - 4 * _tmp146 + _tmp168 - _tmp169;
  const Scalar _tmp190 = -_a[0] * _tmp153 + _a[5] * _tmp188 + _tmp118 - _tmp119 + _tmp171;
  const Scalar _tmp191 = _tmp109 + _tmp149;
  const Scalar _tmp192 =
      -_tmp108 * _tmp176 + _tmp177 * sqrt_info(0, 0) + _tmp179 * sqrt_info(0, 0) -
      _tmp180 * sqrt_info(0, 0) + _tmp181 * sqrt_info(0, 1) - _tmp182 * sqrt_info(0, 2) +
      _tmp183 * sqrt_info(0, 2) + _tmp185 * sqrt_info(0, 1) + _tmp187 * sqrt_info(0, 2) +
      _tmp189 * sqrt_info(0, 5) + _tmp190 * sqrt_info(0, 4) + _tmp191 * sqrt_info(0, 3);
  const Scalar _tmp193 = (Scalar(1) / Scalar(2)) * _tmp192;
  const Scalar _tmp194 = -_a[0] * _tmp175 + _a[3] * _tmp193 + _tmp125 * _tmp126 - _tmp155 * _tmp156;
  const Scalar _tmp195 = (Scalar(1) / Scalar(2)) * _a[3];
  const Scalar _tmp196 = (Scalar(1) / Scalar(2)) * _a[0];
  const Scalar _tmp197 =
      -_a[2] * _tmp193 + _tmp125 * _tmp195 + _tmp155 * _tmp196 - _tmp156 * _tmp174;
  const Scalar _tmp198 =
      -_a[2] * _tmp175 - _tmp125 * _tmp196 + _tmp155 * _tmp195 + _tmp156 * _tmp192;
  const Scalar _tmp199 = -_tmp26;
  const Scalar _tmp200 = _tmp199 + _tmp28;
  const Scalar _tmp201 = _tmp22 - 1;
  const Scalar _tmp202 = _tmp201 + _tmp36;
  const Scalar _tmp203 = -_tmp42;
  const Scalar _tmp204 = _tmp203 + _tmp41;
  const Scalar _tmp205 =
      _tmp200 * sqrt_info(0, 4) + _tmp202 * sqrt_info(0, 3) + _tmp204 * sqrt_info(0, 5);
  const Scalar _tmp206 = _tmp199 + _tmp29;
  const Scalar _tmp207 = _tmp20 + _tmp201;
  const Scalar _tmp208 = -_tmp33;
  const Scalar _tmp209 = _tmp208 + _tmp31;
  const Scalar _tmp210 =
      _tmp206 * sqrt_info(0, 3) + _tmp207 * sqrt_info(0, 4) + _tmp209 * sqrt_info(0, 5);
  const Scalar _tmp211 = _tmp20 + _tmp36 - 1;
  const Scalar _tmp212 = _tmp208 + _tmp46;
  const Scalar _tmp213 = _tmp203 + _tmp40;
  const Scalar _tmp214 =
      _tmp211 * sqrt_info(0, 5) + _tmp212 * sqrt_info(0, 4) + _tmp213 * sqrt_info(0, 3);
  const Scalar _tmp215 = _a[2] * _a_T_b[3];
  const Scalar _tmp216 = _a[1] * _a_T_b[0];
  const Scalar _tmp217 = _a[3] * _a_T_b[2];
  const Scalar _tmp218 = _a[0] * _a_T_b[1];
  const Scalar _tmp219 = -_tmp215 + _tmp216 - _tmp217 - _tmp218;
  const Scalar _tmp220 = _tmp14 * _tmp219;
  const Scalar _tmp221 =
      -_a[0] * _a_T_b[0] - _a[1] * _a_T_b[1] - _a[2] * _a_T_b[2] + _a[3] * _a_T_b[3];
  const Scalar _tmp222 = _tmp14 * _tmp221;
  const Scalar _tmp223 = _a[2] * _a_T_b[1];
  const Scalar _tmp224 = _a[1] * _a_T_b[2];
  const Scalar _tmp225 = _a[3] * _a_T_b[0];
  const Scalar _tmp226 = _a[0] * _a_T_b[3];
  const Scalar _tmp227 = -_tmp223 + _tmp224 + _tmp225 + _tmp226;
  const Scalar _tmp228 = _tmp227 * _tmp71;
  const Scalar _tmp229 = _tmp227 * _tmp69;
  const Scalar _tmp230 = _a[2] * _a_T_b[0];
  const Scalar _tmp231 = _a[1] * _a_T_b[3];
  const Scalar _tmp232 = _a[3] * _a_T_b[1];
  const Scalar _tmp233 = _a[0] * _a_T_b[2];
  const Scalar _tmp234 = _tmp230 + _tmp231 + _tmp232 - _tmp233;
  const Scalar _tmp235 = _tmp14 * _tmp234;
  const Scalar _tmp236 = _tmp105 * _tmp227;
  const Scalar _tmp237 = _tmp227 * _tmp73;
  const Scalar _tmp238 = -_tmp103 * _tmp227 - _tmp108 * _tmp227 + _tmp220 * sqrt_info(0, 1) +
                         _tmp222 * sqrt_info(0, 0) + _tmp228 * sqrt_info(0, 2) +
                         _tmp229 * sqrt_info(0, 0) + _tmp235 * sqrt_info(0, 2) -
                         _tmp236 * sqrt_info(0, 0) + _tmp237 * sqrt_info(0, 1);
  const Scalar _tmp239 = (Scalar(1) / Scalar(2)) * _b[3];
  const Scalar _tmp240 = _tmp221 * sqrt_info(0, 2);
  const Scalar _tmp241 = _tmp215 - _tmp216 + _tmp217 + _tmp218;
  const Scalar _tmp242 = _tmp241 * _tmp73;
  const Scalar _tmp243 = _tmp241 * _tmp69;
  const Scalar _tmp244 = _tmp14 * (-_tmp230 - _tmp231 - _tmp232 + _tmp233);
  const Scalar _tmp245 = _tmp14 * _tmp227;
  const Scalar _tmp246 = _tmp241 * _tmp71;
  const Scalar _tmp247 = _tmp102 * _tmp241;
  const Scalar _tmp248 = _tmp105 * _tmp241;
  const Scalar _tmp249 = -_tmp108 * _tmp241 + _tmp14 * _tmp240 + _tmp242 * sqrt_info(0, 1) +
                         _tmp243 * sqrt_info(0, 0) + _tmp244 * sqrt_info(0, 0) +
                         _tmp245 * sqrt_info(0, 1) + _tmp246 * sqrt_info(0, 2) -
                         _tmp247 * sqrt_info(0, 2) - _tmp248 * sqrt_info(0, 0);
  const Scalar _tmp250 = (Scalar(1) / Scalar(2)) * _b[1];
  const Scalar _tmp251 = _tmp234 * _tmp69;
  const Scalar _tmp252 = _tmp234 * _tmp71;
  const Scalar _tmp253 = _tmp234 * _tmp73;
  const Scalar _tmp254 = _tmp14 * _tmp241;
  const Scalar _tmp255 = _tmp105 * _tmp234;
  const Scalar _tmp256 = _tmp223 - _tmp224 - _tmp225 - _tmp226;
  const Scalar _tmp257 = _tmp14 * _tmp256;
  const Scalar _tmp258 = -_tmp103 * _tmp234 - _tmp108 * _tmp234 + _tmp222 * sqrt_info(0, 1) +
                         _tmp251 * sqrt_info(0, 0) + _tmp252 * sqrt_info(0, 2) +
                         _tmp253 * sqrt_info(0, 1) + _tmp254 * sqrt_info(0, 0) -
                         _tmp255 * sqrt_info(0, 0) + _tmp257 * sqrt_info(0, 2);
  const Scalar _tmp259 = (Scalar(1) / Scalar(2)) * _b[2];
  const Scalar _tmp260 = _tmp221 * _tmp73;
  const Scalar _tmp261 = _tmp105 * _tmp221;
  const Scalar _tmp262 = _tmp221 * _tmp69;
  const Scalar _tmp263 = -_tmp102 * _tmp240 - _tmp108 * _tmp221 + _tmp220 * sqrt_info(0, 2) +
                         _tmp240 * _tmp71 + _tmp244 * sqrt_info(0, 1) + _tmp257 * sqrt_info(0, 0) +
                         _tmp260 * sqrt_info(0, 1) - _tmp261 * sqrt_info(0, 0) +
                         _tmp262 * sqrt_info(0, 0);
  const Scalar _tmp264 = (Scalar(1) / Scalar(2)) * _b[0];
  const Scalar _tmp265 =
      _tmp238 * _tmp239 - _tmp249 * _tmp250 + _tmp258 * _tmp259 - _tmp263 * _tmp264;
  const Scalar _tmp266 =
      -_tmp238 * _tmp259 + _tmp239 * _tmp258 + _tmp249 * _tmp264 - _tmp250 * _tmp263;
  const Scalar _tmp267 =
      _tmp238 * _tmp250 + _tmp239 * _tmp249 - _tmp258 * _tmp264 - _tmp259 * _tmp263;
  const Scalar _tmp268 =
      _tmp30 * sqrt_info(0, 4) + _tmp38 * sqrt_info(0, 3) + _tmp48 * sqrt_info(0, 5);
  const Scalar _tmp269 =
      _tmp24 * sqrt_info(0, 4) + _tmp39 * sqrt_info(0, 3) + _tmp47 * sqrt_info(0, 5);
  const Scalar _tmp270 =
      _tmp34 * sqrt_info(0, 4) + _tmp43 * sqrt_info(0, 3) + _tmp45 * sqrt_info(0, 5);
  const Scalar _tmp271 = _tmp102 * _tmp65;
  const Scalar _tmp272 = _tmp107 * _tmp65;
  const Scalar _tmp273 =
      _tmp100 * sqrt_info(1, 2) - _tmp106 * sqrt_info(1, 0) + _tmp112 * sqrt_info(1, 4) +
      _tmp120 * sqrt_info(1, 3) + _tmp124 * sqrt_info(1, 5) - _tmp271 * sqrt_info(1, 2) -
      _tmp272 * sqrt_info(1, 1) + _tmp70 * sqrt_info(1, 0) + _tmp72 * sqrt_info(1, 2) +
      _tmp74 * sqrt_info(1, 1) + _tmp84 * sqrt_info(1, 0) + _tmp92 * sqrt_info(1, 1);
  const Scalar _tmp274 = _tmp107 * _tmp128;
  const Scalar _tmp275 =
      -_tmp129 * sqrt_info(1, 0) - _tmp130 * sqrt_info(1, 2) + _tmp134 * sqrt_info(1, 1) +
      _tmp137 * sqrt_info(1, 0) + _tmp138 * sqrt_info(1, 1) + _tmp139 * sqrt_info(1, 2) +
      _tmp140 * sqrt_info(1, 0) + _tmp142 * sqrt_info(1, 2) + _tmp148 * sqrt_info(1, 3) +
      _tmp150 * sqrt_info(1, 5) + _tmp154 * sqrt_info(1, 4) - _tmp274 * sqrt_info(1, 1);
  const Scalar _tmp276 = _tmp107 * _tmp157;
  const Scalar _tmp277 = _tmp71 * sqrt_info(1, 2);
  const Scalar _tmp278 =
      _tmp157 * _tmp277 - _tmp158 * sqrt_info(1, 0) + _tmp159 * sqrt_info(1, 1) +
      _tmp160 * sqrt_info(1, 0) - _tmp161 * sqrt_info(1, 2) + _tmp163 * sqrt_info(1, 2) +
      _tmp165 * sqrt_info(1, 0) + _tmp167 * sqrt_info(1, 1) + _tmp170 * sqrt_info(1, 4) +
      _tmp172 * sqrt_info(1, 5) + _tmp173 * sqrt_info(1, 3) - _tmp276 * sqrt_info(1, 1);
  const Scalar _tmp279 = (Scalar(1) / Scalar(2)) * _tmp278;
  const Scalar _tmp280 = _tmp107 * _tmp176;
  const Scalar _tmp281 =
      _tmp176 * _tmp277 + _tmp177 * sqrt_info(1, 0) + _tmp179 * sqrt_info(1, 0) -
      _tmp180 * sqrt_info(1, 0) + _tmp181 * sqrt_info(1, 1) - _tmp182 * sqrt_info(1, 2) +
      _tmp185 * sqrt_info(1, 1) + _tmp187 * sqrt_info(1, 2) + _tmp189 * sqrt_info(1, 5) +
      _tmp190 * sqrt_info(1, 4) + _tmp191 * sqrt_info(1, 3) - _tmp280 * sqrt_info(1, 1);
  const Scalar _tmp282 = (Scalar(1) / Scalar(2)) * _tmp281;
  const Scalar _tmp283 = -_a[0] * _tmp279 + _a[3] * _tmp282 + _tmp126 * _tmp273 - _tmp156 * _tmp275;
  const Scalar _tmp284 =
      -_a[2] * _tmp282 - _tmp156 * _tmp278 + _tmp195 * _tmp273 + _tmp196 * _tmp275;
  const Scalar _tmp285 =
      -_a[2] * _tmp279 + _tmp156 * _tmp281 + _tmp195 * _tmp275 - _tmp196 * _tmp273;
  const Scalar _tmp286 =
      _tmp200 * sqrt_info(1, 4) + _tmp202 * sqrt_info(1, 3) + _tmp204 * sqrt_info(1, 5);
  const Scalar _tmp287 =
      _tmp206 * sqrt_info(1, 3) + _tmp207 * sqrt_info(1, 4) + _tmp209 * sqrt_info(1, 5);
  const Scalar _tmp288 =
      _tmp211 * sqrt_info(1, 5) + _tmp212 * sqrt_info(1, 4) + _tmp213 * sqrt_info(1, 3);
  const Scalar _tmp289 = _tmp107 * _tmp227;
  const Scalar _tmp290 = _tmp102 * _tmp227;
  const Scalar _tmp291 =
      _tmp220 * sqrt_info(1, 1) + _tmp222 * sqrt_info(1, 0) + _tmp228 * sqrt_info(1, 2) +
      _tmp229 * sqrt_info(1, 0) + _tmp235 * sqrt_info(1, 2) - _tmp236 * sqrt_info(1, 0) +
      _tmp237 * sqrt_info(1, 1) - _tmp289 * sqrt_info(1, 1) - _tmp290 * sqrt_info(1, 2);
  const Scalar _tmp292 = _tmp107 * _tmp241;
  const Scalar _tmp293 = _tmp222 * sqrt_info(1, 2) + _tmp241 * _tmp277 + _tmp242 * sqrt_info(1, 1) +
                         _tmp243 * sqrt_info(1, 0) + _tmp244 * sqrt_info(1, 0) +
                         _tmp245 * sqrt_info(1, 1) - _tmp247 * sqrt_info(1, 2) -
                         _tmp248 * sqrt_info(1, 0) - _tmp292 * sqrt_info(1, 1);
  const Scalar _tmp294 = _tmp102 * _tmp234;
  const Scalar _tmp295 = _tmp107 * _tmp234;
  const Scalar _tmp296 =
      _tmp222 * sqrt_info(1, 1) + _tmp251 * sqrt_info(1, 0) + _tmp252 * sqrt_info(1, 2) +
      _tmp253 * sqrt_info(1, 1) + _tmp254 * sqrt_info(1, 0) - _tmp255 * sqrt_info(1, 0) +
      _tmp257 * sqrt_info(1, 2) - _tmp294 * sqrt_info(1, 2) - _tmp295 * sqrt_info(1, 1);
  const Scalar _tmp297 = (Scalar(1) / Scalar(2)) * _tmp296;
  const Scalar _tmp298 = _tmp107 * _tmp221;
  const Scalar _tmp299 = _tmp102 * _tmp221;
  const Scalar _tmp300 = _tmp220 * sqrt_info(1, 2) + _tmp221 * _tmp277 + _tmp244 * sqrt_info(1, 1) +
                         _tmp257 * sqrt_info(1, 0) + _tmp260 * sqrt_info(1, 1) -
                         _tmp261 * sqrt_info(1, 0) + _tmp262 * sqrt_info(1, 0) -
                         _tmp298 * sqrt_info(1, 1) - _tmp299 * sqrt_info(1, 2);
  const Scalar _tmp301 =
      _b[2] * _tmp297 + _tmp239 * _tmp291 - _tmp250 * _tmp293 - _tmp264 * _tmp300;
  const Scalar _tmp302 =
      _b[3] * _tmp297 - _tmp250 * _tmp300 - _tmp259 * _tmp291 + _tmp264 * _tmp293;
  const Scalar _tmp303 =
      _tmp239 * _tmp293 + _tmp250 * _tmp291 - _tmp259 * _tmp300 - _tmp264 * _tmp296;
  const Scalar _tmp304 =
      _tmp30 * sqrt_info(1, 4) + _tmp38 * sqrt_info(1, 3) + _tmp48 * sqrt_info(1, 5);
  const Scalar _tmp305 =
      _tmp24 * sqrt_info(1, 4) + _tmp39 * sqrt_info(1, 3) + _tmp47 * sqrt_info(1, 5);
  const Scalar _tmp306 =
      _tmp34 * sqrt_info(1, 4) + _tmp43 * sqrt_info(1, 3) + _tmp45 * sqrt_info(1, 5);
  const Scalar _tmp307 = _tmp69 * sqrt_info(2, 0);
  const Scalar _tmp308 = _tmp71 * sqrt_info(2, 2);
  const Scalar _tmp309 = _tmp105 * sqrt_info(2, 0);
  const Scalar _tmp310 = _tmp100 * sqrt_info(2, 2) + _tmp112 * sqrt_info(2, 4) +
                         _tmp120 * sqrt_info(2, 3) + _tmp124 * sqrt_info(2, 5) -
                         _tmp271 * sqrt_info(2, 2) - _tmp272 * sqrt_info(2, 1) + _tmp307 * _tmp65 +
                         _tmp308 * _tmp65 - _tmp309 * _tmp65 + _tmp74 * sqrt_info(2, 1) +
                         _tmp84 * sqrt_info(2, 0) + _tmp92 * sqrt_info(2, 1);
  const Scalar _tmp311 =
      _tmp128 * _tmp307 + _tmp128 * _tmp308 - _tmp128 * _tmp309 - _tmp130 * sqrt_info(2, 2) +
      _tmp134 * sqrt_info(2, 1) + _tmp137 * sqrt_info(2, 0) + _tmp138 * sqrt_info(2, 1) +
      _tmp142 * sqrt_info(2, 2) + _tmp148 * sqrt_info(2, 3) + _tmp150 * sqrt_info(2, 5) +
      _tmp154 * sqrt_info(2, 4) - _tmp274 * sqrt_info(2, 1);
  const Scalar _tmp312 =
      _tmp157 * _tmp307 + _tmp157 * _tmp308 - _tmp158 * sqrt_info(2, 0) +
      _tmp159 * sqrt_info(2, 1) - _tmp161 * sqrt_info(2, 2) + _tmp163 * sqrt_info(2, 2) +
      _tmp165 * sqrt_info(2, 0) + _tmp167 * sqrt_info(2, 1) + _tmp170 * sqrt_info(2, 4) +
      _tmp172 * sqrt_info(2, 5) + _tmp173 * sqrt_info(2, 3) - _tmp276 * sqrt_info(2, 1);
  const Scalar _tmp313 = (Scalar(1) / Scalar(2)) * _tmp312;
  const Scalar _tmp314 =
      _tmp176 * _tmp307 + _tmp176 * _tmp308 - _tmp176 * _tmp309 + _tmp179 * sqrt_info(2, 0) +
      _tmp181 * sqrt_info(2, 1) - _tmp182 * sqrt_info(2, 2) + _tmp185 * sqrt_info(2, 1) +
      _tmp187 * sqrt_info(2, 2) + _tmp189 * sqrt_info(2, 5) + _tmp190 * sqrt_info(2, 4) +
      _tmp191 * sqrt_info(2, 3) - _tmp280 * sqrt_info(2, 1);
  const Scalar _tmp315 =
      -_a[0] * _tmp313 + _tmp126 * _tmp310 - _tmp156 * _tmp311 + _tmp195 * _tmp314;
  const Scalar _tmp316 =
      -_tmp126 * _tmp314 - _tmp156 * _tmp312 + _tmp195 * _tmp310 + _tmp196 * _tmp311;
  const Scalar _tmp317 =
      -_a[2] * _tmp313 + _tmp156 * _tmp314 + _tmp195 * _tmp311 - _tmp196 * _tmp310;
  const Scalar _tmp318 =
      _tmp200 * sqrt_info(2, 4) + _tmp202 * sqrt_info(2, 3) + _tmp204 * sqrt_info(2, 5);
  const Scalar _tmp319 =
      _tmp206 * sqrt_info(2, 3) + _tmp207 * sqrt_info(2, 4) + _tmp209 * sqrt_info(2, 5);
  const Scalar _tmp320 =
      _tmp211 * sqrt_info(2, 5) + _tmp212 * sqrt_info(2, 4) + _tmp213 * sqrt_info(2, 3);
  const Scalar _tmp321 = _tmp220 * sqrt_info(2, 1) + _tmp222 * sqrt_info(2, 0) + _tmp227 * _tmp308 -
                         _tmp227 * _tmp309 + _tmp229 * sqrt_info(2, 0) + _tmp235 * sqrt_info(2, 2) +
                         _tmp237 * sqrt_info(2, 1) - _tmp289 * sqrt_info(2, 1) -
                         _tmp290 * sqrt_info(2, 2);
  const Scalar _tmp322 = _tmp222 * sqrt_info(2, 2) + _tmp241 * _tmp307 + _tmp241 * _tmp308 +
                         _tmp242 * sqrt_info(2, 1) + _tmp244 * sqrt_info(2, 0) +
                         _tmp245 * sqrt_info(2, 1) - _tmp247 * sqrt_info(2, 2) -
                         _tmp248 * sqrt_info(2, 0) - _tmp292 * sqrt_info(2, 1);
  const Scalar _tmp323 = _tmp222 * sqrt_info(2, 1) + _tmp234 * _tmp307 + _tmp234 * _tmp308 -
                         _tmp234 * _tmp309 + _tmp253 * sqrt_info(2, 1) + _tmp254 * sqrt_info(2, 0) +
                         _tmp257 * sqrt_info(2, 2) - _tmp294 * sqrt_info(2, 2) -
                         _tmp295 * sqrt_info(2, 1);
  const Scalar _tmp324 = _tmp220 * sqrt_info(2, 2) + _tmp221 * _tmp307 + _tmp221 * _tmp308 -
                         _tmp221 * _tmp309 + _tmp244 * sqrt_info(2, 1) + _tmp257 * sqrt_info(2, 0) +
                         _tmp260 * sqrt_info(2, 1) - _tmp298 * sqrt_info(2, 1) -
                         _tmp299 * sqrt_info(2, 2);
  const Scalar _tmp325 =
      _tmp239 * _tmp321 - _tmp250 * _tmp322 + _tmp259 * _tmp323 - _tmp264 * _tmp324;
  const Scalar _tmp326 =
      _tmp239 * _tmp323 - _tmp250 * _tmp324 - _tmp259 * _tmp321 + _tmp264 * _tmp322;
  const Scalar _tmp327 =
      _tmp239 * _tmp322 + _tmp250 * _tmp321 - _tmp259 * _tmp324 - _tmp264 * _tmp323;
  const Scalar _tmp328 =
      _tmp30 * sqrt_info(2, 4) + _tmp38 * sqrt_info(2, 3) + _tmp48 * sqrt_info(2, 5);
  const Scalar _tmp329 =
      _tmp24 * sqrt_info(2, 4) + _tmp39 * sqrt_info(2, 3) + _tmp47 * sqrt_info(2, 5);
  const Scalar _tmp330 =
      _tmp34 * sqrt_info(2, 4) + _tmp43 * sqrt_info(2, 3) + _tmp45 * sqrt_info(2, 5);
  const Scalar _tmp331 = _tmp14 * sqrt_info(3, 0);
  const Scalar _tmp332 =
      _tmp100 * sqrt_info(3, 2) - _tmp106 * sqrt_info(3, 0) + _tmp112 * sqrt_info(3, 4) +
      _tmp120 * sqrt_info(3, 3) + _tmp124 * sqrt_info(3, 5) - _tmp271 * sqrt_info(3, 2) -
      _tmp272 * sqrt_info(3, 1) + _tmp331 * _tmp83 + _tmp53 * _tmp91 + _tmp70 * sqrt_info(3, 0) +
      _tmp72 * sqrt_info(3, 2) + _tmp74 * sqrt_info(3, 1);
  const Scalar _tmp333 = -_tmp129 * sqrt_info(3, 0) - _tmp130 * sqrt_info(3, 2) + _tmp133 * _tmp53 +
                         _tmp136 * _tmp331 + _tmp138 * sqrt_info(3, 1) + _tmp139 * sqrt_info(3, 2) +
                         _tmp140 * sqrt_info(3, 0) + _tmp142 * sqrt_info(3, 2) +
                         _tmp148 * sqrt_info(3, 3) + _tmp150 * sqrt_info(3, 5) +
                         _tmp154 * sqrt_info(3, 4) - _tmp274 * sqrt_info(3, 1);
  const Scalar _tmp334 =
      -_tmp158 * sqrt_info(3, 0) + _tmp159 * sqrt_info(3, 1) + _tmp160 * sqrt_info(3, 0) -
      _tmp161 * sqrt_info(3, 2) + _tmp162 * sqrt_info(3, 2) + _tmp163 * sqrt_info(3, 2) +
      _tmp164 * _tmp331 + _tmp167 * sqrt_info(3, 1) + _tmp170 * sqrt_info(3, 4) +
      _tmp172 * sqrt_info(3, 5) + _tmp173 * sqrt_info(3, 3) - _tmp276 * sqrt_info(3, 1);
  const Scalar _tmp335 = (Scalar(1) / Scalar(2)) * _tmp334;
  const Scalar _tmp336 = _tmp177 * sqrt_info(3, 0) + _tmp178 * _tmp331 - _tmp180 * sqrt_info(3, 0) +
                         _tmp181 * sqrt_info(3, 1) - _tmp182 * sqrt_info(3, 2) +
                         _tmp183 * sqrt_info(3, 2) + _tmp184 * _tmp53 + _tmp187 * sqrt_info(3, 2) +
                         _tmp189 * sqrt_info(3, 5) + _tmp190 * sqrt_info(3, 4) +
                         _tmp191 * sqrt_info(3, 3) - _tmp280 * sqrt_info(3, 1);
  const Scalar _tmp337 =
      -_a[0] * _tmp335 + _tmp126 * _tmp332 - _tmp156 * _tmp333 + _tmp195 * _tmp336;
  const Scalar _tmp338 = (Scalar(1) / Scalar(2)) * _tmp332;
  const Scalar _tmp339 =
      _a[3] * _tmp338 - _tmp126 * _tmp336 - _tmp156 * _tmp334 + _tmp196 * _tmp333;
  const Scalar _tmp340 = -_a[0] * _tmp338 - _a[2] * _tmp335 + _tmp156 * _tmp336 + _tmp195 * _tmp333;
  const Scalar _tmp341 =
      _tmp200 * sqrt_info(3, 4) + _tmp202 * sqrt_info(3, 3) + _tmp204 * sqrt_info(3, 5);
  const Scalar _tmp342 =
      _tmp206 * sqrt_info(3, 3) + _tmp207 * sqrt_info(3, 4) + _tmp209 * sqrt_info(3, 5);
  const Scalar _tmp343 =
      _tmp211 * sqrt_info(3, 5) + _tmp212 * sqrt_info(3, 4) + _tmp213 * sqrt_info(3, 3);
  const Scalar _tmp344 = _tmp219 * _tmp53 + _tmp222 * sqrt_info(3, 0) + _tmp228 * sqrt_info(3, 2) +
                         _tmp229 * sqrt_info(3, 0) + _tmp235 * sqrt_info(3, 2) -
                         _tmp236 * sqrt_info(3, 0) + _tmp237 * sqrt_info(3, 1) -
                         _tmp289 * sqrt_info(3, 1) - _tmp290 * sqrt_info(3, 2);
  const Scalar _tmp345 = _tmp222 * sqrt_info(3, 2) + _tmp227 * _tmp53 + _tmp242 * sqrt_info(3, 1) +
                         _tmp243 * sqrt_info(3, 0) + _tmp244 * sqrt_info(3, 0) +
                         _tmp246 * sqrt_info(3, 2) - _tmp247 * sqrt_info(3, 2) -
                         _tmp248 * sqrt_info(3, 0) - _tmp292 * sqrt_info(3, 1);
  const Scalar _tmp346 = _tmp222 * sqrt_info(3, 1) + _tmp241 * _tmp331 + _tmp251 * sqrt_info(3, 0) +
                         _tmp252 * sqrt_info(3, 2) + _tmp253 * sqrt_info(3, 1) -
                         _tmp255 * sqrt_info(3, 0) + _tmp257 * sqrt_info(3, 2) -
                         _tmp294 * sqrt_info(3, 2) - _tmp295 * sqrt_info(3, 1);
  const Scalar _tmp347 = _tmp220 * sqrt_info(3, 2) + _tmp221 * _tmp71 * sqrt_info(3, 2) +
                         _tmp244 * sqrt_info(3, 1) + _tmp256 * _tmp331 + _tmp260 * sqrt_info(3, 1) -
                         _tmp261 * sqrt_info(3, 0) + _tmp262 * sqrt_info(3, 0) -
                         _tmp298 * sqrt_info(3, 1) - _tmp299 * sqrt_info(3, 2);
  const Scalar _tmp348 =
      _tmp239 * _tmp344 - _tmp250 * _tmp345 + _tmp259 * _tmp346 - _tmp264 * _tmp347;
  const Scalar _tmp349 =
      _tmp239 * _tmp346 - _tmp250 * _tmp347 - _tmp259 * _tmp344 + _tmp264 * _tmp345;
  const Scalar _tmp350 =
      _tmp239 * _tmp345 + _tmp250 * _tmp344 - _tmp259 * _tmp347 - _tmp264 * _tmp346;
  const Scalar _tmp351 =
      _tmp30 * sqrt_info(3, 4) + _tmp38 * sqrt_info(3, 3) + _tmp48 * sqrt_info(3, 5);
  const Scalar _tmp352 =
      _tmp24 * sqrt_info(3, 4) + _tmp39 * sqrt_info(3, 3) + _tmp47 * sqrt_info(3, 5);
  const Scalar _tmp353 =
      _tmp34 * sqrt_info(3, 4) + _tmp43 * sqrt_info(3, 3) + _tmp45 * sqrt_info(3, 5);
  const Scalar _tmp354 = _tmp71 * sqrt_info(4, 2);
  const Scalar _tmp355 = _tmp102 * sqrt_info(4, 2);
  const Scalar _tmp356 = _tmp100 * sqrt_info(4, 2) - _tmp106 * sqrt_info(4, 0) +
                         _tmp112 * sqrt_info(4, 4) + _tmp120 * sqrt_info(4, 3) +
                         _tmp124 * sqrt_info(4, 5) - _tmp272 * sqrt_info(4, 1) + _tmp354 * _tmp65 -
                         _tmp355 * _tmp65 + _tmp70 * sqrt_info(4, 0) + _tmp74 * sqrt_info(4, 1) +
                         _tmp84 * sqrt_info(4, 0) + _tmp92 * sqrt_info(4, 1);
  const Scalar _tmp357 =
      _tmp128 * _tmp354 - _tmp128 * _tmp355 - _tmp129 * sqrt_info(4, 0) +
      _tmp134 * sqrt_info(4, 1) + _tmp137 * sqrt_info(4, 0) + _tmp138 * sqrt_info(4, 1) +
      _tmp140 * sqrt_info(4, 0) + _tmp142 * sqrt_info(4, 2) + _tmp148 * sqrt_info(4, 3) +
      _tmp150 * sqrt_info(4, 5) + _tmp154 * sqrt_info(4, 4) - _tmp274 * sqrt_info(4, 1);
  const Scalar _tmp358 =
      _tmp157 * _tmp354 - _tmp158 * sqrt_info(4, 0) + _tmp159 * sqrt_info(4, 1) +
      _tmp160 * sqrt_info(4, 0) - _tmp161 * sqrt_info(4, 2) + _tmp163 * sqrt_info(4, 2) +
      _tmp165 * sqrt_info(4, 0) + _tmp167 * sqrt_info(4, 1) + _tmp170 * sqrt_info(4, 4) +
      _tmp172 * sqrt_info(4, 5) + _tmp173 * sqrt_info(4, 3) - _tmp276 * sqrt_info(4, 1);
  const Scalar _tmp359 = (Scalar(1) / Scalar(2)) * _tmp358;
  const Scalar _tmp360 =
      _tmp176 * _tmp354 - _tmp176 * _tmp355 + _tmp177 * sqrt_info(4, 0) +
      _tmp179 * sqrt_info(4, 0) - _tmp180 * sqrt_info(4, 0) + _tmp181 * sqrt_info(4, 1) +
      _tmp185 * sqrt_info(4, 1) + _tmp187 * sqrt_info(4, 2) + _tmp189 * sqrt_info(4, 5) +
      _tmp190 * sqrt_info(4, 4) + _tmp191 * sqrt_info(4, 3) - _tmp280 * sqrt_info(4, 1);
  const Scalar _tmp361 =
      -_a[0] * _tmp359 + _tmp126 * _tmp356 - _tmp156 * _tmp357 + _tmp195 * _tmp360;
  const Scalar _tmp362 = (Scalar(1) / Scalar(2)) * _tmp356;
  const Scalar _tmp363 =
      _a[3] * _tmp362 - _tmp126 * _tmp360 - _tmp156 * _tmp358 + _tmp196 * _tmp357;
  const Scalar _tmp364 = -_a[0] * _tmp362 - _a[2] * _tmp359 + _tmp156 * _tmp360 + _tmp195 * _tmp357;
  const Scalar _tmp365 =
      _tmp200 * sqrt_info(4, 4) + _tmp202 * sqrt_info(4, 3) + _tmp204 * sqrt_info(4, 5);
  const Scalar _tmp366 =
      _tmp206 * sqrt_info(4, 3) + _tmp207 * sqrt_info(4, 4) + _tmp209 * sqrt_info(4, 5);
  const Scalar _tmp367 =
      _tmp211 * sqrt_info(4, 5) + _tmp212 * sqrt_info(4, 4) + _tmp213 * sqrt_info(4, 3);
  const Scalar _tmp368 = _tmp220 * sqrt_info(4, 1) + _tmp222 * sqrt_info(4, 0) + _tmp227 * _tmp354 -
                         _tmp227 * _tmp355 + _tmp229 * sqrt_info(4, 0) + _tmp235 * sqrt_info(4, 2) -
                         _tmp236 * sqrt_info(4, 0) + _tmp237 * sqrt_info(4, 1) -
                         _tmp289 * sqrt_info(4, 1);
  const Scalar _tmp369 = _tmp222 * sqrt_info(4, 2) + _tmp241 * _tmp354 - _tmp241 * _tmp355 +
                         _tmp242 * sqrt_info(4, 1) + _tmp243 * sqrt_info(4, 0) +
                         _tmp244 * sqrt_info(4, 0) + _tmp245 * sqrt_info(4, 1) -
                         _tmp248 * sqrt_info(4, 0) - _tmp292 * sqrt_info(4, 1);
  const Scalar _tmp370 = _tmp222 * sqrt_info(4, 1) + _tmp234 * _tmp354 - _tmp234 * _tmp355 +
                         _tmp251 * sqrt_info(4, 0) + _tmp253 * sqrt_info(4, 1) +
                         _tmp254 * sqrt_info(4, 0) - _tmp255 * sqrt_info(4, 0) +
                         _tmp257 * sqrt_info(4, 2) - _tmp295 * sqrt_info(4, 1);
  const Scalar _tmp371 = (Scalar(1) / Scalar(2)) * _tmp370;
  const Scalar _tmp372 = _tmp220 * sqrt_info(4, 2) + _tmp221 * _tmp354 - _tmp221 * _tmp355 +
                         _tmp244 * sqrt_info(4, 1) + _tmp257 * sqrt_info(4, 0) +
                         _tmp260 * sqrt_info(4, 1) - _tmp261 * sqrt_info(4, 0) +
                         _tmp262 * sqrt_info(4, 0) - _tmp298 * sqrt_info(4, 1);
  const Scalar _tmp373 =
      _b[2] * _tmp371 + _tmp239 * _tmp368 - _tmp250 * _tmp369 - _tmp264 * _tmp372;
  const Scalar _tmp374 =
      _b[3] * _tmp371 - _tmp250 * _tmp372 - _tmp259 * _tmp368 + _tmp264 * _tmp369;
  const Scalar _tmp375 =
      _tmp239 * _tmp369 + _tmp250 * _tmp368 - _tmp259 * _tmp372 - _tmp264 * _tmp370;
  const Scalar _tmp376 =
      _tmp30 * sqrt_info(4, 4) + _tmp38 * sqrt_info(4, 3) + _tmp48 * sqrt_info(4, 5);
  const Scalar _tmp377 =
      _tmp24 * sqrt_info(4, 4) + _tmp39 * sqrt_info(4, 3) + _tmp47 * sqrt_info(4, 5);
  const Scalar _tmp378 =
      _tmp34 * sqrt_info(4, 4) + _tmp43 * sqrt_info(4, 3) + _tmp45 * sqrt_info(4, 5);
  const Scalar _tmp379 = _tmp56 * _tmp67;
  const Scalar _tmp380 = _tmp73 * sqrt_info(5, 1);
  const Scalar _tmp381 = _tmp101 * _tmp56;
  const Scalar _tmp382 = _tmp100 * sqrt_info(5, 2) - _tmp106 * sqrt_info(5, 0) +
                         _tmp112 * sqrt_info(5, 4) + _tmp120 * sqrt_info(5, 3) +
                         _tmp124 * sqrt_info(5, 5) - _tmp272 * sqrt_info(5, 1) + _tmp379 * _tmp65 +
                         _tmp380 * _tmp65 - _tmp381 * _tmp65 + _tmp70 * sqrt_info(5, 0) +
                         _tmp84 * sqrt_info(5, 0) + _tmp92 * sqrt_info(5, 1);
  const Scalar _tmp383 =
      _tmp128 * _tmp379 + _tmp128 * _tmp380 - _tmp128 * _tmp381 - _tmp129 * sqrt_info(5, 0) +
      _tmp134 * sqrt_info(5, 1) + _tmp137 * sqrt_info(5, 0) + _tmp140 * sqrt_info(5, 0) +
      _tmp142 * sqrt_info(5, 2) + _tmp148 * sqrt_info(5, 3) + _tmp150 * sqrt_info(5, 5) +
      _tmp154 * sqrt_info(5, 4) - _tmp274 * sqrt_info(5, 1);
  const Scalar _tmp384 =
      _tmp157 * _tmp379 + _tmp157 * _tmp380 - _tmp157 * _tmp381 - _tmp158 * sqrt_info(5, 0) +
      _tmp160 * sqrt_info(5, 0) + _tmp163 * sqrt_info(5, 2) + _tmp165 * sqrt_info(5, 0) +
      _tmp167 * sqrt_info(5, 1) + _tmp170 * sqrt_info(5, 4) + _tmp172 * sqrt_info(5, 5) +
      _tmp173 * sqrt_info(5, 3) - _tmp276 * sqrt_info(5, 1);
  const Scalar _tmp385 = (Scalar(1) / Scalar(2)) * _tmp384;
  const Scalar _tmp386 = _tmp14 * sqrt_info(5, 2);
  const Scalar _tmp387 = _tmp176 * _tmp379 + _tmp176 * _tmp380 - _tmp176 * _tmp381 +
                         _tmp177 * sqrt_info(5, 0) + _tmp179 * sqrt_info(5, 0) -
                         _tmp180 * sqrt_info(5, 0) + _tmp185 * sqrt_info(5, 1) + _tmp186 * _tmp386 +
                         _tmp189 * sqrt_info(5, 5) + _tmp190 * sqrt_info(5, 4) +
                         _tmp191 * sqrt_info(5, 3) - _tmp280 * sqrt_info(5, 1);
  const Scalar _tmp388 =
      -_a[0] * _tmp385 + _tmp126 * _tmp382 - _tmp156 * _tmp383 + _tmp195 * _tmp387;
  const Scalar _tmp389 = (Scalar(1) / Scalar(2)) * _tmp382;
  const Scalar _tmp390 =
      _a[3] * _tmp389 - _tmp126 * _tmp387 - _tmp156 * _tmp384 + _tmp196 * _tmp383;
  const Scalar _tmp391 = -_a[0] * _tmp389 - _a[2] * _tmp385 + _tmp156 * _tmp387 + _tmp195 * _tmp383;
  const Scalar _tmp392 =
      _tmp200 * sqrt_info(5, 4) + _tmp202 * sqrt_info(5, 3) + _tmp204 * sqrt_info(5, 5);
  const Scalar _tmp393 =
      _tmp206 * sqrt_info(5, 3) + _tmp207 * sqrt_info(5, 4) + _tmp209 * sqrt_info(5, 5);
  const Scalar _tmp394 =
      _tmp211 * sqrt_info(5, 5) + _tmp212 * sqrt_info(5, 4) + _tmp213 * sqrt_info(5, 3);
  const Scalar _tmp395 = _tmp220 * sqrt_info(5, 1) + _tmp222 * sqrt_info(5, 0) + _tmp227 * _tmp379 +
                         _tmp227 * _tmp380 - _tmp227 * _tmp381 + _tmp229 * sqrt_info(5, 0) +
                         _tmp235 * sqrt_info(5, 2) - _tmp236 * sqrt_info(5, 0) -
                         _tmp289 * sqrt_info(5, 1);
  const Scalar _tmp396 = _tmp222 * sqrt_info(5, 2) + _tmp241 * _tmp379 - _tmp241 * _tmp381 +
                         _tmp242 * sqrt_info(5, 1) + _tmp243 * sqrt_info(5, 0) +
                         _tmp244 * sqrt_info(5, 0) + _tmp245 * sqrt_info(5, 1) -
                         _tmp248 * sqrt_info(5, 0) - _tmp292 * sqrt_info(5, 1);
  const Scalar _tmp397 = _tmp222 * sqrt_info(5, 1) + _tmp234 * _tmp379 - _tmp234 * _tmp381 +
                         _tmp251 * sqrt_info(5, 0) + _tmp253 * sqrt_info(5, 1) +
                         _tmp254 * sqrt_info(5, 0) - _tmp255 * sqrt_info(5, 0) + _tmp256 * _tmp386 -
                         _tmp295 * sqrt_info(5, 1);
  const Scalar _tmp398 = _tmp219 * _tmp386 + _tmp221 * _tmp379 + _tmp221 * _tmp380 -
                         _tmp221 * _tmp381 + _tmp244 * sqrt_info(5, 1) + _tmp257 * sqrt_info(5, 0) -
                         _tmp261 * sqrt_info(5, 0) + _tmp262 * sqrt_info(5, 0) -
                         _tmp298 * sqrt_info(5, 1);
  const Scalar _tmp399 =
      _tmp239 * _tmp395 - _tmp250 * _tmp396 + _tmp259 * _tmp397 - _tmp264 * _tmp398;
  const Scalar _tmp400 =
      _tmp239 * _tmp397 - _tmp250 * _tmp398 - _tmp259 * _tmp395 + _tmp264 * _tmp396;
  const Scalar _tmp401 =
      _tmp239 * _tmp396 + _tmp250 * _tmp395 - _tmp259 * _tmp398 - _tmp264 * _tmp397;
  const Scalar _tmp402 =
      _tmp30 * sqrt_info(5, 4) + _tmp38 * sqrt_info(5, 3) + _tmp48 * sqrt_info(5, 5);
  const Scalar _tmp403 =
      _tmp24 * sqrt_info(5, 4) + _tmp39 * sqrt_info(5, 3) + _tmp47 * sqrt_info(5, 5);
  const Scalar _tmp404 =
      _tmp34 * sqrt_info(5, 4) + _tmp43 * sqrt_info(5, 3) + _tmp45 * sqrt_info(5, 5);

  // Output terms (4)
  if (res != nullptr) {
    Eigen::Matrix<Scalar, 6, 1>& _res = (*res);

    _res(0, 0) = _tmp50;
    _res(1, 0) = _tmp51;
    _res(2, 0) = _tmp52;
    _res(3, 0) = _tmp54;
    _res(4, 0) = _tmp55;
    _res(5, 0) = _tmp57;
  }

  if (jacobian != nullptr) {
    Eigen::Matrix<Scalar, 6, 12>& _jacobian = (*jacobian);

    _jacobian(0, 0) = _tmp194;
    _jacobian(0, 1) = _tmp197;
    _jacobian(0, 2) = _tmp198;
    _jacobian(0, 3) = _tmp205;
    _jacobian(0, 4) = _tmp210;
    _jacobian(0, 5) = _tmp214;
    _jacobian(0, 6) = _tmp265;
    _jacobian(0, 7) = _tmp266;
    _jacobian(0, 8) = _tmp267;
    _jacobian(0, 9) = _tmp268;
    _jacobian(0, 10) = _tmp269;
    _jacobian(0, 11) = _tmp270;
    _jacobian(1, 0) = _tmp283;
    _jacobian(1, 1) = _tmp284;
    _jacobian(1, 2) = _tmp285;
    _jacobian(1, 3) = _tmp286;
    _jacobian(1, 4) = _tmp287;
    _jacobian(1, 5) = _tmp288;
    _jacobian(1, 6) = _tmp301;
    _jacobian(1, 7) = _tmp302;
    _jacobian(1, 8) = _tmp303;
    _jacobian(1, 9) = _tmp304;
    _jacobian(1, 10) = _tmp305;
    _jacobian(1, 11) = _tmp306;
    _jacobian(2, 0) = _tmp315;
    _jacobian(2, 1) = _tmp316;
    _jacobian(2, 2) = _tmp317;
    _jacobian(2, 3) = _tmp318;
    _jacobian(2, 4) = _tmp319;
    _jacobian(2, 5) = _tmp320;
    _jacobian(2, 6) = _tmp325;
    _jacobian(2, 7) = _tmp326;
    _jacobian(2, 8) = _tmp327;
    _jacobian(2, 9) = _tmp328;
    _jacobian(2, 10) = _tmp329;
    _jacobian(2, 11) = _tmp330;
    _jacobian(3, 0) = _tmp337;
    _jacobian(3, 1) = _tmp339;
    _jacobian(3, 2) = _tmp340;
    _jacobian(3, 3) = _tmp341;
    _jacobian(3, 4) = _tmp342;
    _jacobian(3, 5) = _tmp343;
    _jacobian(3, 6) = _tmp348;
    _jacobian(3, 7) = _tmp349;
    _jacobian(3, 8) = _tmp350;
    _jacobian(3, 9) = _tmp351;
    _jacobian(3, 10) = _tmp352;
    _jacobian(3, 11) = _tmp353;
    _jacobian(4, 0) = _tmp361;
    _jacobian(4, 1) = _tmp363;
    _jacobian(4, 2) = _tmp364;
    _jacobian(4, 3) = _tmp365;
    _jacobian(4, 4) = _tmp366;
    _jacobian(4, 5) = _tmp367;
    _jacobian(4, 6) = _tmp373;
    _jacobian(4, 7) = _tmp374;
    _jacobian(4, 8) = _tmp375;
    _jacobian(4, 9) = _tmp376;
    _jacobian(4, 10) = _tmp377;
    _jacobian(4, 11) = _tmp378;
    _jacobian(5, 0) = _tmp388;
    _jacobian(5, 1) = _tmp390;
    _jacobian(5, 2) = _tmp391;
    _jacobian(5, 3) = _tmp392;
    _jacobian(5, 4) = _tmp393;
    _jacobian(5, 5) = _tmp394;
    _jacobian(5, 6) = _tmp399;
    _jacobian(5, 7) = _tmp400;
    _jacobian(5, 8) = _tmp401;
    _jacobian(5, 9) = _tmp402;
    _jacobian(5, 10) = _tmp403;
    _jacobian(5, 11) = _tmp404;
  }

  if (hessian != nullptr) {
    Eigen::Matrix<Scalar, 12, 12>& _hessian = (*hessian);

    _hessian(0, 0) = std::pow<Scalar>(_tmp194, 2) + std::pow<Scalar>(_tmp283, 2) +
                     std::pow<Scalar>(_tmp315, 2) + std::pow<Scalar>(_tmp337, 2) +
                     std::pow<Scalar>(_tmp361, 2) + std::pow<Scalar>(_tmp388, 2);
    _hessian(0, 1) = 0;
    _hessian(0, 2) = 0;
    _hessian(0, 3) = 0;
    _hessian(0, 4) = 0;
    _hessian(0, 5) = 0;
    _hessian(0, 6) = 0;
    _hessian(0, 7) = 0;
    _hessian(0, 8) = 0;
    _hessian(0, 9) = 0;
    _hessian(0, 10) = 0;
    _hessian(0, 11) = 0;
    _hessian(1, 0) = _tmp194 * _tmp197 + _tmp283 * _tmp284 + _tmp315 * _tmp316 + _tmp337 * _tmp339 +
                     _tmp361 * _tmp363 + _tmp388 * _tmp390;
    _hessian(1, 1) = std::pow<Scalar>(_tmp197, 2) + std::pow<Scalar>(_tmp284, 2) +
                     std::pow<Scalar>(_tmp316, 2) + std::pow<Scalar>(_tmp339, 2) +
                     std::pow<Scalar>(_tmp363, 2) + std::pow<Scalar>(_tmp390, 2);
    _hessian(1, 2) = 0;
    _hessian(1, 3) = 0;
    _hessian(1, 4) = 0;
    _hessian(1, 5) = 0;
    _hessian(1, 6) = 0;
    _hessian(1, 7) = 0;
    _hessian(1, 8) = 0;
    _hessian(1, 9) = 0;
    _hessian(1, 10) = 0;
    _hessian(1, 11) = 0;
    _hessian(2, 0) = _tmp194 * _tmp198 + _tmp283 * _tmp285 + _tmp315 * _tmp317 + _tmp337 * _tmp340 +
                     _tmp361 * _tmp364 + _tmp388 * _tmp391;
    _hessian(2, 1) = _tmp197 * _tmp198 + _tmp284 * _tmp285 + _tmp316 * _tmp317 + _tmp339 * _tmp340 +
                     _tmp363 * _tmp364 + _tmp390 * _tmp391;
    _hessian(2, 2) = std::pow<Scalar>(_tmp198, 2) + std::pow<Scalar>(_tmp285, 2) +
                     std::pow<Scalar>(_tmp317, 2) + std::pow<Scalar>(_tmp340, 2) +
                     std::pow<Scalar>(_tmp364, 2) + std::pow<Scalar>(_tmp391, 2);
    _hessian(2, 3) = 0;
    _hessian(2, 4) = 0;
    _hessian(2, 5) = 0;
    _hessian(2, 6) = 0;
    _hessian(2, 7) = 0;
    _hessian(2, 8) = 0;
    _hessian(2, 9) = 0;
    _hessian(2, 10) = 0;
    _hessian(2, 11) = 0;
    _hessian(3, 0) = _tmp194 * _tmp205 + _tmp283 * _tmp286 + _tmp315 * _tmp318 + _tmp337 * _tmp341 +
                     _tmp361 * _tmp365 + _tmp388 * _tmp392;
    _hessian(3, 1) = _tmp197 * _tmp205 + _tmp284 * _tmp286 + _tmp316 * _tmp318 + _tmp339 * _tmp341 +
                     _tmp363 * _tmp365 + _tmp390 * _tmp392;
    _hessian(3, 2) = _tmp198 * _tmp205 + _tmp285 * _tmp286 + _tmp317 * _tmp318 + _tmp340 * _tmp341 +
                     _tmp364 * _tmp365 + _tmp391 * _tmp392;
    _hessian(3, 3) = std::pow<Scalar>(_tmp205, 2) + std::pow<Scalar>(_tmp286, 2) +
                     std::pow<Scalar>(_tmp318, 2) + std::pow<Scalar>(_tmp341, 2) +
                     std::pow<Scalar>(_tmp365, 2) + std::pow<Scalar>(_tmp392, 2);
    _hessian(3, 4) = 0;
    _hessian(3, 5) = 0;
    _hessian(3, 6) = 0;
    _hessian(3, 7) = 0;
    _hessian(3, 8) = 0;
    _hessian(3, 9) = 0;
    _hessian(3, 10) = 0;
    _hessian(3, 11) = 0;
    _hessian(4, 0) = _tmp194 * _tmp210 + _tmp283 * _tmp287 + _tmp315 * _tmp319 + _tmp337 * _tmp342 +
                     _tmp361 * _tmp366 + _tmp388 * _tmp393;
    _hessian(4, 1) = _tmp197 * _tmp210 + _tmp284 * _tmp287 + _tmp316 * _tmp319 + _tmp339 * _tmp342 +
                     _tmp363 * _tmp366 + _tmp390 * _tmp393;
    _hessian(4, 2) = _tmp198 * _tmp210 + _tmp285 * _tmp287 + _tmp317 * _tmp319 + _tmp340 * _tmp342 +
                     _tmp364 * _tmp366 + _tmp391 * _tmp393;
    _hessian(4, 3) = _tmp205 * _tmp210 + _tmp286 * _tmp287 + _tmp318 * _tmp319 + _tmp341 * _tmp342 +
                     _tmp365 * _tmp366 + _tmp392 * _tmp393;
    _hessian(4, 4) = std::pow<Scalar>(_tmp210, 2) + std::pow<Scalar>(_tmp287, 2) +
                     std::pow<Scalar>(_tmp319, 2) + std::pow<Scalar>(_tmp342, 2) +
                     std::pow<Scalar>(_tmp366, 2) + std::pow<Scalar>(_tmp393, 2);
    _hessian(4, 5) = 0;
    _hessian(4, 6) = 0;
    _hessian(4, 7) = 0;
    _hessian(4, 8) = 0;
    _hessian(4, 9) = 0;
    _hessian(4, 10) = 0;
    _hessian(4, 11) = 0;
    _hessian(5, 0) = _tmp194 * _tmp214 + _tmp283 * _tmp288 + _tmp315 * _tmp320 + _tmp337 * _tmp343 +
                     _tmp361 * _tmp367 + _tmp388 * _tmp394;
    _hessian(5, 1) = _tmp197 * _tmp214 + _tmp284 * _tmp288 + _tmp316 * _tmp320 + _tmp339 * _tmp343 +
                     _tmp363 * _tmp367 + _tmp390 * _tmp394;
    _hessian(5, 2) = _tmp198 * _tmp214 + _tmp285 * _tmp288 + _tmp317 * _tmp320 + _tmp340 * _tmp343 +
                     _tmp364 * _tmp367 + _tmp391 * _tmp394;
    _hessian(5, 3) = _tmp205 * _tmp214 + _tmp286 * _tmp288 + _tmp318 * _tmp320 + _tmp341 * _tmp343 +
                     _tmp365 * _tmp367 + _tmp392 * _tmp394;
    _hessian(5, 4) = _tmp210 * _tmp214 + _tmp287 * _tmp288 + _tmp319 * _tmp320 + _tmp342 * _tmp343 +
                     _tmp366 * _tmp367 + _tmp393 * _tmp394;
    _hessian(5, 5) = std::pow<Scalar>(_tmp214, 2) + std::pow<Scalar>(_tmp288, 2) +
                     std::pow<Scalar>(_tmp320, 2) + std::pow<Scalar>(_tmp343, 2) +
                     std::pow<Scalar>(_tmp367, 2) + std::pow<Scalar>(_tmp394, 2);
    _hessian(5, 6) = 0;
    _hessian(5, 7) = 0;
    _hessian(5, 8) = 0;
    _hessian(5, 9) = 0;
    _hessian(5, 10) = 0;
    _hessian(5, 11) = 0;
    _hessian(6, 0) = _tmp194 * _tmp265 + _tmp283 * _tmp301 + _tmp315 * _tmp325 + _tmp337 * _tmp348 +
                     _tmp361 * _tmp373 + _tmp388 * _tmp399;
    _hessian(6, 1) = _tmp197 * _tmp265 + _tmp284 * _tmp301 + _tmp316 * _tmp325 + _tmp339 * _tmp348 +
                     _tmp363 * _tmp373 + _tmp390 * _tmp399;
    _hessian(6, 2) = _tmp198 * _tmp265 + _tmp285 * _tmp301 + _tmp317 * _tmp325 + _tmp340 * _tmp348 +
                     _tmp364 * _tmp373 + _tmp391 * _tmp399;
    _hessian(6, 3) = _tmp205 * _tmp265 + _tmp286 * _tmp301 + _tmp318 * _tmp325 + _tmp341 * _tmp348 +
                     _tmp365 * _tmp373 + _tmp392 * _tmp399;
    _hessian(6, 4) = _tmp210 * _tmp265 + _tmp287 * _tmp301 + _tmp319 * _tmp325 + _tmp342 * _tmp348 +
                     _tmp366 * _tmp373 + _tmp393 * _tmp399;
    _hessian(6, 5) = _tmp214 * _tmp265 + _tmp288 * _tmp301 + _tmp320 * _tmp325 + _tmp343 * _tmp348 +
                     _tmp367 * _tmp373 + _tmp394 * _tmp399;
    _hessian(6, 6) = std::pow<Scalar>(_tmp265, 2) + std::pow<Scalar>(_tmp301, 2) +
                     std::pow<Scalar>(_tmp325, 2) + std::pow<Scalar>(_tmp348, 2) +
                     std::pow<Scalar>(_tmp373, 2) + std::pow<Scalar>(_tmp399, 2);
    _hessian(6, 7) = 0;
    _hessian(6, 8) = 0;
    _hessian(6, 9) = 0;
    _hessian(6, 10) = 0;
    _hessian(6, 11) = 0;
    _hessian(7, 0) = _tmp194 * _tmp266 + _tmp283 * _tmp302 + _tmp315 * _tmp326 + _tmp337 * _tmp349 +
                     _tmp361 * _tmp374 + _tmp388 * _tmp400;
    _hessian(7, 1) = _tmp197 * _tmp266 + _tmp284 * _tmp302 + _tmp316 * _tmp326 + _tmp339 * _tmp349 +
                     _tmp363 * _tmp374 + _tmp390 * _tmp400;
    _hessian(7, 2) = _tmp198 * _tmp266 + _tmp285 * _tmp302 + _tmp317 * _tmp326 + _tmp340 * _tmp349 +
                     _tmp364 * _tmp374 + _tmp391 * _tmp400;
    _hessian(7, 3) = _tmp205 * _tmp266 + _tmp286 * _tmp302 + _tmp318 * _tmp326 + _tmp341 * _tmp349 +
                     _tmp365 * _tmp374 + _tmp392 * _tmp400;
    _hessian(7, 4) = _tmp210 * _tmp266 + _tmp287 * _tmp302 + _tmp319 * _tmp326 + _tmp342 * _tmp349 +
                     _tmp366 * _tmp374 + _tmp393 * _tmp400;
    _hessian(7, 5) = _tmp214 * _tmp266 + _tmp288 * _tmp302 + _tmp320 * _tmp326 + _tmp343 * _tmp349 +
                     _tmp367 * _tmp374 + _tmp394 * _tmp400;
    _hessian(7, 6) = _tmp265 * _tmp266 + _tmp301 * _tmp302 + _tmp325 * _tmp326 + _tmp348 * _tmp349 +
                     _tmp373 * _tmp374 + _tmp399 * _tmp400;
    _hessian(7, 7) = std::pow<Scalar>(_tmp266, 2) + std::pow<Scalar>(_tmp302, 2) +
                     std::pow<Scalar>(_tmp326, 2) + std::pow<Scalar>(_tmp349, 2) +
                     std::pow<Scalar>(_tmp374, 2) + std::pow<Scalar>(_tmp400, 2);
    _hessian(7, 8) = 0;
    _hessian(7, 9) = 0;
    _hessian(7, 10) = 0;
    _hessian(7, 11) = 0;
    _hessian(8, 0) = _tmp194 * _tmp267 + _tmp283 * _tmp303 + _tmp315 * _tmp327 + _tmp337 * _tmp350 +
                     _tmp361 * _tmp375 + _tmp388 * _tmp401;
    _hessian(8, 1) = _tmp197 * _tmp267 + _tmp284 * _tmp303 + _tmp316 * _tmp327 + _tmp339 * _tmp350 +
                     _tmp363 * _tmp375 + _tmp390 * _tmp401;
    _hessian(8, 2) = _tmp198 * _tmp267 + _tmp285 * _tmp303 + _tmp317 * _tmp327 + _tmp340 * _tmp350 +
                     _tmp364 * _tmp375 + _tmp391 * _tmp401;
    _hessian(8, 3) = _tmp205 * _tmp267 + _tmp286 * _tmp303 + _tmp318 * _tmp327 + _tmp341 * _tmp350 +
                     _tmp365 * _tmp375 + _tmp392 * _tmp401;
    _hessian(8, 4) = _tmp210 * _tmp267 + _tmp287 * _tmp303 + _tmp319 * _tmp327 + _tmp342 * _tmp350 +
                     _tmp366 * _tmp375 + _tmp393 * _tmp401;
    _hessian(8, 5) = _tmp214 * _tmp267 + _tmp288 * _tmp303 + _tmp320 * _tmp327 + _tmp343 * _tmp350 +
                     _tmp367 * _tmp375 + _tmp394 * _tmp401;
    _hessian(8, 6) = _tmp265 * _tmp267 + _tmp301 * _tmp303 + _tmp325 * _tmp327 + _tmp348 * _tmp350 +
                     _tmp373 * _tmp375 + _tmp399 * _tmp401;
    _hessian(8, 7) = _tmp266 * _tmp267 + _tmp302 * _tmp303 + _tmp326 * _tmp327 + _tmp349 * _tmp350 +
                     _tmp374 * _tmp375 + _tmp400 * _tmp401;
    _hessian(8, 8) = std::pow<Scalar>(_tmp267, 2) + std::pow<Scalar>(_tmp303, 2) +
                     std::pow<Scalar>(_tmp327, 2) + std::pow<Scalar>(_tmp350, 2) +
                     std::pow<Scalar>(_tmp375, 2) + std::pow<Scalar>(_tmp401, 2);
    _hessian(8, 9) = 0;
    _hessian(8, 10) = 0;
    _hessian(8, 11) = 0;
    _hessian(9, 0) = _tmp194 * _tmp268 + _tmp283 * _tmp304 + _tmp315 * _tmp328 + _tmp337 * _tmp351 +
                     _tmp361 * _tmp376 + _tmp388 * _tmp402;
    _hessian(9, 1) = _tmp197 * _tmp268 + _tmp284 * _tmp304 + _tmp316 * _tmp328 + _tmp339 * _tmp351 +
                     _tmp363 * _tmp376 + _tmp390 * _tmp402;
    _hessian(9, 2) = _tmp198 * _tmp268 + _tmp285 * _tmp304 + _tmp317 * _tmp328 + _tmp340 * _tmp351 +
                     _tmp364 * _tmp376 + _tmp391 * _tmp402;
    _hessian(9, 3) = _tmp205 * _tmp268 + _tmp286 * _tmp304 + _tmp318 * _tmp328 + _tmp341 * _tmp351 +
                     _tmp365 * _tmp376 + _tmp392 * _tmp402;
    _hessian(9, 4) = _tmp210 * _tmp268 + _tmp287 * _tmp304 + _tmp319 * _tmp328 + _tmp342 * _tmp351 +
                     _tmp366 * _tmp376 + _tmp393 * _tmp402;
    _hessian(9, 5) = _tmp214 * _tmp268 + _tmp288 * _tmp304 + _tmp320 * _tmp328 + _tmp343 * _tmp351 +
                     _tmp367 * _tmp376 + _tmp394 * _tmp402;
    _hessian(9, 6) = _tmp265 * _tmp268 + _tmp301 * _tmp304 + _tmp325 * _tmp328 + _tmp348 * _tmp351 +
                     _tmp373 * _tmp376 + _tmp399 * _tmp402;
    _hessian(9, 7) = _tmp266 * _tmp268 + _tmp302 * _tmp304 + _tmp326 * _tmp328 + _tmp349 * _tmp351 +
                     _tmp374 * _tmp376 + _tmp400 * _tmp402;
    _hessian(9, 8) = _tmp267 * _tmp268 + _tmp303 * _tmp304 + _tmp327 * _tmp328 + _tmp350 * _tmp351 +
                     _tmp375 * _tmp376 + _tmp401 * _tmp402;
    _hessian(9, 9) = std::pow<Scalar>(_tmp268, 2) + std::pow<Scalar>(_tmp304, 2) +
                     std::pow<Scalar>(_tmp328, 2) + std::pow<Scalar>(_tmp351, 2) +
                     std::pow<Scalar>(_tmp376, 2) + std::pow<Scalar>(_tmp402, 2);
    _hessian(9, 10) = 0;
    _hessian(9, 11) = 0;
    _hessian(10, 0) = _tmp194 * _tmp269 + _tmp283 * _tmp305 + _tmp315 * _tmp329 +
                      _tmp337 * _tmp352 + _tmp361 * _tmp377 + _tmp388 * _tmp403;
    _hessian(10, 1) = _tmp197 * _tmp269 + _tmp284 * _tmp305 + _tmp316 * _tmp329 +
                      _tmp339 * _tmp352 + _tmp363 * _tmp377 + _tmp390 * _tmp403;
    _hessian(10, 2) = _tmp198 * _tmp269 + _tmp285 * _tmp305 + _tmp317 * _tmp329 +
                      _tmp340 * _tmp352 + _tmp364 * _tmp377 + _tmp391 * _tmp403;
    _hessian(10, 3) = _tmp205 * _tmp269 + _tmp286 * _tmp305 + _tmp318 * _tmp329 +
                      _tmp341 * _tmp352 + _tmp365 * _tmp377 + _tmp392 * _tmp403;
    _hessian(10, 4) = _tmp210 * _tmp269 + _tmp287 * _tmp305 + _tmp319 * _tmp329 +
                      _tmp342 * _tmp352 + _tmp366 * _tmp377 + _tmp393 * _tmp403;
    _hessian(10, 5) = _tmp214 * _tmp269 + _tmp288 * _tmp305 + _tmp320 * _tmp329 +
                      _tmp343 * _tmp352 + _tmp367 * _tmp377 + _tmp394 * _tmp403;
    _hessian(10, 6) = _tmp265 * _tmp269 + _tmp301 * _tmp305 + _tmp325 * _tmp329 +
                      _tmp348 * _tmp352 + _tmp373 * _tmp377 + _tmp399 * _tmp403;
    _hessian(10, 7) = _tmp266 * _tmp269 + _tmp302 * _tmp305 + _tmp326 * _tmp329 +
                      _tmp349 * _tmp352 + _tmp374 * _tmp377 + _tmp400 * _tmp403;
    _hessian(10, 8) = _tmp267 * _tmp269 + _tmp303 * _tmp305 + _tmp327 * _tmp329 +
                      _tmp350 * _tmp352 + _tmp375 * _tmp377 + _tmp401 * _tmp403;
    _hessian(10, 9) = _tmp268 * _tmp269 + _tmp304 * _tmp305 + _tmp328 * _tmp329 +
                      _tmp351 * _tmp352 + _tmp376 * _tmp377 + _tmp402 * _tmp403;
    _hessian(10, 10) = std::pow<Scalar>(_tmp269, 2) + std::pow<Scalar>(_tmp305, 2) +
                       std::pow<Scalar>(_tmp329, 2) + std::pow<Scalar>(_tmp352, 2) +
                       std::pow<Scalar>(_tmp377, 2) + std::pow<Scalar>(_tmp403, 2);
    _hessian(10, 11) = 0;
    _hessian(11, 0) = _tmp194 * _tmp270 + _tmp283 * _tmp306 + _tmp315 * _tmp330 +
                      _tmp337 * _tmp353 + _tmp361 * _tmp378 + _tmp388 * _tmp404;
    _hessian(11, 1) = _tmp197 * _tmp270 + _tmp284 * _tmp306 + _tmp316 * _tmp330 +
                      _tmp339 * _tmp353 + _tmp363 * _tmp378 + _tmp390 * _tmp404;
    _hessian(11, 2) = _tmp198 * _tmp270 + _tmp285 * _tmp306 + _tmp317 * _tmp330 +
                      _tmp340 * _tmp353 + _tmp364 * _tmp378 + _tmp391 * _tmp404;
    _hessian(11, 3) = _tmp205 * _tmp270 + _tmp286 * _tmp306 + _tmp318 * _tmp330 +
                      _tmp341 * _tmp353 + _tmp365 * _tmp378 + _tmp392 * _tmp404;
    _hessian(11, 4) = _tmp210 * _tmp270 + _tmp287 * _tmp306 + _tmp319 * _tmp330 +
                      _tmp342 * _tmp353 + _tmp366 * _tmp378 + _tmp393 * _tmp404;
    _hessian(11, 5) = _tmp214 * _tmp270 + _tmp288 * _tmp306 + _tmp320 * _tmp330 +
                      _tmp343 * _tmp353 + _tmp367 * _tmp378 + _tmp394 * _tmp404;
    _hessian(11, 6) = _tmp265 * _tmp270 + _tmp301 * _tmp306 + _tmp325 * _tmp330 +
                      _tmp348 * _tmp353 + _tmp373 * _tmp378 + _tmp399 * _tmp404;
    _hessian(11, 7) = _tmp266 * _tmp270 + _tmp302 * _tmp306 + _tmp326 * _tmp330 +
                      _tmp349 * _tmp353 + _tmp374 * _tmp378 + _tmp400 * _tmp404;
    _hessian(11, 8) = _tmp267 * _tmp270 + _tmp303 * _tmp306 + _tmp327 * _tmp330 +
                      _tmp350 * _tmp353 + _tmp375 * _tmp378 + _tmp401 * _tmp404;
    _hessian(11, 9) = _tmp268 * _tmp270 + _tmp304 * _tmp306 + _tmp328 * _tmp330 +
                      _tmp351 * _tmp353 + _tmp376 * _tmp378 + _tmp402 * _tmp404;
    _hessian(11, 10) = _tmp269 * _tmp270 + _tmp305 * _tmp306 + _tmp329 * _tmp330 +
                       _tmp352 * _tmp353 + _tmp377 * _tmp378 + _tmp403 * _tmp404;
    _hessian(11, 11) = std::pow<Scalar>(_tmp270, 2) + std::pow<Scalar>(_tmp306, 2) +
                       std::pow<Scalar>(_tmp330, 2) + std::pow<Scalar>(_tmp353, 2) +
                       std::pow<Scalar>(_tmp378, 2) + std::pow<Scalar>(_tmp404, 2);
  }

  if (rhs != nullptr) {
    Eigen::Matrix<Scalar, 12, 1>& _rhs = (*rhs);

    _rhs(0, 0) = _tmp194 * _tmp50 + _tmp283 * _tmp51 + _tmp315 * _tmp52 + _tmp337 * _tmp54 +
                 _tmp361 * _tmp55 + _tmp388 * _tmp57;
    _rhs(1, 0) = _tmp197 * _tmp50 + _tmp284 * _tmp51 + _tmp316 * _tmp52 + _tmp339 * _tmp54 +
                 _tmp363 * _tmp55 + _tmp390 * _tmp57;
    _rhs(2, 0) = _tmp198 * _tmp50 + _tmp285 * _tmp51 + _tmp317 * _tmp52 + _tmp340 * _tmp54 +
                 _tmp364 * _tmp55 + _tmp391 * _tmp57;
    _rhs(3, 0) = _tmp205 * _tmp50 + _tmp286 * _tmp51 + _tmp318 * _tmp52 + _tmp341 * _tmp54 +
                 _tmp365 * _tmp55 + _tmp392 * _tmp57;
    _rhs(4, 0) = _tmp210 * _tmp50 + _tmp287 * _tmp51 + _tmp319 * _tmp52 + _tmp342 * _tmp54 +
                 _tmp366 * _tmp55 + _tmp393 * _tmp57;
    _rhs(5, 0) = _tmp214 * _tmp50 + _tmp288 * _tmp51 + _tmp320 * _tmp52 + _tmp343 * _tmp54 +
                 _tmp367 * _tmp55 + _tmp394 * _tmp57;
    _rhs(6, 0) = _tmp265 * _tmp50 + _tmp301 * _tmp51 + _tmp325 * _tmp52 + _tmp348 * _tmp54 +
                 _tmp373 * _tmp55 + _tmp399 * _tmp57;
    _rhs(7, 0) = _tmp266 * _tmp50 + _tmp302 * _tmp51 + _tmp326 * _tmp52 + _tmp349 * _tmp54 +
                 _tmp374 * _tmp55 + _tmp400 * _tmp57;
    _rhs(8, 0) = _tmp267 * _tmp50 + _tmp303 * _tmp51 + _tmp327 * _tmp52 + _tmp350 * _tmp54 +
                 _tmp375 * _tmp55 + _tmp401 * _tmp57;
    _rhs(9, 0) = _tmp268 * _tmp50 + _tmp304 * _tmp51 + _tmp328 * _tmp52 + _tmp351 * _tmp54 +
                 _tmp376 * _tmp55 + _tmp402 * _tmp57;
    _rhs(10, 0) = _tmp269 * _tmp50 + _tmp305 * _tmp51 + _tmp329 * _tmp52 + _tmp352 * _tmp54 +
                  _tmp377 * _tmp55 + _tmp403 * _tmp57;
    _rhs(11, 0) = _tmp270 * _tmp50 + _tmp306 * _tmp51 + _tmp330 * _tmp52 + _tmp353 * _tmp54 +
                  _tmp378 * _tmp55 + _tmp404 * _tmp57;
  }
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
