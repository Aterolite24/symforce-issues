// -----------------------------------------------------------------------------
// This file was autogenerated by symforce. Do NOT modify by hand.
// -----------------------------------------------------------------------------
#pragma once



namespace symforce {

/**
* Transform a given pixel into a ray and project the ray back to
* pixel coordinates. Input and output should match.
*
*/
template <typename Scalar>
Eigen::Matrix<Scalar, 2, 1> PixelToRayAndBack(const Eigen::Matrix<Scalar, 2, 1>& pixel_coords, const cam::LinearCameraCal<Scalar>& cam, const Scalar epsilon) {
    // Input arrays
    const Eigen::Matrix<Scalar, 4, 1>& _cam = cam.Data();

    // Intermediate terms (1)
    const Scalar _tmp0 = 1.0 / (std::max<Scalar>(1, epsilon));

    // Output terms (1)
    Eigen::Matrix<Scalar, 2, 1> _res;
    _res(0, 0) = _cam[2] + _tmp0*(-_cam[2] + pixel_coords[0]);
    _res(1, 0) = _cam[3] + _tmp0*(-_cam[3] + pixel_coords[1]);

    return _res;
}

}  // namespace symforce
